// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function shell_read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return xhr.response;
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function shell_print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - Module['asm'].stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



var /* show errors on likely calls to FS when it was not included */ FS = {
  error: function() {
    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');
  },
  init: function() { FS.error() },
  createDataFile: function() { FS.error() },
  createPreloadedFile: function() { FS.error() },
  createLazyFile: function() { FS.error() },
  open: function() { FS.error() },
  mkdev: function() { FS.error() },
  registerDevice: function() { FS.error() },
  analyzePath: function() { FS.error() },
  loadFilesFromDB: function() { FS.error() },

  ErrnoError: function ErrnoError() { FS.error() },
};
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = Runtime.GLOBAL_BASE;

STATICTOP = STATIC_BASE + 9488;
/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_fetch_cpp() } }, { func: function() { __GLOBAL__sub_I_bind_cpp() } });


/* memory initializer */ allocate([76,4,0,0,150,5,0,0,8,5,0,0,87,5,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,76,4,0,0,97,8,0,0,76,4,0,0,128,8,0,0,76,4,0,0,159,8,0,0,76,4,0,0,190,8,0,0,76,4,0,0,221,8,0,0,76,4,0,0,252,8,0,0,76,4,0,0,27,9,0,0,76,4,0,0,58,9,0,0,76,4,0,0,89,9,0,0,76,4,0,0,120,9,0,0,76,4,0,0,151,9,0,0,76,4,0,0,182,9,0,0,76,4,0,0,213,9,0,0,8,5,0,0,232,9,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,8,5,0,0,39,10,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,76,4,0,0,111,20,0,0,116,4,0,0,207,20,0,0,216,0,0,0,0,0,0,0,116,4,0,0,124,20,0,0,232,0,0,0,0,0,0,0,76,4,0,0,157,20,0,0,116,4,0,0,170,20,0,0,200,0,0,0,0,0,0,0,116,4,0,0,242,21,0,0,192,0,0,0,0,0,0,0,116,4,0,0,255,21,0,0,192,0,0,0,0,0,0,0,116,4,0,0,15,22,0,0,16,1,0,0,0,0,0,0,116,4,0,0,32,22,0,0,16,1,0,0,0,0,0,0,116,4,0,0,49,22,0,0,216,0,0,0,0,0,0,0,236,4,0,0,89,22,0,0,236,4,0,0,91,22,0,0,236,4,0,0,93,22,0,0,236,4,0,0,95,22,0,0,236,4,0,0,97,22,0,0,236,4,0,0,99,22,0,0,236,4,0,0,101,22,0,0,236,4,0,0,103,22,0,0,236,4,0,0,105,22,0,0,236,4,0,0,64,28,0,0,236,4,0,0,107,22,0,0,236,4,0,0,109,22,0,0,236,4,0,0,111,22,0,0,116,4,0,0,113,22,0,0,200,0,0,0,0,0,0,0,16,0,0,0,208,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,250,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,3,0,0,0,2,33,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,102,20,0,0,0,0,0,0,200,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,240,0,0,0,7,0,0,0,15,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,1,0,0,19,0,0,0,20,0,0,0,21,0,0,0,0,0,0,0,16,1,0,0,22,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,32,1,0,0,22,0,0,0,25,0,0,0,24,0,0,0,0,0,0,0,48,1,0,0,22,0,0,0,26,0,0,0,24,0,0,0,0,0,0,0,64,1,0,0,7,0,0,0,27,0,0,0,9,0,0,0,10,0,0,0,28,0,0,0,0,0,0,0,184,1,0,0,7,0,0,0,29,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,71,69,84,0,104,116,116,112,58,47,47,119,119,119,46,113,105,97,110,115,104,101,110,103,113,105,97,110,46,99,111,109,47,0,116,101,115,116,0,104,116,116,112,71,101,116,0,78,83,116,51,95,95,50,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,78,83,116,51,95,95,50,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,105,105,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,115,116,100,58,58,119,115,116,114,105,110,103,0,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,102,108,111,97,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,100,111,117,98,108,101,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,32,100,111,117,98,108,101,62,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,101,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,100,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,102,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,109,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,108,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,106,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,105,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,116,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,115,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,104,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,97,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,99,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,51,118,97,108,69,0,78,83,116,51,95,95,50,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,119,69,69,69,69,0,78,83,116,51,95,95,50,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,104,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,104,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,83,116,57,101,120,99,101,112,116,105,111,110,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,83,116,57,98,97,100,95,97,108,108,111,99,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,118,0,98,0,99,0,104,0,97,0,115,0,116,0,105,0,106,0,109,0,102,0,100,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,32,99,111,110,115,116,0,32,118,111,108,97,116,105,108,101,0,32,114,101,115,116,114,105,99,116,0,32,99,111,109,112,108,101,120,0,32,105,109,97,103,105,110,97,114,121,0,32,91,0,32,40,0,41,0,40,0,38,38,0,111,98,106,99,95,111,98,106,101,99,116,60,0,42,0,38,0,111,98,106,99,112,114,111,116,111,0,32,0,60,0,62,0,32,118,101,99,116,111,114,91,0,93,0,112,105,120,101,108,32,118,101,99,116,111,114,91,0,38,61,0,61,0,44,0,126,0,58,58,0,100,101,108,101,116,101,91,93,32,0,100,101,108,101,116,101,32,0,47,0,47,61,0,94,0,94,61,0,61,61,0,62,61,0,41,91,0,60,61,0,60,60,0,60,60,61,0,45,0,45,61,0,42,61,0,45,45,0,41,45,45,0,33,61,0,33,0,124,124,0,124,0,124,61,0,45,62,42,0,43,0,43,61,0,43,43,0,41,43,43,0,41,32,63,32,40,0,41,32,58,32,40,0,37,0,37,61,0,62,62,0,62,62,61,0,116,104,114,111,119,0,116,104,114,111,119,32,0,116,121,112,101,105,100,40,0,115,105,122,101,111,102,46,46,46,40,0,44,32,0,115,105,122,101,111,102,32,40,0,115,116,97,116,105,99,95,99,97,115,116,60,0,62,40,0,114,101,105,110,116,101,114,112,114,101,116,95,99,97,115,116,60,0,45,62,0,110,111,101,120,99,101,112,116,32,40,0,91,93,32,0,41,32,0,46,0,46,42,0,115,116,100,58,58,0,111,112,101,114,97,116,111,114,38,38,0,111,112,101,114,97,116,111,114,38,0,111,112,101,114,97,116,111,114,38,61,0,111,112,101,114,97,116,111,114,61,0,111,112,101,114,97,116,111,114,40,41,0,111,112,101,114,97,116,111,114,44,0,111,112,101,114,97,116,111,114,126,0,111,112,101,114,97,116,111,114,32,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,91,93,0,111,112,101,114,97,116,111,114,42,0,111,112,101,114,97,116,111,114,47,0,111,112,101,114,97,116,111,114,47,61,0,111,112,101,114,97,116,111,114,94,0,111,112,101,114,97,116,111,114,94,61,0,111,112,101,114,97,116,111,114,61,61,0,111,112,101,114,97,116,111,114,62,61,0,111,112,101,114,97,116,111,114,62,0,111,112,101,114,97,116,111,114,91,93,0,111,112,101,114,97,116,111,114,60,61,0,111,112,101,114,97,116,111,114,34,34,32,0,111,112,101,114,97,116,111,114,60,60,0,111,112,101,114,97,116,111,114,60,60,61,0,111,112,101,114,97,116,111,114,60,0,111,112,101,114,97,116,111,114,45,0,111,112,101,114,97,116,111,114,45,61,0,111,112,101,114,97,116,111,114,42,61,0,111,112,101,114,97,116,111,114,45,45,0,111,112,101,114,97,116,111,114,32,110,101,119,91,93,0,111,112,101,114,97,116,111,114,33,61,0,111,112,101,114,97,116,111,114,33,0,111,112,101,114,97,116,111,114,32,110,101,119,0,111,112,101,114,97,116,111,114,124,124,0,111,112,101,114,97,116,111,114,124,0,111,112,101,114,97,116,111,114,124,61,0,111,112,101,114,97,116,111,114,45,62,42,0,111,112,101,114,97,116,111,114,43,0,111,112,101,114,97,116,111,114,43,61,0,111,112,101,114,97,116,111,114,43,43,0,111,112,101,114,97,116,111,114,45,62,0,111,112,101,114,97,116,111,114,63,0,111,112,101,114,97,116,111,114,37,0,111,112,101,114,97,116,111,114,37,61,0,111,112,101,114,97,116,111,114,62,62,0,111,112,101,114,97,116,111,114,62,62,61,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,0,39,117,110,110,97,109,101,100,0,39,108,97,109,98,100,97,39,40,0,115,116,100,58,58,115,116,114,105,110,103,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,44,32,115,116,100,58,58,97,108,108,111,99,97,116,111,114,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,115,116,114,105,110,103,0,115,116,100,58,58,105,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,105,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,115,116,114,101,97,109,0,115,116,100,58,58,111,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,111,115,116,114,101,97,109,0,115,116,100,58,58,105,111,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,105,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,111,115,116,114,101,97,109,0,100,121,110,97,109,105,99,95,99,97,115,116,60,0,41,40,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,85,115,101,114,115,47,108,117,111,120,105,97,111,106,117,110,47,119,101,98,97,115,115,101,109,98,108,121,47,101,109,115,100,107,47,101,109,115,99,114,105,112,116,101,110,47,105,110,99,111,109,105,110,103,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,99,111,110,115,116,95,99,97,115,116,60,0,97,108,105,103,110,111,102,32,40,0,102,112,0,119,99,104,97,114,95,116,0,102,97,108,115,101,0,116,114,117,101,0,99,104,97,114,0,115,105,103,110,101,100,32,99,104,97,114,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,115,104,111,114,116,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,117,0,108,0,117,108,0,108,108,0,117,108,108,0,95,95,105,110,116,49,50,56,0,117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,50,56,0,37,76,97,76,0,37,97,0,37,97,102,0,100,101,99,108,116,121,112,101,40,0,115,116,100,58,58,97,108,108,111,99,97,116,111,114,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,0,58,58,115,116,114,105,110,103,32,108,105,116,101,114,97,108,0,115,116,100,0,95,71,76,79,66,65,76,95,95,78,0,40,97,110,111,110,121,109,111,117,115,32,110,97,109,101,115,112,97,99,101,41,0,32,62,0,84,95,0,105,100,0,58,58,42,0,32,38,0,32,38,38,0,32,91,93,0,118,111,105,100,0,98,111,111,108,0,105,110,116,0,117,110,115,105,103,110,101,100,32,105,110,116,0,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,108,111,110,103,32,108,111,110,103,0,102,108,111,97,116,0,108,111,110,103,32,100,111,117,98,108,101,0,95,95,102,108,111,97,116,49,50,56,0,46,46,46,0,100,101,99,105,109,97,108,54,52,0,100,101,99,105,109,97,108,49,50,56,0,100,101,99,105,109,97,108,51,50,0,100,101,99,105,109,97,108,49,54,0,99,104,97,114,51,50,95,116,0,99,104,97,114,49,54,95,116,0,97,117,116,111,0,115,116,100,58,58,110,117,108,108,112,116,114,95,116,0,100,111,117,98,108,101,0,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,0,95,98,108,111,99,107,95,105,110,118,111,107,101,0,105,110,118,111,99,97,116,105,111,110,32,102,117,110,99,116,105,111,110,32,102,111,114,32,98,108,111,99,107,32,105,110,32,0,118,116,97,98,108,101,32,102,111,114,32,0,86,84,84,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,110,97,109,101,32,102,111,114,32,0,99,111,118,97,114,105,97,110,116,32,114,101,116,117,114,110,32,116,104,117,110,107,32,116,111,32,0,99,111,110,115,116,114,117,99,116,105,111,110,32,118,116,97,98,108,101,32,102,111,114,32,0,45,105,110,45,0,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,110,111,110,45,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,103,117,97,114,100,32,118,97,114,105,97,98,108,101,32,102,111,114,32,0,114,101,102,101,114,101,110,99,101,32,116,101,109,112,111,114,97,114,121,32,102,111,114,32,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }
  
  
  
  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((Runtime.setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((Runtime.setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((Runtime.setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((Runtime.setTempRet0(throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

   
  Module["_memset"] = _memset;

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

  
  function _free() {
  }
  Module["_free"] = _free;
  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              function getTAElement(ta, index) {
                  return ta[index];
              }
              function getStringElement(string, index) {
                  return string.charCodeAt(index);
              }
              var getElement;
              if (value instanceof Uint8Array) {
                  getElement = getTAElement;
              } else if (value instanceof Uint8ClampedArray) {
                  getElement = getTAElement;
              } else if (value instanceof Int8Array) {
                  getElement = getTAElement;
              } else if (typeof value === 'string') {
                  getElement = getStringElement;
              } else {
                  throwBindingError('Cannot pass non-string to std::string');
              }
  
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length);
              HEAPU32[ptr >> 2] = length;
              for (var i = 0; i < length; ++i) {
                  var charCode = getElement(value, i);
                  if (charCode > 255) {
                      _free(ptr);
                      throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                  }
                  HEAPU8[ptr + 4 + i] = charCode;
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Module['dynCall_v'](func);
      _pthread_once.seen[ptr] = 1;
    }

  function _emscripten_fetch_attr_init() {
  Module['printErr']('missing function: emscripten_fetch_attr_init'); abort(-1);
  }

  function ___lock() {}

  function ___unlock() {}

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

   
  Module["_i64Add"] = _i64Add;

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
      
      var fromWireType = function(value) {
          return value;
      };
      
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return value | 0;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function _emscripten_fetch_close() {
  Module['printErr']('missing function: emscripten_fetch_close'); abort(-1);
  }

  
  
  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }
  
      /*
       * Previously, the following line was just:
  
       function dummy() {};
  
       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;
  
      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }
  
  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;
  
      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
  
      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);
  
      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  
      var argsList = "";
      var argsListWired = "";
      for(var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }
  
      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";
  
  
      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;
  
      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }
  
      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }
  
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
  
  
      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }
  
      for(var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }
  
      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
  
      var returns = (argTypes[0].name !== "void");
  
      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";
  
      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }
  
      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
  
      args1.push(invokerFnBody);
  
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }
  
  
  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }
  
          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }
  
  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }
  
  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          Module[name].argCount = numArguments;
      }
    }
  
  function requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
  
      function makeDynCaller(dynCall) {
          var args = [];
          for (var i = 1; i < signature.length; ++i) {
              args.push('a' + i);
          }
  
          var name = 'dynCall_' + signature + '_' + rawFunction;
          var body = 'return function ' + name + '(' + args.join(', ') + ') {\n';
          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\n';
          body    += '};\n';
  
          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);
      }
  
      var fp;
      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {
          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
          fp = FUNCTION_TABLE[rawFunction];
      } else {
          // asm.js does not give direct access to the function tables,
          // and thus we must go through the dynCall interface which allows
          // calling into a signature's function table by pointer value.
          //
          // https://github.com/dherman/asm.js/issues/83
          //
          // This has three main penalties:
          // - dynCall is another function call in the path from JavaScript to C++.
          // - JITs may not predict through the function table indirection at runtime.
          var dc = Module["asm"]['dynCall_' + signature];
          if (dc === undefined) {
              // We will always enter this branch if the signature
              // contains 'f' and PRECISE_F32 is not enabled.
              //
              // Try again, replacing 'f' with 'd'.
              dc = Module["asm"]['dynCall_' + signature.replace(/f/g, 'd')];
              if (dc === undefined) {
                  throwBindingError("No dynCall invoker for signature: " + signature);
              }
          }
          fp = makeDynCaller(dc);
      }
  
      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
  
  
  var UnboundTypeError=undefined;
  
  function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);
  
      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      name = readLatin1String(name);
      
      rawInvoker = requireFunction(signature, rawInvoker);
  
      exposePublicSymbol(name, function() {
          throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);
      }, argCount - 1);
  
      whenDependentTypesAreResolved([], argTypes, function(argTypes) {
          var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);
          replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn), argCount - 1);
          return [];
      });
    }

  function ___cxa_find_matching_catch_2() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_3() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___udivdi3"] = ___udivdi3;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    } 
  Module["_sbrk"] = _sbrk;

   
  Module["_memmove"] = _memmove;

  function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by enlargeMemory().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var HEAP = getHeap();
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function ___gxx_personality_v0() {
    }

   
  Module["___uremdi3"] = ___uremdi3;

  function _emscripten_fetch() {
  Module['printErr']('missing function: emscripten_fetch'); abort(-1);
  }

   
  Module["_llvm_bswap_i32"] = _llvm_bswap_i32;

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }


  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___cxa_end_catch() {
      // Clear state flag.
      Module['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');;
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');;
init_emval();;
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");


function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_i": nullFunc_i, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_viiii": invoke_viiii, "floatReadValueFromPointer": floatReadValueFromPointer, "simpleReadValueFromPointer": simpleReadValueFromPointer, "_pthread_key_create": _pthread_key_create, "__embind_register_memory_view": __embind_register_memory_view, "throwInternalError": throwInternalError, "get_first_emval": get_first_emval, "_abort": _abort, "throwBindingError": throwBindingError, "___gxx_personality_v0": ___gxx_personality_v0, "extendError": extendError, "__embind_register_void": __embind_register_void, "___assert_fail": ___assert_fail, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch_2": ___cxa_find_matching_catch_2, "___cxa_find_matching_catch_3": ___cxa_find_matching_catch_3, "getShiftFromSize": getShiftFromSize, "_emscripten_fetch_attr_init": _emscripten_fetch_attr_init, "embind_init_charCodes": embind_init_charCodes, "__embind_register_function": __embind_register_function, "_emscripten_fetch_close": _emscripten_fetch_close, "___setErrNo": ___setErrNo, "__emval_register": __emval_register, "__embind_register_std_wstring": __embind_register_std_wstring, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___cxa_end_catch": ___cxa_end_catch, "__embind_register_bool": __embind_register_bool, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "getTypeName": getTypeName, "___cxa_begin_catch": ___cxa_begin_catch, "_pthread_getspecific": _pthread_getspecific, "createNamedFunction": createNamedFunction, "__embind_register_emval": __embind_register_emval, "readLatin1String": readLatin1String, "throwUnboundTypeError": throwUnboundTypeError, "craftInvokerFunction": craftInvokerFunction, "_emscripten_fetch": _emscripten_fetch, "_pthread_once": _pthread_once, "__emval_decref": __emval_decref, "__embind_register_integer": __embind_register_integer, "__embind_register_float": __embind_register_float, "makeLegalFunctionName": makeLegalFunctionName, "___syscall54": ___syscall54, "___unlock": ___unlock, "heap32VectorToArray": heap32VectorToArray, "init_emval": init_emval, "whenDependentTypesAreResolved": whenDependentTypesAreResolved, "new_": new_, "_pthread_setspecific": _pthread_setspecific, "integerReadValueFromPointer": integerReadValueFromPointer, "registerType": registerType, "___cxa_throw": ___cxa_throw, "replacePublicSymbol": replacePublicSymbol, "___lock": ___lock, "___syscall6": ___syscall6, "___cxa_allocate_exception": ___cxa_allocate_exception, "ensureOverloadTable": ensureOverloadTable, "count_emval_handles": count_emval_handles, "requireFunction": requireFunction, "runDestructors": runDestructors, "_embind_repr": _embind_repr, "___syscall140": ___syscall140, "exposePublicSymbol": exposePublicSymbol, "__embind_register_std_string": __embind_register_std_string, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___syscall146": ___syscall146, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
'almost asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_viiii=env.invoke_viiii;
  var floatReadValueFromPointer=env.floatReadValueFromPointer;
  var simpleReadValueFromPointer=env.simpleReadValueFromPointer;
  var _pthread_key_create=env._pthread_key_create;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var throwInternalError=env.throwInternalError;
  var get_first_emval=env.get_first_emval;
  var _abort=env._abort;
  var throwBindingError=env.throwBindingError;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var extendError=env.extendError;
  var __embind_register_void=env.__embind_register_void;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch_2=env.___cxa_find_matching_catch_2;
  var ___cxa_find_matching_catch_3=env.___cxa_find_matching_catch_3;
  var getShiftFromSize=env.getShiftFromSize;
  var _emscripten_fetch_attr_init=env._emscripten_fetch_attr_init;
  var embind_init_charCodes=env.embind_init_charCodes;
  var __embind_register_function=env.__embind_register_function;
  var _emscripten_fetch_close=env._emscripten_fetch_close;
  var ___setErrNo=env.___setErrNo;
  var __emval_register=env.__emval_register;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var __embind_register_bool=env.__embind_register_bool;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var getTypeName=env.getTypeName;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var createNamedFunction=env.createNamedFunction;
  var __embind_register_emval=env.__embind_register_emval;
  var readLatin1String=env.readLatin1String;
  var throwUnboundTypeError=env.throwUnboundTypeError;
  var craftInvokerFunction=env.craftInvokerFunction;
  var _emscripten_fetch=env._emscripten_fetch;
  var _pthread_once=env._pthread_once;
  var __emval_decref=env.__emval_decref;
  var __embind_register_integer=env.__embind_register_integer;
  var __embind_register_float=env.__embind_register_float;
  var makeLegalFunctionName=env.makeLegalFunctionName;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var heap32VectorToArray=env.heap32VectorToArray;
  var init_emval=env.init_emval;
  var whenDependentTypesAreResolved=env.whenDependentTypesAreResolved;
  var new_=env.new_;
  var _pthread_setspecific=env._pthread_setspecific;
  var integerReadValueFromPointer=env.integerReadValueFromPointer;
  var registerType=env.registerType;
  var ___cxa_throw=env.___cxa_throw;
  var replacePublicSymbol=env.replacePublicSymbol;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ensureOverloadTable=env.ensureOverloadTable;
  var count_emval_handles=env.count_emval_handles;
  var requireFunction=env.requireFunction;
  var runDestructors=env.runDestructors;
  var _embind_repr=env._embind_repr;
  var ___syscall140=env.___syscall140;
  var exposePublicSymbol=env.exposePublicSymbol;
  var __embind_register_std_string=env.__embind_register_std_string;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z7httpGetv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__s$addr$i = 0, $__s$addr$i7 = 0, $attr = 0, $attributes = 0, $call$i = 0, $call$i14 = 0, $call1 = 0, $cmp = 0, $conv = 0, $data = 0, $fetch = 0;
 var $status = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i3 = 0, $this$addr$i$i$i4 = 0, $this$addr$i$i5 = 0, $this$addr$i6 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i11 = 0, $this1$i$i10 = 0, $this1$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $attr = sp + 8|0;
 _emscripten_fetch_attr_init(($attr|0));
 (_strcpy($attr,1320)|0);
 $attributes = ((($attr)) + 48|0);
 HEAP32[$attributes>>2] = 65;
 $call1 = (_emscripten_fetch(($attr|0),(1324|0))|0);
 $fetch = $call1;
 $0 = $fetch;
 (_emscripten_fetch_close(($0|0))|0);
 $1 = $fetch;
 $status = ((($1)) + 42|0);
 $2 = HEAP16[$status>>1]|0;
 $conv = $2&65535;
 $cmp = ($conv|0)==(200);
 if ($cmp) {
  $3 = $fetch;
  $data = ((($3)) + 12|0);
  $4 = HEAP32[$data>>2]|0;
  $this$addr$i = $agg$result;
  $__s$addr$i = $4;
  $this1$i = $this$addr$i;
  $this$addr$i$i = $this1$i;
  $this1$i$i = $this$addr$i$i;
  $this$addr$i$i$i = $this1$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $this$addr$i$i$i$i = $this1$i$i$i;
  ;HEAP32[$this1$i$i$i>>2]=0|0;HEAP32[$this1$i$i$i+4>>2]=0|0;HEAP32[$this1$i$i$i+8>>2]=0|0;
  $5 = $__s$addr$i;
  $6 = $__s$addr$i;
  $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc($6)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this1$i,$5,$call$i);
  STACKTOP = sp;return;
 } else {
  $this$addr$i6 = $agg$result;
  $__s$addr$i7 = 9474;
  $this1$i8 = $this$addr$i6;
  $this$addr$i$i5 = $this1$i8;
  $this1$i$i10 = $this$addr$i$i5;
  $this$addr$i$i$i4 = $this1$i$i10;
  $this1$i$i$i11 = $this$addr$i$i$i4;
  $this$addr$i$i$i$i3 = $this1$i$i$i11;
  ;HEAP32[$this1$i$i$i11>>2]=0|0;HEAP32[$this1$i$i$i11+4>>2]=0|0;HEAP32[$this1$i$i$i11+8>>2]=0|0;
  $7 = $__s$addr$i7;
  $8 = $__s$addr$i7;
  $call$i14 = (__ZNSt3__211char_traitsIcE6lengthEPKc($8)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this1$i8,$7,$call$i14);
  STACKTOP = sp;return;
 }
}
function __Z4testv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $__s$addr$i = 0, $call$i = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr$i = $agg$result;
 $__s$addr$i = 1354;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 ;HEAP32[$this1$i$i$i>>2]=0|0;HEAP32[$this1$i$i$i+4>>2]=0|0;HEAP32[$this1$i$i$i+8>>2]=0|0;
 $0 = $__s$addr$i;
 $1 = $__s$addr$i;
 $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc($1)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this1$i,$0,$call$i);
 STACKTOP = sp;return;
}
function ___cxx_global_var_init() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN45EmscriptenBindingInitializer_my_class_exampleC2Ev(8432);
 return;
}
function __ZN45EmscriptenBindingInitializer_my_class_exampleC2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 __ZN10emscripten8functionINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEJEJEEEvPKcPFT_DpT0_EDpT1_(1359,33);
 __ZN10emscripten8functionINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEJEJEEEvPKcPFT_DpT0_EDpT1_(1354,34);
 STACKTOP = sp;return;
}
function __ZN10emscripten8functionINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEJEJEEEvPKcPFT_DpT0_EDpT1_($name,$fn) {
 $name = $name|0;
 $fn = $fn|0;
 var $$addr$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $args = 0, $call = 0, $call$i$i = 0, $call1 = 0, $fn$addr = 0, $invoker = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $args = sp + 16|0;
 $name$addr = $name;
 $fn$addr = $fn;
 $invoker = 35;
 $0 = $name$addr;
 $call = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv($args)|0);
 $call1 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($args)|0);
 $1 = $invoker;
 $$addr$i = $1;
 $call$i$i = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0);
 $2 = $invoker;
 $3 = $fn$addr;
 __embind_register_function(($0|0),($call|0),($call1|0),($call$i$i|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $__s$addr = 0, $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $__s$addr = $__s;
 $0 = $__s$addr;
 $call = (_strlen($0)|0);
 STACKTOP = sp;return ($call|0);
}
function __ZN10emscripten8internal7InvokerINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEJEE6invokeEPFS8_vE($fn) {
 $fn = $fn|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $fn$addr = 0, $ref$tmp = 0, $sel = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $fn$addr = $fn;
 $0 = $fn$addr;
 FUNCTION_TABLE_vi[$0 & 127]($ref$tmp);
 __THREW__ = 0;
 $call = (invoke_ii(36,($ref$tmp|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  $exn$slot = $3;
  $ehselector$slot = $4;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp);
  $exn = $exn$slot;
  $sel = $ehselector$slot;
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp);
  STACKTOP = sp;return ($call|0);
 }
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 1;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv()|0);
 STACKTOP = sp;return ($call|0);
}
function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE10toWireTypeERKS8_($v) {
 $v = $v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$addr$i$i = 0, $__r$addr$i$i$i$i = 0, $__size_$i23$i$i = 0, $__size_$i23$i$i106 = 0, $__size_$i23$i$i34 = 0, $__x$addr$i$i$i$i$i = 0, $add = 0, $and$i$i$i = 0, $and$i$i$i26 = 0, $and$i$i$i65 = 0, $and$i$i$i98 = 0, $call1 = 0;
 var $cond$i$i = 0, $cond$i$i117 = 0, $cond$i$i45 = 0, $cond$i$i76 = 0, $conv$i$i$i = 0, $conv$i$i$i25 = 0, $conv$i$i$i64 = 0, $conv$i$i$i97 = 0, $conv$i14$i$i = 0, $conv$i14$i$i115 = 0, $conv$i14$i$i43 = 0, $data = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i11 = 0, $this$addr$i$i$i$i$i50 = 0, $this$addr$i$i$i$i$i83 = 0;
 var $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i$i51 = 0, $this$addr$i$i$i$i84 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i13$i$i = 0, $this$addr$i$i$i15$i$i = 0, $this$addr$i$i$i15$i$i5 = 0, $this$addr$i$i$i15$i$i77 = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i$i4$i$i47 = 0, $this$addr$i$i$i4$i$i8 = 0, $this$addr$i$i$i4$i$i80 = 0, $this$addr$i$i$i52 = 0, $this$addr$i$i$i85 = 0, $this$addr$i$i14 = 0, $this$addr$i$i14$i$i = 0, $this$addr$i$i16$i$i = 0, $this$addr$i$i16$i$i6 = 0, $this$addr$i$i16$i$i78 = 0, $this$addr$i$i5$i$i = 0;
 var $this$addr$i$i5$i$i48 = 0, $this$addr$i$i5$i$i81 = 0, $this$addr$i$i5$i$i9 = 0, $this$addr$i$i53 = 0, $this$addr$i$i86 = 0, $this$addr$i15 = 0, $this$addr$i15$i$i = 0, $this$addr$i17$i$i = 0, $this$addr$i17$i$i7 = 0, $this$addr$i17$i$i79 = 0, $this$addr$i54 = 0, $this$addr$i6$i$i = 0, $this$addr$i6$i$i10 = 0, $this$addr$i6$i$i49 = 0, $this$addr$i6$i$i82 = 0, $this$addr$i87 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0;
 var $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i21 = 0, $this1$i$i$i$i$i60 = 0, $this1$i$i$i$i$i93 = 0, $this1$i$i$i$i20 = 0, $this1$i$i$i$i59 = 0, $this1$i$i$i$i92 = 0, $this1$i$i$i10$i$i = 0, $this1$i$i$i10$i$i111 = 0, $this1$i$i$i10$i$i39 = 0, $this1$i$i$i10$i$i72 = 0, $this1$i$i$i18 = 0, $this1$i$i$i19$i$i = 0, $this1$i$i$i21$i$i = 0, $this1$i$i$i21$i$i103 = 0, $this1$i$i$i21$i$i31 = 0, $this1$i$i$i57 = 0, $this1$i$i$i90 = 0, $this1$i$i17 = 0, $this1$i$i18$i$i = 0;
 var $this1$i$i20$i$i = 0, $this1$i$i20$i$i102 = 0, $this1$i$i20$i$i30 = 0, $this1$i$i56 = 0, $this1$i$i89 = 0, $this1$i$i9$i$i = 0, $this1$i$i9$i$i110 = 0, $this1$i$i9$i$i38 = 0, $this1$i$i9$i$i71 = 0, $this1$i16 = 0, $this1$i16$i$i = 0, $this1$i18$i$i = 0, $this1$i18$i$i100 = 0, $this1$i18$i$i28 = 0, $this1$i55 = 0, $this1$i7$i$i = 0, $this1$i7$i$i108 = 0, $this1$i7$i$i36 = 0, $this1$i7$i$i69 = 0, $this1$i88 = 0;
 var $tobool$i$i$i = 0, $tobool$i$i$i27 = 0, $tobool$i$i$i66 = 0, $tobool$i$i$i99 = 0, $v$addr = 0, $wt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $v$addr = $v;
 $0 = $v$addr;
 $this$addr$i = $0;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $1 = ((($this1$i$i$i$i$i)) + 11|0);
 $2 = HEAP8[$1>>0]|0;
 $conv$i$i$i = $2&255;
 $and$i$i$i = $conv$i$i$i & 128;
 $tobool$i$i$i = ($and$i$i$i|0)!=(0);
 if ($tobool$i$i$i) {
  $this$addr$i17$i$i = $this1$i$i;
  $this1$i18$i$i = $this$addr$i17$i$i;
  $this$addr$i$i16$i$i = $this1$i18$i$i;
  $this1$i$i20$i$i = $this$addr$i$i16$i$i;
  $this$addr$i$i$i15$i$i = $this1$i$i20$i$i;
  $this1$i$i$i21$i$i = $this$addr$i$i$i15$i$i;
  $__size_$i23$i$i = ((($this1$i$i$i21$i$i)) + 4|0);
  $3 = HEAP32[$__size_$i23$i$i>>2]|0;
  $cond$i$i = $3;
 } else {
  $this$addr$i6$i$i = $this1$i$i;
  $this1$i7$i$i = $this$addr$i6$i$i;
  $this$addr$i$i5$i$i = $this1$i7$i$i;
  $this1$i$i9$i$i = $this$addr$i$i5$i$i;
  $this$addr$i$i$i4$i$i = $this1$i$i9$i$i;
  $this1$i$i$i10$i$i = $this$addr$i$i$i4$i$i;
  $4 = ((($this1$i$i$i10$i$i)) + 11|0);
  $5 = HEAP8[$4>>0]|0;
  $conv$i14$i$i = $5&255;
  $cond$i$i = $conv$i14$i$i;
 }
 $add = (4 + ($cond$i$i))|0;
 $call1 = (_malloc($add)|0);
 $wt = $call1;
 $6 = $v$addr;
 $this$addr$i87 = $6;
 $this1$i88 = $this$addr$i87;
 $this$addr$i$i86 = $this1$i88;
 $this1$i$i89 = $this$addr$i$i86;
 $this$addr$i$i$i85 = $this1$i$i89;
 $this1$i$i$i90 = $this$addr$i$i$i85;
 $this$addr$i$i$i$i84 = $this1$i$i$i90;
 $this1$i$i$i$i92 = $this$addr$i$i$i$i84;
 $this$addr$i$i$i$i$i83 = $this1$i$i$i$i92;
 $this1$i$i$i$i$i93 = $this$addr$i$i$i$i$i83;
 $7 = ((($this1$i$i$i$i$i93)) + 11|0);
 $8 = HEAP8[$7>>0]|0;
 $conv$i$i$i97 = $8&255;
 $and$i$i$i98 = $conv$i$i$i97 & 128;
 $tobool$i$i$i99 = ($and$i$i$i98|0)!=(0);
 if ($tobool$i$i$i99) {
  $this$addr$i17$i$i79 = $this1$i$i89;
  $this1$i18$i$i100 = $this$addr$i17$i$i79;
  $this$addr$i$i16$i$i78 = $this1$i18$i$i100;
  $this1$i$i20$i$i102 = $this$addr$i$i16$i$i78;
  $this$addr$i$i$i15$i$i77 = $this1$i$i20$i$i102;
  $this1$i$i$i21$i$i103 = $this$addr$i$i$i15$i$i77;
  $__size_$i23$i$i106 = ((($this1$i$i$i21$i$i103)) + 4|0);
  $9 = HEAP32[$__size_$i23$i$i106>>2]|0;
  $cond$i$i117 = $9;
 } else {
  $this$addr$i6$i$i82 = $this1$i$i89;
  $this1$i7$i$i108 = $this$addr$i6$i$i82;
  $this$addr$i$i5$i$i81 = $this1$i7$i$i108;
  $this1$i$i9$i$i110 = $this$addr$i$i5$i$i81;
  $this$addr$i$i$i4$i$i80 = $this1$i$i9$i$i110;
  $this1$i$i$i10$i$i111 = $this$addr$i$i$i4$i$i80;
  $10 = ((($this1$i$i$i10$i$i111)) + 11|0);
  $11 = HEAP8[$10>>0]|0;
  $conv$i14$i$i115 = $11&255;
  $cond$i$i117 = $conv$i14$i$i115;
 }
 $12 = $wt;
 HEAP32[$12>>2] = $cond$i$i117;
 $13 = $wt;
 $data = ((($13)) + 4|0);
 $14 = $v$addr;
 $this$addr$i54 = $14;
 $this1$i55 = $this$addr$i54;
 $this$addr$i$i53 = $this1$i55;
 $this1$i$i56 = $this$addr$i$i53;
 $this$addr$i$i$i52 = $this1$i$i56;
 $this1$i$i$i57 = $this$addr$i$i$i52;
 $this$addr$i$i$i$i51 = $this1$i$i$i57;
 $this1$i$i$i$i59 = $this$addr$i$i$i$i51;
 $this$addr$i$i$i$i$i50 = $this1$i$i$i$i59;
 $this1$i$i$i$i$i60 = $this$addr$i$i$i$i$i50;
 $15 = ((($this1$i$i$i$i$i60)) + 11|0);
 $16 = HEAP8[$15>>0]|0;
 $conv$i$i$i64 = $16&255;
 $and$i$i$i65 = $conv$i$i$i64 & 128;
 $tobool$i$i$i66 = ($and$i$i$i65|0)!=(0);
 if ($tobool$i$i$i66) {
  $this$addr$i15$i$i = $this1$i$i56;
  $this1$i16$i$i = $this$addr$i15$i$i;
  $this$addr$i$i14$i$i = $this1$i16$i$i;
  $this1$i$i18$i$i = $this$addr$i$i14$i$i;
  $this$addr$i$i$i13$i$i = $this1$i$i18$i$i;
  $this1$i$i$i19$i$i = $this$addr$i$i$i13$i$i;
  $17 = HEAP32[$this1$i$i$i19$i$i>>2]|0;
  $cond$i$i76 = $17;
 } else {
  $this$addr$i6$i$i49 = $this1$i$i56;
  $this1$i7$i$i69 = $this$addr$i6$i$i49;
  $this$addr$i$i5$i$i48 = $this1$i7$i$i69;
  $this1$i$i9$i$i71 = $this$addr$i$i5$i$i48;
  $this$addr$i$i$i4$i$i47 = $this1$i$i9$i$i71;
  $this1$i$i$i10$i$i72 = $this$addr$i$i$i4$i$i47;
  $__r$addr$i$i$i$i = $this1$i$i$i10$i$i72;
  $18 = $__r$addr$i$i$i$i;
  $__x$addr$i$i$i$i$i = $18;
  $19 = $__x$addr$i$i$i$i$i;
  $cond$i$i76 = $19;
 }
 $__p$addr$i$i = $cond$i$i76;
 $20 = $__p$addr$i$i;
 $21 = $v$addr;
 $this$addr$i15 = $21;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $this$addr$i$i$i13 = $this1$i$i17;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i20 = $this$addr$i$i$i$i12;
 $this$addr$i$i$i$i$i11 = $this1$i$i$i$i20;
 $this1$i$i$i$i$i21 = $this$addr$i$i$i$i$i11;
 $22 = ((($this1$i$i$i$i$i21)) + 11|0);
 $23 = HEAP8[$22>>0]|0;
 $conv$i$i$i25 = $23&255;
 $and$i$i$i26 = $conv$i$i$i25 & 128;
 $tobool$i$i$i27 = ($and$i$i$i26|0)!=(0);
 if ($tobool$i$i$i27) {
  $this$addr$i17$i$i7 = $this1$i$i17;
  $this1$i18$i$i28 = $this$addr$i17$i$i7;
  $this$addr$i$i16$i$i6 = $this1$i18$i$i28;
  $this1$i$i20$i$i30 = $this$addr$i$i16$i$i6;
  $this$addr$i$i$i15$i$i5 = $this1$i$i20$i$i30;
  $this1$i$i$i21$i$i31 = $this$addr$i$i$i15$i$i5;
  $__size_$i23$i$i34 = ((($this1$i$i$i21$i$i31)) + 4|0);
  $24 = HEAP32[$__size_$i23$i$i34>>2]|0;
  $cond$i$i45 = $24;
  _memcpy(($data|0),($20|0),($cond$i$i45|0))|0;
  $27 = $wt;
  STACKTOP = sp;return ($27|0);
 } else {
  $this$addr$i6$i$i10 = $this1$i$i17;
  $this1$i7$i$i36 = $this$addr$i6$i$i10;
  $this$addr$i$i5$i$i9 = $this1$i7$i$i36;
  $this1$i$i9$i$i38 = $this$addr$i$i5$i$i9;
  $this$addr$i$i$i4$i$i8 = $this1$i$i9$i$i38;
  $this1$i$i$i10$i$i39 = $this$addr$i$i$i4$i$i8;
  $25 = ((($this1$i$i$i10$i$i39)) + 11|0);
  $26 = HEAP8[$25>>0]|0;
  $conv$i14$i$i43 = $26&255;
  $cond$i$i45 = $conv$i14$i$i43;
  _memcpy(($data|0),($20|0),($cond$i$i45|0))|0;
  $27 = $wt;
  STACKTOP = sp;return ($27|0);
 }
 return (0)|0;
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (456|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1468|0);
}
function __GLOBAL__sub_I_fetch_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init();
 return;
}
function __GLOBAL__sub_I_bind_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init_2();
 return;
}
function ___cxx_global_var_init_2() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(8433);
 return;
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev($this) {
 $this = $this|0;
 var $call = 0, $call2 = 0, $call3 = 0, $call4 = 0, $call5 = 0, $call6 = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal6TypeIDIvE3getEv()|0);
 __embind_register_void(($call|0),(7404|0));
 $call2 = (__ZN10emscripten8internal6TypeIDIbE3getEv()|0);
 __embind_register_bool(($call2|0),(7409|0),1,1,0);
 __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc(7178);
 __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc(7183);
 __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc(7195);
 __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc(7209);
 __ZN12_GLOBAL__N_1L16register_integerItEEvPKc(7215);
 __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc(7414);
 __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc(7418);
 __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc(7431);
 __ZN12_GLOBAL__N_1L16register_integerImEEvPKc(7436);
 __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc(7460);
 __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc(7572);
 $call3 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0);
 __embind_register_std_string(($call3|0),(6658|0));
 $call4 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0);
 __embind_register_std_string(($call4|0),(1471|0));
 $call5 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0);
 __embind_register_std_wstring(($call5|0),4,(1504|0));
 $call6 = (__ZN10emscripten8internal6TypeIDINS_3valEE3getEv()|0);
 __embind_register_emval(($call6|0),(1517|0));
 __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc(1533);
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(1563);
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(1600);
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(1639);
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(1670);
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(1710);
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(1739);
 __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc(1777);
 __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc(1807);
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(1846);
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(1878);
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(1911);
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(1944);
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(1978);
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(2011);
 __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc(2045);
 __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc(2076);
 __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc(2108);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDIvE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIvE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal6TypeIDIbE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIbE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIcE3getEv()|0);
 $0 = $name$addr;
 $conv = -128 << 24 >> 24;
 $conv3 = 127 << 24 >> 24;
 __embind_register_integer(($call|0),($0|0),1,($conv|0),($conv3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIaE3getEv()|0);
 $0 = $name$addr;
 $conv = -128 << 24 >> 24;
 $conv3 = 127 << 24 >> 24;
 __embind_register_integer(($call|0),($0|0),1,($conv|0),($conv3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIhE3getEv()|0);
 $0 = $name$addr;
 $conv = 0;
 $conv3 = 255;
 __embind_register_integer(($call|0),($0|0),1,($conv|0),($conv3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIsE3getEv()|0);
 $0 = $name$addr;
 $conv = -32768 << 16 >> 16;
 $conv3 = 32767 << 16 >> 16;
 __embind_register_integer(($call|0),($0|0),2,($conv|0),($conv3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDItE3getEv()|0);
 $0 = $name$addr;
 $conv = 0;
 $conv3 = 65535;
 __embind_register_integer(($call|0),($0|0),2,($conv|0),($conv3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIiE3getEv()|0);
 $0 = $name$addr;
 __embind_register_integer(($call|0),($0|0),4,-2147483648,2147483647);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0);
 $0 = $name$addr;
 __embind_register_integer(($call|0),($0|0),4,0,-1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIlE3getEv()|0);
 $0 = $name$addr;
 __embind_register_integer(($call|0),($0|0),4,-2147483648,2147483647);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDImE3getEv()|0);
 $0 = $name$addr;
 __embind_register_integer(($call|0),($0|0),4,0,-1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIfE3getEv()|0);
 $0 = $name$addr;
 __embind_register_float(($call|0),($0|0),4);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0);
 $0 = $name$addr;
 __embind_register_float(($call|0),($0|0),8);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal6TypeIDINS_3valEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv()|0);
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv()|0);
 $0 = $name$addr;
 __embind_register_memory_view(($call|0),($call1|0),($0|0));
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (40|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (48|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (56|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (64|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (72|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (80|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (88|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 3;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (96|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (104|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (112|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (120|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv()|0);
 return ($call|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (128|0);
}
function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (136|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (168|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16|0);
}
function __ZN10emscripten8internal6TypeIDIdE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIdE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (432|0);
}
function __ZN10emscripten8internal6TypeIDIfE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIfE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (424|0);
}
function __ZN10emscripten8internal6TypeIDImE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDImE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (416|0);
}
function __ZN10emscripten8internal6TypeIDIlE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIlE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (408|0);
}
function __ZN10emscripten8internal6TypeIDIjE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIjE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (400|0);
}
function __ZN10emscripten8internal6TypeIDIiE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIiE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (392|0);
}
function __ZN10emscripten8internal6TypeIDItE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDItE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (384|0);
}
function __ZN10emscripten8internal6TypeIDIsE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIsE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (376|0);
}
function __ZN10emscripten8internal6TypeIDIhE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIhE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (360|0);
}
function __ZN10emscripten8internal6TypeIDIaE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIaE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (368|0);
}
function __ZN10emscripten8internal6TypeIDIcE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIcE3getEv()|0);
 return ($call|0);
}
function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (352|0);
}
function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (344|0);
}
function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (336|0);
}
function ___getTypeName($ti) {
 $ti = $ti|0;
 var $0 = 0, $1 = 0, $__type_name$i = 0, $call1 = 0, $this$addr$i = 0, $this1$i = 0, $ti$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ti$addr = $ti;
 $0 = $ti$addr;
 $this$addr$i = $0;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0);
 $1 = HEAP32[$__type_name$i>>2]|0;
 $call1 = (___strdup($1)|0);
 STACKTOP = sp;return ($call1|0);
}
function _emscripten_get_global_libc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7848|0);
}
function ___stdio_close($f) {
 $f = $f|0;
 var $0 = 0, $call = 0, $call1 = 0, $call2 = 0, $fd = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $fd = ((($f)) + 60|0);
 $0 = HEAP32[$fd>>2]|0;
 $call = (_dummy_570($0)|0);
 HEAP32[$vararg_buffer>>2] = $call;
 $call1 = (___syscall6(6,($vararg_buffer|0))|0);
 $call2 = (___syscall_ret($call1)|0);
 STACKTOP = sp;return ($call2|0);
}
function ___stdio_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr32 = 0, $buf8 = 0, $buf_size = 0, $call = 0, $call40 = 0;
 var $call7 = 0, $call741 = 0, $call746 = 0, $cmp = 0, $cmp12 = 0, $cmp17 = 0, $cmp24 = 0, $cmp42 = 0, $cnt$0 = 0, $dec = 0, $fd = 0, $incdec$ptr = 0, $iov$043 = 0, $iov$1 = 0, $iov_base2 = 0, $iov_len = 0, $iov_len19 = 0, $iov_len23 = 0, $iov_len3 = 0, $iov_len36 = 0;
 var $iovcnt$045 = 0, $iovcnt$1 = 0, $iovs = 0, $or = 0, $rem$044 = 0, $retval$0 = 0, $sub = 0, $sub$ptr$sub = 0, $sub21 = 0, $sub28 = 0, $sub37 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $wbase = 0, $wend = 0, $wend14 = 0;
 var $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iovs = sp + 32|0;
 $wbase = ((($f)) + 28|0);
 $0 = HEAP32[$wbase>>2]|0;
 HEAP32[$iovs>>2] = $0;
 $iov_len = ((($iovs)) + 4|0);
 $wpos = ((($f)) + 20|0);
 $1 = HEAP32[$wpos>>2]|0;
 $sub$ptr$sub = (($1) - ($0))|0;
 HEAP32[$iov_len>>2] = $sub$ptr$sub;
 $iov_base2 = ((($iovs)) + 8|0);
 HEAP32[$iov_base2>>2] = $buf;
 $iov_len3 = ((($iovs)) + 12|0);
 HEAP32[$iov_len3>>2] = $len;
 $add = (($sub$ptr$sub) + ($len))|0;
 $fd = ((($f)) + 60|0);
 $2 = HEAP32[$fd>>2]|0;
 $3 = $iovs;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $3;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $call40 = (___syscall146(146,($vararg_buffer|0))|0);
 $call741 = (___syscall_ret($call40)|0);
 $cmp42 = ($add|0)==($call741|0);
 L1: do {
  if ($cmp42) {
   label = 3;
  } else {
   $call746 = $call741;$iov$043 = $iovs;$iovcnt$045 = 2;$rem$044 = $add;
   while(1) {
    $cmp12 = ($call746|0)<(0);
    if ($cmp12) {
     break;
    }
    $sub21 = (($rem$044) - ($call746))|0;
    $iov_len23 = ((($iov$043)) + 4|0);
    $8 = HEAP32[$iov_len23>>2]|0;
    $cmp24 = ($call746>>>0)>($8>>>0);
    $incdec$ptr = ((($iov$043)) + 8|0);
    $iov$1 = $cmp24 ? $incdec$ptr : $iov$043;
    $dec = $cmp24 << 31 >> 31;
    $iovcnt$1 = (($dec) + ($iovcnt$045))|0;
    $sub28 = $cmp24 ? $8 : 0;
    $cnt$0 = (($call746) - ($sub28))|0;
    $9 = HEAP32[$iov$1>>2]|0;
    $add$ptr32 = (($9) + ($cnt$0)|0);
    HEAP32[$iov$1>>2] = $add$ptr32;
    $iov_len36 = ((($iov$1)) + 4|0);
    $10 = HEAP32[$iov_len36>>2]|0;
    $sub37 = (($10) - ($cnt$0))|0;
    HEAP32[$iov_len36>>2] = $sub37;
    $11 = HEAP32[$fd>>2]|0;
    $12 = $iov$1;
    HEAP32[$vararg_buffer3>>2] = $11;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $12;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $iovcnt$1;
    $call = (___syscall146(146,($vararg_buffer3|0))|0);
    $call7 = (___syscall_ret($call)|0);
    $cmp = ($sub21|0)==($call7|0);
    if ($cmp) {
     label = 3;
     break L1;
    } else {
     $call746 = $call7;$iov$043 = $iov$1;$iovcnt$045 = $iovcnt$1;$rem$044 = $sub21;
    }
   }
   $wend14 = ((($f)) + 16|0);
   HEAP32[$wend14>>2] = 0;
   HEAP32[$wbase>>2] = 0;
   HEAP32[$wpos>>2] = 0;
   $6 = HEAP32[$f>>2]|0;
   $or = $6 | 32;
   HEAP32[$f>>2] = $or;
   $cmp17 = ($iovcnt$045|0)==(2);
   if ($cmp17) {
    $retval$0 = 0;
   } else {
    $iov_len19 = ((($iov$043)) + 4|0);
    $7 = HEAP32[$iov_len19>>2]|0;
    $sub = (($len) - ($7))|0;
    $retval$0 = $sub;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $buf8 = ((($f)) + 44|0);
  $4 = HEAP32[$buf8>>2]|0;
  $buf_size = ((($f)) + 48|0);
  $5 = HEAP32[$buf_size>>2]|0;
  $add$ptr = (($4) + ($5)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  HEAP32[$wbase>>2] = $4;
  HEAP32[$wpos>>2] = $4;
  $retval$0 = $len;
 }
 STACKTOP = sp;return ($retval$0|0);
}
function ___stdio_seek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $call = 0, $call1 = 0, $cmp = 0, $fd = 0, $ret = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $ret = sp + 20|0;
 $fd = ((($f)) + 60|0);
 $0 = HEAP32[$fd>>2]|0;
 $1 = $ret;
 HEAP32[$vararg_buffer>>2] = $0;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $off;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $whence;
 $call = (___syscall140(140,($vararg_buffer|0))|0);
 $call1 = (___syscall_ret($call)|0);
 $cmp = ($call1|0)<(0);
 if ($cmp) {
  HEAP32[$ret>>2] = -1;
  $2 = -1;
 } else {
  $$pre = HEAP32[$ret>>2]|0;
  $2 = $$pre;
 }
 STACKTOP = sp;return ($2|0);
}
function ___syscall_ret($r) {
 $r = $r|0;
 var $call = 0, $cmp = 0, $retval$0 = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($r>>>0)>(4294963200);
 if ($cmp) {
  $sub = (0 - ($r))|0;
  $call = (___errno_location()|0);
  HEAP32[$call>>2] = $sub;
  $retval$0 = -1;
 } else {
  $retval$0 = $r;
 }
 return ($retval$0|0);
}
function ___errno_location() {
 var $call = 0, $errno_val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___pthread_self_103()|0);
 $errno_val = ((($call)) + 64|0);
 return ($errno_val|0);
}
function ___pthread_self_103() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (588|0);
}
function _dummy_570($fd) {
 $fd = $fd|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($fd|0);
}
function ___stdout_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $2 = 0, $and = 0, $call = 0, $call3 = 0, $fd = 0, $lbf = 0, $tobool = 0, $tobool2 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $write = 0, $wsz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $wsz = sp + 16|0;
 $write = ((($f)) + 36|0);
 HEAP32[$write>>2] = 2;
 $0 = HEAP32[$f>>2]|0;
 $and = $0 & 64;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $fd = ((($f)) + 60|0);
  $1 = HEAP32[$fd>>2]|0;
  $2 = $wsz;
  HEAP32[$vararg_buffer>>2] = $1;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $2;
  $call = (___syscall54(54,($vararg_buffer|0))|0);
  $tobool2 = ($call|0)==(0);
  if (!($tobool2)) {
   $lbf = ((($f)) + 75|0);
   HEAP8[$lbf>>0] = -1;
  }
 }
 $call3 = (___stdio_write($f,$buf,$len)|0);
 STACKTOP = sp;return ($call3|0);
}
function _isupper($c) {
 $c = $c|0;
 var $cmp = 0, $conv = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub = (($c) + -65)|0;
 $cmp = ($sub>>>0)<(26);
 $conv = $cmp&1;
 return ($conv|0);
}
function _strcmp($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $$lcssa = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $cmp = 0, $cmp7 = 0, $conv5 = 0, $conv6 = 0, $incdec$ptr = 0, $incdec$ptr4 = 0, $l$addr$010 = 0, $or$cond = 0, $or$cond9 = 0, $r$addr$011 = 0, $sub = 0, $tobool = 0, $tobool8 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$l>>0]|0;
 $1 = HEAP8[$r>>0]|0;
 $cmp7 = ($0<<24>>24)!=($1<<24>>24);
 $tobool8 = ($0<<24>>24)==(0);
 $or$cond9 = $tobool8 | $cmp7;
 if ($or$cond9) {
  $$lcssa = $1;$$lcssa6 = $0;
 } else {
  $l$addr$010 = $l;$r$addr$011 = $r;
  while(1) {
   $incdec$ptr = ((($l$addr$010)) + 1|0);
   $incdec$ptr4 = ((($r$addr$011)) + 1|0);
   $2 = HEAP8[$incdec$ptr>>0]|0;
   $3 = HEAP8[$incdec$ptr4>>0]|0;
   $cmp = ($2<<24>>24)!=($3<<24>>24);
   $tobool = ($2<<24>>24)==(0);
   $or$cond = $tobool | $cmp;
   if ($or$cond) {
    $$lcssa = $3;$$lcssa6 = $2;
    break;
   } else {
    $l$addr$010 = $incdec$ptr;$r$addr$011 = $incdec$ptr4;
   }
  }
 }
 $conv5 = $$lcssa6&255;
 $conv6 = $$lcssa&255;
 $sub = (($conv5) - ($conv6))|0;
 return ($sub|0);
}
function _memcmp($vl,$vr,$n) {
 $vl = $vl|0;
 $vr = $vr|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $cmp = 0, $cond = 0, $conv5 = 0, $conv6 = 0, $dec = 0, $incdec$ptr = 0, $incdec$ptr3 = 0, $l$012 = 0, $n$addr$011 = 0, $r$013 = 0, $sub = 0, $tobool = 0, $tobool10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool10 = ($n|0)==(0);
 L1: do {
  if ($tobool10) {
   $cond = 0;
  } else {
   $l$012 = $vl;$n$addr$011 = $n;$r$013 = $vr;
   while(1) {
    $0 = HEAP8[$l$012>>0]|0;
    $1 = HEAP8[$r$013>>0]|0;
    $cmp = ($0<<24>>24)==($1<<24>>24);
    if (!($cmp)) {
     break;
    }
    $dec = (($n$addr$011) + -1)|0;
    $incdec$ptr = ((($l$012)) + 1|0);
    $incdec$ptr3 = ((($r$013)) + 1|0);
    $tobool = ($dec|0)==(0);
    if ($tobool) {
     $cond = 0;
     break L1;
    } else {
     $l$012 = $incdec$ptr;$n$addr$011 = $dec;$r$013 = $incdec$ptr3;
    }
   }
   $conv5 = $0&255;
   $conv6 = $1&255;
   $sub = (($conv5) - ($conv6))|0;
   $cond = $sub;
  }
 } while(0);
 return ($cond|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $add$ptr = 0, $arrayidx = 0, $b = 0, $buf = 0, $buf_size = 0, $call = 0, $call10 = 0, $cmp = 0, $cmp16 = 0, $cmp4 = 0, $f = 0, $n$addr$0 = 0, $retval$0 = 0, $s$addr$0 = 0, $sub = 0, $sub$ptr$rhs$cast = 0, $sub17 = 0, $sub3 = 0;
 var $sub3$n$addr$0 = 0, $tobool = 0, $tobool11 = 0, $wbase = 0, $wend = 0, $wpos = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $b = sp + 124|0;
 $f = sp;
 dest=$f; src=960; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $sub = (($n) + -1)|0;
 $cmp = ($sub>>>0)>(2147483646);
 if ($cmp) {
  $tobool = ($n|0)==(0);
  if ($tobool) {
   $n$addr$0 = 1;$s$addr$0 = $b;
   label = 4;
  } else {
   $call = (___errno_location()|0);
   HEAP32[$call>>2] = 75;
   $retval$0 = -1;
  }
 } else {
  $n$addr$0 = $n;$s$addr$0 = $s;
  label = 4;
 }
 if ((label|0) == 4) {
  $sub$ptr$rhs$cast = $s$addr$0;
  $sub3 = (-2 - ($sub$ptr$rhs$cast))|0;
  $cmp4 = ($n$addr$0>>>0)>($sub3>>>0);
  $sub3$n$addr$0 = $cmp4 ? $sub3 : $n$addr$0;
  $buf_size = ((($f)) + 48|0);
  HEAP32[$buf_size>>2] = $sub3$n$addr$0;
  $wpos = ((($f)) + 20|0);
  HEAP32[$wpos>>2] = $s$addr$0;
  $buf = ((($f)) + 44|0);
  HEAP32[$buf>>2] = $s$addr$0;
  $add$ptr = (($s$addr$0) + ($sub3$n$addr$0)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  $wbase = ((($f)) + 28|0);
  HEAP32[$wbase>>2] = $add$ptr;
  $call10 = (_vfprintf($f,$fmt,$ap)|0);
  $tobool11 = ($sub3$n$addr$0|0)==(0);
  if ($tobool11) {
   $retval$0 = $call10;
  } else {
   $0 = HEAP32[$wpos>>2]|0;
   $1 = HEAP32[$wend>>2]|0;
   $cmp16 = ($0|0)==($1|0);
   $sub17 = $cmp16 << 31 >> 31;
   $arrayidx = (($0) + ($sub17)|0);
   HEAP8[$arrayidx>>0] = 0;
   $retval$0 = $call10;
  }
 }
 STACKTOP = sp;return ($retval$0|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$call21 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $add$ptr = 0, $and = 0, $and11 = 0, $and36 = 0, $ap2 = 0, $buf = 0, $buf_size = 0, $call = 0, $call21 = 0, $call2130 = 0, $call6 = 0;
 var $cmp = 0, $cmp5 = 0, $cmp7 = 0, $cond = 0, $internal_buf = 0, $lock = 0, $mode = 0, $nl_arg = 0, $nl_type = 0, $or = 0, $ret$1 = 0, $ret$1$ = 0, $retval$0 = 0, $tobool = 0, $tobool22 = 0, $tobool26 = 0, $tobool37 = 0, $tobool41 = 0, $vacopy_currentptr = 0, $wbase = 0;
 var $wend = 0, $wpos = 0, $write = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $call = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $cmp = ($call|0)<(0);
 if ($cmp) {
  $retval$0 = -1;
 } else {
  $lock = ((($f)) + 76|0);
  $0 = HEAP32[$lock>>2]|0;
  $cmp5 = ($0|0)>(-1);
  if ($cmp5) {
   $call6 = (___lockfile($f)|0);
   $cond = $call6;
  } else {
   $cond = 0;
  }
  $1 = HEAP32[$f>>2]|0;
  $and = $1 & 32;
  $mode = ((($f)) + 74|0);
  $2 = HEAP8[$mode>>0]|0;
  $cmp7 = ($2<<24>>24)<(1);
  if ($cmp7) {
   $and11 = $1 & -33;
   HEAP32[$f>>2] = $and11;
  }
  $buf_size = ((($f)) + 48|0);
  $3 = HEAP32[$buf_size>>2]|0;
  $tobool = ($3|0)==(0);
  if ($tobool) {
   $buf = ((($f)) + 44|0);
   $4 = HEAP32[$buf>>2]|0;
   HEAP32[$buf>>2] = $internal_buf;
   $wbase = ((($f)) + 28|0);
   HEAP32[$wbase>>2] = $internal_buf;
   $wpos = ((($f)) + 20|0);
   HEAP32[$wpos>>2] = $internal_buf;
   HEAP32[$buf_size>>2] = 80;
   $add$ptr = ((($internal_buf)) + 80|0);
   $wend = ((($f)) + 16|0);
   HEAP32[$wend>>2] = $add$ptr;
   $call21 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $tobool22 = ($4|0)==(0|0);
   if ($tobool22) {
    $ret$1 = $call21;
   } else {
    $write = ((($f)) + 36|0);
    $5 = HEAP32[$write>>2]|0;
    (FUNCTION_TABLE_iiii[$5 & 127]($f,0,0)|0);
    $6 = HEAP32[$wpos>>2]|0;
    $tobool26 = ($6|0)==(0|0);
    $$call21 = $tobool26 ? -1 : $call21;
    HEAP32[$buf>>2] = $4;
    HEAP32[$buf_size>>2] = 0;
    HEAP32[$wend>>2] = 0;
    HEAP32[$wbase>>2] = 0;
    HEAP32[$wpos>>2] = 0;
    $ret$1 = $$call21;
   }
  } else {
   $call2130 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $call2130;
  }
  $7 = HEAP32[$f>>2]|0;
  $and36 = $7 & 32;
  $tobool37 = ($and36|0)==(0);
  $ret$1$ = $tobool37 ? $ret$1 : -1;
  $or = $7 | $and;
  HEAP32[$f>>2] = $or;
  $tobool41 = ($cond|0)==(0);
  if (!($tobool41)) {
   ___unlockfile($f);
  }
  $retval$0 = $ret$1$;
 }
 STACKTOP = sp;return ($retval$0|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$ = 0, $$194$ = 0, $$197 = 0, $$add$ptr258 = 0, $$l10n$0 = 0, $$lcssa199 = 0, $$pre = 0, $$pre247 = 0, $$pre248 = 0, $$pre248$pre = 0, $$pre249 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $a$0 = 0, $a$0$add$ptr206 = 0, $a$1 = 0, $a$2 = 0, $add = 0, $add$ptr = 0, $add$ptr139 = 0, $add$ptr206 = 0, $add$ptr258 = 0, $add$ptr341 = 0, $add$ptr360 = 0, $add$ptr43 = 0, $add$ptr43$arrayidx31 = 0, $add$ptr474 = 0, $add$ptr88 = 0, $add270 = 0, $add323 = 0;
 var $add396 = 0, $add413 = 0, $add442 = 0, $and = 0, $and211 = 0, $and215 = 0, $and217 = 0, $and220 = 0, $and250 = 0, $and255 = 0, $and264 = 0, $and290 = 0, $and295 = 0, $and310 = 0, $and310$fl$4 = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $argpos$0 = 0, $arrayidx114 = 0, $arrayidx119 = 0, $arrayidx124 = 0, $arrayidx132 = 0, $arrayidx16 = 0, $arrayidx174 = 0, $arrayidx193 = 0, $arrayidx31 = 0, $arrayidx35 = 0, $arrayidx371 = 0, $arrayidx470 = 0, $arrayidx482 = 0, $arrayidx68 = 0, $arrayidx73 = 0, $arrayidx81 = 0, $buf = 0, $call = 0, $call104 = 0, $call160 = 0;
 var $call345 = 0, $call346 = 0, $call357 = 0, $call385 = 0, $call412 = 0, $call430 = 0, $cmp = 0, $cmp1 = 0, $cmp105 = 0, $cmp111 = 0, $cmp116 = 0, $cmp126 = 0, $cmp13 = 0, $cmp166 = 0, $cmp177 = 0, $cmp18 = 0, $cmp182 = 0, $cmp185 = 0, $cmp212 = 0, $cmp241 = 0;
 var $cmp271 = 0, $cmp307 = 0, $cmp324 = 0, $cmp37 = 0, $cmp378 = 0, $cmp378227 = 0, $cmp386 = 0, $cmp391 = 0, $cmp398 = 0, $cmp405 = 0, $cmp405237 = 0, $cmp414 = 0, $cmp422 = 0, $cmp435 = 0, $cmp443 = 0, $cmp467 = 0, $cmp479 = 0, $cmp50 = 0, $cmp50217 = 0, $cmp65 = 0;
 var $cmp75 = 0, $cmp97 = 0, $cnt$0 = 0, $cnt$1 = 0, $cond149 = 0, $cond246 = 0, $cond355 = 0, $cond427 = 0, $conv120 = 0, $conv134 = 0, $conv164 = 0, $conv172 = 0, $conv175 = 0, $conv208 = 0, $conv230 = 0, $conv233 = 0, $conv32 = 0, $conv48 = 0, $conv48215 = 0, $conv69 = 0;
 var $conv83 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $fl$0$lcssa = 0, $fl$0219 = 0, $fl$1 = 0, $fl$1$and220 = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa256 = 0;
 var $i$0229 = 0, $i$1238 = 0, $i$2210 = 0, $i$3207 = 0, $i137 = 0, $i86 = 0, $inc = 0, $inc489 = 0, $incdec$ptr = 0, $incdec$ptr159 = 0, $incdec$ptr171 = 0, $incdec$ptr23 = 0, $incdec$ptr384 = 0, $incdec$ptr411 = 0, $incdec$ptr62 = 0, $isdigit = 0, $isdigit188 = 0, $isdigit190 = 0, $isdigittmp = 0, $isdigittmp$ = 0;
 var $isdigittmp187 = 0, $isdigittmp189 = 0, $l$0 = 0, $l$1228 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $lnot = 0, $lnot$ext = 0, $lnot484 = 0, $mb = 0, $narrow = 0, $or = 0, $or$cond = 0, $or$cond192 = 0, $or$cond193 = 0, $or$cond195 = 0;
 var $or100 = 0, $or100$fl$0 = 0, $or247 = 0, $p$0 = 0, $p$0$p$0$add270 = 0, $p$1 = 0, $p$2 = 0, $p$2$add323 = 0, $p$2$add323$p$2 = 0, $p$3 = 0, $p$4253 = 0, $p$5 = 0, $pl$0 = 0, $pl$1 = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$1 = 0, $prefix$2 = 0, $retval$0 = 0, $s = 0;
 var $shl = 0, $shr = 0, $st$0 = 0, $storemerge = 0, $storemerge186218 = 0, $storemerge191 = 0, $sub = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast318 = 0, $sub$ptr$lhs$cast362 = 0, $sub$ptr$lhs$cast432 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast268 = 0, $sub$ptr$rhs$cast319 = 0, $sub$ptr$rhs$cast363 = 0, $sub$ptr$rhs$cast433 = 0, $sub$ptr$sub = 0, $sub$ptr$sub269 = 0, $sub$ptr$sub320 = 0, $sub$ptr$sub364 = 0;
 var $sub$ptr$sub434 = 0, $sub$ptr$sub434$p$5 = 0, $sub101 = 0, $sub101$w$0 = 0, $sub135 = 0, $sub165 = 0, $sub173 = 0, $sub176 = 0, $sub390 = 0, $sub49 = 0, $sub49216 = 0, $sub49220 = 0, $sub84 = 0, $t$0 = 0, $t$1 = 0, $tobool = 0, $tobool141 = 0, $tobool179 = 0, $tobool209 = 0, $tobool218 = 0;
 var $tobool25 = 0, $tobool256 = 0, $tobool265 = 0, $tobool28 = 0, $tobool291 = 0, $tobool296 = 0, $tobool315 = 0, $tobool350 = 0, $tobool358 = 0, $tobool381 = 0, $tobool408 = 0, $tobool460 = 0, $tobool463 = 0, $tobool471 = 0, $tobool55 = 0, $tobool90 = 0, $trunc = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0;
 var $wc = 0, $ws$0230 = 0, $ws$1239 = 0, $xor = 0, $xor450 = 0, $xor458 = 0, $z$0$lcssa = 0, $z$0212 = 0, $z$1 = 0, $z$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $s = sp + 16|0;
 $arg = sp;
 $buf = sp + 24|0;
 $wc = sp + 8|0;
 $mb = sp + 20|0;
 HEAP32[$s>>2] = $fmt;
 $tobool25 = ($f|0)!=(0|0);
 $add$ptr206 = ((($buf)) + 40|0);
 $sub$ptr$lhs$cast318 = $add$ptr206;
 $add$ptr341 = ((($buf)) + 39|0);
 $arrayidx371 = ((($wc)) + 4|0);
 $1 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $cmp = ($cnt$0|0)>(-1);
  do {
   if ($cmp) {
    $sub = (2147483647 - ($cnt$0))|0;
    $cmp1 = ($l$0|0)>($sub|0);
    if ($cmp1) {
     $call = (___errno_location()|0);
     HEAP32[$call>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $add = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $add;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $0 = HEAP8[$1>>0]|0;
  $tobool = ($0<<24>>24)==(0);
  if ($tobool) {
   label = 87;
   break;
  } else {
   $2 = $0;$3 = $1;
  }
  L9: while(1) {
   switch ($2<<24>>24) {
   case 37:  {
    $4 = $3;$z$0212 = $3;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $7 = $3;$z$0$lcssa = $3;
    break L9;
    break;
   }
   default: {
   }
   }
   $incdec$ptr = ((($3)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr;
   $$pre = HEAP8[$incdec$ptr>>0]|0;
   $2 = $$pre;$3 = $incdec$ptr;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $arrayidx16 = ((($4)) + 1|0);
     $5 = HEAP8[$arrayidx16>>0]|0;
     $cmp18 = ($5<<24>>24)==(37);
     if (!($cmp18)) {
      $7 = $4;$z$0$lcssa = $z$0212;
      break L12;
     }
     $incdec$ptr23 = ((($z$0212)) + 1|0);
     $add$ptr = ((($4)) + 2|0);
     HEAP32[$s>>2] = $add$ptr;
     $6 = HEAP8[$add$ptr>>0]|0;
     $cmp13 = ($6<<24>>24)==(37);
     if ($cmp13) {
      $4 = $add$ptr;$z$0212 = $incdec$ptr23;
      label = 9;
     } else {
      $7 = $add$ptr;$z$0$lcssa = $incdec$ptr23;
      break;
     }
    }
   }
  } while(0);
  $sub$ptr$lhs$cast = $z$0$lcssa;
  $sub$ptr$rhs$cast = $1;
  $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
  if ($tobool25) {
   _out($f,$1,$sub$ptr$sub);
  }
  $tobool28 = ($sub$ptr$sub|0)==(0);
  if (!($tobool28)) {
   $l10n$0$phi = $l10n$0;$1 = $7;$cnt$0 = $cnt$1;$l$0 = $sub$ptr$sub;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $arrayidx31 = ((($7)) + 1|0);
  $8 = HEAP8[$arrayidx31>>0]|0;
  $conv32 = $8 << 24 >> 24;
  $isdigittmp = (($conv32) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $arrayidx35 = ((($7)) + 2|0);
   $9 = HEAP8[$arrayidx35>>0]|0;
   $cmp37 = ($9<<24>>24)==(36);
   $add$ptr43 = ((($7)) + 3|0);
   $add$ptr43$arrayidx31 = $cmp37 ? $add$ptr43 : $arrayidx31;
   $$l10n$0 = $cmp37 ? 1 : $l10n$0;
   $isdigittmp$ = $cmp37 ? $isdigittmp : -1;
   $argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $add$ptr43$arrayidx31;
  } else {
   $argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $arrayidx31;
  }
  HEAP32[$s>>2] = $storemerge;
  $10 = HEAP8[$storemerge>>0]|0;
  $conv48215 = $10 << 24 >> 24;
  $sub49216 = (($conv48215) + -32)|0;
  $cmp50217 = ($sub49216>>>0)<(32);
  L24: do {
   if ($cmp50217) {
    $149 = $10;$fl$0219 = 0;$storemerge186218 = $storemerge;$sub49220 = $sub49216;
    while(1) {
     $shl = 1 << $sub49220;
     $and = $shl & 75913;
     $tobool55 = ($and|0)==(0);
     if ($tobool55) {
      $$lcssa199 = $149;$12 = $storemerge186218;$fl$0$lcssa = $fl$0219;
      break L24;
     }
     $or = $shl | $fl$0219;
     $incdec$ptr62 = ((($storemerge186218)) + 1|0);
     HEAP32[$s>>2] = $incdec$ptr62;
     $11 = HEAP8[$incdec$ptr62>>0]|0;
     $conv48 = $11 << 24 >> 24;
     $sub49 = (($conv48) + -32)|0;
     $cmp50 = ($sub49>>>0)<(32);
     if ($cmp50) {
      $149 = $11;$fl$0219 = $or;$storemerge186218 = $incdec$ptr62;$sub49220 = $sub49;
     } else {
      $$lcssa199 = $11;$12 = $incdec$ptr62;$fl$0$lcssa = $or;
      break;
     }
    }
   } else {
    $$lcssa199 = $10;$12 = $storemerge;$fl$0$lcssa = 0;
   }
  } while(0);
  $cmp65 = ($$lcssa199<<24>>24)==(42);
  if ($cmp65) {
   $arrayidx68 = ((($12)) + 1|0);
   $13 = HEAP8[$arrayidx68>>0]|0;
   $conv69 = $13 << 24 >> 24;
   $isdigittmp189 = (($conv69) + -48)|0;
   $isdigit190 = ($isdigittmp189>>>0)<(10);
   if ($isdigit190) {
    $arrayidx73 = ((($12)) + 2|0);
    $14 = HEAP8[$arrayidx73>>0]|0;
    $cmp75 = ($14<<24>>24)==(36);
    if ($cmp75) {
     $arrayidx81 = (($nl_type) + ($isdigittmp189<<2)|0);
     HEAP32[$arrayidx81>>2] = 10;
     $15 = HEAP8[$arrayidx68>>0]|0;
     $conv83 = $15 << 24 >> 24;
     $sub84 = (($conv83) + -48)|0;
     $i86 = (($nl_arg) + ($sub84<<3)|0);
     $16 = $i86;
     $17 = $16;
     $18 = HEAP32[$17>>2]|0;
     $19 = (($16) + 4)|0;
     $20 = $19;
     $21 = HEAP32[$20>>2]|0;
     $add$ptr88 = ((($12)) + 3|0);
     $l10n$2 = 1;$storemerge191 = $add$ptr88;$w$0 = $18;
    } else {
     label = 23;
    }
   } else {
    label = 23;
   }
   if ((label|0) == 23) {
    label = 0;
    $tobool90 = ($l10n$1|0)==(0);
    if (!($tobool90)) {
     $retval$0 = -1;
     break;
    }
    if ($tobool25) {
     $arglist_current = HEAP32[$ap>>2]|0;
     $22 = $arglist_current;
     $23 = ((0) + 4|0);
     $expanded4 = $23;
     $expanded = (($expanded4) - 1)|0;
     $24 = (($22) + ($expanded))|0;
     $25 = ((0) + 4|0);
     $expanded8 = $25;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $26 = $24 & $expanded6;
     $27 = $26;
     $28 = HEAP32[$27>>2]|0;
     $arglist_next = ((($27)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge191 = $arrayidx68;$w$0 = $28;
    } else {
     $l10n$2 = 0;$storemerge191 = $arrayidx68;$w$0 = 0;
    }
   }
   HEAP32[$s>>2] = $storemerge191;
   $cmp97 = ($w$0|0)<(0);
   $or100 = $fl$0$lcssa | 8192;
   $sub101 = (0 - ($w$0))|0;
   $or100$fl$0 = $cmp97 ? $or100 : $fl$0$lcssa;
   $sub101$w$0 = $cmp97 ? $sub101 : $w$0;
   $30 = $storemerge191;$fl$1 = $or100$fl$0;$l10n$3 = $l10n$2;$w$1 = $sub101$w$0;
  } else {
   $call104 = (_getint($s)|0);
   $cmp105 = ($call104|0)<(0);
   if ($cmp105) {
    $retval$0 = -1;
    break;
   }
   $$pre247 = HEAP32[$s>>2]|0;
   $30 = $$pre247;$fl$1 = $fl$0$lcssa;$l10n$3 = $l10n$1;$w$1 = $call104;
  }
  $29 = HEAP8[$30>>0]|0;
  $cmp111 = ($29<<24>>24)==(46);
  do {
   if ($cmp111) {
    $arrayidx114 = ((($30)) + 1|0);
    $31 = HEAP8[$arrayidx114>>0]|0;
    $cmp116 = ($31<<24>>24)==(42);
    if (!($cmp116)) {
     $incdec$ptr159 = ((($30)) + 1|0);
     HEAP32[$s>>2] = $incdec$ptr159;
     $call160 = (_getint($s)|0);
     $$pre248$pre = HEAP32[$s>>2]|0;
     $$pre248 = $$pre248$pre;$p$0 = $call160;
     break;
    }
    $arrayidx119 = ((($30)) + 2|0);
    $32 = HEAP8[$arrayidx119>>0]|0;
    $conv120 = $32 << 24 >> 24;
    $isdigittmp187 = (($conv120) + -48)|0;
    $isdigit188 = ($isdigittmp187>>>0)<(10);
    if ($isdigit188) {
     $arrayidx124 = ((($30)) + 3|0);
     $33 = HEAP8[$arrayidx124>>0]|0;
     $cmp126 = ($33<<24>>24)==(36);
     if ($cmp126) {
      $arrayidx132 = (($nl_type) + ($isdigittmp187<<2)|0);
      HEAP32[$arrayidx132>>2] = 10;
      $34 = HEAP8[$arrayidx119>>0]|0;
      $conv134 = $34 << 24 >> 24;
      $sub135 = (($conv134) + -48)|0;
      $i137 = (($nl_arg) + ($sub135<<3)|0);
      $35 = $i137;
      $36 = $35;
      $37 = HEAP32[$36>>2]|0;
      $38 = (($35) + 4)|0;
      $39 = $38;
      $40 = HEAP32[$39>>2]|0;
      $add$ptr139 = ((($30)) + 4|0);
      HEAP32[$s>>2] = $add$ptr139;
      $$pre248 = $add$ptr139;$p$0 = $37;
      break;
     }
    }
    $tobool141 = ($l10n$3|0)==(0);
    if (!($tobool141)) {
     $retval$0 = -1;
     break L1;
    }
    if ($tobool25) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $41 = $arglist_current2;
     $42 = ((0) + 4|0);
     $expanded11 = $42;
     $expanded10 = (($expanded11) - 1)|0;
     $43 = (($41) + ($expanded10))|0;
     $44 = ((0) + 4|0);
     $expanded15 = $44;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $45 = $43 & $expanded13;
     $46 = $45;
     $47 = HEAP32[$46>>2]|0;
     $arglist_next3 = ((($46)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $cond149 = $47;
    } else {
     $cond149 = 0;
    }
    HEAP32[$s>>2] = $arrayidx119;
    $$pre248 = $arrayidx119;$p$0 = $cond149;
   } else {
    $$pre248 = $30;$p$0 = -1;
   }
  } while(0);
  $49 = $$pre248;$st$0 = 0;
  while(1) {
   $48 = HEAP8[$49>>0]|0;
   $conv164 = $48 << 24 >> 24;
   $sub165 = (($conv164) + -65)|0;
   $cmp166 = ($sub165>>>0)>(57);
   if ($cmp166) {
    $retval$0 = -1;
    break L1;
   }
   $incdec$ptr171 = ((($49)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr171;
   $50 = HEAP8[$49>>0]|0;
   $conv172 = $50 << 24 >> 24;
   $sub173 = (($conv172) + -65)|0;
   $arrayidx174 = ((2662 + (($st$0*58)|0)|0) + ($sub173)|0);
   $51 = HEAP8[$arrayidx174>>0]|0;
   $conv175 = $51&255;
   $sub176 = (($conv175) + -1)|0;
   $cmp177 = ($sub176>>>0)<(8);
   if ($cmp177) {
    $49 = $incdec$ptr171;$st$0 = $conv175;
   } else {
    break;
   }
  }
  $tobool179 = ($51<<24>>24)==(0);
  if ($tobool179) {
   $retval$0 = -1;
   break;
  }
  $cmp182 = ($51<<24>>24)==(19);
  $cmp185 = ($argpos$0|0)>(-1);
  do {
   if ($cmp182) {
    if ($cmp185) {
     $retval$0 = -1;
     break L1;
    } else {
     label = 49;
    }
   } else {
    if ($cmp185) {
     $arrayidx193 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$arrayidx193>>2] = $conv175;
     $52 = (($nl_arg) + ($argpos$0<<3)|0);
     $53 = $52;
     $54 = $53;
     $55 = HEAP32[$54>>2]|0;
     $56 = (($53) + 4)|0;
     $57 = $56;
     $58 = HEAP32[$57>>2]|0;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $55;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     label = 49;
     break;
    }
    if (!($tobool25)) {
     $retval$0 = 0;
     break L1;
    }
    _pop_arg($arg,$conv175,$ap);
   }
  } while(0);
  if ((label|0) == 49) {
   label = 0;
   if (!($tobool25)) {
    $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $63 = HEAP8[$49>>0]|0;
  $conv208 = $63 << 24 >> 24;
  $tobool209 = ($st$0|0)!=(0);
  $and211 = $conv208 & 15;
  $cmp212 = ($and211|0)==(3);
  $or$cond192 = $tobool209 & $cmp212;
  $and215 = $conv208 & -33;
  $t$0 = $or$cond192 ? $and215 : $conv208;
  $and217 = $fl$1 & 8192;
  $tobool218 = ($and217|0)==(0);
  $and220 = $fl$1 & -65537;
  $fl$1$and220 = $tobool218 ? $fl$1 : $and220;
  L71: do {
   switch ($t$0|0) {
   case 110:  {
    $trunc = $st$0&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $70 = HEAP32[$arg>>2]|0;
     HEAP32[$70>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $71 = HEAP32[$arg>>2]|0;
     HEAP32[$71>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $72 = ($cnt$1|0)<(0);
     $73 = $72 << 31 >> 31;
     $74 = HEAP32[$arg>>2]|0;
     $75 = $74;
     $76 = $75;
     HEAP32[$76>>2] = $cnt$1;
     $77 = (($75) + 4)|0;
     $78 = $77;
     HEAP32[$78>>2] = $73;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $conv230 = $cnt$1&65535;
     $79 = HEAP32[$arg>>2]|0;
     HEAP16[$79>>1] = $conv230;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $conv233 = $cnt$1&255;
     $80 = HEAP32[$arg>>2]|0;
     HEAP8[$80>>0] = $conv233;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $81 = HEAP32[$arg>>2]|0;
     HEAP32[$81>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $82 = ($cnt$1|0)<(0);
     $83 = $82 << 31 >> 31;
     $84 = HEAP32[$arg>>2]|0;
     $85 = $84;
     $86 = $85;
     HEAP32[$86>>2] = $cnt$1;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $83;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $cmp241 = ($p$0>>>0)>(8);
    $cond246 = $cmp241 ? $p$0 : 8;
    $or247 = $fl$1$and220 | 8;
    $fl$3 = $or247;$p$1 = $cond246;$t$1 = 120;
    label = 61;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$and220;$p$1 = $p$0;$t$1 = $t$0;
    label = 61;
    break;
   }
   case 111:  {
    $99 = $arg;
    $100 = $99;
    $101 = HEAP32[$100>>2]|0;
    $102 = (($99) + 4)|0;
    $103 = $102;
    $104 = HEAP32[$103>>2]|0;
    $105 = (_fmt_o($101,$104,$add$ptr206)|0);
    $and264 = $fl$1$and220 & 8;
    $tobool265 = ($and264|0)==(0);
    $sub$ptr$rhs$cast268 = $105;
    $sub$ptr$sub269 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast268))|0;
    $cmp271 = ($p$0|0)>($sub$ptr$sub269|0);
    $add270 = (($sub$ptr$sub269) + 1)|0;
    $106 = $tobool265 | $cmp271;
    $p$0$p$0$add270 = $106 ? $p$0 : $add270;
    $125 = $101;$127 = $104;$a$0 = $105;$fl$4 = $fl$1$and220;$p$2 = $p$0$p$0$add270;$pl$1 = 0;$prefix$1 = 3126;
    label = 67;
    break;
   }
   case 105: case 100:  {
    $107 = $arg;
    $108 = $107;
    $109 = HEAP32[$108>>2]|0;
    $110 = (($107) + 4)|0;
    $111 = $110;
    $112 = HEAP32[$111>>2]|0;
    $113 = ($112|0)<(0);
    if ($113) {
     $114 = (_i64Subtract(0,0,($109|0),($112|0))|0);
     $115 = tempRet0;
     $116 = $arg;
     $117 = $116;
     HEAP32[$117>>2] = $114;
     $118 = (($116) + 4)|0;
     $119 = $118;
     HEAP32[$119>>2] = $115;
     $121 = $114;$122 = $115;$pl$0 = 1;$prefix$0 = 3126;
     label = 66;
     break L71;
    } else {
     $and290 = $fl$1$and220 & 2048;
     $tobool291 = ($and290|0)==(0);
     $and295 = $fl$1$and220 & 1;
     $tobool296 = ($and295|0)==(0);
     $$ = $tobool296 ? 3126 : (3128);
     $$$ = $tobool291 ? $$ : (3127);
     $120 = $fl$1$and220 & 2049;
     $narrow = ($120|0)!=(0);
     $$194$ = $narrow&1;
     $121 = $109;$122 = $112;$pl$0 = $$194$;$prefix$0 = $$$;
     label = 66;
     break L71;
    }
    break;
   }
   case 117:  {
    $64 = $arg;
    $65 = $64;
    $66 = HEAP32[$65>>2]|0;
    $67 = (($64) + 4)|0;
    $68 = $67;
    $69 = HEAP32[$68>>2]|0;
    $121 = $66;$122 = $69;$pl$0 = 0;$prefix$0 = 3126;
    label = 66;
    break;
   }
   case 99:  {
    $129 = $arg;
    $130 = $129;
    $131 = HEAP32[$130>>2]|0;
    $132 = (($129) + 4)|0;
    $133 = $132;
    $134 = HEAP32[$133>>2]|0;
    $135 = $131&255;
    HEAP8[$add$ptr341>>0] = $135;
    $a$2 = $add$ptr341;$fl$6 = $and220;$p$5 = 1;$pl$2 = 0;$prefix$2 = 3126;$z$2 = $add$ptr206;
    break;
   }
   case 109:  {
    $call345 = (___errno_location()|0);
    $136 = HEAP32[$call345>>2]|0;
    $call346 = (_strerror($136)|0);
    $a$1 = $call346;
    label = 71;
    break;
   }
   case 115:  {
    $137 = HEAP32[$arg>>2]|0;
    $tobool350 = ($137|0)!=(0|0);
    $cond355 = $tobool350 ? $137 : 3136;
    $a$1 = $cond355;
    label = 71;
    break;
   }
   case 67:  {
    $138 = $arg;
    $139 = $138;
    $140 = HEAP32[$139>>2]|0;
    $141 = (($138) + 4)|0;
    $142 = $141;
    $143 = HEAP32[$142>>2]|0;
    HEAP32[$wc>>2] = $140;
    HEAP32[$arrayidx371>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $150 = $wc;$p$4253 = -1;
    label = 75;
    break;
   }
   case 83:  {
    $$pre249 = HEAP32[$arg>>2]|0;
    $cmp378227 = ($p$0|0)==(0);
    if ($cmp378227) {
     _pad_684($f,32,$w$1,0,$fl$1$and220);
     $i$0$lcssa256 = 0;
     label = 84;
    } else {
     $150 = $$pre249;$p$4253 = $p$0;
     label = 75;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $146 = +HEAPF64[$arg>>3];
    $call430 = (_fmt_fp($f,$146,$w$1,$p$0,$fl$1$and220,$t$0)|0);
    $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $call430;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   default: {
    $a$2 = $1;$fl$6 = $fl$1$and220;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 3126;$z$2 = $add$ptr206;
   }
   }
  } while(0);
  L95: do {
   if ((label|0) == 61) {
    label = 0;
    $89 = $arg;
    $90 = $89;
    $91 = HEAP32[$90>>2]|0;
    $92 = (($89) + 4)|0;
    $93 = $92;
    $94 = HEAP32[$93>>2]|0;
    $and250 = $t$1 & 32;
    $95 = (_fmt_x($91,$94,$add$ptr206,$and250)|0);
    $96 = ($91|0)==(0);
    $97 = ($94|0)==(0);
    $98 = $96 & $97;
    $and255 = $fl$3 & 8;
    $tobool256 = ($and255|0)==(0);
    $or$cond193 = $tobool256 | $98;
    $shr = $t$1 >> 4;
    $add$ptr258 = (3126 + ($shr)|0);
    $$add$ptr258 = $or$cond193 ? 3126 : $add$ptr258;
    $$197 = $or$cond193 ? 0 : 2;
    $125 = $91;$127 = $94;$a$0 = $95;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = $$197;$prefix$1 = $$add$ptr258;
    label = 67;
   }
   else if ((label|0) == 66) {
    label = 0;
    $123 = (_fmt_u($121,$122,$add$ptr206)|0);
    $125 = $121;$127 = $122;$a$0 = $123;$fl$4 = $fl$1$and220;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 67;
   }
   else if ((label|0) == 71) {
    label = 0;
    $call357 = (_memchr($a$1,0,$p$0)|0);
    $tobool358 = ($call357|0)==(0|0);
    $sub$ptr$lhs$cast362 = $call357;
    $sub$ptr$rhs$cast363 = $a$1;
    $sub$ptr$sub364 = (($sub$ptr$lhs$cast362) - ($sub$ptr$rhs$cast363))|0;
    $add$ptr360 = (($a$1) + ($p$0)|0);
    $p$3 = $tobool358 ? $p$0 : $sub$ptr$sub364;
    $z$1 = $tobool358 ? $add$ptr360 : $call357;
    $a$2 = $a$1;$fl$6 = $and220;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 3126;$z$2 = $z$1;
   }
   else if ((label|0) == 75) {
    label = 0;
    $i$0229 = 0;$l$1228 = 0;$ws$0230 = $150;
    while(1) {
     $144 = HEAP32[$ws$0230>>2]|0;
     $tobool381 = ($144|0)==(0);
     if ($tobool381) {
      $i$0$lcssa = $i$0229;$l$2 = $l$1228;
      break;
     }
     $call385 = (_wctomb($mb,$144)|0);
     $cmp386 = ($call385|0)<(0);
     $sub390 = (($p$4253) - ($i$0229))|0;
     $cmp391 = ($call385>>>0)>($sub390>>>0);
     $or$cond195 = $cmp386 | $cmp391;
     if ($or$cond195) {
      $i$0$lcssa = $i$0229;$l$2 = $call385;
      break;
     }
     $incdec$ptr384 = ((($ws$0230)) + 4|0);
     $add396 = (($call385) + ($i$0229))|0;
     $cmp378 = ($p$4253>>>0)>($add396>>>0);
     if ($cmp378) {
      $i$0229 = $add396;$l$1228 = $call385;$ws$0230 = $incdec$ptr384;
     } else {
      $i$0$lcssa = $add396;$l$2 = $call385;
      break;
     }
    }
    $cmp398 = ($l$2|0)<(0);
    if ($cmp398) {
     $retval$0 = -1;
     break L1;
    }
    _pad_684($f,32,$w$1,$i$0$lcssa,$fl$1$and220);
    $cmp405237 = ($i$0$lcssa|0)==(0);
    if ($cmp405237) {
     $i$0$lcssa256 = 0;
     label = 84;
    } else {
     $i$1238 = 0;$ws$1239 = $150;
     while(1) {
      $145 = HEAP32[$ws$1239>>2]|0;
      $tobool408 = ($145|0)==(0);
      if ($tobool408) {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break L95;
      }
      $call412 = (_wctomb($mb,$145)|0);
      $add413 = (($call412) + ($i$1238))|0;
      $cmp414 = ($add413|0)>($i$0$lcssa|0);
      if ($cmp414) {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break L95;
      }
      $incdec$ptr411 = ((($ws$1239)) + 4|0);
      _out($f,$mb,$call412);
      $cmp405 = ($add413>>>0)<($i$0$lcssa>>>0);
      if ($cmp405) {
       $i$1238 = $add413;$ws$1239 = $incdec$ptr411;
      } else {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 67) {
   label = 0;
   $cmp307 = ($p$2|0)>(-1);
   $and310 = $fl$4 & -65537;
   $and310$fl$4 = $cmp307 ? $and310 : $fl$4;
   $124 = ($125|0)!=(0);
   $126 = ($127|0)!=(0);
   $128 = $124 | $126;
   $tobool315 = ($p$2|0)!=(0);
   $or$cond = $tobool315 | $128;
   $sub$ptr$rhs$cast319 = $a$0;
   $sub$ptr$sub320 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast319))|0;
   $lnot = $128 ^ 1;
   $lnot$ext = $lnot&1;
   $add323 = (($lnot$ext) + ($sub$ptr$sub320))|0;
   $cmp324 = ($p$2|0)>($add323|0);
   $p$2$add323 = $cmp324 ? $p$2 : $add323;
   $p$2$add323$p$2 = $or$cond ? $p$2$add323 : $p$2;
   $a$0$add$ptr206 = $or$cond ? $a$0 : $add$ptr206;
   $a$2 = $a$0$add$ptr206;$fl$6 = $and310$fl$4;$p$5 = $p$2$add323$p$2;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $add$ptr206;
  }
  else if ((label|0) == 84) {
   label = 0;
   $xor = $fl$1$and220 ^ 8192;
   _pad_684($f,32,$w$1,$i$0$lcssa256,$xor);
   $cmp422 = ($w$1|0)>($i$0$lcssa256|0);
   $cond427 = $cmp422 ? $w$1 : $i$0$lcssa256;
   $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $cond427;$l10n$0 = $l10n$3;
   continue;
  }
  $sub$ptr$lhs$cast432 = $z$2;
  $sub$ptr$rhs$cast433 = $a$2;
  $sub$ptr$sub434 = (($sub$ptr$lhs$cast432) - ($sub$ptr$rhs$cast433))|0;
  $cmp435 = ($p$5|0)<($sub$ptr$sub434|0);
  $sub$ptr$sub434$p$5 = $cmp435 ? $sub$ptr$sub434 : $p$5;
  $add442 = (($sub$ptr$sub434$p$5) + ($pl$2))|0;
  $cmp443 = ($w$1|0)<($add442|0);
  $w$2 = $cmp443 ? $add442 : $w$1;
  _pad_684($f,32,$w$2,$add442,$fl$6);
  _out($f,$prefix$2,$pl$2);
  $xor450 = $fl$6 ^ 65536;
  _pad_684($f,48,$w$2,$add442,$xor450);
  _pad_684($f,48,$sub$ptr$sub434$p$5,$sub$ptr$sub434,0);
  _out($f,$a$2,$sub$ptr$sub434);
  $xor458 = $fl$6 ^ 8192;
  _pad_684($f,32,$w$2,$add442,$xor458);
  $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 L114: do {
  if ((label|0) == 87) {
   $tobool460 = ($f|0)==(0|0);
   if ($tobool460) {
    $tobool463 = ($l10n$0|0)==(0);
    if ($tobool463) {
     $retval$0 = 0;
    } else {
     $i$2210 = 1;
     while(1) {
      $arrayidx470 = (($nl_type) + ($i$2210<<2)|0);
      $147 = HEAP32[$arrayidx470>>2]|0;
      $tobool471 = ($147|0)==(0);
      if ($tobool471) {
       $i$3207 = $i$2210;
       break;
      }
      $add$ptr474 = (($nl_arg) + ($i$2210<<3)|0);
      _pop_arg($add$ptr474,$147,$ap);
      $inc = (($i$2210) + 1)|0;
      $cmp467 = ($inc|0)<(10);
      if ($cmp467) {
       $i$2210 = $inc;
      } else {
       $retval$0 = 1;
       break L114;
      }
     }
     while(1) {
      $arrayidx482 = (($nl_type) + ($i$3207<<2)|0);
      $148 = HEAP32[$arrayidx482>>2]|0;
      $lnot484 = ($148|0)==(0);
      $inc489 = (($i$3207) + 1)|0;
      if (!($lnot484)) {
       $retval$0 = -1;
       break L114;
      }
      $cmp479 = ($inc489|0)<(10);
      if ($cmp479) {
       $i$3207 = $inc489;
      } else {
       $retval$0 = 1;
       break;
      }
     }
    }
   } else {
    $retval$0 = $cnt$1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $and = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$f>>2]|0;
 $and = $0 & 32;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  (___fwritex($s,$l,$f)|0);
 }
 return;
}
function _getint($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add = 0, $conv = 0, $conv4 = 0, $i$0$lcssa = 0, $i$07 = 0, $incdec$ptr = 0, $isdigit = 0, $isdigit6 = 0, $isdigittmp = 0, $isdigittmp5 = 0, $isdigittmp8 = 0, $mul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$s>>2]|0;
 $1 = HEAP8[$0>>0]|0;
 $conv4 = $1 << 24 >> 24;
 $isdigittmp5 = (($conv4) + -48)|0;
 $isdigit6 = ($isdigittmp5>>>0)<(10);
 if ($isdigit6) {
  $2 = $0;$i$07 = 0;$isdigittmp8 = $isdigittmp5;
  while(1) {
   $mul = ($i$07*10)|0;
   $add = (($isdigittmp8) + ($mul))|0;
   $incdec$ptr = ((($2)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr;
   $3 = HEAP8[$incdec$ptr>>0]|0;
   $conv = $3 << 24 >> 24;
   $isdigittmp = (($conv) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $2 = $incdec$ptr;$i$07 = $add;$isdigittmp8 = $isdigittmp;
   } else {
    $i$0$lcssa = $add;
    break;
   }
  }
 } else {
  $i$0$lcssa = 0;
 }
 return ($i$0$lcssa|0);
}
function _pop_arg($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $cmp = 0, $conv16 = 0, $conv22$mask = 0, $conv28 = 0, $conv34$mask = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($type>>>0)>(20);
 L1: do {
  if (!($cmp)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $0 = $arglist_current;
     $1 = ((0) + 4|0);
     $expanded28 = $1;
     $expanded = (($expanded28) - 1)|0;
     $2 = (($0) + ($expanded))|0;
     $3 = ((0) + 4|0);
     $expanded32 = $3;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $4 = $2 & $expanded30;
     $5 = $4;
     $6 = HEAP32[$5>>2]|0;
     $arglist_next = ((($5)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $6;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $7 = $arglist_current2;
     $8 = ((0) + 4|0);
     $expanded35 = $8;
     $expanded34 = (($expanded35) - 1)|0;
     $9 = (($7) + ($expanded34))|0;
     $10 = ((0) + 4|0);
     $expanded39 = $10;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $11 = $9 & $expanded37;
     $12 = $11;
     $13 = HEAP32[$12>>2]|0;
     $arglist_next3 = ((($12)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $14 = ($13|0)<(0);
     $15 = $14 << 31 >> 31;
     $16 = $arg;
     $17 = $16;
     HEAP32[$17>>2] = $13;
     $18 = (($16) + 4)|0;
     $19 = $18;
     HEAP32[$19>>2] = $15;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $20 = $arglist_current5;
     $21 = ((0) + 4|0);
     $expanded42 = $21;
     $expanded41 = (($expanded42) - 1)|0;
     $22 = (($20) + ($expanded41))|0;
     $23 = ((0) + 4|0);
     $expanded46 = $23;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $24 = $22 & $expanded44;
     $25 = $24;
     $26 = HEAP32[$25>>2]|0;
     $arglist_next6 = ((($25)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $27 = $arg;
     $28 = $27;
     HEAP32[$28>>2] = $26;
     $29 = (($27) + 4)|0;
     $30 = $29;
     HEAP32[$30>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $31 = $arglist_current8;
     $32 = ((0) + 8|0);
     $expanded49 = $32;
     $expanded48 = (($expanded49) - 1)|0;
     $33 = (($31) + ($expanded48))|0;
     $34 = ((0) + 8|0);
     $expanded53 = $34;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $35 = $33 & $expanded51;
     $36 = $35;
     $37 = $36;
     $38 = $37;
     $39 = HEAP32[$38>>2]|0;
     $40 = (($37) + 4)|0;
     $41 = $40;
     $42 = HEAP32[$41>>2]|0;
     $arglist_next9 = ((($36)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $43 = $arg;
     $44 = $43;
     HEAP32[$44>>2] = $39;
     $45 = (($43) + 4)|0;
     $46 = $45;
     HEAP32[$46>>2] = $42;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $47 = $arglist_current11;
     $48 = ((0) + 4|0);
     $expanded56 = $48;
     $expanded55 = (($expanded56) - 1)|0;
     $49 = (($47) + ($expanded55))|0;
     $50 = ((0) + 4|0);
     $expanded60 = $50;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $51 = $49 & $expanded58;
     $52 = $51;
     $53 = HEAP32[$52>>2]|0;
     $arglist_next12 = ((($52)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $conv16 = $53&65535;
     $54 = $conv16 << 16 >> 16;
     $55 = ($54|0)<(0);
     $56 = $55 << 31 >> 31;
     $57 = $arg;
     $58 = $57;
     HEAP32[$58>>2] = $54;
     $59 = (($57) + 4)|0;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $61 = $arglist_current14;
     $62 = ((0) + 4|0);
     $expanded63 = $62;
     $expanded62 = (($expanded63) - 1)|0;
     $63 = (($61) + ($expanded62))|0;
     $64 = ((0) + 4|0);
     $expanded67 = $64;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $65 = $63 & $expanded65;
     $66 = $65;
     $67 = HEAP32[$66>>2]|0;
     $arglist_next15 = ((($66)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $conv22$mask = $67 & 65535;
     $68 = $arg;
     $69 = $68;
     HEAP32[$69>>2] = $conv22$mask;
     $70 = (($68) + 4)|0;
     $71 = $70;
     HEAP32[$71>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $72 = $arglist_current17;
     $73 = ((0) + 4|0);
     $expanded70 = $73;
     $expanded69 = (($expanded70) - 1)|0;
     $74 = (($72) + ($expanded69))|0;
     $75 = ((0) + 4|0);
     $expanded74 = $75;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $76 = $74 & $expanded72;
     $77 = $76;
     $78 = HEAP32[$77>>2]|0;
     $arglist_next18 = ((($77)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $conv28 = $78&255;
     $79 = $conv28 << 24 >> 24;
     $80 = ($79|0)<(0);
     $81 = $80 << 31 >> 31;
     $82 = $arg;
     $83 = $82;
     HEAP32[$83>>2] = $79;
     $84 = (($82) + 4)|0;
     $85 = $84;
     HEAP32[$85>>2] = $81;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $86 = $arglist_current20;
     $87 = ((0) + 4|0);
     $expanded77 = $87;
     $expanded76 = (($expanded77) - 1)|0;
     $88 = (($86) + ($expanded76))|0;
     $89 = ((0) + 4|0);
     $expanded81 = $89;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $90 = $88 & $expanded79;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next21 = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $conv34$mask = $92 & 255;
     $93 = $arg;
     $94 = $93;
     HEAP32[$94>>2] = $conv34$mask;
     $95 = (($93) + 4)|0;
     $96 = $95;
     HEAP32[$96>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $97 = $arglist_current23;
     $98 = ((0) + 8|0);
     $expanded84 = $98;
     $expanded83 = (($expanded84) - 1)|0;
     $99 = (($97) + ($expanded83))|0;
     $100 = ((0) + 8|0);
     $expanded88 = $100;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $101 = $99 & $expanded86;
     $102 = $101;
     $103 = +HEAPF64[$102>>3];
     $arglist_next24 = ((($102)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $103;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $104 = $arglist_current26;
     $105 = ((0) + 8|0);
     $expanded91 = $105;
     $expanded90 = (($expanded91) - 1)|0;
     $106 = (($104) + ($expanded90))|0;
     $107 = ((0) + 8|0);
     $expanded95 = $107;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $108 = $106 & $expanded93;
     $109 = $108;
     $110 = +HEAPF64[$109>>3];
     $arglist_next27 = ((($109)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $110;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$s,$lower) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 $lower = $lower|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arrayidx = 0, $conv1 = 0, $conv4 = 0, $idxprom = 0, $incdec$ptr = 0, $or = 0, $s$addr$0$lcssa = 0, $s$addr$06 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 $3 = ($1|0)==(0);
 $4 = $2 & $3;
 if ($4) {
  $s$addr$0$lcssa = $s;
 } else {
  $5 = $0;$7 = $1;$s$addr$06 = $s;
  while(1) {
   $idxprom = $5 & 15;
   $arrayidx = (3178 + ($idxprom)|0);
   $6 = HEAP8[$arrayidx>>0]|0;
   $conv4 = $6&255;
   $or = $conv4 | $lower;
   $conv1 = $or&255;
   $incdec$ptr = ((($s$addr$06)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv1;
   $8 = (_bitshift64Lshr(($5|0),($7|0),4)|0);
   $9 = tempRet0;
   $10 = ($8|0)==(0);
   $11 = ($9|0)==(0);
   $12 = $10 & $11;
   if ($12) {
    $s$addr$0$lcssa = $incdec$ptr;
    break;
   } else {
    $5 = $8;$7 = $9;$s$addr$06 = $incdec$ptr;
   }
  }
 }
 return ($s$addr$0$lcssa|0);
}
function _fmt_o($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $conv = 0, $incdec$ptr = 0, $s$addr$0$lcssa = 0, $s$addr$06 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 $3 = ($1|0)==(0);
 $4 = $2 & $3;
 if ($4) {
  $s$addr$0$lcssa = $s;
 } else {
  $6 = $0;$8 = $1;$s$addr$06 = $s;
  while(1) {
   $5 = $6&255;
   $7 = $5 & 7;
   $conv = $7 | 48;
   $incdec$ptr = ((($s$addr$06)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv;
   $9 = (_bitshift64Lshr(($6|0),($8|0),3)|0);
   $10 = tempRet0;
   $11 = ($9|0)==(0);
   $12 = ($10|0)==(0);
   $13 = $11 & $12;
   if ($13) {
    $s$addr$0$lcssa = $incdec$ptr;
    break;
   } else {
    $6 = $9;$8 = $10;$s$addr$06 = $incdec$ptr;
   }
  }
 }
 return ($s$addr$0$lcssa|0);
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add5 = 0, $conv = 0;
 var $conv6 = 0, $div9 = 0, $incdec$ptr = 0, $incdec$ptr7 = 0, $rem4 = 0, $s$addr$0$lcssa = 0, $s$addr$013 = 0, $s$addr$1$lcssa = 0, $s$addr$19 = 0, $tobool8 = 0, $x$addr$0$lcssa$off0 = 0, $y$010 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $7 = $0;$8 = $1;$s$addr$013 = $s;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9&255;
   $conv = $11 | 48;
   $incdec$ptr = ((($s$addr$013)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv;
   $12 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $13 = tempRet0;
   $14 = ($8>>>0)>(9);
   $15 = ($7>>>0)>(4294967295);
   $16 = ($8|0)==(9);
   $17 = $16 & $15;
   $18 = $14 | $17;
   if ($18) {
    $7 = $12;$8 = $13;$s$addr$013 = $incdec$ptr;
   } else {
    break;
   }
  }
  $s$addr$0$lcssa = $incdec$ptr;$x$addr$0$lcssa$off0 = $12;
 } else {
  $s$addr$0$lcssa = $s;$x$addr$0$lcssa$off0 = $0;
 }
 $tobool8 = ($x$addr$0$lcssa$off0|0)==(0);
 if ($tobool8) {
  $s$addr$1$lcssa = $s$addr$0$lcssa;
 } else {
  $s$addr$19 = $s$addr$0$lcssa;$y$010 = $x$addr$0$lcssa$off0;
  while(1) {
   $rem4 = (($y$010>>>0) % 10)&-1;
   $add5 = $rem4 | 48;
   $conv6 = $add5&255;
   $incdec$ptr7 = ((($s$addr$19)) + -1|0);
   HEAP8[$incdec$ptr7>>0] = $conv6;
   $div9 = (($y$010>>>0) / 10)&-1;
   $19 = ($y$010>>>0)<(10);
   if ($19) {
    $s$addr$1$lcssa = $incdec$ptr7;
    break;
   } else {
    $s$addr$19 = $incdec$ptr7;$y$010 = $div9;
   }
  }
 }
 return ($s$addr$1$lcssa|0);
}
function _strerror($e) {
 $e = $e|0;
 var $0 = 0, $call = 0, $call1 = 0, $locale = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___pthread_self_104()|0);
 $locale = ((($call)) + 188|0);
 $0 = HEAP32[$locale>>2]|0;
 $call1 = (___strerror_l($e,$0)|0);
 return ($call1|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $and = 0, $and15 = 0, $and16 = 0, $and39 = 0, $cmp = 0, $cmp11 = 0, $cmp1132 = 0, $cmp28 = 0, $cmp8 = 0, $cond = 0, $conv1 = 0, $dec = 0;
 var $dec34 = 0, $incdec$ptr = 0, $incdec$ptr21 = 0, $incdec$ptr33 = 0, $lnot = 0, $mul = 0, $n$addr$0$lcssa = 0, $n$addr$0$lcssa52 = 0, $n$addr$043 = 0, $n$addr$1$lcssa = 0, $n$addr$133 = 0, $n$addr$227 = 0, $n$addr$3 = 0, $neg = 0, $or$cond = 0, $or$cond42 = 0, $s$0$lcssa = 0, $s$0$lcssa53 = 0, $s$044 = 0, $s$128 = 0;
 var $s$2 = 0, $sub = 0, $sub22 = 0, $tobool = 0, $tobool2 = 0, $tobool2$lcssa = 0, $tobool241 = 0, $tobool25 = 0, $tobool2526 = 0, $tobool36 = 0, $tobool40 = 0, $w$0$lcssa = 0, $w$034 = 0, $xor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $conv1 = $c & 255;
 $0 = $src;
 $and39 = $0 & 3;
 $tobool40 = ($and39|0)!=(0);
 $tobool241 = ($n|0)!=(0);
 $or$cond42 = $tobool241 & $tobool40;
 L1: do {
  if ($or$cond42) {
   $1 = $c&255;
   $n$addr$043 = $n;$s$044 = $src;
   while(1) {
    $2 = HEAP8[$s$044>>0]|0;
    $cmp = ($2<<24>>24)==($1<<24>>24);
    if ($cmp) {
     $n$addr$0$lcssa52 = $n$addr$043;$s$0$lcssa53 = $s$044;
     label = 6;
     break L1;
    }
    $incdec$ptr = ((($s$044)) + 1|0);
    $dec = (($n$addr$043) + -1)|0;
    $3 = $incdec$ptr;
    $and = $3 & 3;
    $tobool = ($and|0)!=(0);
    $tobool2 = ($dec|0)!=(0);
    $or$cond = $tobool2 & $tobool;
    if ($or$cond) {
     $n$addr$043 = $dec;$s$044 = $incdec$ptr;
    } else {
     $n$addr$0$lcssa = $dec;$s$0$lcssa = $incdec$ptr;$tobool2$lcssa = $tobool2;
     label = 5;
     break;
    }
   }
  } else {
   $n$addr$0$lcssa = $n;$s$0$lcssa = $src;$tobool2$lcssa = $tobool241;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($tobool2$lcssa) {
   $n$addr$0$lcssa52 = $n$addr$0$lcssa;$s$0$lcssa53 = $s$0$lcssa;
   label = 6;
  } else {
   $n$addr$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $4 = HEAP8[$s$0$lcssa53>>0]|0;
   $5 = $c&255;
   $cmp8 = ($4<<24>>24)==($5<<24>>24);
   if ($cmp8) {
    $n$addr$3 = $n$addr$0$lcssa52;$s$2 = $s$0$lcssa53;
   } else {
    $mul = Math_imul($conv1, 16843009)|0;
    $cmp1132 = ($n$addr$0$lcssa52>>>0)>(3);
    L11: do {
     if ($cmp1132) {
      $n$addr$133 = $n$addr$0$lcssa52;$w$034 = $s$0$lcssa53;
      while(1) {
       $6 = HEAP32[$w$034>>2]|0;
       $xor = $6 ^ $mul;
       $sub = (($xor) + -16843009)|0;
       $neg = $xor & -2139062144;
       $and15 = $neg ^ -2139062144;
       $and16 = $and15 & $sub;
       $lnot = ($and16|0)==(0);
       if (!($lnot)) {
        break;
       }
       $incdec$ptr21 = ((($w$034)) + 4|0);
       $sub22 = (($n$addr$133) + -4)|0;
       $cmp11 = ($sub22>>>0)>(3);
       if ($cmp11) {
        $n$addr$133 = $sub22;$w$034 = $incdec$ptr21;
       } else {
        $n$addr$1$lcssa = $sub22;$w$0$lcssa = $incdec$ptr21;
        label = 11;
        break L11;
       }
      }
      $n$addr$227 = $n$addr$133;$s$128 = $w$034;
     } else {
      $n$addr$1$lcssa = $n$addr$0$lcssa52;$w$0$lcssa = $s$0$lcssa53;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $tobool2526 = ($n$addr$1$lcssa|0)==(0);
     if ($tobool2526) {
      $n$addr$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $n$addr$227 = $n$addr$1$lcssa;$s$128 = $w$0$lcssa;
     }
    }
    while(1) {
     $7 = HEAP8[$s$128>>0]|0;
     $cmp28 = ($7<<24>>24)==($5<<24>>24);
     if ($cmp28) {
      $n$addr$3 = $n$addr$227;$s$2 = $s$128;
      break L8;
     }
     $incdec$ptr33 = ((($s$128)) + 1|0);
     $dec34 = (($n$addr$227) + -1)|0;
     $tobool25 = ($dec34|0)==(0);
     if ($tobool25) {
      $n$addr$3 = 0;$s$2 = $incdec$ptr33;
      break;
     } else {
      $n$addr$227 = $dec34;$s$128 = $incdec$ptr33;
     }
    }
   }
  }
 } while(0);
 $tobool36 = ($n$addr$3|0)!=(0);
 $cond = $tobool36 ? $s$2 : 0;
 return ($cond|0);
}
function _pad_684($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $0 = 0, $1 = 0, $2 = 0, $and = 0, $cmp = 0, $cmp3 = 0, $cmp38 = 0, $cond = 0, $l$addr$0$lcssa = 0, $l$addr$09 = 0, $or$cond = 0, $pad = 0, $sub = 0, $sub6 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $pad = sp;
 $and = $fl & 73728;
 $tobool = ($and|0)==(0);
 $cmp = ($w|0)>($l|0);
 $or$cond = $cmp & $tobool;
 if ($or$cond) {
  $sub = (($w) - ($l))|0;
  $0 = ($sub>>>0)<(256);
  $cond = $0 ? $sub : 256;
  _memset(($pad|0),($c|0),($cond|0))|0;
  $cmp38 = ($sub>>>0)>(255);
  if ($cmp38) {
   $1 = (($w) - ($l))|0;
   $l$addr$09 = $sub;
   while(1) {
    _out($f,$pad,256);
    $sub6 = (($l$addr$09) + -256)|0;
    $cmp3 = ($sub6>>>0)>(255);
    if ($cmp3) {
     $l$addr$09 = $sub6;
    } else {
     break;
    }
   }
   $2 = $1 & 255;
   $l$addr$0$lcssa = $2;
  } else {
   $l$addr$0$lcssa = $sub;
  }
  _out($f,$pad,$l$addr$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($s|0)==(0|0);
 if ($tobool) {
  $retval$0 = 0;
 } else {
  $call = (_wcrtomb($s,$wc,0)|0);
  $retval$0 = $call;
 }
 return ($retval$0|0);
}
function _fmt_fp($f,$y,$w,$p,$fl,$t) {
 $f = $f|0;
 $y = +$y;
 $w = $w|0;
 $p = $p|0;
 $fl = $fl|0;
 $t = $t|0;
 var $$ = 0, $$$ = 0, $$$405 = 0.0, $$394$ = 0, $$397 = 0.0, $$405 = 0.0, $$p = 0, $$p$inc468 = 0, $$pr = 0, $$pr407 = 0, $$pre = 0, $$pre487 = 0, $$sub514 = 0, $$sub562 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $a$1$lcssa = 0, $a$1476 = 0, $a$2$ph = 0, $a$3$lcssa = 0, $a$3466 = 0, $a$5$lcssa = 0, $a$5448 = 0, $a$6 = 0, $a$8 = 0;
 var $a$9$ph = 0, $add = 0, $add$ptr213 = 0, $add$ptr311 = 0, $add$ptr311$z$4 = 0, $add$ptr354 = 0, $add$ptr358 = 0, $add$ptr373 = 0, $add$ptr442 = 0, $add$ptr442$z$3 = 0, $add$ptr65 = 0, $add$ptr671 = 0, $add$ptr742 = 0, $add$ptr756 = 0, $add113 = 0, $add150 = 0, $add150$pn = 0, $add165 = 0, $add273 = 0, $add275 = 0;
 var $add284 = 0, $add313 = 0, $add355 = 0, $add410 = 0.0, $add414 = 0, $add477$neg = 0, $add561 = 0, $add608 = 0, $add612 = 0, $add620 = 0, $add653 = 0, $add653$sink406 = 0, $add67 = 0, $add737 = 0, $add810 = 0, $add87 = 0.0, $add90 = 0.0, $and = 0, $and12 = 0, $and134 = 0;
 var $and282 = 0, $and36 = 0, $and379 = 0, $and45 = 0, $and483 = 0, $and610$pre$phiZ2D = 0, $and62 = 0, $arraydecay208$add$ptr213 = 0, $arrayidx = 0, $arrayidx117 = 0, $arrayidx251 = 0, $arrayidx453 = 0, $arrayidx489 = 0, $big = 0, $buf = 0, $call55 = 0.0, $carry$0471 = 0, $carry262$0462 = 0, $cmp103 = 0, $cmp127 = 0;
 var $cmp147 = 0, $cmp205 = 0, $cmp225 = 0, $cmp225474 = 0, $cmp235 = 0, $cmp235470 = 0, $cmp249 = 0, $cmp259 = 0, $cmp259464 = 0, $cmp277 = 0, $cmp277460 = 0, $cmp299 = 0, $cmp308 = 0, $cmp315 = 0, $cmp324 = 0, $cmp324456 = 0, $cmp333 = 0, $cmp338 = 0, $cmp350 = 0, $cmp363452 = 0;
 var $cmp374 = 0, $cmp38 = 0, $cmp385 = 0, $cmp390 = 0, $cmp403 = 0, $cmp411 = 0, $cmp416 = 0, $cmp416446 = 0, $cmp420 = 0, $cmp433 = 0, $cmp433442 = 0, $cmp443 = 0, $cmp450 = 0, $cmp450$lcssa = 0, $cmp470 = 0, $cmp473 = 0, $cmp495 = 0, $cmp495438 = 0, $cmp505 = 0, $cmp528 = 0;
 var $cmp577 = 0, $cmp59 = 0, $cmp614 = 0, $cmp617 = 0, $cmp623 = 0, $cmp636 = 0, $cmp636433 = 0, $cmp660 = 0, $cmp665 = 0, $cmp673 = 0, $cmp678 = 0, $cmp678419 = 0, $cmp68 = 0, $cmp686 = 0, $cmp707 = 0, $cmp707414 = 0, $cmp710 = 0, $cmp710415 = 0, $cmp722 = 0, $cmp722411 = 0;
 var $cmp745 = 0, $cmp748 = 0, $cmp748427 = 0, $cmp760 = 0, $cmp765 = 0, $cmp770 = 0, $cmp770423 = 0, $cmp777 = 0, $cmp790 = 0, $cmp818 = 0, $cmp82 = 0, $cmp94 = 0, $cond = 0, $cond100 = 0, $cond233 = 0, $cond271 = 0, $cond304 = 0, $cond43 = 0, $cond629 = 0, $cond732 = 0;
 var $cond800 = 0, $conv111 = 0, $conv114 = 0, $conv116 = 0, $conv118393 = 0, $conv121 = 0, $conv123 = 0.0, $conv216 = 0, $conv218 = 0.0, $conv644 = 0, $conv646 = 0, $d$0 = 0, $d$0469 = 0, $d$0472 = 0, $d$1461 = 0, $d$4 = 0, $d$5422 = 0, $d$6416 = 0, $d$7428 = 0, $dec = 0;
 var $dec476 = 0, $dec481 = 0, $dec78 = 0, $div274 = 0, $div356 = 0, $div378 = 0, $div384 = 0, $e$0458 = 0, $e$1 = 0, $e$2444 = 0, $e$4 = 0, $e$5$ph = 0, $e2 = 0, $ebuf0 = 0, $estr$0 = 0, $estr$1$lcssa = 0, $estr$1434 = 0, $estr$2 = 0, $exitcond = 0, $i$0457 = 0;
 var $i$1$lcssa = 0, $i$1453 = 0, $i$2443 = 0, $i$3439 = 0, $inc = 0, $inc425 = 0, $inc438 = 0, $inc468 = 0, $inc500 = 0, $incdec$ptr106 = 0, $incdec$ptr112 = 0, $incdec$ptr115 = 0, $incdec$ptr122 = 0, $incdec$ptr137 = 0, $incdec$ptr217 = 0, $incdec$ptr246 = 0, $incdec$ptr288 = 0, $incdec$ptr292 = 0, $incdec$ptr292$a$3 = 0, $incdec$ptr292$a$3492 = 0;
 var $incdec$ptr292$a$3494 = 0, $incdec$ptr292491 = 0, $incdec$ptr296 = 0, $incdec$ptr419 = 0, $incdec$ptr419$sink$lcssa = 0, $incdec$ptr419$sink447 = 0, $incdec$ptr423 = 0, $incdec$ptr639 = 0, $incdec$ptr645 = 0, $incdec$ptr647 = 0, $incdec$ptr681 = 0, $incdec$ptr689 = 0, $incdec$ptr698 = 0, $incdec$ptr725 = 0, $incdec$ptr734 = 0, $incdec$ptr763 = 0, $incdec$ptr773 = 0, $incdec$ptr776 = 0, $incdec$ptr808 = 0, $j$0 = 0;
 var $j$0451 = 0, $j$0454 = 0, $j$1440 = 0, $j$2 = 0, $l$0 = 0, $l$1 = 0, $land$ext$neg = 0, $lnot = 0, $lnot455 = 0, $lor$ext = 0, $mul = 0.0, $mul125 = 0.0, $mul202 = 0.0, $mul220 = 0.0, $mul286 = 0, $mul322 = 0, $mul328 = 0, $mul335 = 0, $mul349 = 0, $mul367 = 0;
 var $mul406 = 0.0, $mul406$$397 = 0.0, $mul407 = 0.0, $mul407$$$405 = 0.0, $mul431 = 0, $mul437 = 0, $mul499 = 0, $mul513 = 0, $mul80 = 0.0, $narrow = 0, $not$tobool341 = 0, $notlhs = 0, $notrhs = 0, $or = 0, $or$cond = 0, $or$cond1$not = 0, $or$cond2 = 0, $or$cond395 = 0, $or$cond396 = 0, $or$cond398 = 0;
 var $or$cond402 = 0, $or120 = 0, $or504 = 0, $or613 = 0, $p$addr$2 = 0, $p$addr$2$$sub514399 = 0, $p$addr$2$$sub562400 = 0, $p$addr$3 = 0, $p$addr$4$lcssa = 0, $p$addr$4417 = 0, $p$addr$5$lcssa = 0, $p$addr$5429 = 0, $pl$0 = 0, $prefix$0 = 0, $prefix$0$add$ptr65 = 0, $r$0$a$9 = 0, $re$1410 = 0, $rem360 = 0, $rem370 = 0, $rem494 = 0;
 var $rem494437 = 0, $round$0409 = 0.0, $round377$1 = 0.0, $s$0 = 0, $s$1 = 0, $s35$0 = 0, $s668$0420 = 0, $s668$1 = 0, $s715$0$lcssa = 0, $s715$0412 = 0, $s753$0 = 0, $s753$1424 = 0, $s753$2 = 0, $scevgep483 = 0, $scevgep483484 = 0, $shl280 = 0, $shr283 = 0, $shr285 = 0, $small$1 = 0.0, $sub = 0.0;
 var $sub$ptr$div = 0, $sub$ptr$div321 = 0, $sub$ptr$div347 = 0, $sub$ptr$div430 = 0, $sub$ptr$div511 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast143 = 0, $sub$ptr$lhs$cast151 = 0, $sub$ptr$lhs$cast305 = 0, $sub$ptr$lhs$cast318 = 0, $sub$ptr$lhs$cast344 = 0, $sub$ptr$lhs$cast508 = 0, $sub$ptr$lhs$cast633 = 0, $sub$ptr$lhs$cast694 = 0, $sub$ptr$lhs$cast787 = 0, $sub$ptr$lhs$cast811 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast152 = 0, $sub$ptr$rhs$cast306 = 0, $sub$ptr$rhs$cast319 = 0;
 var $sub$ptr$rhs$cast428 = 0, $sub$ptr$rhs$cast634 = 0, $sub$ptr$rhs$cast634431 = 0, $sub$ptr$rhs$cast649 = 0, $sub$ptr$rhs$cast695 = 0, $sub$ptr$rhs$cast788 = 0, $sub$ptr$rhs$cast812 = 0, $sub$ptr$sub = 0, $sub$ptr$sub145 = 0, $sub$ptr$sub153 = 0, $sub$ptr$sub307 = 0, $sub$ptr$sub320 = 0, $sub$ptr$sub346 = 0, $sub$ptr$sub429 = 0, $sub$ptr$sub510 = 0, $sub$ptr$sub635 = 0, $sub$ptr$sub635432 = 0, $sub$ptr$sub650 = 0, $sub$ptr$sub650$pn = 0, $sub$ptr$sub696 = 0;
 var $sub$ptr$sub789 = 0, $sub$ptr$sub813 = 0, $sub124 = 0.0, $sub146 = 0, $sub181 = 0, $sub203 = 0, $sub219 = 0.0, $sub256 = 0, $sub264 = 0, $sub281 = 0, $sub336 = 0, $sub343 = 0, $sub357 = 0, $sub409 = 0, $sub478 = 0, $sub480 = 0, $sub514 = 0, $sub562 = 0, $sub626$le = 0, $sub735 = 0;
 var $sub74 = 0, $sub806 = 0, $sub85 = 0.0, $sub86 = 0.0, $sub88 = 0.0, $sub91 = 0.0, $sub97 = 0, $t$addr$0 = 0, $t$addr$1 = 0, $tobool13 = 0, $tobool135 = 0, $tobool139 = 0, $tobool140 = 0, $tobool222 = 0, $tobool244 = 0, $tobool290 = 0, $tobool290490 = 0, $tobool294 = 0, $tobool341 = 0, $tobool37 = 0;
 var $tobool371 = 0, $tobool380 = 0, $tobool400 = 0, $tobool484 = 0, $tobool490 = 0, $tobool56 = 0, $tobool63 = 0, $tobool76 = 0, $tobool76488 = 0, $tobool781 = 0, $tobool79 = 0, $tobool9 = 0, $w$add653 = 0, $xor = 0, $xor167 = 0, $xor186 = 0, $xor655 = 0, $xor816 = 0, $y$addr$0 = 0.0, $y$addr$1 = 0.0;
 var $y$addr$2 = 0.0, $y$addr$3 = 0.0, $y$addr$4 = 0.0, $z$0 = 0, $z$1$lcssa = 0, $z$1475 = 0, $z$2 = 0, $z$3$lcssa = 0, $z$3465 = 0, $z$4 = 0, $z$7 = 0, $z$7$add$ptr742 = 0, $z$7$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $big = sp + 8|0;
 $e2 = sp;
 $buf = sp + 524|0;
 $sub$ptr$rhs$cast = $buf;
 $ebuf0 = sp + 512|0;
 HEAP32[$e2>>2] = 0;
 $arrayidx = ((($ebuf0)) + 12|0);
 (___DOUBLE_BITS_685($y)|0);
 $0 = tempRet0;
 $1 = ($0|0)<(0);
 if ($1) {
  $sub = -$y;
  $pl$0 = 1;$prefix$0 = 3143;$y$addr$0 = $sub;
 } else {
  $and = $fl & 2048;
  $tobool9 = ($and|0)==(0);
  $and12 = $fl & 1;
  $tobool13 = ($and12|0)==(0);
  $$ = $tobool13 ? (3144) : (3149);
  $$$ = $tobool9 ? $$ : (3146);
  $2 = $fl & 2049;
  $narrow = ($2|0)!=(0);
  $$394$ = $narrow&1;
  $pl$0 = $$394$;$prefix$0 = $$$;$y$addr$0 = $y;
 }
 (___DOUBLE_BITS_685($y$addr$0)|0);
 $3 = tempRet0;
 $4 = $3 & 2146435072;
 $5 = ($4>>>0)<(2146435072);
 $6 = (0)<(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 do {
  if ($9) {
   $call55 = (+_frexpl($y$addr$0,$e2));
   $mul = $call55 * 2.0;
   $tobool56 = $mul != 0.0;
   if ($tobool56) {
    $10 = HEAP32[$e2>>2]|0;
    $dec = (($10) + -1)|0;
    HEAP32[$e2>>2] = $dec;
   }
   $or = $t | 32;
   $cmp59 = ($or|0)==(97);
   if ($cmp59) {
    $and62 = $t & 32;
    $tobool63 = ($and62|0)==(0);
    $add$ptr65 = ((($prefix$0)) + 9|0);
    $prefix$0$add$ptr65 = $tobool63 ? $prefix$0 : $add$ptr65;
    $add67 = $pl$0 | 2;
    $11 = ($p>>>0)>(11);
    $sub74 = (12 - ($p))|0;
    $tobool76488 = ($sub74|0)==(0);
    $tobool76 = $11 | $tobool76488;
    do {
     if ($tobool76) {
      $y$addr$1 = $mul;
     } else {
      $re$1410 = $sub74;$round$0409 = 8.0;
      while(1) {
       $dec78 = (($re$1410) + -1)|0;
       $mul80 = $round$0409 * 16.0;
       $tobool79 = ($dec78|0)==(0);
       if ($tobool79) {
        break;
       } else {
        $re$1410 = $dec78;$round$0409 = $mul80;
       }
      }
      $12 = HEAP8[$prefix$0$add$ptr65>>0]|0;
      $cmp82 = ($12<<24>>24)==(45);
      if ($cmp82) {
       $sub85 = -$mul;
       $sub86 = $sub85 - $mul80;
       $add87 = $mul80 + $sub86;
       $sub88 = -$add87;
       $y$addr$1 = $sub88;
       break;
      } else {
       $add90 = $mul + $mul80;
       $sub91 = $add90 - $mul80;
       $y$addr$1 = $sub91;
       break;
      }
     }
    } while(0);
    $13 = HEAP32[$e2>>2]|0;
    $cmp94 = ($13|0)<(0);
    $sub97 = (0 - ($13))|0;
    $cond100 = $cmp94 ? $sub97 : $13;
    $14 = ($cond100|0)<(0);
    $15 = $14 << 31 >> 31;
    $16 = (_fmt_u($cond100,$15,$arrayidx)|0);
    $cmp103 = ($16|0)==($arrayidx|0);
    if ($cmp103) {
     $incdec$ptr106 = ((($ebuf0)) + 11|0);
     HEAP8[$incdec$ptr106>>0] = 48;
     $estr$0 = $incdec$ptr106;
    } else {
     $estr$0 = $16;
    }
    $17 = $13 >> 31;
    $18 = $17 & 2;
    $19 = (($18) + 43)|0;
    $conv111 = $19&255;
    $incdec$ptr112 = ((($estr$0)) + -1|0);
    HEAP8[$incdec$ptr112>>0] = $conv111;
    $add113 = (($t) + 15)|0;
    $conv114 = $add113&255;
    $incdec$ptr115 = ((($estr$0)) + -2|0);
    HEAP8[$incdec$ptr115>>0] = $conv114;
    $notrhs = ($p|0)<(1);
    $and134 = $fl & 8;
    $tobool135 = ($and134|0)==(0);
    $s$0 = $buf;$y$addr$2 = $y$addr$1;
    while(1) {
     $conv116 = (~~(($y$addr$2)));
     $arrayidx117 = (3178 + ($conv116)|0);
     $20 = HEAP8[$arrayidx117>>0]|0;
     $conv118393 = $20&255;
     $or120 = $conv118393 | $and62;
     $conv121 = $or120&255;
     $incdec$ptr122 = ((($s$0)) + 1|0);
     HEAP8[$s$0>>0] = $conv121;
     $conv123 = (+($conv116|0));
     $sub124 = $y$addr$2 - $conv123;
     $mul125 = $sub124 * 16.0;
     $sub$ptr$lhs$cast = $incdec$ptr122;
     $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
     $cmp127 = ($sub$ptr$sub|0)==(1);
     if ($cmp127) {
      $notlhs = $mul125 == 0.0;
      $or$cond1$not = $notrhs & $notlhs;
      $or$cond = $tobool135 & $or$cond1$not;
      if ($or$cond) {
       $s$1 = $incdec$ptr122;
      } else {
       $incdec$ptr137 = ((($s$0)) + 2|0);
       HEAP8[$incdec$ptr122>>0] = 46;
       $s$1 = $incdec$ptr137;
      }
     } else {
      $s$1 = $incdec$ptr122;
     }
     $tobool139 = $mul125 != 0.0;
     if ($tobool139) {
      $s$0 = $s$1;$y$addr$2 = $mul125;
     } else {
      break;
     }
    }
    $tobool140 = ($p|0)!=(0);
    $sub$ptr$rhs$cast152 = $incdec$ptr115;
    $sub$ptr$lhs$cast151 = $arrayidx;
    $sub$ptr$lhs$cast143 = $s$1;
    $sub$ptr$sub145 = (($sub$ptr$lhs$cast143) - ($sub$ptr$rhs$cast))|0;
    $sub$ptr$sub153 = (($sub$ptr$lhs$cast151) - ($sub$ptr$rhs$cast152))|0;
    $sub146 = (($sub$ptr$sub145) + -2)|0;
    $cmp147 = ($sub146|0)<($p|0);
    $or$cond395 = $tobool140 & $cmp147;
    $add150 = (($p) + 2)|0;
    $add150$pn = $or$cond395 ? $add150 : $sub$ptr$sub145;
    $l$0 = (($sub$ptr$sub153) + ($add67))|0;
    $add165 = (($l$0) + ($add150$pn))|0;
    _pad_684($f,32,$w,$add165,$fl);
    _out($f,$prefix$0$add$ptr65,$add67);
    $xor167 = $fl ^ 65536;
    _pad_684($f,48,$w,$add165,$xor167);
    _out($f,$buf,$sub$ptr$sub145);
    $sub181 = (($add150$pn) - ($sub$ptr$sub145))|0;
    _pad_684($f,48,$sub181,0,0);
    _out($f,$incdec$ptr115,$sub$ptr$sub153);
    $xor186 = $fl ^ 8192;
    _pad_684($f,32,$w,$add165,$xor186);
    $add653$sink406 = $add165;
    break;
   }
   $cmp68 = ($p|0)<(0);
   $$p = $cmp68 ? 6 : $p;
   if ($tobool56) {
    $mul202 = $mul * 268435456.0;
    $21 = HEAP32[$e2>>2]|0;
    $sub203 = (($21) + -28)|0;
    HEAP32[$e2>>2] = $sub203;
    $$pr = $sub203;$y$addr$3 = $mul202;
   } else {
    $$pre = HEAP32[$e2>>2]|0;
    $$pr = $$pre;$y$addr$3 = $mul;
   }
   $cmp205 = ($$pr|0)<(0);
   $add$ptr213 = ((($big)) + 288|0);
   $arraydecay208$add$ptr213 = $cmp205 ? $big : $add$ptr213;
   $y$addr$4 = $y$addr$3;$z$0 = $arraydecay208$add$ptr213;
   while(1) {
    $conv216 = (~~(($y$addr$4))>>>0);
    HEAP32[$z$0>>2] = $conv216;
    $incdec$ptr217 = ((($z$0)) + 4|0);
    $conv218 = (+($conv216>>>0));
    $sub219 = $y$addr$4 - $conv218;
    $mul220 = $sub219 * 1.0E+9;
    $tobool222 = $mul220 != 0.0;
    if ($tobool222) {
     $y$addr$4 = $mul220;$z$0 = $incdec$ptr217;
    } else {
     break;
    }
   }
   $cmp225474 = ($$pr|0)>(0);
   if ($cmp225474) {
    $23 = $$pr;$a$1476 = $arraydecay208$add$ptr213;$z$1475 = $incdec$ptr217;
    while(1) {
     $22 = ($23|0)<(29);
     $cond233 = $22 ? $23 : 29;
     $d$0469 = ((($z$1475)) + -4|0);
     $cmp235470 = ($d$0469>>>0)<($a$1476>>>0);
     if ($cmp235470) {
      $a$2$ph = $a$1476;
     } else {
      $carry$0471 = 0;$d$0472 = $d$0469;
      while(1) {
       $24 = HEAP32[$d$0472>>2]|0;
       $25 = (_bitshift64Shl(($24|0),0,($cond233|0))|0);
       $26 = tempRet0;
       $27 = (_i64Add(($25|0),($26|0),($carry$0471|0),0)|0);
       $28 = tempRet0;
       $29 = (___uremdi3(($27|0),($28|0),1000000000,0)|0);
       $30 = tempRet0;
       HEAP32[$d$0472>>2] = $29;
       $31 = (___udivdi3(($27|0),($28|0),1000000000,0)|0);
       $32 = tempRet0;
       $d$0 = ((($d$0472)) + -4|0);
       $cmp235 = ($d$0>>>0)<($a$1476>>>0);
       if ($cmp235) {
        break;
       } else {
        $carry$0471 = $31;$d$0472 = $d$0;
       }
      }
      $tobool244 = ($31|0)==(0);
      if ($tobool244) {
       $a$2$ph = $a$1476;
      } else {
       $incdec$ptr246 = ((($a$1476)) + -4|0);
       HEAP32[$incdec$ptr246>>2] = $31;
       $a$2$ph = $incdec$ptr246;
      }
     }
     $z$2 = $z$1475;
     while(1) {
      $cmp249 = ($z$2>>>0)>($a$2$ph>>>0);
      if (!($cmp249)) {
       break;
      }
      $arrayidx251 = ((($z$2)) + -4|0);
      $33 = HEAP32[$arrayidx251>>2]|0;
      $lnot = ($33|0)==(0);
      if ($lnot) {
       $z$2 = $arrayidx251;
      } else {
       break;
      }
     }
     $34 = HEAP32[$e2>>2]|0;
     $sub256 = (($34) - ($cond233))|0;
     HEAP32[$e2>>2] = $sub256;
     $cmp225 = ($sub256|0)>(0);
     if ($cmp225) {
      $23 = $sub256;$a$1476 = $a$2$ph;$z$1475 = $z$2;
     } else {
      $$pr407 = $sub256;$a$1$lcssa = $a$2$ph;$z$1$lcssa = $z$2;
      break;
     }
    }
   } else {
    $$pr407 = $$pr;$a$1$lcssa = $arraydecay208$add$ptr213;$z$1$lcssa = $incdec$ptr217;
   }
   $cmp259464 = ($$pr407|0)<(0);
   if ($cmp259464) {
    $add273 = (($$p) + 25)|0;
    $div274 = (($add273|0) / 9)&-1;
    $add275 = (($div274) + 1)|0;
    $cmp299 = ($or|0)==(102);
    $35 = $$pr407;$a$3466 = $a$1$lcssa;$z$3465 = $z$1$lcssa;
    while(1) {
     $sub264 = (0 - ($35))|0;
     $36 = ($sub264|0)<(9);
     $cond271 = $36 ? $sub264 : 9;
     $cmp277460 = ($a$3466>>>0)<($z$3465>>>0);
     if ($cmp277460) {
      $shl280 = 1 << $cond271;
      $sub281 = (($shl280) + -1)|0;
      $shr285 = 1000000000 >>> $cond271;
      $carry262$0462 = 0;$d$1461 = $a$3466;
      while(1) {
       $38 = HEAP32[$d$1461>>2]|0;
       $and282 = $38 & $sub281;
       $shr283 = $38 >>> $cond271;
       $add284 = (($shr283) + ($carry262$0462))|0;
       HEAP32[$d$1461>>2] = $add284;
       $mul286 = Math_imul($and282, $shr285)|0;
       $incdec$ptr288 = ((($d$1461)) + 4|0);
       $cmp277 = ($incdec$ptr288>>>0)<($z$3465>>>0);
       if ($cmp277) {
        $carry262$0462 = $mul286;$d$1461 = $incdec$ptr288;
       } else {
        break;
       }
      }
      $39 = HEAP32[$a$3466>>2]|0;
      $tobool290 = ($39|0)==(0);
      $incdec$ptr292 = ((($a$3466)) + 4|0);
      $incdec$ptr292$a$3 = $tobool290 ? $incdec$ptr292 : $a$3466;
      $tobool294 = ($mul286|0)==(0);
      if ($tobool294) {
       $incdec$ptr292$a$3494 = $incdec$ptr292$a$3;$z$4 = $z$3465;
      } else {
       $incdec$ptr296 = ((($z$3465)) + 4|0);
       HEAP32[$z$3465>>2] = $mul286;
       $incdec$ptr292$a$3494 = $incdec$ptr292$a$3;$z$4 = $incdec$ptr296;
      }
     } else {
      $37 = HEAP32[$a$3466>>2]|0;
      $tobool290490 = ($37|0)==(0);
      $incdec$ptr292491 = ((($a$3466)) + 4|0);
      $incdec$ptr292$a$3492 = $tobool290490 ? $incdec$ptr292491 : $a$3466;
      $incdec$ptr292$a$3494 = $incdec$ptr292$a$3492;$z$4 = $z$3465;
     }
     $cond304 = $cmp299 ? $arraydecay208$add$ptr213 : $incdec$ptr292$a$3494;
     $sub$ptr$lhs$cast305 = $z$4;
     $sub$ptr$rhs$cast306 = $cond304;
     $sub$ptr$sub307 = (($sub$ptr$lhs$cast305) - ($sub$ptr$rhs$cast306))|0;
     $sub$ptr$div = $sub$ptr$sub307 >> 2;
     $cmp308 = ($sub$ptr$div|0)>($add275|0);
     $add$ptr311 = (($cond304) + ($add275<<2)|0);
     $add$ptr311$z$4 = $cmp308 ? $add$ptr311 : $z$4;
     $40 = HEAP32[$e2>>2]|0;
     $add313 = (($40) + ($cond271))|0;
     HEAP32[$e2>>2] = $add313;
     $cmp259 = ($add313|0)<(0);
     if ($cmp259) {
      $35 = $add313;$a$3466 = $incdec$ptr292$a$3494;$z$3465 = $add$ptr311$z$4;
     } else {
      $a$3$lcssa = $incdec$ptr292$a$3494;$z$3$lcssa = $add$ptr311$z$4;
      break;
     }
    }
   } else {
    $a$3$lcssa = $a$1$lcssa;$z$3$lcssa = $z$1$lcssa;
   }
   $cmp315 = ($a$3$lcssa>>>0)<($z$3$lcssa>>>0);
   $sub$ptr$lhs$cast318 = $arraydecay208$add$ptr213;
   if ($cmp315) {
    $sub$ptr$rhs$cast319 = $a$3$lcssa;
    $sub$ptr$sub320 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast319))|0;
    $sub$ptr$div321 = $sub$ptr$sub320 >> 2;
    $mul322 = ($sub$ptr$div321*9)|0;
    $41 = HEAP32[$a$3$lcssa>>2]|0;
    $cmp324456 = ($41>>>0)<(10);
    if ($cmp324456) {
     $e$1 = $mul322;
    } else {
     $e$0458 = $mul322;$i$0457 = 10;
     while(1) {
      $mul328 = ($i$0457*10)|0;
      $inc = (($e$0458) + 1)|0;
      $cmp324 = ($41>>>0)<($mul328>>>0);
      if ($cmp324) {
       $e$1 = $inc;
       break;
      } else {
       $e$0458 = $inc;$i$0457 = $mul328;
      }
     }
    }
   } else {
    $e$1 = 0;
   }
   $cmp333 = ($or|0)!=(102);
   $mul335 = $cmp333 ? $e$1 : 0;
   $sub336 = (($$p) - ($mul335))|0;
   $cmp338 = ($or|0)==(103);
   $tobool341 = ($$p|0)!=(0);
   $42 = $tobool341 & $cmp338;
   $land$ext$neg = $42 << 31 >> 31;
   $sub343 = (($sub336) + ($land$ext$neg))|0;
   $sub$ptr$lhs$cast344 = $z$3$lcssa;
   $sub$ptr$sub346 = (($sub$ptr$lhs$cast344) - ($sub$ptr$lhs$cast318))|0;
   $sub$ptr$div347 = $sub$ptr$sub346 >> 2;
   $43 = ($sub$ptr$div347*9)|0;
   $mul349 = (($43) + -9)|0;
   $cmp350 = ($sub343|0)<($mul349|0);
   if ($cmp350) {
    $add$ptr354 = ((($arraydecay208$add$ptr213)) + 4|0);
    $add355 = (($sub343) + 9216)|0;
    $div356 = (($add355|0) / 9)&-1;
    $sub357 = (($div356) + -1024)|0;
    $add$ptr358 = (($add$ptr354) + ($sub357<<2)|0);
    $rem360 = (($add355|0) % 9)&-1;
    $j$0451 = (($rem360) + 1)|0;
    $cmp363452 = ($j$0451|0)<(9);
    if ($cmp363452) {
     $i$1453 = 10;$j$0454 = $j$0451;
     while(1) {
      $mul367 = ($i$1453*10)|0;
      $j$0 = (($j$0454) + 1)|0;
      $exitcond = ($j$0|0)==(9);
      if ($exitcond) {
       $i$1$lcssa = $mul367;
       break;
      } else {
       $i$1453 = $mul367;$j$0454 = $j$0;
      }
     }
    } else {
     $i$1$lcssa = 10;
    }
    $44 = HEAP32[$add$ptr358>>2]|0;
    $rem370 = (($44>>>0) % ($i$1$lcssa>>>0))&-1;
    $tobool371 = ($rem370|0)==(0);
    $add$ptr373 = ((($add$ptr358)) + 4|0);
    $cmp374 = ($add$ptr373|0)==($z$3$lcssa|0);
    $or$cond396 = $cmp374 & $tobool371;
    if ($or$cond396) {
     $a$8 = $a$3$lcssa;$d$4 = $add$ptr358;$e$4 = $e$1;
    } else {
     $div378 = (($44>>>0) / ($i$1$lcssa>>>0))&-1;
     $and379 = $div378 & 1;
     $tobool380 = ($and379|0)==(0);
     $$397 = $tobool380 ? 9007199254740992.0 : 9007199254740994.0;
     $div384 = (($i$1$lcssa|0) / 2)&-1;
     $cmp385 = ($rem370>>>0)<($div384>>>0);
     $cmp390 = ($rem370|0)==($div384|0);
     $or$cond398 = $cmp374 & $cmp390;
     $$405 = $or$cond398 ? 1.0 : 1.5;
     $$$405 = $cmp385 ? 0.5 : $$405;
     $tobool400 = ($pl$0|0)==(0);
     if ($tobool400) {
      $round377$1 = $$397;$small$1 = $$$405;
     } else {
      $45 = HEAP8[$prefix$0>>0]|0;
      $cmp403 = ($45<<24>>24)==(45);
      $mul406 = -$$397;
      $mul407 = -$$$405;
      $mul406$$397 = $cmp403 ? $mul406 : $$397;
      $mul407$$$405 = $cmp403 ? $mul407 : $$$405;
      $round377$1 = $mul406$$397;$small$1 = $mul407$$$405;
     }
     $sub409 = (($44) - ($rem370))|0;
     HEAP32[$add$ptr358>>2] = $sub409;
     $add410 = $round377$1 + $small$1;
     $cmp411 = $add410 != $round377$1;
     if ($cmp411) {
      $add414 = (($sub409) + ($i$1$lcssa))|0;
      HEAP32[$add$ptr358>>2] = $add414;
      $cmp416446 = ($add414>>>0)>(999999999);
      if ($cmp416446) {
       $a$5448 = $a$3$lcssa;$incdec$ptr419$sink447 = $add$ptr358;
       while(1) {
        $incdec$ptr419 = ((($incdec$ptr419$sink447)) + -4|0);
        HEAP32[$incdec$ptr419$sink447>>2] = 0;
        $cmp420 = ($incdec$ptr419>>>0)<($a$5448>>>0);
        if ($cmp420) {
         $incdec$ptr423 = ((($a$5448)) + -4|0);
         HEAP32[$incdec$ptr423>>2] = 0;
         $a$6 = $incdec$ptr423;
        } else {
         $a$6 = $a$5448;
        }
        $46 = HEAP32[$incdec$ptr419>>2]|0;
        $inc425 = (($46) + 1)|0;
        HEAP32[$incdec$ptr419>>2] = $inc425;
        $cmp416 = ($inc425>>>0)>(999999999);
        if ($cmp416) {
         $a$5448 = $a$6;$incdec$ptr419$sink447 = $incdec$ptr419;
        } else {
         $a$5$lcssa = $a$6;$incdec$ptr419$sink$lcssa = $incdec$ptr419;
         break;
        }
       }
      } else {
       $a$5$lcssa = $a$3$lcssa;$incdec$ptr419$sink$lcssa = $add$ptr358;
      }
      $sub$ptr$rhs$cast428 = $a$5$lcssa;
      $sub$ptr$sub429 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast428))|0;
      $sub$ptr$div430 = $sub$ptr$sub429 >> 2;
      $mul431 = ($sub$ptr$div430*9)|0;
      $47 = HEAP32[$a$5$lcssa>>2]|0;
      $cmp433442 = ($47>>>0)<(10);
      if ($cmp433442) {
       $a$8 = $a$5$lcssa;$d$4 = $incdec$ptr419$sink$lcssa;$e$4 = $mul431;
      } else {
       $e$2444 = $mul431;$i$2443 = 10;
       while(1) {
        $mul437 = ($i$2443*10)|0;
        $inc438 = (($e$2444) + 1)|0;
        $cmp433 = ($47>>>0)<($mul437>>>0);
        if ($cmp433) {
         $a$8 = $a$5$lcssa;$d$4 = $incdec$ptr419$sink$lcssa;$e$4 = $inc438;
         break;
        } else {
         $e$2444 = $inc438;$i$2443 = $mul437;
        }
       }
      }
     } else {
      $a$8 = $a$3$lcssa;$d$4 = $add$ptr358;$e$4 = $e$1;
     }
    }
    $add$ptr442 = ((($d$4)) + 4|0);
    $cmp443 = ($z$3$lcssa>>>0)>($add$ptr442>>>0);
    $add$ptr442$z$3 = $cmp443 ? $add$ptr442 : $z$3$lcssa;
    $a$9$ph = $a$8;$e$5$ph = $e$4;$z$7$ph = $add$ptr442$z$3;
   } else {
    $a$9$ph = $a$3$lcssa;$e$5$ph = $e$1;$z$7$ph = $z$3$lcssa;
   }
   $z$7 = $z$7$ph;
   while(1) {
    $cmp450 = ($z$7>>>0)>($a$9$ph>>>0);
    if (!($cmp450)) {
     $cmp450$lcssa = 0;
     break;
    }
    $arrayidx453 = ((($z$7)) + -4|0);
    $48 = HEAP32[$arrayidx453>>2]|0;
    $lnot455 = ($48|0)==(0);
    if ($lnot455) {
     $z$7 = $arrayidx453;
    } else {
     $cmp450$lcssa = 1;
     break;
    }
   }
   $sub626$le = (0 - ($e$5$ph))|0;
   do {
    if ($cmp338) {
     $not$tobool341 = $tobool341 ^ 1;
     $inc468 = $not$tobool341&1;
     $$p$inc468 = (($inc468) + ($$p))|0;
     $cmp470 = ($$p$inc468|0)>($e$5$ph|0);
     $cmp473 = ($e$5$ph|0)>(-5);
     $or$cond2 = $cmp470 & $cmp473;
     if ($or$cond2) {
      $dec476 = (($t) + -1)|0;
      $add477$neg = (($$p$inc468) + -1)|0;
      $sub478 = (($add477$neg) - ($e$5$ph))|0;
      $p$addr$2 = $sub478;$t$addr$0 = $dec476;
     } else {
      $sub480 = (($t) + -2)|0;
      $dec481 = (($$p$inc468) + -1)|0;
      $p$addr$2 = $dec481;$t$addr$0 = $sub480;
     }
     $and483 = $fl & 8;
     $tobool484 = ($and483|0)==(0);
     if ($tobool484) {
      if ($cmp450$lcssa) {
       $arrayidx489 = ((($z$7)) + -4|0);
       $49 = HEAP32[$arrayidx489>>2]|0;
       $tobool490 = ($49|0)==(0);
       if ($tobool490) {
        $j$2 = 9;
       } else {
        $rem494437 = (($49>>>0) % 10)&-1;
        $cmp495438 = ($rem494437|0)==(0);
        if ($cmp495438) {
         $i$3439 = 10;$j$1440 = 0;
         while(1) {
          $mul499 = ($i$3439*10)|0;
          $inc500 = (($j$1440) + 1)|0;
          $rem494 = (($49>>>0) % ($mul499>>>0))&-1;
          $cmp495 = ($rem494|0)==(0);
          if ($cmp495) {
           $i$3439 = $mul499;$j$1440 = $inc500;
          } else {
           $j$2 = $inc500;
           break;
          }
         }
        } else {
         $j$2 = 0;
        }
       }
      } else {
       $j$2 = 9;
      }
      $or504 = $t$addr$0 | 32;
      $cmp505 = ($or504|0)==(102);
      $sub$ptr$lhs$cast508 = $z$7;
      $sub$ptr$sub510 = (($sub$ptr$lhs$cast508) - ($sub$ptr$lhs$cast318))|0;
      $sub$ptr$div511 = $sub$ptr$sub510 >> 2;
      $50 = ($sub$ptr$div511*9)|0;
      $mul513 = (($50) + -9)|0;
      if ($cmp505) {
       $sub514 = (($mul513) - ($j$2))|0;
       $51 = ($sub514|0)>(0);
       $$sub514 = $51 ? $sub514 : 0;
       $cmp528 = ($p$addr$2|0)<($$sub514|0);
       $p$addr$2$$sub514399 = $cmp528 ? $p$addr$2 : $$sub514;
       $and610$pre$phiZ2D = 0;$p$addr$3 = $p$addr$2$$sub514399;$t$addr$1 = $t$addr$0;
       break;
      } else {
       $add561 = (($mul513) + ($e$5$ph))|0;
       $sub562 = (($add561) - ($j$2))|0;
       $52 = ($sub562|0)>(0);
       $$sub562 = $52 ? $sub562 : 0;
       $cmp577 = ($p$addr$2|0)<($$sub562|0);
       $p$addr$2$$sub562400 = $cmp577 ? $p$addr$2 : $$sub562;
       $and610$pre$phiZ2D = 0;$p$addr$3 = $p$addr$2$$sub562400;$t$addr$1 = $t$addr$0;
       break;
      }
     } else {
      $and610$pre$phiZ2D = $and483;$p$addr$3 = $p$addr$2;$t$addr$1 = $t$addr$0;
     }
    } else {
     $$pre487 = $fl & 8;
     $and610$pre$phiZ2D = $$pre487;$p$addr$3 = $$p;$t$addr$1 = $t;
    }
   } while(0);
   $53 = $p$addr$3 | $and610$pre$phiZ2D;
   $54 = ($53|0)!=(0);
   $lor$ext = $54&1;
   $or613 = $t$addr$1 | 32;
   $cmp614 = ($or613|0)==(102);
   if ($cmp614) {
    $cmp617 = ($e$5$ph|0)>(0);
    $add620 = $cmp617 ? $e$5$ph : 0;
    $estr$2 = 0;$sub$ptr$sub650$pn = $add620;
   } else {
    $cmp623 = ($e$5$ph|0)<(0);
    $cond629 = $cmp623 ? $sub626$le : $e$5$ph;
    $55 = ($cond629|0)<(0);
    $56 = $55 << 31 >> 31;
    $57 = (_fmt_u($cond629,$56,$arrayidx)|0);
    $sub$ptr$lhs$cast633 = $arrayidx;
    $sub$ptr$rhs$cast634431 = $57;
    $sub$ptr$sub635432 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast634431))|0;
    $cmp636433 = ($sub$ptr$sub635432|0)<(2);
    if ($cmp636433) {
     $estr$1434 = $57;
     while(1) {
      $incdec$ptr639 = ((($estr$1434)) + -1|0);
      HEAP8[$incdec$ptr639>>0] = 48;
      $sub$ptr$rhs$cast634 = $incdec$ptr639;
      $sub$ptr$sub635 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast634))|0;
      $cmp636 = ($sub$ptr$sub635|0)<(2);
      if ($cmp636) {
       $estr$1434 = $incdec$ptr639;
      } else {
       $estr$1$lcssa = $incdec$ptr639;
       break;
      }
     }
    } else {
     $estr$1$lcssa = $57;
    }
    $58 = $e$5$ph >> 31;
    $59 = $58 & 2;
    $60 = (($59) + 43)|0;
    $conv644 = $60&255;
    $incdec$ptr645 = ((($estr$1$lcssa)) + -1|0);
    HEAP8[$incdec$ptr645>>0] = $conv644;
    $conv646 = $t$addr$1&255;
    $incdec$ptr647 = ((($estr$1$lcssa)) + -2|0);
    HEAP8[$incdec$ptr647>>0] = $conv646;
    $sub$ptr$rhs$cast649 = $incdec$ptr647;
    $sub$ptr$sub650 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast649))|0;
    $estr$2 = $incdec$ptr647;$sub$ptr$sub650$pn = $sub$ptr$sub650;
   }
   $add608 = (($pl$0) + 1)|0;
   $add612 = (($add608) + ($p$addr$3))|0;
   $l$1 = (($add612) + ($lor$ext))|0;
   $add653 = (($l$1) + ($sub$ptr$sub650$pn))|0;
   _pad_684($f,32,$w,$add653,$fl);
   _out($f,$prefix$0,$pl$0);
   $xor655 = $fl ^ 65536;
   _pad_684($f,48,$w,$add653,$xor655);
   if ($cmp614) {
    $cmp660 = ($a$9$ph>>>0)>($arraydecay208$add$ptr213>>>0);
    $r$0$a$9 = $cmp660 ? $arraydecay208$add$ptr213 : $a$9$ph;
    $add$ptr671 = ((($buf)) + 9|0);
    $sub$ptr$lhs$cast694 = $add$ptr671;
    $incdec$ptr689 = ((($buf)) + 8|0);
    $d$5422 = $r$0$a$9;
    while(1) {
     $61 = HEAP32[$d$5422>>2]|0;
     $62 = (_fmt_u($61,0,$add$ptr671)|0);
     $cmp673 = ($d$5422|0)==($r$0$a$9|0);
     if ($cmp673) {
      $cmp686 = ($62|0)==($add$ptr671|0);
      if ($cmp686) {
       HEAP8[$incdec$ptr689>>0] = 48;
       $s668$1 = $incdec$ptr689;
      } else {
       $s668$1 = $62;
      }
     } else {
      $cmp678419 = ($62>>>0)>($buf>>>0);
      if ($cmp678419) {
       $63 = $62;
       $64 = (($63) - ($sub$ptr$rhs$cast))|0;
       _memset(($buf|0),48,($64|0))|0;
       $s668$0420 = $62;
       while(1) {
        $incdec$ptr681 = ((($s668$0420)) + -1|0);
        $cmp678 = ($incdec$ptr681>>>0)>($buf>>>0);
        if ($cmp678) {
         $s668$0420 = $incdec$ptr681;
        } else {
         $s668$1 = $incdec$ptr681;
         break;
        }
       }
      } else {
       $s668$1 = $62;
      }
     }
     $sub$ptr$rhs$cast695 = $s668$1;
     $sub$ptr$sub696 = (($sub$ptr$lhs$cast694) - ($sub$ptr$rhs$cast695))|0;
     _out($f,$s668$1,$sub$ptr$sub696);
     $incdec$ptr698 = ((($d$5422)) + 4|0);
     $cmp665 = ($incdec$ptr698>>>0)>($arraydecay208$add$ptr213>>>0);
     if ($cmp665) {
      break;
     } else {
      $d$5422 = $incdec$ptr698;
     }
    }
    $65 = ($53|0)==(0);
    if (!($65)) {
     _out($f,6127,1);
    }
    $cmp707414 = ($incdec$ptr698>>>0)<($z$7>>>0);
    $cmp710415 = ($p$addr$3|0)>(0);
    $66 = $cmp707414 & $cmp710415;
    if ($66) {
     $d$6416 = $incdec$ptr698;$p$addr$4417 = $p$addr$3;
     while(1) {
      $67 = HEAP32[$d$6416>>2]|0;
      $68 = (_fmt_u($67,0,$add$ptr671)|0);
      $cmp722411 = ($68>>>0)>($buf>>>0);
      if ($cmp722411) {
       $69 = $68;
       $70 = (($69) - ($sub$ptr$rhs$cast))|0;
       _memset(($buf|0),48,($70|0))|0;
       $s715$0412 = $68;
       while(1) {
        $incdec$ptr725 = ((($s715$0412)) + -1|0);
        $cmp722 = ($incdec$ptr725>>>0)>($buf>>>0);
        if ($cmp722) {
         $s715$0412 = $incdec$ptr725;
        } else {
         $s715$0$lcssa = $incdec$ptr725;
         break;
        }
       }
      } else {
       $s715$0$lcssa = $68;
      }
      $71 = ($p$addr$4417|0)<(9);
      $cond732 = $71 ? $p$addr$4417 : 9;
      _out($f,$s715$0$lcssa,$cond732);
      $incdec$ptr734 = ((($d$6416)) + 4|0);
      $sub735 = (($p$addr$4417) + -9)|0;
      $cmp707 = ($incdec$ptr734>>>0)<($z$7>>>0);
      $cmp710 = ($p$addr$4417|0)>(9);
      $72 = $cmp707 & $cmp710;
      if ($72) {
       $d$6416 = $incdec$ptr734;$p$addr$4417 = $sub735;
      } else {
       $p$addr$4$lcssa = $sub735;
       break;
      }
     }
    } else {
     $p$addr$4$lcssa = $p$addr$3;
    }
    $add737 = (($p$addr$4$lcssa) + 9)|0;
    _pad_684($f,48,$add737,9,0);
   } else {
    $add$ptr742 = ((($a$9$ph)) + 4|0);
    $z$7$add$ptr742 = $cmp450$lcssa ? $z$7 : $add$ptr742;
    $cmp748427 = ($p$addr$3|0)>(-1);
    if ($cmp748427) {
     $add$ptr756 = ((($buf)) + 9|0);
     $tobool781 = ($and610$pre$phiZ2D|0)==(0);
     $sub$ptr$lhs$cast787 = $add$ptr756;
     $73 = (0 - ($sub$ptr$rhs$cast))|0;
     $incdec$ptr763 = ((($buf)) + 8|0);
     $d$7428 = $a$9$ph;$p$addr$5429 = $p$addr$3;
     while(1) {
      $74 = HEAP32[$d$7428>>2]|0;
      $75 = (_fmt_u($74,0,$add$ptr756)|0);
      $cmp760 = ($75|0)==($add$ptr756|0);
      if ($cmp760) {
       HEAP8[$incdec$ptr763>>0] = 48;
       $s753$0 = $incdec$ptr763;
      } else {
       $s753$0 = $75;
      }
      $cmp765 = ($d$7428|0)==($a$9$ph|0);
      do {
       if ($cmp765) {
        $incdec$ptr776 = ((($s753$0)) + 1|0);
        _out($f,$s753$0,1);
        $cmp777 = ($p$addr$5429|0)<(1);
        $or$cond402 = $tobool781 & $cmp777;
        if ($or$cond402) {
         $s753$2 = $incdec$ptr776;
         break;
        }
        _out($f,6127,1);
        $s753$2 = $incdec$ptr776;
       } else {
        $cmp770423 = ($s753$0>>>0)>($buf>>>0);
        if (!($cmp770423)) {
         $s753$2 = $s753$0;
         break;
        }
        $scevgep483 = (($s753$0) + ($73)|0);
        $scevgep483484 = $scevgep483;
        _memset(($buf|0),48,($scevgep483484|0))|0;
        $s753$1424 = $s753$0;
        while(1) {
         $incdec$ptr773 = ((($s753$1424)) + -1|0);
         $cmp770 = ($incdec$ptr773>>>0)>($buf>>>0);
         if ($cmp770) {
          $s753$1424 = $incdec$ptr773;
         } else {
          $s753$2 = $incdec$ptr773;
          break;
         }
        }
       }
      } while(0);
      $sub$ptr$rhs$cast788 = $s753$2;
      $sub$ptr$sub789 = (($sub$ptr$lhs$cast787) - ($sub$ptr$rhs$cast788))|0;
      $cmp790 = ($p$addr$5429|0)>($sub$ptr$sub789|0);
      $cond800 = $cmp790 ? $sub$ptr$sub789 : $p$addr$5429;
      _out($f,$s753$2,$cond800);
      $sub806 = (($p$addr$5429) - ($sub$ptr$sub789))|0;
      $incdec$ptr808 = ((($d$7428)) + 4|0);
      $cmp745 = ($incdec$ptr808>>>0)<($z$7$add$ptr742>>>0);
      $cmp748 = ($sub806|0)>(-1);
      $76 = $cmp745 & $cmp748;
      if ($76) {
       $d$7428 = $incdec$ptr808;$p$addr$5429 = $sub806;
      } else {
       $p$addr$5$lcssa = $sub806;
       break;
      }
     }
    } else {
     $p$addr$5$lcssa = $p$addr$3;
    }
    $add810 = (($p$addr$5$lcssa) + 18)|0;
    _pad_684($f,48,$add810,18,0);
    $sub$ptr$lhs$cast811 = $arrayidx;
    $sub$ptr$rhs$cast812 = $estr$2;
    $sub$ptr$sub813 = (($sub$ptr$lhs$cast811) - ($sub$ptr$rhs$cast812))|0;
    _out($f,$estr$2,$sub$ptr$sub813);
   }
   $xor816 = $fl ^ 8192;
   _pad_684($f,32,$w,$add653,$xor816);
   $add653$sink406 = $add653;
  } else {
   $and36 = $t & 32;
   $tobool37 = ($and36|0)!=(0);
   $cond = $tobool37 ? 3162 : 3166;
   $cmp38 = ($y$addr$0 != $y$addr$0) | (0.0 != 0.0);
   $cond43 = $tobool37 ? 3170 : 3174;
   $s35$0 = $cmp38 ? $cond43 : $cond;
   $add = (($pl$0) + 3)|0;
   $and45 = $fl & -65537;
   _pad_684($f,32,$w,$add,$and45);
   _out($f,$prefix$0,$pl$0);
   _out($f,$s35$0,3);
   $xor = $fl ^ 8192;
   _pad_684($f,32,$w,$add,$xor);
   $add653$sink406 = $add;
  }
 } while(0);
 $cmp818 = ($add653$sink406|0)<($w|0);
 $w$add653 = $cmp818 ? $w : $add653$sink406;
 STACKTOP = sp;return ($w$add653|0);
}
function ___DOUBLE_BITS_685($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $call = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (+_frexp($x,$e));
 return (+$call);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $call = 0.0, $conv = 0, $mul = 0.0, $retval$0 = 0.0, $storemerge = 0, $sub = 0, $sub8 = 0, $tobool1 = 0, $trunc$clear = 0, $x$addr$0 = 0.0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2&65535;
 $trunc$clear = $4 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $tobool1 = $x != 0.0;
  if ($tobool1) {
   $mul = $x * 1.8446744073709552E+19;
   $call = (+_frexp($mul,$e));
   $5 = HEAP32[$e>>2]|0;
   $sub = (($5) + -64)|0;
   $storemerge = $sub;$x$addr$0 = $call;
  } else {
   $storemerge = 0;$x$addr$0 = $x;
  }
  HEAP32[$e>>2] = $storemerge;
  $retval$0 = $x$addr$0;
  break;
 }
 case 2047:  {
  $retval$0 = $x;
  break;
 }
 default: {
  $conv = $2 & 2047;
  $sub8 = (($conv) + -1022)|0;
  HEAP32[$e>>2] = $sub8;
  $6 = $1 & -2146435073;
  $7 = $6 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $7;$8 = +HEAPF64[tempDoublePtr>>3];
  $retval$0 = $8;
 }
 }
 return (+$retval$0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $and = 0, $and32 = 0, $and36 = 0, $and49 = 0, $and54 = 0, $and58 = 0, $call = 0, $call10 = 0, $call66 = 0, $cmp = 0, $cmp14 = 0, $cmp21 = 0, $cmp24 = 0, $cmp41 = 0, $cmp7 = 0, $conv = 0;
 var $conv12 = 0, $conv17 = 0, $conv19 = 0, $conv29 = 0, $conv34 = 0, $conv38 = 0, $conv46 = 0, $conv51 = 0, $conv56 = 0, $conv60 = 0, $incdec$ptr = 0, $incdec$ptr30 = 0, $incdec$ptr35 = 0, $incdec$ptr47 = 0, $incdec$ptr52 = 0, $incdec$ptr57 = 0, $locale = 0, $not$tobool2 = 0, $or = 0, $or$cond = 0;
 var $or18 = 0, $or28 = 0, $or33 = 0, $or37 = 0, $or45 = 0, $or50 = 0, $or55 = 0, $or59 = 0, $retval$0 = 0, $shr2729 = 0, $shr3130 = 0, $shr32 = 0, $shr4426 = 0, $shr4827 = 0, $shr5328 = 0, $sub40 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($s|0)==(0|0);
 do {
  if ($tobool) {
   $retval$0 = 1;
  } else {
   $cmp = ($wc>>>0)<(128);
   if ($cmp) {
    $conv = $wc&255;
    HEAP8[$s>>0] = $conv;
    $retval$0 = 1;
    break;
   }
   $call = (___pthread_self_431()|0);
   $locale = ((($call)) + 188|0);
   $0 = HEAP32[$locale>>2]|0;
   $1 = HEAP32[$0>>2]|0;
   $not$tobool2 = ($1|0)==(0|0);
   if ($not$tobool2) {
    $2 = $wc & -128;
    $cmp7 = ($2|0)==(57216);
    if ($cmp7) {
     $conv12 = $wc&255;
     HEAP8[$s>>0] = $conv12;
     $retval$0 = 1;
     break;
    } else {
     $call10 = (___errno_location()|0);
     HEAP32[$call10>>2] = 84;
     $retval$0 = -1;
     break;
    }
   }
   $cmp14 = ($wc>>>0)<(2048);
   if ($cmp14) {
    $shr32 = $wc >>> 6;
    $or = $shr32 | 192;
    $conv17 = $or&255;
    $incdec$ptr = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv17;
    $and = $wc & 63;
    $or18 = $and | 128;
    $conv19 = $or18&255;
    HEAP8[$incdec$ptr>>0] = $conv19;
    $retval$0 = 2;
    break;
   }
   $cmp21 = ($wc>>>0)<(55296);
   $3 = $wc & -8192;
   $cmp24 = ($3|0)==(57344);
   $or$cond = $cmp21 | $cmp24;
   if ($or$cond) {
    $shr2729 = $wc >>> 12;
    $or28 = $shr2729 | 224;
    $conv29 = $or28&255;
    $incdec$ptr30 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv29;
    $shr3130 = $wc >>> 6;
    $and32 = $shr3130 & 63;
    $or33 = $and32 | 128;
    $conv34 = $or33&255;
    $incdec$ptr35 = ((($s)) + 2|0);
    HEAP8[$incdec$ptr30>>0] = $conv34;
    $and36 = $wc & 63;
    $or37 = $and36 | 128;
    $conv38 = $or37&255;
    HEAP8[$incdec$ptr35>>0] = $conv38;
    $retval$0 = 3;
    break;
   }
   $sub40 = (($wc) + -65536)|0;
   $cmp41 = ($sub40>>>0)<(1048576);
   if ($cmp41) {
    $shr4426 = $wc >>> 18;
    $or45 = $shr4426 | 240;
    $conv46 = $or45&255;
    $incdec$ptr47 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv46;
    $shr4827 = $wc >>> 12;
    $and49 = $shr4827 & 63;
    $or50 = $and49 | 128;
    $conv51 = $or50&255;
    $incdec$ptr52 = ((($s)) + 2|0);
    HEAP8[$incdec$ptr47>>0] = $conv51;
    $shr5328 = $wc >>> 6;
    $and54 = $shr5328 & 63;
    $or55 = $and54 | 128;
    $conv56 = $or55&255;
    $incdec$ptr57 = ((($s)) + 3|0);
    HEAP8[$incdec$ptr52>>0] = $conv56;
    $and58 = $wc & 63;
    $or59 = $and58 | 128;
    $conv60 = $or59&255;
    HEAP8[$incdec$ptr57>>0] = $conv60;
    $retval$0 = 4;
    break;
   } else {
    $call66 = (___errno_location()|0);
    HEAP32[$call66>>2] = 84;
    $retval$0 = -1;
    break;
   }
  }
 } while(0);
 return ($retval$0|0);
}
function ___pthread_self_431() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function ___pthread_self_104() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function ___strerror_l($e,$loc) {
 $e = $e|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $2 = 0, $arrayidx = 0, $arrayidx15 = 0, $call = 0, $cmp = 0, $conv = 0, $dec = 0, $i$012 = 0, $i$111 = 0, $inc = 0, $incdec$ptr = 0, $s$0$lcssa = 0, $s$010 = 0, $s$1 = 0, $tobool = 0, $tobool5 = 0, $tobool59 = 0, $tobool8 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $i$012 = 0;
 while(1) {
  $arrayidx = (3194 + ($i$012)|0);
  $0 = HEAP8[$arrayidx>>0]|0;
  $conv = $0&255;
  $cmp = ($conv|0)==($e|0);
  if ($cmp) {
   label = 2;
   break;
  }
  $inc = (($i$012) + 1)|0;
  $tobool = ($inc|0)==(87);
  if ($tobool) {
   $i$111 = 87;$s$010 = 3282;
   label = 5;
   break;
  } else {
   $i$012 = $inc;
  }
 }
 if ((label|0) == 2) {
  $tobool59 = ($i$012|0)==(0);
  if ($tobool59) {
   $s$0$lcssa = 3282;
  } else {
   $i$111 = $i$012;$s$010 = 3282;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$010;
   while(1) {
    $1 = HEAP8[$s$1>>0]|0;
    $tobool8 = ($1<<24>>24)==(0);
    $incdec$ptr = ((($s$1)) + 1|0);
    if ($tobool8) {
     break;
    } else {
     $s$1 = $incdec$ptr;
    }
   }
   $dec = (($i$111) + -1)|0;
   $tobool5 = ($dec|0)==(0);
   if ($tobool5) {
    $s$0$lcssa = $incdec$ptr;
    break;
   } else {
    $i$111 = $dec;$s$010 = $incdec$ptr;
    label = 5;
   }
  }
 }
 $arrayidx15 = ((($loc)) + 20|0);
 $2 = HEAP32[$arrayidx15>>2]|0;
 $call = (___lctrans($s$0$lcssa,$2)|0);
 return ($call|0);
}
function ___lctrans($msg,$lm) {
 $msg = $msg|0;
 $lm = $lm|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___lctrans_impl($msg,$lm)|0);
 return ($call|0);
}
function ___lctrans_impl($msg,$lm) {
 $msg = $msg|0;
 $lm = $lm|0;
 var $0 = 0, $1 = 0, $call = 0, $cond = 0, $map_size = 0, $tobool = 0, $tobool1 = 0, $trans$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($lm|0)==(0|0);
 if ($tobool) {
  $trans$0 = 0;
 } else {
  $0 = HEAP32[$lm>>2]|0;
  $map_size = ((($lm)) + 4|0);
  $1 = HEAP32[$map_size>>2]|0;
  $call = (___mo_lookup($0,$1,$msg)|0);
  $trans$0 = $call;
 }
 $tobool1 = ($trans$0|0)!=(0|0);
 $cond = $tobool1 ? $trans$0 : $msg;
 return ($cond|0);
}
function ___mo_lookup($p,$size,$s) {
 $p = $p|0;
 $size = $size|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr65 = 0, $add$ptr65$ = 0, $add16 = 0, $add23 = 0, $add31 = 0, $add42 = 0, $add49 = 0, $add59 = 0;
 var $arrayidx = 0, $arrayidx1 = 0, $arrayidx17 = 0, $arrayidx24 = 0, $arrayidx3 = 0, $arrayidx32 = 0, $arrayidx43 = 0, $arrayidx50 = 0, $arrayidx60 = 0, $b$0 = 0, $b$1 = 0, $call = 0, $call18 = 0, $call2 = 0, $call25 = 0, $call36 = 0, $call4 = 0, $call44 = 0, $call51 = 0, $cmp = 0;
 var $cmp10 = 0, $cmp26 = 0, $cmp29 = 0, $cmp52 = 0, $cmp56 = 0, $cmp6 = 0, $cmp67 = 0, $cmp71 = 0, $div = 0, $div12 = 0, $div13 = 0, $div14 = 0, $mul = 0, $mul15 = 0, $n$0 = 0, $n$1 = 0, $or = 0, $or$cond = 0, $or$cond66 = 0, $or$cond67 = 0;
 var $rem = 0, $retval$4 = 0, $sub = 0, $sub28 = 0, $sub5 = 0, $sub55 = 0, $sub79 = 0, $tobool = 0, $tobool33 = 0, $tobool37 = 0, $tobool62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$p>>2]|0;
 $sub = (($0) + 1794895138)|0;
 $arrayidx = ((($p)) + 8|0);
 $1 = HEAP32[$arrayidx>>2]|0;
 $call = (_swapc($1,$sub)|0);
 $arrayidx1 = ((($p)) + 12|0);
 $2 = HEAP32[$arrayidx1>>2]|0;
 $call2 = (_swapc($2,$sub)|0);
 $arrayidx3 = ((($p)) + 16|0);
 $3 = HEAP32[$arrayidx3>>2]|0;
 $call4 = (_swapc($3,$sub)|0);
 $div = $size >>> 2;
 $cmp = ($call>>>0)<($div>>>0);
 L1: do {
  if ($cmp) {
   $mul = $call << 2;
   $sub5 = (($size) - ($mul))|0;
   $cmp6 = ($call2>>>0)<($sub5>>>0);
   $cmp10 = ($call4>>>0)<($sub5>>>0);
   $or$cond = $cmp6 & $cmp10;
   if ($or$cond) {
    $or = $call4 | $call2;
    $rem = $or & 3;
    $tobool = ($rem|0)==(0);
    if ($tobool) {
     $div12 = $call2 >>> 2;
     $div13 = $call4 >>> 2;
     $b$0 = 0;$n$0 = $call;
     while(1) {
      $div14 = $n$0 >>> 1;
      $add = (($b$0) + ($div14))|0;
      $mul15 = $add << 1;
      $add16 = (($mul15) + ($div12))|0;
      $arrayidx17 = (($p) + ($add16<<2)|0);
      $4 = HEAP32[$arrayidx17>>2]|0;
      $call18 = (_swapc($4,$sub)|0);
      $add23 = (($add16) + 1)|0;
      $arrayidx24 = (($p) + ($add23<<2)|0);
      $5 = HEAP32[$arrayidx24>>2]|0;
      $call25 = (_swapc($5,$sub)|0);
      $cmp26 = ($call25>>>0)<($size>>>0);
      $sub28 = (($size) - ($call25))|0;
      $cmp29 = ($call18>>>0)<($sub28>>>0);
      $or$cond66 = $cmp26 & $cmp29;
      if (!($or$cond66)) {
       $retval$4 = 0;
       break L1;
      }
      $add31 = (($call25) + ($call18))|0;
      $arrayidx32 = (($p) + ($add31)|0);
      $6 = HEAP8[$arrayidx32>>0]|0;
      $tobool33 = ($6<<24>>24)==(0);
      if (!($tobool33)) {
       $retval$4 = 0;
       break L1;
      }
      $add$ptr = (($p) + ($call25)|0);
      $call36 = (_strcmp($s,$add$ptr)|0);
      $tobool37 = ($call36|0)==(0);
      if ($tobool37) {
       break;
      }
      $cmp67 = ($n$0|0)==(1);
      $cmp71 = ($call36|0)<(0);
      $sub79 = (($n$0) - ($div14))|0;
      $n$1 = $cmp71 ? $div14 : $sub79;
      $b$1 = $cmp71 ? $b$0 : $add;
      if ($cmp67) {
       $retval$4 = 0;
       break L1;
      } else {
       $b$0 = $b$1;$n$0 = $n$1;
      }
     }
     $add42 = (($mul15) + ($div13))|0;
     $arrayidx43 = (($p) + ($add42<<2)|0);
     $7 = HEAP32[$arrayidx43>>2]|0;
     $call44 = (_swapc($7,$sub)|0);
     $add49 = (($add42) + 1)|0;
     $arrayidx50 = (($p) + ($add49<<2)|0);
     $8 = HEAP32[$arrayidx50>>2]|0;
     $call51 = (_swapc($8,$sub)|0);
     $cmp52 = ($call51>>>0)<($size>>>0);
     $sub55 = (($size) - ($call51))|0;
     $cmp56 = ($call44>>>0)<($sub55>>>0);
     $or$cond67 = $cmp52 & $cmp56;
     if ($or$cond67) {
      $add$ptr65 = (($p) + ($call51)|0);
      $add59 = (($call51) + ($call44))|0;
      $arrayidx60 = (($p) + ($add59)|0);
      $9 = HEAP8[$arrayidx60>>0]|0;
      $tobool62 = ($9<<24>>24)==(0);
      $add$ptr65$ = $tobool62 ? $add$ptr65 : 0;
      $retval$4 = $add$ptr65$;
     } else {
      $retval$4 = 0;
     }
    } else {
     $retval$4 = 0;
    }
   } else {
    $retval$4 = 0;
   }
  } else {
   $retval$4 = 0;
  }
 } while(0);
 return ($retval$4|0);
}
function _swapc($x,$c) {
 $x = $x|0;
 $c = $c|0;
 var $or5 = 0, $tobool = 0, $x$or5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($c|0)==(0);
 $or5 = (_llvm_bswap_i32(($x|0))|0);
 $x$or5 = $tobool ? $x : $or5;
 return ($x$or5|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$pre = 0, $$pre33 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr26 = 0, $arrayidx = 0, $call = 0, $call16 = 0, $call4 = 0;
 var $cmp = 0, $cmp11 = 0, $cmp17 = 0, $cmp6 = 0, $i$0 = 0, $i$1 = 0, $l$addr$0 = 0, $l$addr$1 = 0, $lbf = 0, $retval$1 = 0, $s$addr$1 = 0, $sub = 0, $sub$ptr$sub = 0, $tobool = 0, $tobool1 = 0, $tobool9 = 0, $wend = 0, $wpos = 0, $write = 0, $write15 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $wend = ((($f)) + 16|0);
 $0 = HEAP32[$wend>>2]|0;
 $tobool = ($0|0)==(0|0);
 if ($tobool) {
  $call = (___towrite($f)|0);
  $tobool1 = ($call|0)==(0);
  if ($tobool1) {
   $$pre = HEAP32[$wend>>2]|0;
   $3 = $$pre;
   label = 5;
  } else {
   $retval$1 = 0;
  }
 } else {
  $1 = $0;
  $3 = $1;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $wpos = ((($f)) + 20|0);
   $2 = HEAP32[$wpos>>2]|0;
   $sub$ptr$sub = (($3) - ($2))|0;
   $cmp = ($sub$ptr$sub>>>0)<($l>>>0);
   $4 = $2;
   if ($cmp) {
    $write = ((($f)) + 36|0);
    $5 = HEAP32[$write>>2]|0;
    $call4 = (FUNCTION_TABLE_iiii[$5 & 127]($f,$s,$l)|0);
    $retval$1 = $call4;
    break;
   }
   $lbf = ((($f)) + 75|0);
   $6 = HEAP8[$lbf>>0]|0;
   $cmp6 = ($6<<24>>24)>(-1);
   L10: do {
    if ($cmp6) {
     $i$0 = $l;
     while(1) {
      $tobool9 = ($i$0|0)==(0);
      if ($tobool9) {
       $9 = $4;$i$1 = 0;$l$addr$1 = $l;$s$addr$1 = $s;
       break L10;
      }
      $sub = (($i$0) + -1)|0;
      $arrayidx = (($s) + ($sub)|0);
      $7 = HEAP8[$arrayidx>>0]|0;
      $cmp11 = ($7<<24>>24)==(10);
      if ($cmp11) {
       break;
      } else {
       $i$0 = $sub;
      }
     }
     $write15 = ((($f)) + 36|0);
     $8 = HEAP32[$write15>>2]|0;
     $call16 = (FUNCTION_TABLE_iiii[$8 & 127]($f,$s,$i$0)|0);
     $cmp17 = ($call16>>>0)<($i$0>>>0);
     if ($cmp17) {
      $retval$1 = $call16;
      break L5;
     }
     $add$ptr = (($s) + ($i$0)|0);
     $l$addr$0 = (($l) - ($i$0))|0;
     $$pre33 = HEAP32[$wpos>>2]|0;
     $9 = $$pre33;$i$1 = $i$0;$l$addr$1 = $l$addr$0;$s$addr$1 = $add$ptr;
    } else {
     $9 = $4;$i$1 = 0;$l$addr$1 = $l;$s$addr$1 = $s;
    }
   } while(0);
   _memcpy(($9|0),($s$addr$1|0),($l$addr$1|0))|0;
   $10 = HEAP32[$wpos>>2]|0;
   $add$ptr26 = (($10) + ($l$addr$1)|0);
   HEAP32[$wpos>>2] = $add$ptr26;
   $add = (($i$1) + ($l$addr$1))|0;
   $retval$1 = $add;
  }
 } while(0);
 return ($retval$1|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add$ptr = 0, $and = 0, $buf = 0, $buf_size = 0, $conv = 0, $conv3 = 0, $mode = 0, $or = 0, $or5 = 0, $rend = 0, $retval$0 = 0, $rpos = 0, $sub = 0, $tobool = 0, $wbase = 0, $wend = 0;
 var $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $mode = ((($f)) + 74|0);
 $0 = HEAP8[$mode>>0]|0;
 $conv = $0 << 24 >> 24;
 $sub = (($conv) + 255)|0;
 $or = $sub | $conv;
 $conv3 = $or&255;
 HEAP8[$mode>>0] = $conv3;
 $1 = HEAP32[$f>>2]|0;
 $and = $1 & 8;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $rend = ((($f)) + 8|0);
  HEAP32[$rend>>2] = 0;
  $rpos = ((($f)) + 4|0);
  HEAP32[$rpos>>2] = 0;
  $buf = ((($f)) + 44|0);
  $2 = HEAP32[$buf>>2]|0;
  $wbase = ((($f)) + 28|0);
  HEAP32[$wbase>>2] = $2;
  $wpos = ((($f)) + 20|0);
  HEAP32[$wpos>>2] = $2;
  $buf_size = ((($f)) + 48|0);
  $3 = HEAP32[$buf_size>>2]|0;
  $add$ptr = (($2) + ($3)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  $retval$0 = 0;
 } else {
  $or5 = $1 | 32;
  HEAP32[$f>>2] = $or5;
  $retval$0 = -1;
 }
 return ($retval$0|0);
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $add$ptr = 0, $cmp = 0, $l$sub$ptr$sub = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $wend = 0, $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $wend = ((($f)) + 16|0);
 $0 = HEAP32[$wend>>2]|0;
 $wpos = ((($f)) + 20|0);
 $1 = HEAP32[$wpos>>2]|0;
 $sub$ptr$rhs$cast = $1;
 $sub$ptr$sub = (($0) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub>>>0)>($l>>>0);
 $l$sub$ptr$sub = $cmp ? $l : $sub$ptr$sub;
 _memcpy(($1|0),($s|0),($l$sub$ptr$sub|0))|0;
 $2 = HEAP32[$wpos>>2]|0;
 $add$ptr = (($2) + ($l$sub$ptr$sub)|0);
 HEAP32[$wpos>>2] = $add$ptr;
 return ($l|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $$cmp = 0, $cmp = 0, $isdigit = 0, $isdigittmp = 0, $lor$ext = 0, $or = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $or = $c | 32;
 $sub = (($or) + -97)|0;
 $cmp = ($sub>>>0)<(6);
 $$cmp = $isdigit | $cmp;
 $lor$ext = $$cmp&1;
 return ($lor$ext|0);
}
function _strlen($s) {
 $s = $s|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $and = 0, $and3 = 0, $incdec$ptr = 0, $incdec$ptr1323 = 0, $incdec$ptr7 = 0, $lnot = 0, $neg = 0, $rem = 0, $rem13 = 0, $s$addr$0$lcssa = 0, $s$addr$015 = 0, $s$addr$1$lcssa = 0;
 var $sub = 0, $sub$ptr$lhs$cast15 = 0, $sub$ptr$lhs$cast15$sink = 0, $sub$ptr$sub17 = 0, $tobool = 0, $tobool1 = 0, $tobool10 = 0, $tobool1021 = 0, $tobool14 = 0, $w$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $rem13 = $0 & 3;
 $tobool14 = ($rem13|0)==(0);
 L1: do {
  if ($tobool14) {
   $s$addr$0$lcssa = $s;
   label = 4;
  } else {
   $5 = $0;$s$addr$015 = $s;
   while(1) {
    $1 = HEAP8[$s$addr$015>>0]|0;
    $tobool1 = ($1<<24>>24)==(0);
    if ($tobool1) {
     $sub$ptr$lhs$cast15$sink = $5;
     break L1;
    }
    $incdec$ptr = ((($s$addr$015)) + 1|0);
    $2 = $incdec$ptr;
    $rem = $2 & 3;
    $tobool = ($rem|0)==(0);
    if ($tobool) {
     $s$addr$0$lcssa = $incdec$ptr;
     label = 4;
     break;
    } else {
     $5 = $2;$s$addr$015 = $incdec$ptr;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $s$addr$0$lcssa;
  while(1) {
   $3 = HEAP32[$w$0>>2]|0;
   $sub = (($3) + -16843009)|0;
   $neg = $3 & -2139062144;
   $and = $neg ^ -2139062144;
   $and3 = $and & $sub;
   $lnot = ($and3|0)==(0);
   $incdec$ptr7 = ((($w$0)) + 4|0);
   if ($lnot) {
    $w$0 = $incdec$ptr7;
   } else {
    break;
   }
  }
  $4 = $3&255;
  $tobool1021 = ($4<<24>>24)==(0);
  if ($tobool1021) {
   $s$addr$1$lcssa = $w$0;
  } else {
   $$pn = $w$0;
   while(1) {
    $incdec$ptr1323 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$incdec$ptr1323>>0]|0;
    $tobool10 = ($$pre<<24>>24)==(0);
    if ($tobool10) {
     $s$addr$1$lcssa = $incdec$ptr1323;
     break;
    } else {
     $$pn = $incdec$ptr1323;
    }
   }
  }
  $sub$ptr$lhs$cast15 = $s$addr$1$lcssa;
  $sub$ptr$lhs$cast15$sink = $sub$ptr$lhs$cast15;
 }
 $sub$ptr$sub17 = (($sub$ptr$lhs$cast15$sink) - ($0))|0;
 return ($sub$ptr$sub17|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $ap = 0, $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $call = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($call|0);
}
function _strcpy($dest,$src) {
 $dest = $dest|0;
 $src = $src|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($dest,$src)|0);
 return ($dest|0);
}
function ___stpcpy($d,$s) {
 $d = $d|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $and = 0, $and28 = 0, $and7 = 0, $and729 = 0, $cmp = 0, $d$addr$0$lcssa = 0, $d$addr$037 = 0, $d$addr$1$ph = 0, $d$addr$124 = 0;
 var $incdec$ptr = 0, $incdec$ptr11 = 0, $incdec$ptr12 = 0, $incdec$ptr19 = 0, $incdec$ptr20 = 0, $incdec$ptr5 = 0, $lnot = 0, $lnot30 = 0, $neg = 0, $neg27 = 0, $rem2 = 0, $rem235 = 0, $retval$0 = 0, $s$addr$0$lcssa = 0, $s$addr$038 = 0, $s$addr$1$ph = 0, $s$addr$125 = 0, $sub = 0, $sub26 = 0, $tobool = 0;
 var $tobool16 = 0, $tobool1623 = 0, $tobool3 = 0, $tobool36 = 0, $wd$0$lcssa = 0, $wd$031 = 0, $ws$0$lcssa = 0, $ws$032 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $d;
 $2 = $0 ^ $1;
 $3 = $2 & 3;
 $cmp = ($3|0)==(0);
 L1: do {
  if ($cmp) {
   $rem235 = $0 & 3;
   $tobool36 = ($rem235|0)==(0);
   if ($tobool36) {
    $d$addr$0$lcssa = $d;$s$addr$0$lcssa = $s;
   } else {
    $d$addr$037 = $d;$s$addr$038 = $s;
    while(1) {
     $4 = HEAP8[$s$addr$038>>0]|0;
     HEAP8[$d$addr$037>>0] = $4;
     $tobool3 = ($4<<24>>24)==(0);
     if ($tobool3) {
      $retval$0 = $d$addr$037;
      break L1;
     }
     $incdec$ptr = ((($s$addr$038)) + 1|0);
     $incdec$ptr5 = ((($d$addr$037)) + 1|0);
     $5 = $incdec$ptr;
     $rem2 = $5 & 3;
     $tobool = ($rem2|0)==(0);
     if ($tobool) {
      $d$addr$0$lcssa = $incdec$ptr5;$s$addr$0$lcssa = $incdec$ptr;
      break;
     } else {
      $d$addr$037 = $incdec$ptr5;$s$addr$038 = $incdec$ptr;
     }
    }
   }
   $6 = HEAP32[$s$addr$0$lcssa>>2]|0;
   $sub26 = (($6) + -16843009)|0;
   $neg27 = $6 & -2139062144;
   $and28 = $neg27 ^ -2139062144;
   $and729 = $and28 & $sub26;
   $lnot30 = ($and729|0)==(0);
   if ($lnot30) {
    $7 = $6;$wd$031 = $d$addr$0$lcssa;$ws$032 = $s$addr$0$lcssa;
    while(1) {
     $incdec$ptr11 = ((($ws$032)) + 4|0);
     $incdec$ptr12 = ((($wd$031)) + 4|0);
     HEAP32[$wd$031>>2] = $7;
     $8 = HEAP32[$incdec$ptr11>>2]|0;
     $sub = (($8) + -16843009)|0;
     $neg = $8 & -2139062144;
     $and = $neg ^ -2139062144;
     $and7 = $and & $sub;
     $lnot = ($and7|0)==(0);
     if ($lnot) {
      $7 = $8;$wd$031 = $incdec$ptr12;$ws$032 = $incdec$ptr11;
     } else {
      $wd$0$lcssa = $incdec$ptr12;$ws$0$lcssa = $incdec$ptr11;
      break;
     }
    }
   } else {
    $wd$0$lcssa = $d$addr$0$lcssa;$ws$0$lcssa = $s$addr$0$lcssa;
   }
   $d$addr$1$ph = $wd$0$lcssa;$s$addr$1$ph = $ws$0$lcssa;
   label = 8;
  } else {
   $d$addr$1$ph = $d;$s$addr$1$ph = $s;
   label = 8;
  }
 } while(0);
 if ((label|0) == 8) {
  $9 = HEAP8[$s$addr$1$ph>>0]|0;
  HEAP8[$d$addr$1$ph>>0] = $9;
  $tobool1623 = ($9<<24>>24)==(0);
  if ($tobool1623) {
   $retval$0 = $d$addr$1$ph;
  } else {
   $d$addr$124 = $d$addr$1$ph;$s$addr$125 = $s$addr$1$ph;
   while(1) {
    $incdec$ptr19 = ((($s$addr$125)) + 1|0);
    $incdec$ptr20 = ((($d$addr$124)) + 1|0);
    $10 = HEAP8[$incdec$ptr19>>0]|0;
    HEAP8[$incdec$ptr20>>0] = $10;
    $tobool16 = ($10<<24>>24)==(0);
    if ($tobool16) {
     $retval$0 = $incdec$ptr20;
     break;
    } else {
     $d$addr$124 = $incdec$ptr20;$s$addr$125 = $incdec$ptr19;
    }
   }
  }
 }
 return ($retval$0|0);
}
function ___strdup($s) {
 $s = $s|0;
 var $add = 0, $call = 0, $call1 = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_strlen($s)|0);
 $add = (($call) + 1)|0;
 $call1 = (_malloc($add)|0);
 $tobool = ($call1|0)==(0|0);
 if ($tobool) {
  $retval$0 = 0;
 } else {
  _memcpy(($call1|0),($s|0),($add|0))|0;
  $retval$0 = $call1;
 }
 return ($retval$0|0);
}
function ___overflow($f,$_c) {
 $f = $f|0;
 $_c = $_c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $c = 0, $call = 0, $call13 = 0, $cmp = 0, $cmp14 = 0, $cmp7 = 0, $conv = 0, $conv18 = 0, $conv5 = 0, $conv6 = 0, $incdec$ptr = 0, $lbf = 0, $retval$0 = 0;
 var $tobool = 0, $tobool1 = 0, $wend = 0, $wpos = 0, $write = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $c = sp;
 $conv = $_c&255;
 HEAP8[$c>>0] = $conv;
 $wend = ((($f)) + 16|0);
 $0 = HEAP32[$wend>>2]|0;
 $tobool = ($0|0)==(0|0);
 if ($tobool) {
  $call = (___towrite($f)|0);
  $tobool1 = ($call|0)==(0);
  if ($tobool1) {
   $$pre = HEAP32[$wend>>2]|0;
   $2 = $$pre;
   label = 4;
  } else {
   $retval$0 = -1;
  }
 } else {
  $2 = $0;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $wpos = ((($f)) + 20|0);
   $1 = HEAP32[$wpos>>2]|0;
   $cmp = ($1>>>0)<($2>>>0);
   if ($cmp) {
    $conv5 = $_c & 255;
    $lbf = ((($f)) + 75|0);
    $3 = HEAP8[$lbf>>0]|0;
    $conv6 = $3 << 24 >> 24;
    $cmp7 = ($conv5|0)==($conv6|0);
    if (!($cmp7)) {
     $incdec$ptr = ((($1)) + 1|0);
     HEAP32[$wpos>>2] = $incdec$ptr;
     HEAP8[$1>>0] = $conv;
     $retval$0 = $conv5;
     break;
    }
   }
   $write = ((($f)) + 36|0);
   $4 = HEAP32[$write>>2]|0;
   $call13 = (FUNCTION_TABLE_iiii[$4 & 127]($f,$c,1)|0);
   $cmp14 = ($call13|0)==(1);
   if ($cmp14) {
    $5 = HEAP8[$c>>0]|0;
    $conv18 = $5&255;
    $retval$0 = $conv18;
   } else {
    $retval$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((7912|0));
 return (7920|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((7912|0));
 return;
}
function _fflush($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $call = 0, $call1 = 0, $call11 = 0, $call118 = 0, $call17 = 0, $call23 = 0, $call7 = 0, $cmp = 0, $cmp15 = 0, $cmp21 = 0, $cond10 = 0, $cond20 = 0, $f$addr$0 = 0, $f$addr$019 = 0;
 var $f$addr$022 = 0, $lock = 0, $lock14 = 0, $next = 0, $or = 0, $phitmp = 0, $r$0$lcssa = 0, $r$021 = 0, $r$1 = 0, $retval$0 = 0, $tobool = 0, $tobool12 = 0, $tobool1220 = 0, $tobool25 = 0, $tobool5 = 0, $wbase = 0, $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($f|0)==(0|0);
 do {
  if ($tobool) {
   $1 = HEAP32[239]|0;
   $tobool5 = ($1|0)==(0|0);
   if ($tobool5) {
    $cond10 = 0;
   } else {
    $2 = HEAP32[239]|0;
    $call7 = (_fflush($2)|0);
    $cond10 = $call7;
   }
   $call11 = (___ofl_lock()|0);
   $f$addr$019 = HEAP32[$call11>>2]|0;
   $tobool1220 = ($f$addr$019|0)==(0|0);
   if ($tobool1220) {
    $r$0$lcssa = $cond10;
   } else {
    $f$addr$022 = $f$addr$019;$r$021 = $cond10;
    while(1) {
     $lock14 = ((($f$addr$022)) + 76|0);
     $3 = HEAP32[$lock14>>2]|0;
     $cmp15 = ($3|0)>(-1);
     if ($cmp15) {
      $call17 = (___lockfile($f$addr$022)|0);
      $cond20 = $call17;
     } else {
      $cond20 = 0;
     }
     $wpos = ((($f$addr$022)) + 20|0);
     $4 = HEAP32[$wpos>>2]|0;
     $wbase = ((($f$addr$022)) + 28|0);
     $5 = HEAP32[$wbase>>2]|0;
     $cmp21 = ($4>>>0)>($5>>>0);
     if ($cmp21) {
      $call23 = (___fflush_unlocked($f$addr$022)|0);
      $or = $call23 | $r$021;
      $r$1 = $or;
     } else {
      $r$1 = $r$021;
     }
     $tobool25 = ($cond20|0)==(0);
     if (!($tobool25)) {
      ___unlockfile($f$addr$022);
     }
     $next = ((($f$addr$022)) + 56|0);
     $f$addr$0 = HEAP32[$next>>2]|0;
     $tobool12 = ($f$addr$0|0)==(0|0);
     if ($tobool12) {
      $r$0$lcssa = $r$1;
      break;
     } else {
      $f$addr$022 = $f$addr$0;$r$021 = $r$1;
     }
    }
   }
   ___ofl_unlock();
   $retval$0 = $r$0$lcssa;
  } else {
   $lock = ((($f)) + 76|0);
   $0 = HEAP32[$lock>>2]|0;
   $cmp = ($0|0)>(-1);
   if (!($cmp)) {
    $call118 = (___fflush_unlocked($f)|0);
    $retval$0 = $call118;
    break;
   }
   $call = (___lockfile($f)|0);
   $phitmp = ($call|0)==(0);
   $call1 = (___fflush_unlocked($f)|0);
   if ($phitmp) {
    $retval$0 = $call1;
   } else {
    ___unlockfile($f);
    $retval$0 = $call1;
   }
  }
 } while(0);
 return ($retval$0|0);
}
function ___fflush_unlocked($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $cmp = 0, $cmp4 = 0, $rend = 0, $retval$0 = 0, $rpos = 0, $seek = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $tobool = 0, $wbase = 0, $wend = 0, $wpos = 0;
 var $write = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $wpos = ((($f)) + 20|0);
 $0 = HEAP32[$wpos>>2]|0;
 $wbase = ((($f)) + 28|0);
 $1 = HEAP32[$wbase>>2]|0;
 $cmp = ($0>>>0)>($1>>>0);
 if ($cmp) {
  $write = ((($f)) + 36|0);
  $2 = HEAP32[$write>>2]|0;
  (FUNCTION_TABLE_iiii[$2 & 127]($f,0,0)|0);
  $3 = HEAP32[$wpos>>2]|0;
  $tobool = ($3|0)==(0|0);
  if ($tobool) {
   $retval$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $rpos = ((($f)) + 4|0);
  $4 = HEAP32[$rpos>>2]|0;
  $rend = ((($f)) + 8|0);
  $5 = HEAP32[$rend>>2]|0;
  $cmp4 = ($4>>>0)<($5>>>0);
  if ($cmp4) {
   $sub$ptr$lhs$cast = $4;
   $sub$ptr$rhs$cast = $5;
   $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
   $seek = ((($f)) + 40|0);
   $6 = HEAP32[$seek>>2]|0;
   (FUNCTION_TABLE_iiii[$6 & 127]($f,$sub$ptr$sub,1)|0);
  }
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = 0;
  HEAP32[$wbase>>2] = 0;
  HEAP32[$wpos>>2] = 0;
  HEAP32[$rend>>2] = 0;
  HEAP32[$rpos>>2] = 0;
  $retval$0 = 0;
 }
 return ($retval$0|0);
}
function _fputc($c,$f) {
 $c = $c|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $call = 0, $call10 = 0, $call28 = 0, $cmp = 0, $cmp15 = 0, $cmp20 = 0, $cmp3 = 0, $cmp5 = 0, $cond30 = 0, $conv = 0, $conv1 = 0, $conv14 = 0, $conv2 = 0;
 var $incdec$ptr = 0, $incdec$ptr25 = 0, $lbf = 0, $lbf13 = 0, $lock = 0, $retval$0 = 0, $tobool = 0, $wend = 0, $wend19 = 0, $wpos = 0, $wpos18 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $lock = ((($f)) + 76|0);
 $0 = HEAP32[$lock>>2]|0;
 $cmp = ($0|0)<(0);
 $conv = $c&255;
 $conv1 = $c & 255;
 if ($cmp) {
  label = 3;
 } else {
  $call = (___lockfile($f)|0);
  $tobool = ($call|0)==(0);
  if ($tobool) {
   label = 3;
  } else {
   $lbf13 = ((($f)) + 75|0);
   $4 = HEAP8[$lbf13>>0]|0;
   $conv14 = $4 << 24 >> 24;
   $cmp15 = ($conv1|0)==($conv14|0);
   if ($cmp15) {
    label = 10;
   } else {
    $wpos18 = ((($f)) + 20|0);
    $5 = HEAP32[$wpos18>>2]|0;
    $wend19 = ((($f)) + 16|0);
    $6 = HEAP32[$wend19>>2]|0;
    $cmp20 = ($5>>>0)<($6>>>0);
    if ($cmp20) {
     $incdec$ptr25 = ((($5)) + 1|0);
     HEAP32[$wpos18>>2] = $incdec$ptr25;
     HEAP8[$5>>0] = $conv;
     $cond30 = $conv1;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $call28 = (___overflow($f,$c)|0);
    $cond30 = $call28;
   }
   ___unlockfile($f);
   $retval$0 = $cond30;
  }
 }
 do {
  if ((label|0) == 3) {
   $lbf = ((($f)) + 75|0);
   $1 = HEAP8[$lbf>>0]|0;
   $conv2 = $1 << 24 >> 24;
   $cmp3 = ($conv1|0)==($conv2|0);
   if (!($cmp3)) {
    $wpos = ((($f)) + 20|0);
    $2 = HEAP32[$wpos>>2]|0;
    $wend = ((($f)) + 16|0);
    $3 = HEAP32[$wend>>2]|0;
    $cmp5 = ($2>>>0)<($3>>>0);
    if ($cmp5) {
     $incdec$ptr = ((($2)) + 1|0);
     HEAP32[$wpos>>2] = $incdec$ptr;
     HEAP8[$2>>0] = $conv;
     $retval$0 = $conv1;
     break;
    }
   }
   $call10 = (___overflow($f,$c)|0);
   $retval$0 = $call10;
  }
 } while(0);
 return ($retval$0|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i175 = 0, $$pre$i178 = 0, $$pre$i45$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i176Z2D = 0, $$pre$phi$i46$iZ2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$pre5$i$i = 0, $$sink$i = 0, $$sink$i$i = 0, $$sink$i154 = 0, $$sink2$i = 0, $$sink2$i172 = 0, $$sink5$i = 0, $$v$0$i = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F$0$i$i = 0, $F104$0 = 0, $F197$0$i = 0, $F224$0$i$i = 0, $F290$0$i = 0, $I252$0$i$i = 0, $I316$0$i = 0, $I57$0$i$i = 0, $K105$0$i$i = 0, $K305$0$i$i = 0, $K373$0$i = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i165 = 0, $R$3$i = 0;
 var $R$3$i$i = 0, $R$3$i168 = 0, $RP$1$i = 0, $RP$1$i$i = 0, $RP$1$i164 = 0, $T$0$i = 0, $T$0$i$i = 0, $T$0$i47$i = 0, $add$i = 0, $add$i$i = 0, $add$i145 = 0, $add$i179 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i$i = 0, $add$ptr$i$i$i = 0, $add$ptr$i158 = 0, $add$ptr$i16$i = 0, $add$ptr$i192 = 0, $add$ptr$i2$i$i = 0;
 var $add$ptr$i21$i = 0, $add$ptr$i49$i = 0, $add$ptr14$i$i = 0, $add$ptr15$i$i = 0, $add$ptr16$i$i = 0, $add$ptr166 = 0, $add$ptr169 = 0, $add$ptr17$i$i = 0, $add$ptr178 = 0, $add$ptr181$i = 0, $add$ptr182 = 0, $add$ptr189$i = 0, $add$ptr190$i = 0, $add$ptr193 = 0, $add$ptr199 = 0, $add$ptr2$i$i = 0, $add$ptr205$i$i = 0, $add$ptr212$i$i = 0, $add$ptr225$i = 0, $add$ptr227$i = 0;
 var $add$ptr24$i$i = 0, $add$ptr262$i = 0, $add$ptr269$i = 0, $add$ptr273$i = 0, $add$ptr282$i = 0, $add$ptr3$i$i = 0, $add$ptr30$i$i = 0, $add$ptr369$i$i = 0, $add$ptr4$i$i = 0, $add$ptr4$i$i$i = 0, $add$ptr4$i26$i = 0, $add$ptr4$i54$i = 0, $add$ptr441$i = 0, $add$ptr5$i$i = 0, $add$ptr6$i$i = 0, $add$ptr6$i$i$i = 0, $add$ptr6$i58$i = 0, $add$ptr7$i$i = 0, $add$ptr81$i$i = 0, $add$ptr95 = 0;
 var $add$ptr98 = 0, $add10$i = 0, $add101$i = 0, $add110$i = 0, $add13$i = 0, $add14$i = 0, $add140$i = 0, $add144 = 0, $add150$i = 0, $add17$i = 0, $add17$i182 = 0, $add177$i = 0, $add18$i = 0, $add19$i = 0, $add2 = 0, $add20$i = 0, $add206$i$i = 0, $add212$i = 0, $add215$i = 0, $add22$i = 0;
 var $add246$i = 0, $add26$i$i = 0, $add268$i = 0, $add269$i$i = 0, $add274$i$i = 0, $add278$i$i = 0, $add280$i$i = 0, $add283$i$i = 0, $add337$i = 0, $add342$i = 0, $add346$i = 0, $add348$i = 0, $add351$i = 0, $add46$i = 0, $add50 = 0, $add51$i = 0, $add54 = 0, $add54$i = 0, $add58 = 0, $add62 = 0;
 var $add64 = 0, $add74$i$i = 0, $add77$i = 0, $add78$i = 0, $add79$i$i = 0, $add8 = 0, $add82$i = 0, $add83$i$i = 0, $add85$i$i = 0, $add86$i = 0, $add88$i$i = 0, $add9$i = 0, $add90$i = 0, $add92$i = 0, $and = 0, $and$i = 0, $and$i$i = 0, $and$i$i$i = 0, $and$i142 = 0, $and$i17$i = 0;
 var $and$i22$i = 0, $and$i50$i = 0, $and100$i = 0, $and103$i = 0, $and104$i = 0, $and106 = 0, $and11$add51$i = 0, $and11$i = 0, $and119$i$i = 0, $and12$i = 0, $and13$i = 0, $and13$i$i = 0, $and133$i$i = 0, $and14 = 0, $and145 = 0, $and17$i = 0, $and194$i = 0, $and194$i203 = 0, $and199$i = 0, $and209$i$i = 0;
 var $and21$i = 0, $and21$i148 = 0, $and227$i$i = 0, $and236$i = 0, $and264$i$i = 0, $and268$i$i = 0, $and273$i$i = 0, $and282$i$i = 0, $and29$i = 0, $and292$i = 0, $and295$i$i = 0, $and3$i = 0, $and3$i$i = 0, $and3$i$i$i = 0, $and3$i24$i = 0, $and3$i52$i = 0, $and30$i = 0, $and318$i$i = 0, $and32$i = 0, $and32$i$i = 0;
 var $and33$i$i = 0, $and331$i = 0, $and336$i = 0, $and341$i = 0, $and350$i = 0, $and363$i = 0, $and37$i$i = 0, $and387$i = 0, $and4 = 0, $and40$i$i = 0, $and41 = 0, $and42$i = 0, $and43 = 0, $and46 = 0, $and49 = 0, $and49$i = 0, $and49$i$i = 0, $and53 = 0, $and57 = 0, $and6$i = 0;
 var $and6$i$i = 0, $and6$i10$i = 0, $and6$i27$i = 0, $and61 = 0, $and64$i = 0, $and68$i = 0, $and69$i$i = 0, $and7 = 0, $and73$i = 0, $and73$i$i = 0, $and74 = 0, $and77$i = 0, $and78$i$i = 0, $and8$i = 0, $and80$i = 0, $and81$i = 0, $and85$i = 0, $and87$i$i = 0, $and89$i = 0, $and9$i = 0;
 var $and96$i$i = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i14$i = 0, $arrayidx$i149 = 0, $arrayidx$i37$i = 0, $arrayidx103 = 0, $arrayidx103$i$i = 0, $arrayidx106$i = 0, $arrayidx107$i$i = 0, $arrayidx113$i = 0, $arrayidx113$i155 = 0, $arrayidx121$i = 0, $arrayidx123$i$i = 0, $arrayidx126$i$i = 0, $arrayidx137$i = 0, $arrayidx143$i$i = 0, $arrayidx148$i = 0, $arrayidx151$i = 0;
 var $arrayidx151$i$i = 0, $arrayidx154$i = 0, $arrayidx155$i = 0, $arrayidx161$i = 0, $arrayidx165$i = 0, $arrayidx165$i166 = 0, $arrayidx178$i$i = 0, $arrayidx184$i = 0, $arrayidx184$i$i = 0, $arrayidx195$i$i = 0, $arrayidx196$i = 0, $arrayidx204$i = 0, $arrayidx212$i = 0, $arrayidx223$i$i = 0, $arrayidx228$i = 0, $arrayidx23$i = 0, $arrayidx233$i = 0, $arrayidx239$i = 0, $arrayidx245$i = 0, $arrayidx256$i = 0;
 var $arrayidx27$i = 0, $arrayidx276$i = 0, $arrayidx287$i$i = 0, $arrayidx289$i = 0, $arrayidx290$i$i = 0, $arrayidx325$i$i = 0, $arrayidx355$i = 0, $arrayidx358$i = 0, $arrayidx394$i = 0, $arrayidx40$i = 0, $arrayidx44$i = 0, $arrayidx61$i = 0, $arrayidx65$i = 0, $arrayidx66 = 0, $arrayidx71$i = 0, $arrayidx75$i = 0, $arrayidx91$i$i = 0, $arrayidx92$i$i = 0, $arrayidx94$i = 0, $arrayidx94$i153 = 0;
 var $arrayidx96$i$i = 0, $bk = 0, $bk$i = 0, $bk$i$i = 0, $bk$i160 = 0, $bk$i35$i = 0, $bk102$i$i = 0, $bk122 = 0, $bk124 = 0, $bk136$i = 0, $bk139$i$i = 0, $bk158$i$i = 0, $bk161$i$i = 0, $bk218$i = 0, $bk220$i = 0, $bk246$i$i = 0, $bk248$i$i = 0, $bk302$i$i = 0, $bk311$i = 0, $bk313$i = 0;
 var $bk338$i$i = 0, $bk357$i$i = 0, $bk360$i$i = 0, $bk370$i = 0, $bk407$i = 0, $bk429$i = 0, $bk43$i$i = 0, $bk432$i = 0, $bk47$i = 0, $bk55$i$i = 0, $bk67$i$i = 0, $bk74$i$i = 0, $bk78 = 0, $bk82$i$i = 0, $br$2$ph$i = 0, $call107$i = 0, $call131$i = 0, $call132$i = 0, $call275$i = 0, $call37$i = 0;
 var $call68$i = 0, $call83$i = 0, $child$i$i = 0, $child166$i$i = 0, $child289$i$i = 0, $child357$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i11$i = 0, $cmp$i177 = 0, $cmp$i18$i = 0, $cmp$i23$i = 0, $cmp$i3$i$i = 0, $cmp$i51$i = 0, $cmp$i9$i = 0, $cmp1 = 0, $cmp1$i = 0, $cmp10 = 0, $cmp100$i$i = 0;
 var $cmp102$i = 0, $cmp104$i$i = 0, $cmp105$i = 0, $cmp106$i$i = 0, $cmp107$i = 0, $cmp108$i = 0, $cmp108$i$i = 0, $cmp112$i$i = 0, $cmp113 = 0, $cmp116$i = 0, $cmp118$i = 0, $cmp119$i = 0, $cmp12$i = 0, $cmp120$i$i = 0, $cmp120$i42$i = 0, $cmp121$i = 0, $cmp123$i = 0, $cmp124$i$i = 0, $cmp126$i = 0, $cmp127$i = 0;
 var $cmp128 = 0, $cmp128$i = 0, $cmp128$i$i = 0, $cmp130$i = 0, $cmp133$i = 0, $cmp133$i$i = 0, $cmp133$i195 = 0, $cmp135$i = 0, $cmp137$i = 0, $cmp137$i$i = 0, $cmp137$i196 = 0, $cmp138$i = 0, $cmp139 = 0, $cmp140$i = 0, $cmp141$i = 0, $cmp142$i = 0, $cmp146 = 0, $cmp147$i = 0, $cmp14799$i = 0, $cmp15 = 0;
 var $cmp15$i = 0, $cmp151$i = 0, $cmp152$i = 0, $cmp153$i$i = 0, $cmp155$i = 0, $cmp156 = 0, $cmp156$i = 0, $cmp156$i$i = 0, $cmp157$i = 0, $cmp159$i = 0, $cmp159$i198 = 0, $cmp16 = 0, $cmp160$i$i = 0, $cmp162 = 0, $cmp162$i = 0, $cmp162$i199 = 0, $cmp166$i = 0, $cmp168$i$i = 0, $cmp171$i = 0, $cmp172$i$i = 0;
 var $cmp174$i = 0, $cmp180$i = 0, $cmp185$i = 0, $cmp185$i$i = 0, $cmp186 = 0, $cmp186$i = 0, $cmp189$i$i = 0, $cmp19$i = 0, $cmp190$i = 0, $cmp191$i = 0, $cmp198$i = 0, $cmp2$i$i = 0, $cmp2$i$i$i = 0, $cmp20$i$i = 0, $cmp203$i = 0, $cmp208$i = 0, $cmp209$i = 0, $cmp21$i = 0, $cmp215$i$i = 0, $cmp217$i = 0;
 var $cmp218$i = 0, $cmp221$i = 0, $cmp224$i = 0, $cmp228$i = 0, $cmp229$i = 0, $cmp233$i = 0, $cmp236$i$i = 0, $cmp24$i = 0, $cmp24$i$i = 0, $cmp246$i = 0, $cmp250$i = 0, $cmp254$i$i = 0, $cmp257$i = 0, $cmp258$i$i = 0, $cmp26$i = 0, $cmp265$i = 0, $cmp27$i$i = 0, $cmp28$i = 0, $cmp28$i$i = 0, $cmp284$i = 0;
 var $cmp287$i = 0, $cmp29 = 0, $cmp3$i$i = 0, $cmp301$i = 0, $cmp306$i$i = 0, $cmp31 = 0, $cmp319$i = 0, $cmp319$i$i = 0, $cmp32$i = 0, $cmp32$i184 = 0, $cmp323$i = 0, $cmp327$i$i = 0, $cmp33$i = 0, $cmp332$i$i = 0, $cmp34$i = 0, $cmp34$i$i = 0, $cmp35$i = 0, $cmp350$i$i = 0, $cmp36$i = 0, $cmp36$i$i = 0;
 var $cmp374$i = 0, $cmp38$i = 0, $cmp38$i$i = 0, $cmp388$i = 0, $cmp396$i = 0, $cmp40$i = 0, $cmp401$i = 0, $cmp41$i$i = 0, $cmp42$i$i = 0, $cmp422$i = 0, $cmp43$i = 0, $cmp44$i$i = 0, $cmp45$i = 0, $cmp45$i152 = 0, $cmp46$i = 0, $cmp46$i$i = 0, $cmp46$i38$i = 0, $cmp48$i = 0, $cmp49$i = 0, $cmp5 = 0;
 var $cmp51$i = 0, $cmp54$i$i = 0, $cmp55$i = 0, $cmp55$i185 = 0, $cmp57$i = 0, $cmp57$i$i = 0, $cmp57$i186 = 0, $cmp59$i$i = 0, $cmp60$i = 0, $cmp60$i$i = 0, $cmp62$i = 0, $cmp63$i = 0, $cmp63$i$i = 0, $cmp65$i = 0, $cmp66$i = 0, $cmp66$i189 = 0, $cmp69$i = 0, $cmp7$i$i = 0, $cmp70 = 0, $cmp72$i = 0;
 var $cmp75$i$i = 0, $cmp76 = 0, $cmp76$i = 0, $cmp79 = 0, $cmp81$i = 0, $cmp81$i$i = 0, $cmp81$i190 = 0, $cmp83$i$i = 0, $cmp85$i = 0, $cmp86$i$i = 0, $cmp89$i = 0, $cmp9$i$i = 0, $cmp90$i = 0, $cmp91$i = 0, $cmp93$i = 0, $cmp95$i = 0, $cmp96$i = 0, $cmp97$i = 0, $cmp97$i$i = 0, $cmp977$i = 0;
 var $cmp99 = 0, $cond = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i150 = 0, $cond$i19$i = 0, $cond$i25$i = 0, $cond$i53$i = 0, $cond115$i$i = 0, $cond13$i$i = 0, $cond15$i$i = 0, $cond2$i$i = 0, $cond3$i = 0, $cond315$i$i = 0, $cond383$i = 0, $exitcond$i$i = 0, $fd$i = 0, $fd$i$i = 0, $fd$i161 = 0;
 var $fd103$i$i = 0, $fd123 = 0, $fd139$i = 0, $fd140$i$i = 0, $fd148$i$i = 0, $fd160$i$i = 0, $fd219$i = 0, $fd247$i$i = 0, $fd303$i$i = 0, $fd312$i = 0, $fd339$i$i = 0, $fd344$i$i = 0, $fd359$i$i = 0, $fd371$i = 0, $fd408$i = 0, $fd416$i = 0, $fd431$i = 0, $fd50$i = 0, $fd54$i$i = 0, $fd59$i$i = 0;
 var $fd68$pre$phi$i$iZ2D = 0, $fd69 = 0, $fd78$i$i = 0, $fd85$i$i = 0, $fd9 = 0, $head = 0, $head$i = 0, $head$i$i = 0, $head$i$i$i = 0, $head$i151 = 0, $head$i20$i = 0, $head$i31$i = 0, $head$i57$i = 0, $head118$i$i = 0, $head168 = 0, $head173 = 0, $head177 = 0, $head179 = 0, $head179$i = 0, $head182$i = 0;
 var $head187$i = 0, $head189$i = 0, $head195 = 0, $head198 = 0, $head208$i$i = 0, $head211$i$i = 0, $head23$i$i = 0, $head25 = 0, $head26$i$i = 0, $head265$i = 0, $head268$i = 0, $head271$i = 0, $head274$i = 0, $head279$i = 0, $head281$i = 0, $head29$i = 0, $head29$i$i = 0, $head317$i$i = 0, $head32$i$i = 0, $head34$i$i = 0;
 var $head386$i = 0, $head7$i$i = 0, $head7$i$i$i = 0, $head7$i59$i = 0, $head94 = 0, $head97 = 0, $head99$i = 0, $i$01$i$i = 0, $idx$0$i = 0, $inc$i$i = 0, $index$i = 0, $index$i$i = 0, $index$i169 = 0, $index$i43$i = 0, $index288$i$i = 0, $index356$i = 0, $magic$i$i = 0, $nb$0 = 0, $neg = 0, $neg$i = 0;
 var $neg$i$i = 0, $neg$i170 = 0, $neg$i181 = 0, $neg103$i = 0, $neg13 = 0, $neg132$i$i = 0, $neg48$i = 0, $neg73 = 0, $next$i = 0, $next$i$i = 0, $next$i$i$i = 0, $next231$i = 0, $not$cmp$i = 0, $not$cmp107$i = 0, $not$cmp114$i = 0, $not$cmp141$i = 0, $not$cmp144$i$i = 0, $not$cmp150$i$i = 0, $not$cmp205$i = 0, $not$cmp346$i$i = 0;
 var $not$cmp4$i = 0, $not$cmp418$i = 0, $not$cmp494$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i187 = 0, $or$cond1$i = 0, $or$cond1$i183 = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5$i = 0, $or$cond7$i = 0, $or$cond7$not$i = 0, $or$cond8$i = 0, $or$cond97$i = 0, $or$cond98$i = 0, $or$i = 0, $or$i$i = 0, $or$i$i$i = 0;
 var $or$i194 = 0, $or$i56$i = 0, $or101$i$i = 0, $or110 = 0, $or167 = 0, $or172 = 0, $or176 = 0, $or178$i = 0, $or180 = 0, $or183$i = 0, $or186$i = 0, $or188$i = 0, $or19$i$i = 0, $or194 = 0, $or197 = 0, $or204$i = 0, $or210$i$i = 0, $or22$i$i = 0, $or23 = 0, $or232$i$i = 0;
 var $or26 = 0, $or264$i = 0, $or267$i = 0, $or270$i = 0, $or275$i = 0, $or278$i = 0, $or28$i$i = 0, $or280$i = 0, $or297$i = 0, $or300$i$i = 0, $or33$i$i = 0, $or368$i = 0, $or40 = 0, $or44$i$i = 0, $or93 = 0, $or96 = 0, $parent$i = 0, $parent$i$i = 0, $parent$i159 = 0, $parent$i40$i = 0;
 var $parent135$i = 0, $parent138$i$i = 0, $parent149$i = 0, $parent162$i$i = 0, $parent165$i$i = 0, $parent166$i = 0, $parent179$i$i = 0, $parent196$i$i = 0, $parent226$i = 0, $parent240$i = 0, $parent257$i = 0, $parent301$i$i = 0, $parent337$i$i = 0, $parent361$i$i = 0, $parent369$i = 0, $parent406$i = 0, $parent433$i = 0, $qsize$0$i$i = 0, $retval$0 = 0, $rsize$0$i = 0;
 var $rsize$0$lcssa$i = 0, $rsize$08$i = 0, $rsize$1$i = 0, $rsize$3$i = 0, $rsize$4$lcssa$i = 0, $rsize$49$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sflags193$i = 0, $sflags235$i = 0, $shl = 0, $shl$i = 0, $shl$i$i = 0, $shl$i13$i = 0, $shl$i143 = 0, $shl$i36$i = 0, $shl102 = 0, $shl105 = 0, $shl116$i$i = 0, $shl12 = 0;
 var $shl127$i$i = 0, $shl131$i$i = 0, $shl15$i = 0, $shl18$i = 0, $shl192$i = 0, $shl195$i = 0, $shl198$i = 0, $shl22 = 0, $shl222$i$i = 0, $shl226$i$i = 0, $shl265$i$i = 0, $shl270$i$i = 0, $shl276$i$i = 0, $shl279$i$i = 0, $shl288$i = 0, $shl291$i = 0, $shl294$i$i = 0, $shl31$i = 0, $shl316$i$i = 0, $shl326$i$i = 0;
 var $shl333$i = 0, $shl338$i = 0, $shl344$i = 0, $shl347$i = 0, $shl35 = 0, $shl362$i = 0, $shl37 = 0, $shl384$i = 0, $shl39$i$i = 0, $shl395$i = 0, $shl48$i$i = 0, $shl52$i = 0, $shl60$i = 0, $shl65 = 0, $shl70$i$i = 0, $shl72 = 0, $shl75$i$i = 0, $shl81$i$i = 0, $shl84$i$i = 0, $shl9$i = 0;
 var $shl90 = 0, $shl95$i$i = 0, $shr = 0, $shr$i = 0, $shr$i$i = 0, $shr$i139 = 0, $shr$i34$i = 0, $shr101 = 0, $shr11$i = 0, $shr11$i146 = 0, $shr110$i$i = 0, $shr12$i = 0, $shr124$i$i = 0, $shr15$i = 0, $shr16$i = 0, $shr16$i147 = 0, $shr19$i = 0, $shr194$i = 0, $shr20$i = 0, $shr214$i$i = 0;
 var $shr253$i$i = 0, $shr263$i$i = 0, $shr267$i$i = 0, $shr27$i = 0, $shr272$i$i = 0, $shr277$i$i = 0, $shr281$i$i = 0, $shr283$i = 0, $shr3 = 0, $shr310$i$i = 0, $shr318$i = 0, $shr323$i$i = 0, $shr330$i = 0, $shr335$i = 0, $shr340$i = 0, $shr345$i = 0, $shr349$i = 0, $shr378$i = 0, $shr392$i = 0, $shr4$i = 0;
 var $shr42$i = 0, $shr45 = 0, $shr47 = 0, $shr48 = 0, $shr5$i = 0, $shr5$i141 = 0, $shr51 = 0, $shr52 = 0, $shr55 = 0, $shr56 = 0, $shr58$i$i = 0, $shr59 = 0, $shr60 = 0, $shr63 = 0, $shr68$i$i = 0, $shr7$i = 0, $shr7$i144 = 0, $shr72$i = 0, $shr72$i$i = 0, $shr75$i = 0;
 var $shr76$i = 0, $shr77$i$i = 0, $shr79$i = 0, $shr8$i = 0, $shr80$i = 0, $shr82$i$i = 0, $shr83$i = 0, $shr84$i = 0, $shr86$i$i = 0, $shr87$i = 0, $shr88$i = 0, $shr91$i = 0, $size$i$i = 0, $size$i$i$i = 0, $size188$i = 0, $size245$i = 0, $sizebits$0$i = 0, $sizebits$0$shl52$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0;
 var $sp$0108$i = 0, $sp$1107$i = 0, $ssize$2$ph$i = 0, $sub = 0, $sub$i = 0, $sub$i138 = 0, $sub$i180 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i28$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i29$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i30$i = 0, $sub$ptr$sub$tsize$4$i = 0, $sub10$i = 0, $sub101$i = 0, $sub101$rsize$4$i = 0;
 var $sub112$i = 0, $sub113$i$i = 0, $sub118$i = 0, $sub14$i = 0, $sub16$i$i = 0, $sub160 = 0, $sub172$i = 0, $sub18$i$i = 0, $sub190 = 0, $sub2$i = 0, $sub22$i = 0, $sub260$i = 0, $sub262$i$i = 0, $sub266$i$i = 0, $sub271$i$i = 0, $sub275$i$i = 0, $sub30$i = 0, $sub31$i = 0, $sub31$rsize$0$i = 0, $sub313$i$i = 0;
 var $sub329$i = 0, $sub33$i = 0, $sub334$i = 0, $sub339$i = 0, $sub343$i = 0, $sub381$i = 0, $sub4$i = 0, $sub41$i = 0, $sub42 = 0, $sub44 = 0, $sub5$i$i = 0, $sub5$i$i$i = 0, $sub5$i55$i = 0, $sub50$i = 0, $sub6$i = 0, $sub63$i = 0, $sub67$i = 0, $sub67$i$i = 0, $sub70$i = 0, $sub71$i$i = 0;
 var $sub76$i$i = 0, $sub80$i$i = 0, $sub91 = 0, $sub99$i = 0, $t$0$i = 0, $t$2$i = 0, $t$4$ph$i = 0, $t$4$v$4$i = 0, $t$48$i = 0, $tbase$796$i = 0, $tobool$i$i = 0, $tobool107 = 0, $tobool195$i = 0, $tobool200$i = 0, $tobool228$i$i = 0, $tobool237$i = 0, $tobool293$i = 0, $tobool296$i$i = 0, $tobool30$i = 0, $tobool364$i = 0;
 var $tobool97$i$i = 0, $tsize$2657583$i = 0, $tsize$4$i = 0, $tsize$795$i = 0, $v$0$i = 0, $v$0$lcssa$i = 0, $v$09$i = 0, $v$1$i = 0, $v$3$i = 0, $v$4$lcssa$i = 0, $v$4$ph$i = 0, $v$410$i = 0, $xor$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $magic$i$i = sp;
 $cmp = ($bytes>>>0)<(245);
 do {
  if ($cmp) {
   $cmp1 = ($bytes>>>0)<(11);
   $add2 = (($bytes) + 11)|0;
   $and = $add2 & -8;
   $cond = $cmp1 ? 16 : $and;
   $shr = $cond >>> 3;
   $0 = HEAP32[1981]|0;
   $shr3 = $0 >>> $shr;
   $and4 = $shr3 & 3;
   $cmp5 = ($and4|0)==(0);
   if (!($cmp5)) {
    $neg = $shr3 & 1;
    $and7 = $neg ^ 1;
    $add8 = (($and7) + ($shr))|0;
    $shl = $add8 << 1;
    $arrayidx = (7964 + ($shl<<2)|0);
    $1 = ((($arrayidx)) + 8|0);
    $2 = HEAP32[$1>>2]|0;
    $fd9 = ((($2)) + 8|0);
    $3 = HEAP32[$fd9>>2]|0;
    $cmp10 = ($arrayidx|0)==($3|0);
    do {
     if ($cmp10) {
      $shl12 = 1 << $add8;
      $neg13 = $shl12 ^ -1;
      $and14 = $0 & $neg13;
      HEAP32[1981] = $and14;
     } else {
      $4 = HEAP32[(7940)>>2]|0;
      $cmp15 = ($3>>>0)<($4>>>0);
      if ($cmp15) {
       _abort();
       // unreachable;
      }
      $bk = ((($3)) + 12|0);
      $5 = HEAP32[$bk>>2]|0;
      $cmp16 = ($5|0)==($2|0);
      if ($cmp16) {
       HEAP32[$bk>>2] = $arrayidx;
       HEAP32[$1>>2] = $3;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $shl22 = $add8 << 3;
    $or23 = $shl22 | 3;
    $head = ((($2)) + 4|0);
    HEAP32[$head>>2] = $or23;
    $add$ptr = (($2) + ($shl22)|0);
    $head25 = ((($add$ptr)) + 4|0);
    $6 = HEAP32[$head25>>2]|0;
    $or26 = $6 | 1;
    HEAP32[$head25>>2] = $or26;
    $retval$0 = $fd9;
    STACKTOP = sp;return ($retval$0|0);
   }
   $7 = HEAP32[(7932)>>2]|0;
   $cmp29 = ($cond>>>0)>($7>>>0);
   if ($cmp29) {
    $cmp31 = ($shr3|0)==(0);
    if (!($cmp31)) {
     $shl35 = $shr3 << $shr;
     $shl37 = 2 << $shr;
     $sub = (0 - ($shl37))|0;
     $or40 = $shl37 | $sub;
     $and41 = $shl35 & $or40;
     $sub42 = (0 - ($and41))|0;
     $and43 = $and41 & $sub42;
     $sub44 = (($and43) + -1)|0;
     $shr45 = $sub44 >>> 12;
     $and46 = $shr45 & 16;
     $shr47 = $sub44 >>> $and46;
     $shr48 = $shr47 >>> 5;
     $and49 = $shr48 & 8;
     $add50 = $and49 | $and46;
     $shr51 = $shr47 >>> $and49;
     $shr52 = $shr51 >>> 2;
     $and53 = $shr52 & 4;
     $add54 = $add50 | $and53;
     $shr55 = $shr51 >>> $and53;
     $shr56 = $shr55 >>> 1;
     $and57 = $shr56 & 2;
     $add58 = $add54 | $and57;
     $shr59 = $shr55 >>> $and57;
     $shr60 = $shr59 >>> 1;
     $and61 = $shr60 & 1;
     $add62 = $add58 | $and61;
     $shr63 = $shr59 >>> $and61;
     $add64 = (($add62) + ($shr63))|0;
     $shl65 = $add64 << 1;
     $arrayidx66 = (7964 + ($shl65<<2)|0);
     $8 = ((($arrayidx66)) + 8|0);
     $9 = HEAP32[$8>>2]|0;
     $fd69 = ((($9)) + 8|0);
     $10 = HEAP32[$fd69>>2]|0;
     $cmp70 = ($arrayidx66|0)==($10|0);
     do {
      if ($cmp70) {
       $shl72 = 1 << $add64;
       $neg73 = $shl72 ^ -1;
       $and74 = $0 & $neg73;
       HEAP32[1981] = $and74;
       $14 = $and74;
      } else {
       $11 = HEAP32[(7940)>>2]|0;
       $cmp76 = ($10>>>0)<($11>>>0);
       if ($cmp76) {
        _abort();
        // unreachable;
       }
       $bk78 = ((($10)) + 12|0);
       $12 = HEAP32[$bk78>>2]|0;
       $cmp79 = ($12|0)==($9|0);
       if ($cmp79) {
        HEAP32[$bk78>>2] = $arrayidx66;
        HEAP32[$8>>2] = $10;
        $14 = $0;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $shl90 = $add64 << 3;
     $sub91 = (($shl90) - ($cond))|0;
     $or93 = $cond | 3;
     $head94 = ((($9)) + 4|0);
     HEAP32[$head94>>2] = $or93;
     $add$ptr95 = (($9) + ($cond)|0);
     $or96 = $sub91 | 1;
     $head97 = ((($add$ptr95)) + 4|0);
     HEAP32[$head97>>2] = $or96;
     $add$ptr98 = (($add$ptr95) + ($sub91)|0);
     HEAP32[$add$ptr98>>2] = $sub91;
     $cmp99 = ($7|0)==(0);
     if (!($cmp99)) {
      $13 = HEAP32[(7944)>>2]|0;
      $shr101 = $7 >>> 3;
      $shl102 = $shr101 << 1;
      $arrayidx103 = (7964 + ($shl102<<2)|0);
      $shl105 = 1 << $shr101;
      $and106 = $14 & $shl105;
      $tobool107 = ($and106|0)==(0);
      if ($tobool107) {
       $or110 = $14 | $shl105;
       HEAP32[1981] = $or110;
       $$pre = ((($arrayidx103)) + 8|0);
       $$pre$phiZ2D = $$pre;$F104$0 = $arrayidx103;
      } else {
       $15 = ((($arrayidx103)) + 8|0);
       $16 = HEAP32[$15>>2]|0;
       $17 = HEAP32[(7940)>>2]|0;
       $cmp113 = ($16>>>0)<($17>>>0);
       if ($cmp113) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $15;$F104$0 = $16;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $13;
      $bk122 = ((($F104$0)) + 12|0);
      HEAP32[$bk122>>2] = $13;
      $fd123 = ((($13)) + 8|0);
      HEAP32[$fd123>>2] = $F104$0;
      $bk124 = ((($13)) + 12|0);
      HEAP32[$bk124>>2] = $arrayidx103;
     }
     HEAP32[(7932)>>2] = $sub91;
     HEAP32[(7944)>>2] = $add$ptr95;
     $retval$0 = $fd69;
     STACKTOP = sp;return ($retval$0|0);
    }
    $18 = HEAP32[(7928)>>2]|0;
    $cmp128 = ($18|0)==(0);
    if ($cmp128) {
     $nb$0 = $cond;
    } else {
     $sub$i = (0 - ($18))|0;
     $and$i = $18 & $sub$i;
     $sub2$i = (($and$i) + -1)|0;
     $shr$i = $sub2$i >>> 12;
     $and3$i = $shr$i & 16;
     $shr4$i = $sub2$i >>> $and3$i;
     $shr5$i = $shr4$i >>> 5;
     $and6$i = $shr5$i & 8;
     $add$i = $and6$i | $and3$i;
     $shr7$i = $shr4$i >>> $and6$i;
     $shr8$i = $shr7$i >>> 2;
     $and9$i = $shr8$i & 4;
     $add10$i = $add$i | $and9$i;
     $shr11$i = $shr7$i >>> $and9$i;
     $shr12$i = $shr11$i >>> 1;
     $and13$i = $shr12$i & 2;
     $add14$i = $add10$i | $and13$i;
     $shr15$i = $shr11$i >>> $and13$i;
     $shr16$i = $shr15$i >>> 1;
     $and17$i = $shr16$i & 1;
     $add18$i = $add14$i | $and17$i;
     $shr19$i = $shr15$i >>> $and17$i;
     $add20$i = (($add18$i) + ($shr19$i))|0;
     $arrayidx$i = (8228 + ($add20$i<<2)|0);
     $19 = HEAP32[$arrayidx$i>>2]|0;
     $head$i = ((($19)) + 4|0);
     $20 = HEAP32[$head$i>>2]|0;
     $and21$i = $20 & -8;
     $sub22$i = (($and21$i) - ($cond))|0;
     $arrayidx233$i = ((($19)) + 16|0);
     $21 = HEAP32[$arrayidx233$i>>2]|0;
     $not$cmp4$i = ($21|0)==(0|0);
     $$sink5$i = $not$cmp4$i&1;
     $arrayidx276$i = (((($19)) + 16|0) + ($$sink5$i<<2)|0);
     $22 = HEAP32[$arrayidx276$i>>2]|0;
     $cmp287$i = ($22|0)==(0|0);
     if ($cmp287$i) {
      $rsize$0$lcssa$i = $sub22$i;$v$0$lcssa$i = $19;
     } else {
      $23 = $22;$rsize$08$i = $sub22$i;$v$09$i = $19;
      while(1) {
       $head29$i = ((($23)) + 4|0);
       $24 = HEAP32[$head29$i>>2]|0;
       $and30$i = $24 & -8;
       $sub31$i = (($and30$i) - ($cond))|0;
       $cmp32$i = ($sub31$i>>>0)<($rsize$08$i>>>0);
       $sub31$rsize$0$i = $cmp32$i ? $sub31$i : $rsize$08$i;
       $$v$0$i = $cmp32$i ? $23 : $v$09$i;
       $arrayidx23$i = ((($23)) + 16|0);
       $25 = HEAP32[$arrayidx23$i>>2]|0;
       $not$cmp$i = ($25|0)==(0|0);
       $$sink$i = $not$cmp$i&1;
       $arrayidx27$i = (((($23)) + 16|0) + ($$sink$i<<2)|0);
       $26 = HEAP32[$arrayidx27$i>>2]|0;
       $cmp28$i = ($26|0)==(0|0);
       if ($cmp28$i) {
        $rsize$0$lcssa$i = $sub31$rsize$0$i;$v$0$lcssa$i = $$v$0$i;
        break;
       } else {
        $23 = $26;$rsize$08$i = $sub31$rsize$0$i;$v$09$i = $$v$0$i;
       }
      }
     }
     $27 = HEAP32[(7940)>>2]|0;
     $cmp33$i = ($v$0$lcssa$i>>>0)<($27>>>0);
     if ($cmp33$i) {
      _abort();
      // unreachable;
     }
     $add$ptr$i = (($v$0$lcssa$i) + ($cond)|0);
     $cmp35$i = ($v$0$lcssa$i>>>0)<($add$ptr$i>>>0);
     if (!($cmp35$i)) {
      _abort();
      // unreachable;
     }
     $parent$i = ((($v$0$lcssa$i)) + 24|0);
     $28 = HEAP32[$parent$i>>2]|0;
     $bk$i = ((($v$0$lcssa$i)) + 12|0);
     $29 = HEAP32[$bk$i>>2]|0;
     $cmp40$i = ($29|0)==($v$0$lcssa$i|0);
     do {
      if ($cmp40$i) {
       $arrayidx61$i = ((($v$0$lcssa$i)) + 20|0);
       $33 = HEAP32[$arrayidx61$i>>2]|0;
       $cmp62$i = ($33|0)==(0|0);
       if ($cmp62$i) {
        $arrayidx65$i = ((($v$0$lcssa$i)) + 16|0);
        $34 = HEAP32[$arrayidx65$i>>2]|0;
        $cmp66$i = ($34|0)==(0|0);
        if ($cmp66$i) {
         $R$3$i = 0;
         break;
        } else {
         $R$1$i = $34;$RP$1$i = $arrayidx65$i;
        }
       } else {
        $R$1$i = $33;$RP$1$i = $arrayidx61$i;
       }
       while(1) {
        $arrayidx71$i = ((($R$1$i)) + 20|0);
        $35 = HEAP32[$arrayidx71$i>>2]|0;
        $cmp72$i = ($35|0)==(0|0);
        if (!($cmp72$i)) {
         $R$1$i = $35;$RP$1$i = $arrayidx71$i;
         continue;
        }
        $arrayidx75$i = ((($R$1$i)) + 16|0);
        $36 = HEAP32[$arrayidx75$i>>2]|0;
        $cmp76$i = ($36|0)==(0|0);
        if ($cmp76$i) {
         break;
        } else {
         $R$1$i = $36;$RP$1$i = $arrayidx75$i;
        }
       }
       $cmp81$i = ($RP$1$i>>>0)<($27>>>0);
       if ($cmp81$i) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$1$i>>2] = 0;
        $R$3$i = $R$1$i;
        break;
       }
      } else {
       $fd$i = ((($v$0$lcssa$i)) + 8|0);
       $30 = HEAP32[$fd$i>>2]|0;
       $cmp45$i = ($30>>>0)<($27>>>0);
       if ($cmp45$i) {
        _abort();
        // unreachable;
       }
       $bk47$i = ((($30)) + 12|0);
       $31 = HEAP32[$bk47$i>>2]|0;
       $cmp48$i = ($31|0)==($v$0$lcssa$i|0);
       if (!($cmp48$i)) {
        _abort();
        // unreachable;
       }
       $fd50$i = ((($29)) + 8|0);
       $32 = HEAP32[$fd50$i>>2]|0;
       $cmp51$i = ($32|0)==($v$0$lcssa$i|0);
       if ($cmp51$i) {
        HEAP32[$bk47$i>>2] = $29;
        HEAP32[$fd50$i>>2] = $30;
        $R$3$i = $29;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $cmp90$i = ($28|0)==(0|0);
     L73: do {
      if (!($cmp90$i)) {
       $index$i = ((($v$0$lcssa$i)) + 28|0);
       $37 = HEAP32[$index$i>>2]|0;
       $arrayidx94$i = (8228 + ($37<<2)|0);
       $38 = HEAP32[$arrayidx94$i>>2]|0;
       $cmp95$i = ($v$0$lcssa$i|0)==($38|0);
       do {
        if ($cmp95$i) {
         HEAP32[$arrayidx94$i>>2] = $R$3$i;
         $cond$i = ($R$3$i|0)==(0|0);
         if ($cond$i) {
          $shl$i = 1 << $37;
          $neg$i = $shl$i ^ -1;
          $and103$i = $18 & $neg$i;
          HEAP32[(7928)>>2] = $and103$i;
          break L73;
         }
        } else {
         $39 = HEAP32[(7940)>>2]|0;
         $cmp107$i = ($28>>>0)<($39>>>0);
         if ($cmp107$i) {
          _abort();
          // unreachable;
         } else {
          $arrayidx113$i = ((($28)) + 16|0);
          $40 = HEAP32[$arrayidx113$i>>2]|0;
          $not$cmp114$i = ($40|0)!=($v$0$lcssa$i|0);
          $$sink2$i = $not$cmp114$i&1;
          $arrayidx121$i = (((($28)) + 16|0) + ($$sink2$i<<2)|0);
          HEAP32[$arrayidx121$i>>2] = $R$3$i;
          $cmp126$i = ($R$3$i|0)==(0|0);
          if ($cmp126$i) {
           break L73;
          } else {
           break;
          }
         }
        }
       } while(0);
       $41 = HEAP32[(7940)>>2]|0;
       $cmp130$i = ($R$3$i>>>0)<($41>>>0);
       if ($cmp130$i) {
        _abort();
        // unreachable;
       }
       $parent135$i = ((($R$3$i)) + 24|0);
       HEAP32[$parent135$i>>2] = $28;
       $arrayidx137$i = ((($v$0$lcssa$i)) + 16|0);
       $42 = HEAP32[$arrayidx137$i>>2]|0;
       $cmp138$i = ($42|0)==(0|0);
       do {
        if (!($cmp138$i)) {
         $cmp142$i = ($42>>>0)<($41>>>0);
         if ($cmp142$i) {
          _abort();
          // unreachable;
         } else {
          $arrayidx148$i = ((($R$3$i)) + 16|0);
          HEAP32[$arrayidx148$i>>2] = $42;
          $parent149$i = ((($42)) + 24|0);
          HEAP32[$parent149$i>>2] = $R$3$i;
          break;
         }
        }
       } while(0);
       $arrayidx154$i = ((($v$0$lcssa$i)) + 20|0);
       $43 = HEAP32[$arrayidx154$i>>2]|0;
       $cmp155$i = ($43|0)==(0|0);
       if (!($cmp155$i)) {
        $44 = HEAP32[(7940)>>2]|0;
        $cmp159$i = ($43>>>0)<($44>>>0);
        if ($cmp159$i) {
         _abort();
         // unreachable;
        } else {
         $arrayidx165$i = ((($R$3$i)) + 20|0);
         HEAP32[$arrayidx165$i>>2] = $43;
         $parent166$i = ((($43)) + 24|0);
         HEAP32[$parent166$i>>2] = $R$3$i;
         break;
        }
       }
      }
     } while(0);
     $cmp174$i = ($rsize$0$lcssa$i>>>0)<(16);
     if ($cmp174$i) {
      $add177$i = (($rsize$0$lcssa$i) + ($cond))|0;
      $or178$i = $add177$i | 3;
      $head179$i = ((($v$0$lcssa$i)) + 4|0);
      HEAP32[$head179$i>>2] = $or178$i;
      $add$ptr181$i = (($v$0$lcssa$i) + ($add177$i)|0);
      $head182$i = ((($add$ptr181$i)) + 4|0);
      $45 = HEAP32[$head182$i>>2]|0;
      $or183$i = $45 | 1;
      HEAP32[$head182$i>>2] = $or183$i;
     } else {
      $or186$i = $cond | 3;
      $head187$i = ((($v$0$lcssa$i)) + 4|0);
      HEAP32[$head187$i>>2] = $or186$i;
      $or188$i = $rsize$0$lcssa$i | 1;
      $head189$i = ((($add$ptr$i)) + 4|0);
      HEAP32[$head189$i>>2] = $or188$i;
      $add$ptr190$i = (($add$ptr$i) + ($rsize$0$lcssa$i)|0);
      HEAP32[$add$ptr190$i>>2] = $rsize$0$lcssa$i;
      $cmp191$i = ($7|0)==(0);
      if (!($cmp191$i)) {
       $46 = HEAP32[(7944)>>2]|0;
       $shr194$i = $7 >>> 3;
       $shl195$i = $shr194$i << 1;
       $arrayidx196$i = (7964 + ($shl195$i<<2)|0);
       $shl198$i = 1 << $shr194$i;
       $and199$i = $0 & $shl198$i;
       $tobool200$i = ($and199$i|0)==(0);
       if ($tobool200$i) {
        $or204$i = $0 | $shl198$i;
        HEAP32[1981] = $or204$i;
        $$pre$i = ((($arrayidx196$i)) + 8|0);
        $$pre$phi$iZ2D = $$pre$i;$F197$0$i = $arrayidx196$i;
       } else {
        $47 = ((($arrayidx196$i)) + 8|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = HEAP32[(7940)>>2]|0;
        $cmp208$i = ($48>>>0)<($49>>>0);
        if ($cmp208$i) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $47;$F197$0$i = $48;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $46;
       $bk218$i = ((($F197$0$i)) + 12|0);
       HEAP32[$bk218$i>>2] = $46;
       $fd219$i = ((($46)) + 8|0);
       HEAP32[$fd219$i>>2] = $F197$0$i;
       $bk220$i = ((($46)) + 12|0);
       HEAP32[$bk220$i>>2] = $arrayidx196$i;
      }
      HEAP32[(7932)>>2] = $rsize$0$lcssa$i;
      HEAP32[(7944)>>2] = $add$ptr$i;
     }
     $add$ptr225$i = ((($v$0$lcssa$i)) + 8|0);
     $retval$0 = $add$ptr225$i;
     STACKTOP = sp;return ($retval$0|0);
    }
   } else {
    $nb$0 = $cond;
   }
  } else {
   $cmp139 = ($bytes>>>0)>(4294967231);
   if ($cmp139) {
    $nb$0 = -1;
   } else {
    $add144 = (($bytes) + 11)|0;
    $and145 = $add144 & -8;
    $50 = HEAP32[(7928)>>2]|0;
    $cmp146 = ($50|0)==(0);
    if ($cmp146) {
     $nb$0 = $and145;
    } else {
     $sub$i138 = (0 - ($and145))|0;
     $shr$i139 = $add144 >>> 8;
     $cmp$i = ($shr$i139|0)==(0);
     if ($cmp$i) {
      $idx$0$i = 0;
     } else {
      $cmp1$i = ($and145>>>0)>(16777215);
      if ($cmp1$i) {
       $idx$0$i = 31;
      } else {
       $sub4$i = (($shr$i139) + 1048320)|0;
       $shr5$i141 = $sub4$i >>> 16;
       $and$i142 = $shr5$i141 & 8;
       $shl$i143 = $shr$i139 << $and$i142;
       $sub6$i = (($shl$i143) + 520192)|0;
       $shr7$i144 = $sub6$i >>> 16;
       $and8$i = $shr7$i144 & 4;
       $add$i145 = $and8$i | $and$i142;
       $shl9$i = $shl$i143 << $and8$i;
       $sub10$i = (($shl9$i) + 245760)|0;
       $shr11$i146 = $sub10$i >>> 16;
       $and12$i = $shr11$i146 & 2;
       $add13$i = $add$i145 | $and12$i;
       $sub14$i = (14 - ($add13$i))|0;
       $shl15$i = $shl9$i << $and12$i;
       $shr16$i147 = $shl15$i >>> 15;
       $add17$i = (($sub14$i) + ($shr16$i147))|0;
       $shl18$i = $add17$i << 1;
       $add19$i = (($add17$i) + 7)|0;
       $shr20$i = $and145 >>> $add19$i;
       $and21$i148 = $shr20$i & 1;
       $add22$i = $and21$i148 | $shl18$i;
       $idx$0$i = $add22$i;
      }
     }
     $arrayidx$i149 = (8228 + ($idx$0$i<<2)|0);
     $51 = HEAP32[$arrayidx$i149>>2]|0;
     $cmp24$i = ($51|0)==(0|0);
     L117: do {
      if ($cmp24$i) {
       $rsize$3$i = $sub$i138;$t$2$i = 0;$v$3$i = 0;
       label = 81;
      } else {
       $cmp26$i = ($idx$0$i|0)==(31);
       $shr27$i = $idx$0$i >>> 1;
       $sub30$i = (25 - ($shr27$i))|0;
       $cond$i150 = $cmp26$i ? 0 : $sub30$i;
       $shl31$i = $and145 << $cond$i150;
       $rsize$0$i = $sub$i138;$rst$0$i = 0;$sizebits$0$i = $shl31$i;$t$0$i = $51;$v$0$i = 0;
       while(1) {
        $head$i151 = ((($t$0$i)) + 4|0);
        $52 = HEAP32[$head$i151>>2]|0;
        $and32$i = $52 & -8;
        $sub33$i = (($and32$i) - ($and145))|0;
        $cmp34$i = ($sub33$i>>>0)<($rsize$0$i>>>0);
        if ($cmp34$i) {
         $cmp36$i = ($sub33$i|0)==(0);
         if ($cmp36$i) {
          $rsize$49$i = 0;$t$48$i = $t$0$i;$v$410$i = $t$0$i;
          label = 85;
          break L117;
         } else {
          $rsize$1$i = $sub33$i;$v$1$i = $t$0$i;
         }
        } else {
         $rsize$1$i = $rsize$0$i;$v$1$i = $v$0$i;
        }
        $arrayidx40$i = ((($t$0$i)) + 20|0);
        $53 = HEAP32[$arrayidx40$i>>2]|0;
        $shr42$i = $sizebits$0$i >>> 31;
        $arrayidx44$i = (((($t$0$i)) + 16|0) + ($shr42$i<<2)|0);
        $54 = HEAP32[$arrayidx44$i>>2]|0;
        $cmp45$i152 = ($53|0)==(0|0);
        $cmp46$i = ($53|0)==($54|0);
        $or$cond1$i = $cmp45$i152 | $cmp46$i;
        $rst$1$i = $or$cond1$i ? $rst$0$i : $53;
        $cmp49$i = ($54|0)==(0|0);
        $not$cmp494$i = $cmp49$i ^ 1;
        $shl52$i = $not$cmp494$i&1;
        $sizebits$0$shl52$i = $sizebits$0$i << $shl52$i;
        if ($cmp49$i) {
         $rsize$3$i = $rsize$1$i;$t$2$i = $rst$1$i;$v$3$i = $v$1$i;
         label = 81;
         break;
        } else {
         $rsize$0$i = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $sizebits$0$shl52$i;$t$0$i = $54;$v$0$i = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 81) {
      $cmp55$i = ($t$2$i|0)==(0|0);
      $cmp57$i = ($v$3$i|0)==(0|0);
      $or$cond$i = $cmp55$i & $cmp57$i;
      if ($or$cond$i) {
       $shl60$i = 2 << $idx$0$i;
       $sub63$i = (0 - ($shl60$i))|0;
       $or$i = $shl60$i | $sub63$i;
       $and64$i = $50 & $or$i;
       $cmp65$i = ($and64$i|0)==(0);
       if ($cmp65$i) {
        $nb$0 = $and145;
        break;
       }
       $sub67$i = (0 - ($and64$i))|0;
       $and68$i = $and64$i & $sub67$i;
       $sub70$i = (($and68$i) + -1)|0;
       $shr72$i = $sub70$i >>> 12;
       $and73$i = $shr72$i & 16;
       $shr75$i = $sub70$i >>> $and73$i;
       $shr76$i = $shr75$i >>> 5;
       $and77$i = $shr76$i & 8;
       $add78$i = $and77$i | $and73$i;
       $shr79$i = $shr75$i >>> $and77$i;
       $shr80$i = $shr79$i >>> 2;
       $and81$i = $shr80$i & 4;
       $add82$i = $add78$i | $and81$i;
       $shr83$i = $shr79$i >>> $and81$i;
       $shr84$i = $shr83$i >>> 1;
       $and85$i = $shr84$i & 2;
       $add86$i = $add82$i | $and85$i;
       $shr87$i = $shr83$i >>> $and85$i;
       $shr88$i = $shr87$i >>> 1;
       $and89$i = $shr88$i & 1;
       $add90$i = $add86$i | $and89$i;
       $shr91$i = $shr87$i >>> $and89$i;
       $add92$i = (($add90$i) + ($shr91$i))|0;
       $arrayidx94$i153 = (8228 + ($add92$i<<2)|0);
       $55 = HEAP32[$arrayidx94$i153>>2]|0;
       $t$4$ph$i = $55;$v$4$ph$i = 0;
      } else {
       $t$4$ph$i = $t$2$i;$v$4$ph$i = $v$3$i;
      }
      $cmp977$i = ($t$4$ph$i|0)==(0|0);
      if ($cmp977$i) {
       $rsize$4$lcssa$i = $rsize$3$i;$v$4$lcssa$i = $v$4$ph$i;
      } else {
       $rsize$49$i = $rsize$3$i;$t$48$i = $t$4$ph$i;$v$410$i = $v$4$ph$i;
       label = 85;
      }
     }
     if ((label|0) == 85) {
      while(1) {
       label = 0;
       $head99$i = ((($t$48$i)) + 4|0);
       $56 = HEAP32[$head99$i>>2]|0;
       $and100$i = $56 & -8;
       $sub101$i = (($and100$i) - ($and145))|0;
       $cmp102$i = ($sub101$i>>>0)<($rsize$49$i>>>0);
       $sub101$rsize$4$i = $cmp102$i ? $sub101$i : $rsize$49$i;
       $t$4$v$4$i = $cmp102$i ? $t$48$i : $v$410$i;
       $arrayidx106$i = ((($t$48$i)) + 16|0);
       $57 = HEAP32[$arrayidx106$i>>2]|0;
       $not$cmp107$i = ($57|0)==(0|0);
       $$sink$i154 = $not$cmp107$i&1;
       $arrayidx113$i155 = (((($t$48$i)) + 16|0) + ($$sink$i154<<2)|0);
       $58 = HEAP32[$arrayidx113$i155>>2]|0;
       $cmp97$i = ($58|0)==(0|0);
       if ($cmp97$i) {
        $rsize$4$lcssa$i = $sub101$rsize$4$i;$v$4$lcssa$i = $t$4$v$4$i;
        break;
       } else {
        $rsize$49$i = $sub101$rsize$4$i;$t$48$i = $58;$v$410$i = $t$4$v$4$i;
        label = 85;
       }
      }
     }
     $cmp116$i = ($v$4$lcssa$i|0)==(0|0);
     if ($cmp116$i) {
      $nb$0 = $and145;
     } else {
      $59 = HEAP32[(7932)>>2]|0;
      $sub118$i = (($59) - ($and145))|0;
      $cmp119$i = ($rsize$4$lcssa$i>>>0)<($sub118$i>>>0);
      if ($cmp119$i) {
       $60 = HEAP32[(7940)>>2]|0;
       $cmp121$i = ($v$4$lcssa$i>>>0)<($60>>>0);
       if ($cmp121$i) {
        _abort();
        // unreachable;
       }
       $add$ptr$i158 = (($v$4$lcssa$i) + ($and145)|0);
       $cmp123$i = ($v$4$lcssa$i>>>0)<($add$ptr$i158>>>0);
       if (!($cmp123$i)) {
        _abort();
        // unreachable;
       }
       $parent$i159 = ((($v$4$lcssa$i)) + 24|0);
       $61 = HEAP32[$parent$i159>>2]|0;
       $bk$i160 = ((($v$4$lcssa$i)) + 12|0);
       $62 = HEAP32[$bk$i160>>2]|0;
       $cmp128$i = ($62|0)==($v$4$lcssa$i|0);
       do {
        if ($cmp128$i) {
         $arrayidx151$i = ((($v$4$lcssa$i)) + 20|0);
         $66 = HEAP32[$arrayidx151$i>>2]|0;
         $cmp152$i = ($66|0)==(0|0);
         if ($cmp152$i) {
          $arrayidx155$i = ((($v$4$lcssa$i)) + 16|0);
          $67 = HEAP32[$arrayidx155$i>>2]|0;
          $cmp156$i = ($67|0)==(0|0);
          if ($cmp156$i) {
           $R$3$i168 = 0;
           break;
          } else {
           $R$1$i165 = $67;$RP$1$i164 = $arrayidx155$i;
          }
         } else {
          $R$1$i165 = $66;$RP$1$i164 = $arrayidx151$i;
         }
         while(1) {
          $arrayidx161$i = ((($R$1$i165)) + 20|0);
          $68 = HEAP32[$arrayidx161$i>>2]|0;
          $cmp162$i = ($68|0)==(0|0);
          if (!($cmp162$i)) {
           $R$1$i165 = $68;$RP$1$i164 = $arrayidx161$i;
           continue;
          }
          $arrayidx165$i166 = ((($R$1$i165)) + 16|0);
          $69 = HEAP32[$arrayidx165$i166>>2]|0;
          $cmp166$i = ($69|0)==(0|0);
          if ($cmp166$i) {
           break;
          } else {
           $R$1$i165 = $69;$RP$1$i164 = $arrayidx165$i166;
          }
         }
         $cmp171$i = ($RP$1$i164>>>0)<($60>>>0);
         if ($cmp171$i) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$1$i164>>2] = 0;
          $R$3$i168 = $R$1$i165;
          break;
         }
        } else {
         $fd$i161 = ((($v$4$lcssa$i)) + 8|0);
         $63 = HEAP32[$fd$i161>>2]|0;
         $cmp133$i = ($63>>>0)<($60>>>0);
         if ($cmp133$i) {
          _abort();
          // unreachable;
         }
         $bk136$i = ((($63)) + 12|0);
         $64 = HEAP32[$bk136$i>>2]|0;
         $cmp137$i = ($64|0)==($v$4$lcssa$i|0);
         if (!($cmp137$i)) {
          _abort();
          // unreachable;
         }
         $fd139$i = ((($62)) + 8|0);
         $65 = HEAP32[$fd139$i>>2]|0;
         $cmp140$i = ($65|0)==($v$4$lcssa$i|0);
         if ($cmp140$i) {
          HEAP32[$bk136$i>>2] = $62;
          HEAP32[$fd139$i>>2] = $63;
          $R$3$i168 = $62;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $cmp180$i = ($61|0)==(0|0);
       L164: do {
        if ($cmp180$i) {
         $83 = $50;
        } else {
         $index$i169 = ((($v$4$lcssa$i)) + 28|0);
         $70 = HEAP32[$index$i169>>2]|0;
         $arrayidx184$i = (8228 + ($70<<2)|0);
         $71 = HEAP32[$arrayidx184$i>>2]|0;
         $cmp185$i = ($v$4$lcssa$i|0)==($71|0);
         do {
          if ($cmp185$i) {
           HEAP32[$arrayidx184$i>>2] = $R$3$i168;
           $cond3$i = ($R$3$i168|0)==(0|0);
           if ($cond3$i) {
            $shl192$i = 1 << $70;
            $neg$i170 = $shl192$i ^ -1;
            $and194$i = $50 & $neg$i170;
            HEAP32[(7928)>>2] = $and194$i;
            $83 = $and194$i;
            break L164;
           }
          } else {
           $72 = HEAP32[(7940)>>2]|0;
           $cmp198$i = ($61>>>0)<($72>>>0);
           if ($cmp198$i) {
            _abort();
            // unreachable;
           } else {
            $arrayidx204$i = ((($61)) + 16|0);
            $73 = HEAP32[$arrayidx204$i>>2]|0;
            $not$cmp205$i = ($73|0)!=($v$4$lcssa$i|0);
            $$sink2$i172 = $not$cmp205$i&1;
            $arrayidx212$i = (((($61)) + 16|0) + ($$sink2$i172<<2)|0);
            HEAP32[$arrayidx212$i>>2] = $R$3$i168;
            $cmp217$i = ($R$3$i168|0)==(0|0);
            if ($cmp217$i) {
             $83 = $50;
             break L164;
            } else {
             break;
            }
           }
          }
         } while(0);
         $74 = HEAP32[(7940)>>2]|0;
         $cmp221$i = ($R$3$i168>>>0)<($74>>>0);
         if ($cmp221$i) {
          _abort();
          // unreachable;
         }
         $parent226$i = ((($R$3$i168)) + 24|0);
         HEAP32[$parent226$i>>2] = $61;
         $arrayidx228$i = ((($v$4$lcssa$i)) + 16|0);
         $75 = HEAP32[$arrayidx228$i>>2]|0;
         $cmp229$i = ($75|0)==(0|0);
         do {
          if (!($cmp229$i)) {
           $cmp233$i = ($75>>>0)<($74>>>0);
           if ($cmp233$i) {
            _abort();
            // unreachable;
           } else {
            $arrayidx239$i = ((($R$3$i168)) + 16|0);
            HEAP32[$arrayidx239$i>>2] = $75;
            $parent240$i = ((($75)) + 24|0);
            HEAP32[$parent240$i>>2] = $R$3$i168;
            break;
           }
          }
         } while(0);
         $arrayidx245$i = ((($v$4$lcssa$i)) + 20|0);
         $76 = HEAP32[$arrayidx245$i>>2]|0;
         $cmp246$i = ($76|0)==(0|0);
         if ($cmp246$i) {
          $83 = $50;
         } else {
          $77 = HEAP32[(7940)>>2]|0;
          $cmp250$i = ($76>>>0)<($77>>>0);
          if ($cmp250$i) {
           _abort();
           // unreachable;
          } else {
           $arrayidx256$i = ((($R$3$i168)) + 20|0);
           HEAP32[$arrayidx256$i>>2] = $76;
           $parent257$i = ((($76)) + 24|0);
           HEAP32[$parent257$i>>2] = $R$3$i168;
           $83 = $50;
           break;
          }
         }
        }
       } while(0);
       $cmp265$i = ($rsize$4$lcssa$i>>>0)<(16);
       do {
        if ($cmp265$i) {
         $add268$i = (($rsize$4$lcssa$i) + ($and145))|0;
         $or270$i = $add268$i | 3;
         $head271$i = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$head271$i>>2] = $or270$i;
         $add$ptr273$i = (($v$4$lcssa$i) + ($add268$i)|0);
         $head274$i = ((($add$ptr273$i)) + 4|0);
         $78 = HEAP32[$head274$i>>2]|0;
         $or275$i = $78 | 1;
         HEAP32[$head274$i>>2] = $or275$i;
        } else {
         $or278$i = $and145 | 3;
         $head279$i = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$head279$i>>2] = $or278$i;
         $or280$i = $rsize$4$lcssa$i | 1;
         $head281$i = ((($add$ptr$i158)) + 4|0);
         HEAP32[$head281$i>>2] = $or280$i;
         $add$ptr282$i = (($add$ptr$i158) + ($rsize$4$lcssa$i)|0);
         HEAP32[$add$ptr282$i>>2] = $rsize$4$lcssa$i;
         $shr283$i = $rsize$4$lcssa$i >>> 3;
         $cmp284$i = ($rsize$4$lcssa$i>>>0)<(256);
         if ($cmp284$i) {
          $shl288$i = $shr283$i << 1;
          $arrayidx289$i = (7964 + ($shl288$i<<2)|0);
          $79 = HEAP32[1981]|0;
          $shl291$i = 1 << $shr283$i;
          $and292$i = $79 & $shl291$i;
          $tobool293$i = ($and292$i|0)==(0);
          if ($tobool293$i) {
           $or297$i = $79 | $shl291$i;
           HEAP32[1981] = $or297$i;
           $$pre$i175 = ((($arrayidx289$i)) + 8|0);
           $$pre$phi$i176Z2D = $$pre$i175;$F290$0$i = $arrayidx289$i;
          } else {
           $80 = ((($arrayidx289$i)) + 8|0);
           $81 = HEAP32[$80>>2]|0;
           $82 = HEAP32[(7940)>>2]|0;
           $cmp301$i = ($81>>>0)<($82>>>0);
           if ($cmp301$i) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i176Z2D = $80;$F290$0$i = $81;
           }
          }
          HEAP32[$$pre$phi$i176Z2D>>2] = $add$ptr$i158;
          $bk311$i = ((($F290$0$i)) + 12|0);
          HEAP32[$bk311$i>>2] = $add$ptr$i158;
          $fd312$i = ((($add$ptr$i158)) + 8|0);
          HEAP32[$fd312$i>>2] = $F290$0$i;
          $bk313$i = ((($add$ptr$i158)) + 12|0);
          HEAP32[$bk313$i>>2] = $arrayidx289$i;
          break;
         }
         $shr318$i = $rsize$4$lcssa$i >>> 8;
         $cmp319$i = ($shr318$i|0)==(0);
         if ($cmp319$i) {
          $I316$0$i = 0;
         } else {
          $cmp323$i = ($rsize$4$lcssa$i>>>0)>(16777215);
          if ($cmp323$i) {
           $I316$0$i = 31;
          } else {
           $sub329$i = (($shr318$i) + 1048320)|0;
           $shr330$i = $sub329$i >>> 16;
           $and331$i = $shr330$i & 8;
           $shl333$i = $shr318$i << $and331$i;
           $sub334$i = (($shl333$i) + 520192)|0;
           $shr335$i = $sub334$i >>> 16;
           $and336$i = $shr335$i & 4;
           $add337$i = $and336$i | $and331$i;
           $shl338$i = $shl333$i << $and336$i;
           $sub339$i = (($shl338$i) + 245760)|0;
           $shr340$i = $sub339$i >>> 16;
           $and341$i = $shr340$i & 2;
           $add342$i = $add337$i | $and341$i;
           $sub343$i = (14 - ($add342$i))|0;
           $shl344$i = $shl338$i << $and341$i;
           $shr345$i = $shl344$i >>> 15;
           $add346$i = (($sub343$i) + ($shr345$i))|0;
           $shl347$i = $add346$i << 1;
           $add348$i = (($add346$i) + 7)|0;
           $shr349$i = $rsize$4$lcssa$i >>> $add348$i;
           $and350$i = $shr349$i & 1;
           $add351$i = $and350$i | $shl347$i;
           $I316$0$i = $add351$i;
          }
         }
         $arrayidx355$i = (8228 + ($I316$0$i<<2)|0);
         $index356$i = ((($add$ptr$i158)) + 28|0);
         HEAP32[$index356$i>>2] = $I316$0$i;
         $child357$i = ((($add$ptr$i158)) + 16|0);
         $arrayidx358$i = ((($child357$i)) + 4|0);
         HEAP32[$arrayidx358$i>>2] = 0;
         HEAP32[$child357$i>>2] = 0;
         $shl362$i = 1 << $I316$0$i;
         $and363$i = $83 & $shl362$i;
         $tobool364$i = ($and363$i|0)==(0);
         if ($tobool364$i) {
          $or368$i = $83 | $shl362$i;
          HEAP32[(7928)>>2] = $or368$i;
          HEAP32[$arrayidx355$i>>2] = $add$ptr$i158;
          $parent369$i = ((($add$ptr$i158)) + 24|0);
          HEAP32[$parent369$i>>2] = $arrayidx355$i;
          $bk370$i = ((($add$ptr$i158)) + 12|0);
          HEAP32[$bk370$i>>2] = $add$ptr$i158;
          $fd371$i = ((($add$ptr$i158)) + 8|0);
          HEAP32[$fd371$i>>2] = $add$ptr$i158;
          break;
         }
         $84 = HEAP32[$arrayidx355$i>>2]|0;
         $cmp374$i = ($I316$0$i|0)==(31);
         $shr378$i = $I316$0$i >>> 1;
         $sub381$i = (25 - ($shr378$i))|0;
         $cond383$i = $cmp374$i ? 0 : $sub381$i;
         $shl384$i = $rsize$4$lcssa$i << $cond383$i;
         $K373$0$i = $shl384$i;$T$0$i = $84;
         while(1) {
          $head386$i = ((($T$0$i)) + 4|0);
          $85 = HEAP32[$head386$i>>2]|0;
          $and387$i = $85 & -8;
          $cmp388$i = ($and387$i|0)==($rsize$4$lcssa$i|0);
          if ($cmp388$i) {
           label = 139;
           break;
          }
          $shr392$i = $K373$0$i >>> 31;
          $arrayidx394$i = (((($T$0$i)) + 16|0) + ($shr392$i<<2)|0);
          $shl395$i = $K373$0$i << 1;
          $86 = HEAP32[$arrayidx394$i>>2]|0;
          $cmp396$i = ($86|0)==(0|0);
          if ($cmp396$i) {
           label = 136;
           break;
          } else {
           $K373$0$i = $shl395$i;$T$0$i = $86;
          }
         }
         if ((label|0) == 136) {
          $87 = HEAP32[(7940)>>2]|0;
          $cmp401$i = ($arrayidx394$i>>>0)<($87>>>0);
          if ($cmp401$i) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$arrayidx394$i>>2] = $add$ptr$i158;
           $parent406$i = ((($add$ptr$i158)) + 24|0);
           HEAP32[$parent406$i>>2] = $T$0$i;
           $bk407$i = ((($add$ptr$i158)) + 12|0);
           HEAP32[$bk407$i>>2] = $add$ptr$i158;
           $fd408$i = ((($add$ptr$i158)) + 8|0);
           HEAP32[$fd408$i>>2] = $add$ptr$i158;
           break;
          }
         }
         else if ((label|0) == 139) {
          $fd416$i = ((($T$0$i)) + 8|0);
          $88 = HEAP32[$fd416$i>>2]|0;
          $89 = HEAP32[(7940)>>2]|0;
          $cmp422$i = ($88>>>0)>=($89>>>0);
          $not$cmp418$i = ($T$0$i>>>0)>=($89>>>0);
          $90 = $cmp422$i & $not$cmp418$i;
          if ($90) {
           $bk429$i = ((($88)) + 12|0);
           HEAP32[$bk429$i>>2] = $add$ptr$i158;
           HEAP32[$fd416$i>>2] = $add$ptr$i158;
           $fd431$i = ((($add$ptr$i158)) + 8|0);
           HEAP32[$fd431$i>>2] = $88;
           $bk432$i = ((($add$ptr$i158)) + 12|0);
           HEAP32[$bk432$i>>2] = $T$0$i;
           $parent433$i = ((($add$ptr$i158)) + 24|0);
           HEAP32[$parent433$i>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $add$ptr441$i = ((($v$4$lcssa$i)) + 8|0);
       $retval$0 = $add$ptr441$i;
       STACKTOP = sp;return ($retval$0|0);
      } else {
       $nb$0 = $and145;
      }
     }
    }
   }
  }
 } while(0);
 $91 = HEAP32[(7932)>>2]|0;
 $cmp156 = ($91>>>0)<($nb$0>>>0);
 if (!($cmp156)) {
  $sub160 = (($91) - ($nb$0))|0;
  $92 = HEAP32[(7944)>>2]|0;
  $cmp162 = ($sub160>>>0)>(15);
  if ($cmp162) {
   $add$ptr166 = (($92) + ($nb$0)|0);
   HEAP32[(7944)>>2] = $add$ptr166;
   HEAP32[(7932)>>2] = $sub160;
   $or167 = $sub160 | 1;
   $head168 = ((($add$ptr166)) + 4|0);
   HEAP32[$head168>>2] = $or167;
   $add$ptr169 = (($add$ptr166) + ($sub160)|0);
   HEAP32[$add$ptr169>>2] = $sub160;
   $or172 = $nb$0 | 3;
   $head173 = ((($92)) + 4|0);
   HEAP32[$head173>>2] = $or172;
  } else {
   HEAP32[(7932)>>2] = 0;
   HEAP32[(7944)>>2] = 0;
   $or176 = $91 | 3;
   $head177 = ((($92)) + 4|0);
   HEAP32[$head177>>2] = $or176;
   $add$ptr178 = (($92) + ($91)|0);
   $head179 = ((($add$ptr178)) + 4|0);
   $93 = HEAP32[$head179>>2]|0;
   $or180 = $93 | 1;
   HEAP32[$head179>>2] = $or180;
  }
  $add$ptr182 = ((($92)) + 8|0);
  $retval$0 = $add$ptr182;
  STACKTOP = sp;return ($retval$0|0);
 }
 $94 = HEAP32[(7936)>>2]|0;
 $cmp186 = ($94>>>0)>($nb$0>>>0);
 if ($cmp186) {
  $sub190 = (($94) - ($nb$0))|0;
  HEAP32[(7936)>>2] = $sub190;
  $95 = HEAP32[(7948)>>2]|0;
  $add$ptr193 = (($95) + ($nb$0)|0);
  HEAP32[(7948)>>2] = $add$ptr193;
  $or194 = $sub190 | 1;
  $head195 = ((($add$ptr193)) + 4|0);
  HEAP32[$head195>>2] = $or194;
  $or197 = $nb$0 | 3;
  $head198 = ((($95)) + 4|0);
  HEAP32[$head198>>2] = $or197;
  $add$ptr199 = ((($95)) + 8|0);
  $retval$0 = $add$ptr199;
  STACKTOP = sp;return ($retval$0|0);
 }
 $96 = HEAP32[2099]|0;
 $cmp$i177 = ($96|0)==(0);
 if ($cmp$i177) {
  HEAP32[(8404)>>2] = 4096;
  HEAP32[(8400)>>2] = 4096;
  HEAP32[(8408)>>2] = -1;
  HEAP32[(8412)>>2] = -1;
  HEAP32[(8416)>>2] = 0;
  HEAP32[(8368)>>2] = 0;
  $97 = $magic$i$i;
  $xor$i$i = $97 & -16;
  $and6$i$i = $xor$i$i ^ 1431655768;
  HEAP32[$magic$i$i>>2] = $and6$i$i;
  HEAP32[2099] = $and6$i$i;
  $98 = 4096;
 } else {
  $$pre$i178 = HEAP32[(8404)>>2]|0;
  $98 = $$pre$i178;
 }
 $add$i179 = (($nb$0) + 48)|0;
 $sub$i180 = (($nb$0) + 47)|0;
 $add9$i = (($98) + ($sub$i180))|0;
 $neg$i181 = (0 - ($98))|0;
 $and11$i = $add9$i & $neg$i181;
 $cmp12$i = ($and11$i>>>0)>($nb$0>>>0);
 if (!($cmp12$i)) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $99 = HEAP32[(8364)>>2]|0;
 $cmp15$i = ($99|0)==(0);
 if (!($cmp15$i)) {
  $100 = HEAP32[(8356)>>2]|0;
  $add17$i182 = (($100) + ($and11$i))|0;
  $cmp19$i = ($add17$i182>>>0)<=($100>>>0);
  $cmp21$i = ($add17$i182>>>0)>($99>>>0);
  $or$cond1$i183 = $cmp19$i | $cmp21$i;
  if ($or$cond1$i183) {
   $retval$0 = 0;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $101 = HEAP32[(8368)>>2]|0;
 $and29$i = $101 & 4;
 $tobool30$i = ($and29$i|0)==(0);
 L244: do {
  if ($tobool30$i) {
   $102 = HEAP32[(7948)>>2]|0;
   $cmp32$i184 = ($102|0)==(0|0);
   L246: do {
    if ($cmp32$i184) {
     label = 163;
    } else {
     $sp$0$i$i = (8372);
     while(1) {
      $103 = HEAP32[$sp$0$i$i>>2]|0;
      $cmp$i11$i = ($103>>>0)>($102>>>0);
      if (!($cmp$i11$i)) {
       $size$i$i = ((($sp$0$i$i)) + 4|0);
       $104 = HEAP32[$size$i$i>>2]|0;
       $add$ptr$i$i = (($103) + ($104)|0);
       $cmp2$i$i = ($add$ptr$i$i>>>0)>($102>>>0);
       if ($cmp2$i$i) {
        break;
       }
      }
      $next$i$i = ((($sp$0$i$i)) + 8|0);
      $105 = HEAP32[$next$i$i>>2]|0;
      $cmp3$i$i = ($105|0)==(0|0);
      if ($cmp3$i$i) {
       label = 163;
       break L246;
      } else {
       $sp$0$i$i = $105;
      }
     }
     $add77$i = (($add9$i) - ($94))|0;
     $and80$i = $add77$i & $neg$i181;
     $cmp81$i190 = ($and80$i>>>0)<(2147483647);
     if ($cmp81$i190) {
      $call83$i = (_sbrk(($and80$i|0))|0);
      $110 = HEAP32[$sp$0$i$i>>2]|0;
      $111 = HEAP32[$size$i$i>>2]|0;
      $add$ptr$i192 = (($110) + ($111)|0);
      $cmp85$i = ($call83$i|0)==($add$ptr$i192|0);
      if ($cmp85$i) {
       $cmp89$i = ($call83$i|0)==((-1)|0);
       if ($cmp89$i) {
        $tsize$2657583$i = $and80$i;
       } else {
        $tbase$796$i = $call83$i;$tsize$795$i = $and80$i;
        label = 180;
        break L244;
       }
      } else {
       $br$2$ph$i = $call83$i;$ssize$2$ph$i = $and80$i;
       label = 171;
      }
     } else {
      $tsize$2657583$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 163) {
     $call37$i = (_sbrk(0)|0);
     $cmp38$i = ($call37$i|0)==((-1)|0);
     if ($cmp38$i) {
      $tsize$2657583$i = 0;
     } else {
      $106 = $call37$i;
      $107 = HEAP32[(8400)>>2]|0;
      $sub41$i = (($107) + -1)|0;
      $and42$i = $sub41$i & $106;
      $cmp43$i = ($and42$i|0)==(0);
      $add46$i = (($sub41$i) + ($106))|0;
      $neg48$i = (0 - ($107))|0;
      $and49$i = $add46$i & $neg48$i;
      $sub50$i = (($and49$i) - ($106))|0;
      $add51$i = $cmp43$i ? 0 : $sub50$i;
      $and11$add51$i = (($add51$i) + ($and11$i))|0;
      $108 = HEAP32[(8356)>>2]|0;
      $add54$i = (($and11$add51$i) + ($108))|0;
      $cmp55$i185 = ($and11$add51$i>>>0)>($nb$0>>>0);
      $cmp57$i186 = ($and11$add51$i>>>0)<(2147483647);
      $or$cond$i187 = $cmp55$i185 & $cmp57$i186;
      if ($or$cond$i187) {
       $109 = HEAP32[(8364)>>2]|0;
       $cmp60$i = ($109|0)==(0);
       if (!($cmp60$i)) {
        $cmp63$i = ($add54$i>>>0)<=($108>>>0);
        $cmp66$i189 = ($add54$i>>>0)>($109>>>0);
        $or$cond2$i = $cmp63$i | $cmp66$i189;
        if ($or$cond2$i) {
         $tsize$2657583$i = 0;
         break;
        }
       }
       $call68$i = (_sbrk(($and11$add51$i|0))|0);
       $cmp69$i = ($call68$i|0)==($call37$i|0);
       if ($cmp69$i) {
        $tbase$796$i = $call37$i;$tsize$795$i = $and11$add51$i;
        label = 180;
        break L244;
       } else {
        $br$2$ph$i = $call68$i;$ssize$2$ph$i = $and11$add51$i;
        label = 171;
       }
      } else {
       $tsize$2657583$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 171) {
     $sub112$i = (0 - ($ssize$2$ph$i))|0;
     $cmp91$i = ($br$2$ph$i|0)!=((-1)|0);
     $cmp93$i = ($ssize$2$ph$i>>>0)<(2147483647);
     $or$cond5$i = $cmp93$i & $cmp91$i;
     $cmp96$i = ($add$i179>>>0)>($ssize$2$ph$i>>>0);
     $or$cond3$i = $cmp96$i & $or$cond5$i;
     if (!($or$cond3$i)) {
      $cmp118$i = ($br$2$ph$i|0)==((-1)|0);
      if ($cmp118$i) {
       $tsize$2657583$i = 0;
       break;
      } else {
       $tbase$796$i = $br$2$ph$i;$tsize$795$i = $ssize$2$ph$i;
       label = 180;
       break L244;
      }
     }
     $112 = HEAP32[(8404)>>2]|0;
     $sub99$i = (($sub$i180) - ($ssize$2$ph$i))|0;
     $add101$i = (($sub99$i) + ($112))|0;
     $neg103$i = (0 - ($112))|0;
     $and104$i = $add101$i & $neg103$i;
     $cmp105$i = ($and104$i>>>0)<(2147483647);
     if (!($cmp105$i)) {
      $tbase$796$i = $br$2$ph$i;$tsize$795$i = $ssize$2$ph$i;
      label = 180;
      break L244;
     }
     $call107$i = (_sbrk(($and104$i|0))|0);
     $cmp108$i = ($call107$i|0)==((-1)|0);
     if ($cmp108$i) {
      (_sbrk(($sub112$i|0))|0);
      $tsize$2657583$i = 0;
      break;
     } else {
      $add110$i = (($and104$i) + ($ssize$2$ph$i))|0;
      $tbase$796$i = $br$2$ph$i;$tsize$795$i = $add110$i;
      label = 180;
      break L244;
     }
    }
   } while(0);
   $113 = HEAP32[(8368)>>2]|0;
   $or$i194 = $113 | 4;
   HEAP32[(8368)>>2] = $or$i194;
   $tsize$4$i = $tsize$2657583$i;
   label = 178;
  } else {
   $tsize$4$i = 0;
   label = 178;
  }
 } while(0);
 if ((label|0) == 178) {
  $cmp127$i = ($and11$i>>>0)<(2147483647);
  if ($cmp127$i) {
   $call131$i = (_sbrk(($and11$i|0))|0);
   $call132$i = (_sbrk(0)|0);
   $cmp133$i195 = ($call131$i|0)!=((-1)|0);
   $cmp135$i = ($call132$i|0)!=((-1)|0);
   $or$cond4$i = $cmp133$i195 & $cmp135$i;
   $cmp137$i196 = ($call131$i>>>0)<($call132$i>>>0);
   $or$cond7$i = $cmp137$i196 & $or$cond4$i;
   $sub$ptr$lhs$cast$i = $call132$i;
   $sub$ptr$rhs$cast$i = $call131$i;
   $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0;
   $add140$i = (($nb$0) + 40)|0;
   $cmp141$i = ($sub$ptr$sub$i>>>0)>($add140$i>>>0);
   $sub$ptr$sub$tsize$4$i = $cmp141$i ? $sub$ptr$sub$i : $tsize$4$i;
   $or$cond7$not$i = $or$cond7$i ^ 1;
   $cmp14799$i = ($call131$i|0)==((-1)|0);
   $not$cmp141$i = $cmp141$i ^ 1;
   $cmp147$i = $cmp14799$i | $not$cmp141$i;
   $or$cond97$i = $cmp147$i | $or$cond7$not$i;
   if (!($or$cond97$i)) {
    $tbase$796$i = $call131$i;$tsize$795$i = $sub$ptr$sub$tsize$4$i;
    label = 180;
   }
  }
 }
 if ((label|0) == 180) {
  $114 = HEAP32[(8356)>>2]|0;
  $add150$i = (($114) + ($tsize$795$i))|0;
  HEAP32[(8356)>>2] = $add150$i;
  $115 = HEAP32[(8360)>>2]|0;
  $cmp151$i = ($add150$i>>>0)>($115>>>0);
  if ($cmp151$i) {
   HEAP32[(8360)>>2] = $add150$i;
  }
  $116 = HEAP32[(7948)>>2]|0;
  $cmp157$i = ($116|0)==(0|0);
  do {
   if ($cmp157$i) {
    $117 = HEAP32[(7940)>>2]|0;
    $cmp159$i198 = ($117|0)==(0|0);
    $cmp162$i199 = ($tbase$796$i>>>0)<($117>>>0);
    $or$cond8$i = $cmp159$i198 | $cmp162$i199;
    if ($or$cond8$i) {
     HEAP32[(7940)>>2] = $tbase$796$i;
    }
    HEAP32[(8372)>>2] = $tbase$796$i;
    HEAP32[(8376)>>2] = $tsize$795$i;
    HEAP32[(8384)>>2] = 0;
    $118 = HEAP32[2099]|0;
    HEAP32[(7960)>>2] = $118;
    HEAP32[(7956)>>2] = -1;
    $i$01$i$i = 0;
    while(1) {
     $shl$i13$i = $i$01$i$i << 1;
     $arrayidx$i14$i = (7964 + ($shl$i13$i<<2)|0);
     $119 = ((($arrayidx$i14$i)) + 12|0);
     HEAP32[$119>>2] = $arrayidx$i14$i;
     $120 = ((($arrayidx$i14$i)) + 8|0);
     HEAP32[$120>>2] = $arrayidx$i14$i;
     $inc$i$i = (($i$01$i$i) + 1)|0;
     $exitcond$i$i = ($inc$i$i|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$01$i$i = $inc$i$i;
     }
    }
    $sub172$i = (($tsize$795$i) + -40)|0;
    $add$ptr$i16$i = ((($tbase$796$i)) + 8|0);
    $121 = $add$ptr$i16$i;
    $and$i17$i = $121 & 7;
    $cmp$i18$i = ($and$i17$i|0)==(0);
    $122 = (0 - ($121))|0;
    $and3$i$i = $122 & 7;
    $cond$i19$i = $cmp$i18$i ? 0 : $and3$i$i;
    $add$ptr4$i$i = (($tbase$796$i) + ($cond$i19$i)|0);
    $sub5$i$i = (($sub172$i) - ($cond$i19$i))|0;
    HEAP32[(7948)>>2] = $add$ptr4$i$i;
    HEAP32[(7936)>>2] = $sub5$i$i;
    $or$i$i = $sub5$i$i | 1;
    $head$i20$i = ((($add$ptr4$i$i)) + 4|0);
    HEAP32[$head$i20$i>>2] = $or$i$i;
    $add$ptr6$i$i = (($add$ptr4$i$i) + ($sub5$i$i)|0);
    $head7$i$i = ((($add$ptr6$i$i)) + 4|0);
    HEAP32[$head7$i$i>>2] = 40;
    $123 = HEAP32[(8412)>>2]|0;
    HEAP32[(7952)>>2] = $123;
   } else {
    $sp$0108$i = (8372);
    while(1) {
     $124 = HEAP32[$sp$0108$i>>2]|0;
     $size188$i = ((($sp$0108$i)) + 4|0);
     $125 = HEAP32[$size188$i>>2]|0;
     $add$ptr189$i = (($124) + ($125)|0);
     $cmp190$i = ($tbase$796$i|0)==($add$ptr189$i|0);
     if ($cmp190$i) {
      label = 190;
      break;
     }
     $next$i = ((($sp$0108$i)) + 8|0);
     $126 = HEAP32[$next$i>>2]|0;
     $cmp186$i = ($126|0)==(0|0);
     if ($cmp186$i) {
      break;
     } else {
      $sp$0108$i = $126;
     }
    }
    if ((label|0) == 190) {
     $sflags193$i = ((($sp$0108$i)) + 12|0);
     $127 = HEAP32[$sflags193$i>>2]|0;
     $and194$i203 = $127 & 8;
     $tobool195$i = ($and194$i203|0)==(0);
     if ($tobool195$i) {
      $cmp203$i = ($116>>>0)>=($124>>>0);
      $cmp209$i = ($116>>>0)<($tbase$796$i>>>0);
      $or$cond98$i = $cmp209$i & $cmp203$i;
      if ($or$cond98$i) {
       $add212$i = (($125) + ($tsize$795$i))|0;
       HEAP32[$size188$i>>2] = $add212$i;
       $128 = HEAP32[(7936)>>2]|0;
       $add$ptr$i49$i = ((($116)) + 8|0);
       $129 = $add$ptr$i49$i;
       $and$i50$i = $129 & 7;
       $cmp$i51$i = ($and$i50$i|0)==(0);
       $130 = (0 - ($129))|0;
       $and3$i52$i = $130 & 7;
       $cond$i53$i = $cmp$i51$i ? 0 : $and3$i52$i;
       $add$ptr4$i54$i = (($116) + ($cond$i53$i)|0);
       $add215$i = (($tsize$795$i) - ($cond$i53$i))|0;
       $sub5$i55$i = (($128) + ($add215$i))|0;
       HEAP32[(7948)>>2] = $add$ptr4$i54$i;
       HEAP32[(7936)>>2] = $sub5$i55$i;
       $or$i56$i = $sub5$i55$i | 1;
       $head$i57$i = ((($add$ptr4$i54$i)) + 4|0);
       HEAP32[$head$i57$i>>2] = $or$i56$i;
       $add$ptr6$i58$i = (($add$ptr4$i54$i) + ($sub5$i55$i)|0);
       $head7$i59$i = ((($add$ptr6$i58$i)) + 4|0);
       HEAP32[$head7$i59$i>>2] = 40;
       $131 = HEAP32[(8412)>>2]|0;
       HEAP32[(7952)>>2] = $131;
       break;
      }
     }
    }
    $132 = HEAP32[(7940)>>2]|0;
    $cmp218$i = ($tbase$796$i>>>0)<($132>>>0);
    if ($cmp218$i) {
     HEAP32[(7940)>>2] = $tbase$796$i;
     $147 = $tbase$796$i;
    } else {
     $147 = $132;
    }
    $add$ptr227$i = (($tbase$796$i) + ($tsize$795$i)|0);
    $sp$1107$i = (8372);
    while(1) {
     $133 = HEAP32[$sp$1107$i>>2]|0;
     $cmp228$i = ($133|0)==($add$ptr227$i|0);
     if ($cmp228$i) {
      label = 198;
      break;
     }
     $next231$i = ((($sp$1107$i)) + 8|0);
     $134 = HEAP32[$next231$i>>2]|0;
     $cmp224$i = ($134|0)==(0|0);
     if ($cmp224$i) {
      break;
     } else {
      $sp$1107$i = $134;
     }
    }
    if ((label|0) == 198) {
     $sflags235$i = ((($sp$1107$i)) + 12|0);
     $135 = HEAP32[$sflags235$i>>2]|0;
     $and236$i = $135 & 8;
     $tobool237$i = ($and236$i|0)==(0);
     if ($tobool237$i) {
      HEAP32[$sp$1107$i>>2] = $tbase$796$i;
      $size245$i = ((($sp$1107$i)) + 4|0);
      $136 = HEAP32[$size245$i>>2]|0;
      $add246$i = (($136) + ($tsize$795$i))|0;
      HEAP32[$size245$i>>2] = $add246$i;
      $add$ptr$i21$i = ((($tbase$796$i)) + 8|0);
      $137 = $add$ptr$i21$i;
      $and$i22$i = $137 & 7;
      $cmp$i23$i = ($and$i22$i|0)==(0);
      $138 = (0 - ($137))|0;
      $and3$i24$i = $138 & 7;
      $cond$i25$i = $cmp$i23$i ? 0 : $and3$i24$i;
      $add$ptr4$i26$i = (($tbase$796$i) + ($cond$i25$i)|0);
      $add$ptr5$i$i = ((($add$ptr227$i)) + 8|0);
      $139 = $add$ptr5$i$i;
      $and6$i27$i = $139 & 7;
      $cmp7$i$i = ($and6$i27$i|0)==(0);
      $140 = (0 - ($139))|0;
      $and13$i$i = $140 & 7;
      $cond15$i$i = $cmp7$i$i ? 0 : $and13$i$i;
      $add$ptr16$i$i = (($add$ptr227$i) + ($cond15$i$i)|0);
      $sub$ptr$lhs$cast$i28$i = $add$ptr16$i$i;
      $sub$ptr$rhs$cast$i29$i = $add$ptr4$i26$i;
      $sub$ptr$sub$i30$i = (($sub$ptr$lhs$cast$i28$i) - ($sub$ptr$rhs$cast$i29$i))|0;
      $add$ptr17$i$i = (($add$ptr4$i26$i) + ($nb$0)|0);
      $sub18$i$i = (($sub$ptr$sub$i30$i) - ($nb$0))|0;
      $or19$i$i = $nb$0 | 3;
      $head$i31$i = ((($add$ptr4$i26$i)) + 4|0);
      HEAP32[$head$i31$i>>2] = $or19$i$i;
      $cmp20$i$i = ($add$ptr16$i$i|0)==($116|0);
      do {
       if ($cmp20$i$i) {
        $141 = HEAP32[(7936)>>2]|0;
        $add$i$i = (($141) + ($sub18$i$i))|0;
        HEAP32[(7936)>>2] = $add$i$i;
        HEAP32[(7948)>>2] = $add$ptr17$i$i;
        $or22$i$i = $add$i$i | 1;
        $head23$i$i = ((($add$ptr17$i$i)) + 4|0);
        HEAP32[$head23$i$i>>2] = $or22$i$i;
       } else {
        $142 = HEAP32[(7944)>>2]|0;
        $cmp24$i$i = ($add$ptr16$i$i|0)==($142|0);
        if ($cmp24$i$i) {
         $143 = HEAP32[(7932)>>2]|0;
         $add26$i$i = (($143) + ($sub18$i$i))|0;
         HEAP32[(7932)>>2] = $add26$i$i;
         HEAP32[(7944)>>2] = $add$ptr17$i$i;
         $or28$i$i = $add26$i$i | 1;
         $head29$i$i = ((($add$ptr17$i$i)) + 4|0);
         HEAP32[$head29$i$i>>2] = $or28$i$i;
         $add$ptr30$i$i = (($add$ptr17$i$i) + ($add26$i$i)|0);
         HEAP32[$add$ptr30$i$i>>2] = $add26$i$i;
         break;
        }
        $head32$i$i = ((($add$ptr16$i$i)) + 4|0);
        $144 = HEAP32[$head32$i$i>>2]|0;
        $and33$i$i = $144 & 3;
        $cmp34$i$i = ($and33$i$i|0)==(1);
        if ($cmp34$i$i) {
         $and37$i$i = $144 & -8;
         $shr$i34$i = $144 >>> 3;
         $cmp38$i$i = ($144>>>0)<(256);
         L314: do {
          if ($cmp38$i$i) {
           $fd$i$i = ((($add$ptr16$i$i)) + 8|0);
           $145 = HEAP32[$fd$i$i>>2]|0;
           $bk$i35$i = ((($add$ptr16$i$i)) + 12|0);
           $146 = HEAP32[$bk$i35$i>>2]|0;
           $shl$i36$i = $shr$i34$i << 1;
           $arrayidx$i37$i = (7964 + ($shl$i36$i<<2)|0);
           $cmp41$i$i = ($145|0)==($arrayidx$i37$i|0);
           do {
            if (!($cmp41$i$i)) {
             $cmp42$i$i = ($145>>>0)<($147>>>0);
             if ($cmp42$i$i) {
              _abort();
              // unreachable;
             }
             $bk43$i$i = ((($145)) + 12|0);
             $148 = HEAP32[$bk43$i$i>>2]|0;
             $cmp44$i$i = ($148|0)==($add$ptr16$i$i|0);
             if ($cmp44$i$i) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $cmp46$i38$i = ($146|0)==($145|0);
           if ($cmp46$i38$i) {
            $shl48$i$i = 1 << $shr$i34$i;
            $neg$i$i = $shl48$i$i ^ -1;
            $149 = HEAP32[1981]|0;
            $and49$i$i = $149 & $neg$i$i;
            HEAP32[1981] = $and49$i$i;
            break;
           }
           $cmp54$i$i = ($146|0)==($arrayidx$i37$i|0);
           do {
            if ($cmp54$i$i) {
             $$pre5$i$i = ((($146)) + 8|0);
             $fd68$pre$phi$i$iZ2D = $$pre5$i$i;
            } else {
             $cmp57$i$i = ($146>>>0)<($147>>>0);
             if ($cmp57$i$i) {
              _abort();
              // unreachable;
             }
             $fd59$i$i = ((($146)) + 8|0);
             $150 = HEAP32[$fd59$i$i>>2]|0;
             $cmp60$i$i = ($150|0)==($add$ptr16$i$i|0);
             if ($cmp60$i$i) {
              $fd68$pre$phi$i$iZ2D = $fd59$i$i;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $bk67$i$i = ((($145)) + 12|0);
           HEAP32[$bk67$i$i>>2] = $146;
           HEAP32[$fd68$pre$phi$i$iZ2D>>2] = $145;
          } else {
           $parent$i40$i = ((($add$ptr16$i$i)) + 24|0);
           $151 = HEAP32[$parent$i40$i>>2]|0;
           $bk74$i$i = ((($add$ptr16$i$i)) + 12|0);
           $152 = HEAP32[$bk74$i$i>>2]|0;
           $cmp75$i$i = ($152|0)==($add$ptr16$i$i|0);
           do {
            if ($cmp75$i$i) {
             $child$i$i = ((($add$ptr16$i$i)) + 16|0);
             $arrayidx96$i$i = ((($child$i$i)) + 4|0);
             $156 = HEAP32[$arrayidx96$i$i>>2]|0;
             $cmp97$i$i = ($156|0)==(0|0);
             if ($cmp97$i$i) {
              $157 = HEAP32[$child$i$i>>2]|0;
              $cmp100$i$i = ($157|0)==(0|0);
              if ($cmp100$i$i) {
               $R$3$i$i = 0;
               break;
              } else {
               $R$1$i$i = $157;$RP$1$i$i = $child$i$i;
              }
             } else {
              $R$1$i$i = $156;$RP$1$i$i = $arrayidx96$i$i;
             }
             while(1) {
              $arrayidx103$i$i = ((($R$1$i$i)) + 20|0);
              $158 = HEAP32[$arrayidx103$i$i>>2]|0;
              $cmp104$i$i = ($158|0)==(0|0);
              if (!($cmp104$i$i)) {
               $R$1$i$i = $158;$RP$1$i$i = $arrayidx103$i$i;
               continue;
              }
              $arrayidx107$i$i = ((($R$1$i$i)) + 16|0);
              $159 = HEAP32[$arrayidx107$i$i>>2]|0;
              $cmp108$i$i = ($159|0)==(0|0);
              if ($cmp108$i$i) {
               break;
              } else {
               $R$1$i$i = $159;$RP$1$i$i = $arrayidx107$i$i;
              }
             }
             $cmp112$i$i = ($RP$1$i$i>>>0)<($147>>>0);
             if ($cmp112$i$i) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$1$i$i>>2] = 0;
              $R$3$i$i = $R$1$i$i;
              break;
             }
            } else {
             $fd78$i$i = ((($add$ptr16$i$i)) + 8|0);
             $153 = HEAP32[$fd78$i$i>>2]|0;
             $cmp81$i$i = ($153>>>0)<($147>>>0);
             if ($cmp81$i$i) {
              _abort();
              // unreachable;
             }
             $bk82$i$i = ((($153)) + 12|0);
             $154 = HEAP32[$bk82$i$i>>2]|0;
             $cmp83$i$i = ($154|0)==($add$ptr16$i$i|0);
             if (!($cmp83$i$i)) {
              _abort();
              // unreachable;
             }
             $fd85$i$i = ((($152)) + 8|0);
             $155 = HEAP32[$fd85$i$i>>2]|0;
             $cmp86$i$i = ($155|0)==($add$ptr16$i$i|0);
             if ($cmp86$i$i) {
              HEAP32[$bk82$i$i>>2] = $152;
              HEAP32[$fd85$i$i>>2] = $153;
              $R$3$i$i = $152;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $cmp120$i42$i = ($151|0)==(0|0);
           if ($cmp120$i42$i) {
            break;
           }
           $index$i43$i = ((($add$ptr16$i$i)) + 28|0);
           $160 = HEAP32[$index$i43$i>>2]|0;
           $arrayidx123$i$i = (8228 + ($160<<2)|0);
           $161 = HEAP32[$arrayidx123$i$i>>2]|0;
           $cmp124$i$i = ($add$ptr16$i$i|0)==($161|0);
           do {
            if ($cmp124$i$i) {
             HEAP32[$arrayidx123$i$i>>2] = $R$3$i$i;
             $cond2$i$i = ($R$3$i$i|0)==(0|0);
             if (!($cond2$i$i)) {
              break;
             }
             $shl131$i$i = 1 << $160;
             $neg132$i$i = $shl131$i$i ^ -1;
             $162 = HEAP32[(7928)>>2]|0;
             $and133$i$i = $162 & $neg132$i$i;
             HEAP32[(7928)>>2] = $and133$i$i;
             break L314;
            } else {
             $163 = HEAP32[(7940)>>2]|0;
             $cmp137$i$i = ($151>>>0)<($163>>>0);
             if ($cmp137$i$i) {
              _abort();
              // unreachable;
             } else {
              $arrayidx143$i$i = ((($151)) + 16|0);
              $164 = HEAP32[$arrayidx143$i$i>>2]|0;
              $not$cmp144$i$i = ($164|0)!=($add$ptr16$i$i|0);
              $$sink$i$i = $not$cmp144$i$i&1;
              $arrayidx151$i$i = (((($151)) + 16|0) + ($$sink$i$i<<2)|0);
              HEAP32[$arrayidx151$i$i>>2] = $R$3$i$i;
              $cmp156$i$i = ($R$3$i$i|0)==(0|0);
              if ($cmp156$i$i) {
               break L314;
              } else {
               break;
              }
             }
            }
           } while(0);
           $165 = HEAP32[(7940)>>2]|0;
           $cmp160$i$i = ($R$3$i$i>>>0)<($165>>>0);
           if ($cmp160$i$i) {
            _abort();
            // unreachable;
           }
           $parent165$i$i = ((($R$3$i$i)) + 24|0);
           HEAP32[$parent165$i$i>>2] = $151;
           $child166$i$i = ((($add$ptr16$i$i)) + 16|0);
           $166 = HEAP32[$child166$i$i>>2]|0;
           $cmp168$i$i = ($166|0)==(0|0);
           do {
            if (!($cmp168$i$i)) {
             $cmp172$i$i = ($166>>>0)<($165>>>0);
             if ($cmp172$i$i) {
              _abort();
              // unreachable;
             } else {
              $arrayidx178$i$i = ((($R$3$i$i)) + 16|0);
              HEAP32[$arrayidx178$i$i>>2] = $166;
              $parent179$i$i = ((($166)) + 24|0);
              HEAP32[$parent179$i$i>>2] = $R$3$i$i;
              break;
             }
            }
           } while(0);
           $arrayidx184$i$i = ((($child166$i$i)) + 4|0);
           $167 = HEAP32[$arrayidx184$i$i>>2]|0;
           $cmp185$i$i = ($167|0)==(0|0);
           if ($cmp185$i$i) {
            break;
           }
           $168 = HEAP32[(7940)>>2]|0;
           $cmp189$i$i = ($167>>>0)<($168>>>0);
           if ($cmp189$i$i) {
            _abort();
            // unreachable;
           } else {
            $arrayidx195$i$i = ((($R$3$i$i)) + 20|0);
            HEAP32[$arrayidx195$i$i>>2] = $167;
            $parent196$i$i = ((($167)) + 24|0);
            HEAP32[$parent196$i$i>>2] = $R$3$i$i;
            break;
           }
          }
         } while(0);
         $add$ptr205$i$i = (($add$ptr16$i$i) + ($and37$i$i)|0);
         $add206$i$i = (($and37$i$i) + ($sub18$i$i))|0;
         $oldfirst$0$i$i = $add$ptr205$i$i;$qsize$0$i$i = $add206$i$i;
        } else {
         $oldfirst$0$i$i = $add$ptr16$i$i;$qsize$0$i$i = $sub18$i$i;
        }
        $head208$i$i = ((($oldfirst$0$i$i)) + 4|0);
        $169 = HEAP32[$head208$i$i>>2]|0;
        $and209$i$i = $169 & -2;
        HEAP32[$head208$i$i>>2] = $and209$i$i;
        $or210$i$i = $qsize$0$i$i | 1;
        $head211$i$i = ((($add$ptr17$i$i)) + 4|0);
        HEAP32[$head211$i$i>>2] = $or210$i$i;
        $add$ptr212$i$i = (($add$ptr17$i$i) + ($qsize$0$i$i)|0);
        HEAP32[$add$ptr212$i$i>>2] = $qsize$0$i$i;
        $shr214$i$i = $qsize$0$i$i >>> 3;
        $cmp215$i$i = ($qsize$0$i$i>>>0)<(256);
        if ($cmp215$i$i) {
         $shl222$i$i = $shr214$i$i << 1;
         $arrayidx223$i$i = (7964 + ($shl222$i$i<<2)|0);
         $170 = HEAP32[1981]|0;
         $shl226$i$i = 1 << $shr214$i$i;
         $and227$i$i = $170 & $shl226$i$i;
         $tobool228$i$i = ($and227$i$i|0)==(0);
         do {
          if ($tobool228$i$i) {
           $or232$i$i = $170 | $shl226$i$i;
           HEAP32[1981] = $or232$i$i;
           $$pre$i45$i = ((($arrayidx223$i$i)) + 8|0);
           $$pre$phi$i46$iZ2D = $$pre$i45$i;$F224$0$i$i = $arrayidx223$i$i;
          } else {
           $171 = ((($arrayidx223$i$i)) + 8|0);
           $172 = HEAP32[$171>>2]|0;
           $173 = HEAP32[(7940)>>2]|0;
           $cmp236$i$i = ($172>>>0)<($173>>>0);
           if (!($cmp236$i$i)) {
            $$pre$phi$i46$iZ2D = $171;$F224$0$i$i = $172;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i46$iZ2D>>2] = $add$ptr17$i$i;
         $bk246$i$i = ((($F224$0$i$i)) + 12|0);
         HEAP32[$bk246$i$i>>2] = $add$ptr17$i$i;
         $fd247$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd247$i$i>>2] = $F224$0$i$i;
         $bk248$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk248$i$i>>2] = $arrayidx223$i$i;
         break;
        }
        $shr253$i$i = $qsize$0$i$i >>> 8;
        $cmp254$i$i = ($shr253$i$i|0)==(0);
        do {
         if ($cmp254$i$i) {
          $I252$0$i$i = 0;
         } else {
          $cmp258$i$i = ($qsize$0$i$i>>>0)>(16777215);
          if ($cmp258$i$i) {
           $I252$0$i$i = 31;
           break;
          }
          $sub262$i$i = (($shr253$i$i) + 1048320)|0;
          $shr263$i$i = $sub262$i$i >>> 16;
          $and264$i$i = $shr263$i$i & 8;
          $shl265$i$i = $shr253$i$i << $and264$i$i;
          $sub266$i$i = (($shl265$i$i) + 520192)|0;
          $shr267$i$i = $sub266$i$i >>> 16;
          $and268$i$i = $shr267$i$i & 4;
          $add269$i$i = $and268$i$i | $and264$i$i;
          $shl270$i$i = $shl265$i$i << $and268$i$i;
          $sub271$i$i = (($shl270$i$i) + 245760)|0;
          $shr272$i$i = $sub271$i$i >>> 16;
          $and273$i$i = $shr272$i$i & 2;
          $add274$i$i = $add269$i$i | $and273$i$i;
          $sub275$i$i = (14 - ($add274$i$i))|0;
          $shl276$i$i = $shl270$i$i << $and273$i$i;
          $shr277$i$i = $shl276$i$i >>> 15;
          $add278$i$i = (($sub275$i$i) + ($shr277$i$i))|0;
          $shl279$i$i = $add278$i$i << 1;
          $add280$i$i = (($add278$i$i) + 7)|0;
          $shr281$i$i = $qsize$0$i$i >>> $add280$i$i;
          $and282$i$i = $shr281$i$i & 1;
          $add283$i$i = $and282$i$i | $shl279$i$i;
          $I252$0$i$i = $add283$i$i;
         }
        } while(0);
        $arrayidx287$i$i = (8228 + ($I252$0$i$i<<2)|0);
        $index288$i$i = ((($add$ptr17$i$i)) + 28|0);
        HEAP32[$index288$i$i>>2] = $I252$0$i$i;
        $child289$i$i = ((($add$ptr17$i$i)) + 16|0);
        $arrayidx290$i$i = ((($child289$i$i)) + 4|0);
        HEAP32[$arrayidx290$i$i>>2] = 0;
        HEAP32[$child289$i$i>>2] = 0;
        $174 = HEAP32[(7928)>>2]|0;
        $shl294$i$i = 1 << $I252$0$i$i;
        $and295$i$i = $174 & $shl294$i$i;
        $tobool296$i$i = ($and295$i$i|0)==(0);
        if ($tobool296$i$i) {
         $or300$i$i = $174 | $shl294$i$i;
         HEAP32[(7928)>>2] = $or300$i$i;
         HEAP32[$arrayidx287$i$i>>2] = $add$ptr17$i$i;
         $parent301$i$i = ((($add$ptr17$i$i)) + 24|0);
         HEAP32[$parent301$i$i>>2] = $arrayidx287$i$i;
         $bk302$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk302$i$i>>2] = $add$ptr17$i$i;
         $fd303$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd303$i$i>>2] = $add$ptr17$i$i;
         break;
        }
        $175 = HEAP32[$arrayidx287$i$i>>2]|0;
        $cmp306$i$i = ($I252$0$i$i|0)==(31);
        $shr310$i$i = $I252$0$i$i >>> 1;
        $sub313$i$i = (25 - ($shr310$i$i))|0;
        $cond315$i$i = $cmp306$i$i ? 0 : $sub313$i$i;
        $shl316$i$i = $qsize$0$i$i << $cond315$i$i;
        $K305$0$i$i = $shl316$i$i;$T$0$i47$i = $175;
        while(1) {
         $head317$i$i = ((($T$0$i47$i)) + 4|0);
         $176 = HEAP32[$head317$i$i>>2]|0;
         $and318$i$i = $176 & -8;
         $cmp319$i$i = ($and318$i$i|0)==($qsize$0$i$i|0);
         if ($cmp319$i$i) {
          label = 265;
          break;
         }
         $shr323$i$i = $K305$0$i$i >>> 31;
         $arrayidx325$i$i = (((($T$0$i47$i)) + 16|0) + ($shr323$i$i<<2)|0);
         $shl326$i$i = $K305$0$i$i << 1;
         $177 = HEAP32[$arrayidx325$i$i>>2]|0;
         $cmp327$i$i = ($177|0)==(0|0);
         if ($cmp327$i$i) {
          label = 262;
          break;
         } else {
          $K305$0$i$i = $shl326$i$i;$T$0$i47$i = $177;
         }
        }
        if ((label|0) == 262) {
         $178 = HEAP32[(7940)>>2]|0;
         $cmp332$i$i = ($arrayidx325$i$i>>>0)<($178>>>0);
         if ($cmp332$i$i) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$arrayidx325$i$i>>2] = $add$ptr17$i$i;
          $parent337$i$i = ((($add$ptr17$i$i)) + 24|0);
          HEAP32[$parent337$i$i>>2] = $T$0$i47$i;
          $bk338$i$i = ((($add$ptr17$i$i)) + 12|0);
          HEAP32[$bk338$i$i>>2] = $add$ptr17$i$i;
          $fd339$i$i = ((($add$ptr17$i$i)) + 8|0);
          HEAP32[$fd339$i$i>>2] = $add$ptr17$i$i;
          break;
         }
        }
        else if ((label|0) == 265) {
         $fd344$i$i = ((($T$0$i47$i)) + 8|0);
         $179 = HEAP32[$fd344$i$i>>2]|0;
         $180 = HEAP32[(7940)>>2]|0;
         $cmp350$i$i = ($179>>>0)>=($180>>>0);
         $not$cmp346$i$i = ($T$0$i47$i>>>0)>=($180>>>0);
         $181 = $cmp350$i$i & $not$cmp346$i$i;
         if ($181) {
          $bk357$i$i = ((($179)) + 12|0);
          HEAP32[$bk357$i$i>>2] = $add$ptr17$i$i;
          HEAP32[$fd344$i$i>>2] = $add$ptr17$i$i;
          $fd359$i$i = ((($add$ptr17$i$i)) + 8|0);
          HEAP32[$fd359$i$i>>2] = $179;
          $bk360$i$i = ((($add$ptr17$i$i)) + 12|0);
          HEAP32[$bk360$i$i>>2] = $T$0$i47$i;
          $parent361$i$i = ((($add$ptr17$i$i)) + 24|0);
          HEAP32[$parent361$i$i>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $add$ptr369$i$i = ((($add$ptr4$i26$i)) + 8|0);
      $retval$0 = $add$ptr369$i$i;
      STACKTOP = sp;return ($retval$0|0);
     }
    }
    $sp$0$i$i$i = (8372);
    while(1) {
     $182 = HEAP32[$sp$0$i$i$i>>2]|0;
     $cmp$i$i$i = ($182>>>0)>($116>>>0);
     if (!($cmp$i$i$i)) {
      $size$i$i$i = ((($sp$0$i$i$i)) + 4|0);
      $183 = HEAP32[$size$i$i$i>>2]|0;
      $add$ptr$i$i$i = (($182) + ($183)|0);
      $cmp2$i$i$i = ($add$ptr$i$i$i>>>0)>($116>>>0);
      if ($cmp2$i$i$i) {
       break;
      }
     }
     $next$i$i$i = ((($sp$0$i$i$i)) + 8|0);
     $184 = HEAP32[$next$i$i$i>>2]|0;
     $sp$0$i$i$i = $184;
    }
    $add$ptr2$i$i = ((($add$ptr$i$i$i)) + -47|0);
    $add$ptr3$i$i = ((($add$ptr2$i$i)) + 8|0);
    $185 = $add$ptr3$i$i;
    $and$i$i = $185 & 7;
    $cmp$i9$i = ($and$i$i|0)==(0);
    $186 = (0 - ($185))|0;
    $and6$i10$i = $186 & 7;
    $cond$i$i = $cmp$i9$i ? 0 : $and6$i10$i;
    $add$ptr7$i$i = (($add$ptr2$i$i) + ($cond$i$i)|0);
    $add$ptr81$i$i = ((($116)) + 16|0);
    $cmp9$i$i = ($add$ptr7$i$i>>>0)<($add$ptr81$i$i>>>0);
    $cond13$i$i = $cmp9$i$i ? $116 : $add$ptr7$i$i;
    $add$ptr14$i$i = ((($cond13$i$i)) + 8|0);
    $add$ptr15$i$i = ((($cond13$i$i)) + 24|0);
    $sub16$i$i = (($tsize$795$i) + -40)|0;
    $add$ptr$i2$i$i = ((($tbase$796$i)) + 8|0);
    $187 = $add$ptr$i2$i$i;
    $and$i$i$i = $187 & 7;
    $cmp$i3$i$i = ($and$i$i$i|0)==(0);
    $188 = (0 - ($187))|0;
    $and3$i$i$i = $188 & 7;
    $cond$i$i$i = $cmp$i3$i$i ? 0 : $and3$i$i$i;
    $add$ptr4$i$i$i = (($tbase$796$i) + ($cond$i$i$i)|0);
    $sub5$i$i$i = (($sub16$i$i) - ($cond$i$i$i))|0;
    HEAP32[(7948)>>2] = $add$ptr4$i$i$i;
    HEAP32[(7936)>>2] = $sub5$i$i$i;
    $or$i$i$i = $sub5$i$i$i | 1;
    $head$i$i$i = ((($add$ptr4$i$i$i)) + 4|0);
    HEAP32[$head$i$i$i>>2] = $or$i$i$i;
    $add$ptr6$i$i$i = (($add$ptr4$i$i$i) + ($sub5$i$i$i)|0);
    $head7$i$i$i = ((($add$ptr6$i$i$i)) + 4|0);
    HEAP32[$head7$i$i$i>>2] = 40;
    $189 = HEAP32[(8412)>>2]|0;
    HEAP32[(7952)>>2] = $189;
    $head$i$i = ((($cond13$i$i)) + 4|0);
    HEAP32[$head$i$i>>2] = 27;
    ;HEAP32[$add$ptr14$i$i>>2]=HEAP32[(8372)>>2]|0;HEAP32[$add$ptr14$i$i+4>>2]=HEAP32[(8372)+4>>2]|0;HEAP32[$add$ptr14$i$i+8>>2]=HEAP32[(8372)+8>>2]|0;HEAP32[$add$ptr14$i$i+12>>2]=HEAP32[(8372)+12>>2]|0;
    HEAP32[(8372)>>2] = $tbase$796$i;
    HEAP32[(8376)>>2] = $tsize$795$i;
    HEAP32[(8384)>>2] = 0;
    HEAP32[(8380)>>2] = $add$ptr14$i$i;
    $190 = $add$ptr15$i$i;
    while(1) {
     $add$ptr24$i$i = ((($190)) + 4|0);
     HEAP32[$add$ptr24$i$i>>2] = 7;
     $head26$i$i = ((($190)) + 8|0);
     $cmp27$i$i = ($head26$i$i>>>0)<($add$ptr$i$i$i>>>0);
     if ($cmp27$i$i) {
      $190 = $add$ptr24$i$i;
     } else {
      break;
     }
    }
    $cmp28$i$i = ($cond13$i$i|0)==($116|0);
    if (!($cmp28$i$i)) {
     $sub$ptr$lhs$cast$i$i = $cond13$i$i;
     $sub$ptr$rhs$cast$i$i = $116;
     $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0;
     $191 = HEAP32[$head$i$i>>2]|0;
     $and32$i$i = $191 & -2;
     HEAP32[$head$i$i>>2] = $and32$i$i;
     $or33$i$i = $sub$ptr$sub$i$i | 1;
     $head34$i$i = ((($116)) + 4|0);
     HEAP32[$head34$i$i>>2] = $or33$i$i;
     HEAP32[$cond13$i$i>>2] = $sub$ptr$sub$i$i;
     $shr$i$i = $sub$ptr$sub$i$i >>> 3;
     $cmp36$i$i = ($sub$ptr$sub$i$i>>>0)<(256);
     if ($cmp36$i$i) {
      $shl$i$i = $shr$i$i << 1;
      $arrayidx$i$i = (7964 + ($shl$i$i<<2)|0);
      $192 = HEAP32[1981]|0;
      $shl39$i$i = 1 << $shr$i$i;
      $and40$i$i = $192 & $shl39$i$i;
      $tobool$i$i = ($and40$i$i|0)==(0);
      if ($tobool$i$i) {
       $or44$i$i = $192 | $shl39$i$i;
       HEAP32[1981] = $or44$i$i;
       $$pre$i$i = ((($arrayidx$i$i)) + 8|0);
       $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $arrayidx$i$i;
      } else {
       $193 = ((($arrayidx$i$i)) + 8|0);
       $194 = HEAP32[$193>>2]|0;
       $195 = HEAP32[(7940)>>2]|0;
       $cmp46$i$i = ($194>>>0)<($195>>>0);
       if ($cmp46$i$i) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $193;$F$0$i$i = $194;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $116;
      $bk$i$i = ((($F$0$i$i)) + 12|0);
      HEAP32[$bk$i$i>>2] = $116;
      $fd54$i$i = ((($116)) + 8|0);
      HEAP32[$fd54$i$i>>2] = $F$0$i$i;
      $bk55$i$i = ((($116)) + 12|0);
      HEAP32[$bk55$i$i>>2] = $arrayidx$i$i;
      break;
     }
     $shr58$i$i = $sub$ptr$sub$i$i >>> 8;
     $cmp59$i$i = ($shr58$i$i|0)==(0);
     if ($cmp59$i$i) {
      $I57$0$i$i = 0;
     } else {
      $cmp63$i$i = ($sub$ptr$sub$i$i>>>0)>(16777215);
      if ($cmp63$i$i) {
       $I57$0$i$i = 31;
      } else {
       $sub67$i$i = (($shr58$i$i) + 1048320)|0;
       $shr68$i$i = $sub67$i$i >>> 16;
       $and69$i$i = $shr68$i$i & 8;
       $shl70$i$i = $shr58$i$i << $and69$i$i;
       $sub71$i$i = (($shl70$i$i) + 520192)|0;
       $shr72$i$i = $sub71$i$i >>> 16;
       $and73$i$i = $shr72$i$i & 4;
       $add74$i$i = $and73$i$i | $and69$i$i;
       $shl75$i$i = $shl70$i$i << $and73$i$i;
       $sub76$i$i = (($shl75$i$i) + 245760)|0;
       $shr77$i$i = $sub76$i$i >>> 16;
       $and78$i$i = $shr77$i$i & 2;
       $add79$i$i = $add74$i$i | $and78$i$i;
       $sub80$i$i = (14 - ($add79$i$i))|0;
       $shl81$i$i = $shl75$i$i << $and78$i$i;
       $shr82$i$i = $shl81$i$i >>> 15;
       $add83$i$i = (($sub80$i$i) + ($shr82$i$i))|0;
       $shl84$i$i = $add83$i$i << 1;
       $add85$i$i = (($add83$i$i) + 7)|0;
       $shr86$i$i = $sub$ptr$sub$i$i >>> $add85$i$i;
       $and87$i$i = $shr86$i$i & 1;
       $add88$i$i = $and87$i$i | $shl84$i$i;
       $I57$0$i$i = $add88$i$i;
      }
     }
     $arrayidx91$i$i = (8228 + ($I57$0$i$i<<2)|0);
     $index$i$i = ((($116)) + 28|0);
     HEAP32[$index$i$i>>2] = $I57$0$i$i;
     $arrayidx92$i$i = ((($116)) + 20|0);
     HEAP32[$arrayidx92$i$i>>2] = 0;
     HEAP32[$add$ptr81$i$i>>2] = 0;
     $196 = HEAP32[(7928)>>2]|0;
     $shl95$i$i = 1 << $I57$0$i$i;
     $and96$i$i = $196 & $shl95$i$i;
     $tobool97$i$i = ($and96$i$i|0)==(0);
     if ($tobool97$i$i) {
      $or101$i$i = $196 | $shl95$i$i;
      HEAP32[(7928)>>2] = $or101$i$i;
      HEAP32[$arrayidx91$i$i>>2] = $116;
      $parent$i$i = ((($116)) + 24|0);
      HEAP32[$parent$i$i>>2] = $arrayidx91$i$i;
      $bk102$i$i = ((($116)) + 12|0);
      HEAP32[$bk102$i$i>>2] = $116;
      $fd103$i$i = ((($116)) + 8|0);
      HEAP32[$fd103$i$i>>2] = $116;
      break;
     }
     $197 = HEAP32[$arrayidx91$i$i>>2]|0;
     $cmp106$i$i = ($I57$0$i$i|0)==(31);
     $shr110$i$i = $I57$0$i$i >>> 1;
     $sub113$i$i = (25 - ($shr110$i$i))|0;
     $cond115$i$i = $cmp106$i$i ? 0 : $sub113$i$i;
     $shl116$i$i = $sub$ptr$sub$i$i << $cond115$i$i;
     $K105$0$i$i = $shl116$i$i;$T$0$i$i = $197;
     while(1) {
      $head118$i$i = ((($T$0$i$i)) + 4|0);
      $198 = HEAP32[$head118$i$i>>2]|0;
      $and119$i$i = $198 & -8;
      $cmp120$i$i = ($and119$i$i|0)==($sub$ptr$sub$i$i|0);
      if ($cmp120$i$i) {
       label = 292;
       break;
      }
      $shr124$i$i = $K105$0$i$i >>> 31;
      $arrayidx126$i$i = (((($T$0$i$i)) + 16|0) + ($shr124$i$i<<2)|0);
      $shl127$i$i = $K105$0$i$i << 1;
      $199 = HEAP32[$arrayidx126$i$i>>2]|0;
      $cmp128$i$i = ($199|0)==(0|0);
      if ($cmp128$i$i) {
       label = 289;
       break;
      } else {
       $K105$0$i$i = $shl127$i$i;$T$0$i$i = $199;
      }
     }
     if ((label|0) == 289) {
      $200 = HEAP32[(7940)>>2]|0;
      $cmp133$i$i = ($arrayidx126$i$i>>>0)<($200>>>0);
      if ($cmp133$i$i) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$arrayidx126$i$i>>2] = $116;
       $parent138$i$i = ((($116)) + 24|0);
       HEAP32[$parent138$i$i>>2] = $T$0$i$i;
       $bk139$i$i = ((($116)) + 12|0);
       HEAP32[$bk139$i$i>>2] = $116;
       $fd140$i$i = ((($116)) + 8|0);
       HEAP32[$fd140$i$i>>2] = $116;
       break;
      }
     }
     else if ((label|0) == 292) {
      $fd148$i$i = ((($T$0$i$i)) + 8|0);
      $201 = HEAP32[$fd148$i$i>>2]|0;
      $202 = HEAP32[(7940)>>2]|0;
      $cmp153$i$i = ($201>>>0)>=($202>>>0);
      $not$cmp150$i$i = ($T$0$i$i>>>0)>=($202>>>0);
      $203 = $cmp153$i$i & $not$cmp150$i$i;
      if ($203) {
       $bk158$i$i = ((($201)) + 12|0);
       HEAP32[$bk158$i$i>>2] = $116;
       HEAP32[$fd148$i$i>>2] = $116;
       $fd160$i$i = ((($116)) + 8|0);
       HEAP32[$fd160$i$i>>2] = $201;
       $bk161$i$i = ((($116)) + 12|0);
       HEAP32[$bk161$i$i>>2] = $T$0$i$i;
       $parent162$i$i = ((($116)) + 24|0);
       HEAP32[$parent162$i$i>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $204 = HEAP32[(7936)>>2]|0;
  $cmp257$i = ($204>>>0)>($nb$0>>>0);
  if ($cmp257$i) {
   $sub260$i = (($204) - ($nb$0))|0;
   HEAP32[(7936)>>2] = $sub260$i;
   $205 = HEAP32[(7948)>>2]|0;
   $add$ptr262$i = (($205) + ($nb$0)|0);
   HEAP32[(7948)>>2] = $add$ptr262$i;
   $or264$i = $sub260$i | 1;
   $head265$i = ((($add$ptr262$i)) + 4|0);
   HEAP32[$head265$i>>2] = $or264$i;
   $or267$i = $nb$0 | 3;
   $head268$i = ((($205)) + 4|0);
   HEAP32[$head268$i>>2] = $or267$i;
   $add$ptr269$i = ((($205)) + 8|0);
   $retval$0 = $add$ptr269$i;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $call275$i = (___errno_location()|0);
 HEAP32[$call275$i>>2] = 12;
 $retval$0 = 0;
 STACKTOP = sp;return ($retval$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre308 = 0, $$pre309 = 0, $$sink = 0, $$sink4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0;
 var $9 = 0, $F510$0 = 0, $I534$0 = 0, $K583$0 = 0, $R$1 = 0, $R$3 = 0, $R332$1 = 0, $R332$3 = 0, $RP$1 = 0, $RP360$1 = 0, $T$0 = 0, $add$ptr = 0, $add$ptr16 = 0, $add$ptr217 = 0, $add$ptr261 = 0, $add$ptr482 = 0, $add$ptr498 = 0, $add$ptr6 = 0, $add17 = 0, $add246 = 0;
 var $add258 = 0, $add267 = 0, $add550 = 0, $add555 = 0, $add559 = 0, $add561 = 0, $add564 = 0, $and = 0, $and140 = 0, $and210 = 0, $and215 = 0, $and232 = 0, $and240 = 0, $and266 = 0, $and301 = 0, $and410 = 0, $and46 = 0, $and495 = 0, $and5 = 0, $and512 = 0;
 var $and545 = 0, $and549 = 0, $and554 = 0, $and563 = 0, $and574 = 0, $and592 = 0, $and8 = 0, $arrayidx = 0, $arrayidx108 = 0, $arrayidx113 = 0, $arrayidx130 = 0, $arrayidx149 = 0, $arrayidx157 = 0, $arrayidx182 = 0, $arrayidx188 = 0, $arrayidx198 = 0, $arrayidx279 = 0, $arrayidx362 = 0, $arrayidx374 = 0, $arrayidx379 = 0;
 var $arrayidx400 = 0, $arrayidx419 = 0, $arrayidx427 = 0, $arrayidx454 = 0, $arrayidx460 = 0, $arrayidx470 = 0, $arrayidx509 = 0, $arrayidx567 = 0, $arrayidx570 = 0, $arrayidx599 = 0, $arrayidx99 = 0, $bk = 0, $bk275 = 0, $bk286 = 0, $bk321 = 0, $bk333 = 0, $bk34 = 0, $bk343 = 0, $bk529 = 0, $bk531 = 0;
 var $bk580 = 0, $bk611 = 0, $bk631 = 0, $bk634 = 0, $bk66 = 0, $bk73 = 0, $bk82 = 0, $child = 0, $child171 = 0, $child361 = 0, $child443 = 0, $child569 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp100 = 0, $cmp104 = 0, $cmp109 = 0, $cmp114 = 0, $cmp118 = 0;
 var $cmp127 = 0, $cmp13 = 0, $cmp131 = 0, $cmp143 = 0, $cmp162 = 0, $cmp165 = 0, $cmp173 = 0, $cmp176 = 0, $cmp18 = 0, $cmp189 = 0, $cmp192 = 0, $cmp2 = 0, $cmp211 = 0, $cmp22 = 0, $cmp228 = 0, $cmp243 = 0, $cmp249 = 0, $cmp25 = 0, $cmp255 = 0, $cmp269 = 0;
 var $cmp280 = 0, $cmp283 = 0, $cmp287 = 0, $cmp29 = 0, $cmp296 = 0, $cmp305 = 0, $cmp308 = 0, $cmp31 = 0, $cmp312 = 0, $cmp334 = 0, $cmp340 = 0, $cmp344 = 0, $cmp348 = 0, $cmp35 = 0, $cmp363 = 0, $cmp368 = 0, $cmp375 = 0, $cmp380 = 0, $cmp386 = 0, $cmp395 = 0;
 var $cmp401 = 0, $cmp413 = 0, $cmp42 = 0, $cmp432 = 0, $cmp435 = 0, $cmp445 = 0, $cmp448 = 0, $cmp461 = 0, $cmp464 = 0, $cmp484 = 0, $cmp50 = 0, $cmp502 = 0, $cmp519 = 0, $cmp53 = 0, $cmp536 = 0, $cmp540 = 0, $cmp57 = 0, $cmp584 = 0, $cmp593 = 0, $cmp601 = 0;
 var $cmp605 = 0, $cmp624 = 0, $cmp640 = 0, $cmp74 = 0, $cmp80 = 0, $cmp83 = 0, $cmp87 = 0, $cond = 0, $cond292 = 0, $cond293 = 0, $dec = 0, $fd = 0, $fd273 = 0, $fd311 = 0, $fd322$pre$phiZ2D = 0, $fd338 = 0, $fd347 = 0, $fd530 = 0, $fd56 = 0, $fd581 = 0;
 var $fd612 = 0, $fd620 = 0, $fd633 = 0, $fd67$pre$phiZ2D = 0, $fd78 = 0, $fd86 = 0, $head = 0, $head209 = 0, $head216 = 0, $head231 = 0, $head248 = 0, $head260 = 0, $head481 = 0, $head497 = 0, $head591 = 0, $idx$neg = 0, $index = 0, $index399 = 0, $index568 = 0, $neg = 0;
 var $neg139 = 0, $neg300 = 0, $neg409 = 0, $next4$i = 0, $not$cmp150 = 0, $not$cmp420 = 0, $not$cmp621 = 0, $or = 0, $or247 = 0, $or259 = 0, $or480 = 0, $or496 = 0, $or516 = 0, $or578 = 0, $p$1 = 0, $parent = 0, $parent170 = 0, $parent183 = 0, $parent199 = 0, $parent331 = 0;
 var $parent442 = 0, $parent455 = 0, $parent471 = 0, $parent579 = 0, $parent610 = 0, $parent635 = 0, $psize$1 = 0, $psize$2 = 0, $shl = 0, $shl138 = 0, $shl278 = 0, $shl299 = 0, $shl408 = 0, $shl45 = 0, $shl508 = 0, $shl511 = 0, $shl546 = 0, $shl551 = 0, $shl557 = 0, $shl560 = 0;
 var $shl573 = 0, $shl590 = 0, $shl600 = 0, $shr = 0, $shr268 = 0, $shr501 = 0, $shr535 = 0, $shr544 = 0, $shr548 = 0, $shr553 = 0, $shr558 = 0, $shr562 = 0, $shr586 = 0, $shr597 = 0, $sp$0$i = 0, $sp$0$in$i = 0, $sub = 0, $sub547 = 0, $sub552 = 0, $sub556 = 0;
 var $sub589 = 0, $tobool233 = 0, $tobool241 = 0, $tobool513 = 0, $tobool575 = 0, $tobool9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($mem|0)==(0|0);
 if ($cmp) {
  return;
 }
 $add$ptr = ((($mem)) + -8|0);
 $0 = HEAP32[(7940)>>2]|0;
 $cmp1 = ($add$ptr>>>0)<($0>>>0);
 if ($cmp1) {
  _abort();
  // unreachable;
 }
 $head = ((($mem)) + -4|0);
 $1 = HEAP32[$head>>2]|0;
 $and = $1 & 3;
 $cmp2 = ($and|0)==(1);
 if ($cmp2) {
  _abort();
  // unreachable;
 }
 $and5 = $1 & -8;
 $add$ptr6 = (($add$ptr) + ($and5)|0);
 $and8 = $1 & 1;
 $tobool9 = ($and8|0)==(0);
 L10: do {
  if ($tobool9) {
   $2 = HEAP32[$add$ptr>>2]|0;
   $cmp13 = ($and|0)==(0);
   if ($cmp13) {
    return;
   }
   $idx$neg = (0 - ($2))|0;
   $add$ptr16 = (($add$ptr) + ($idx$neg)|0);
   $add17 = (($2) + ($and5))|0;
   $cmp18 = ($add$ptr16>>>0)<($0>>>0);
   if ($cmp18) {
    _abort();
    // unreachable;
   }
   $3 = HEAP32[(7944)>>2]|0;
   $cmp22 = ($add$ptr16|0)==($3|0);
   if ($cmp22) {
    $head209 = ((($add$ptr6)) + 4|0);
    $27 = HEAP32[$head209>>2]|0;
    $and210 = $27 & 3;
    $cmp211 = ($and210|0)==(3);
    if (!($cmp211)) {
     $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
     break;
    }
    $add$ptr217 = (($add$ptr16) + ($add17)|0);
    $head216 = ((($add$ptr16)) + 4|0);
    $or = $add17 | 1;
    $and215 = $27 & -2;
    HEAP32[(7932)>>2] = $add17;
    HEAP32[$head209>>2] = $and215;
    HEAP32[$head216>>2] = $or;
    HEAP32[$add$ptr217>>2] = $add17;
    return;
   }
   $shr = $2 >>> 3;
   $cmp25 = ($2>>>0)<(256);
   if ($cmp25) {
    $fd = ((($add$ptr16)) + 8|0);
    $4 = HEAP32[$fd>>2]|0;
    $bk = ((($add$ptr16)) + 12|0);
    $5 = HEAP32[$bk>>2]|0;
    $shl = $shr << 1;
    $arrayidx = (7964 + ($shl<<2)|0);
    $cmp29 = ($4|0)==($arrayidx|0);
    if (!($cmp29)) {
     $cmp31 = ($4>>>0)<($0>>>0);
     if ($cmp31) {
      _abort();
      // unreachable;
     }
     $bk34 = ((($4)) + 12|0);
     $6 = HEAP32[$bk34>>2]|0;
     $cmp35 = ($6|0)==($add$ptr16|0);
     if (!($cmp35)) {
      _abort();
      // unreachable;
     }
    }
    $cmp42 = ($5|0)==($4|0);
    if ($cmp42) {
     $shl45 = 1 << $shr;
     $neg = $shl45 ^ -1;
     $7 = HEAP32[1981]|0;
     $and46 = $7 & $neg;
     HEAP32[1981] = $and46;
     $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
     break;
    }
    $cmp50 = ($5|0)==($arrayidx|0);
    if ($cmp50) {
     $$pre309 = ((($5)) + 8|0);
     $fd67$pre$phiZ2D = $$pre309;
    } else {
     $cmp53 = ($5>>>0)<($0>>>0);
     if ($cmp53) {
      _abort();
      // unreachable;
     }
     $fd56 = ((($5)) + 8|0);
     $8 = HEAP32[$fd56>>2]|0;
     $cmp57 = ($8|0)==($add$ptr16|0);
     if ($cmp57) {
      $fd67$pre$phiZ2D = $fd56;
     } else {
      _abort();
      // unreachable;
     }
    }
    $bk66 = ((($4)) + 12|0);
    HEAP32[$bk66>>2] = $5;
    HEAP32[$fd67$pre$phiZ2D>>2] = $4;
    $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
    break;
   }
   $parent = ((($add$ptr16)) + 24|0);
   $9 = HEAP32[$parent>>2]|0;
   $bk73 = ((($add$ptr16)) + 12|0);
   $10 = HEAP32[$bk73>>2]|0;
   $cmp74 = ($10|0)==($add$ptr16|0);
   do {
    if ($cmp74) {
     $child = ((($add$ptr16)) + 16|0);
     $arrayidx99 = ((($child)) + 4|0);
     $14 = HEAP32[$arrayidx99>>2]|0;
     $cmp100 = ($14|0)==(0|0);
     if ($cmp100) {
      $15 = HEAP32[$child>>2]|0;
      $cmp104 = ($15|0)==(0|0);
      if ($cmp104) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $15;$RP$1 = $child;
      }
     } else {
      $R$1 = $14;$RP$1 = $arrayidx99;
     }
     while(1) {
      $arrayidx108 = ((($R$1)) + 20|0);
      $16 = HEAP32[$arrayidx108>>2]|0;
      $cmp109 = ($16|0)==(0|0);
      if (!($cmp109)) {
       $R$1 = $16;$RP$1 = $arrayidx108;
       continue;
      }
      $arrayidx113 = ((($R$1)) + 16|0);
      $17 = HEAP32[$arrayidx113>>2]|0;
      $cmp114 = ($17|0)==(0|0);
      if ($cmp114) {
       break;
      } else {
       $R$1 = $17;$RP$1 = $arrayidx113;
      }
     }
     $cmp118 = ($RP$1>>>0)<($0>>>0);
     if ($cmp118) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$1>>2] = 0;
      $R$3 = $R$1;
      break;
     }
    } else {
     $fd78 = ((($add$ptr16)) + 8|0);
     $11 = HEAP32[$fd78>>2]|0;
     $cmp80 = ($11>>>0)<($0>>>0);
     if ($cmp80) {
      _abort();
      // unreachable;
     }
     $bk82 = ((($11)) + 12|0);
     $12 = HEAP32[$bk82>>2]|0;
     $cmp83 = ($12|0)==($add$ptr16|0);
     if (!($cmp83)) {
      _abort();
      // unreachable;
     }
     $fd86 = ((($10)) + 8|0);
     $13 = HEAP32[$fd86>>2]|0;
     $cmp87 = ($13|0)==($add$ptr16|0);
     if ($cmp87) {
      HEAP32[$bk82>>2] = $10;
      HEAP32[$fd86>>2] = $11;
      $R$3 = $10;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $cmp127 = ($9|0)==(0|0);
   if ($cmp127) {
    $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
   } else {
    $index = ((($add$ptr16)) + 28|0);
    $18 = HEAP32[$index>>2]|0;
    $arrayidx130 = (8228 + ($18<<2)|0);
    $19 = HEAP32[$arrayidx130>>2]|0;
    $cmp131 = ($add$ptr16|0)==($19|0);
    do {
     if ($cmp131) {
      HEAP32[$arrayidx130>>2] = $R$3;
      $cond292 = ($R$3|0)==(0|0);
      if ($cond292) {
       $shl138 = 1 << $18;
       $neg139 = $shl138 ^ -1;
       $20 = HEAP32[(7928)>>2]|0;
       $and140 = $20 & $neg139;
       HEAP32[(7928)>>2] = $and140;
       $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
       break L10;
      }
     } else {
      $21 = HEAP32[(7940)>>2]|0;
      $cmp143 = ($9>>>0)<($21>>>0);
      if ($cmp143) {
       _abort();
       // unreachable;
      } else {
       $arrayidx149 = ((($9)) + 16|0);
       $22 = HEAP32[$arrayidx149>>2]|0;
       $not$cmp150 = ($22|0)!=($add$ptr16|0);
       $$sink = $not$cmp150&1;
       $arrayidx157 = (((($9)) + 16|0) + ($$sink<<2)|0);
       HEAP32[$arrayidx157>>2] = $R$3;
       $cmp162 = ($R$3|0)==(0|0);
       if ($cmp162) {
        $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
        break L10;
       } else {
        break;
       }
      }
     }
    } while(0);
    $23 = HEAP32[(7940)>>2]|0;
    $cmp165 = ($R$3>>>0)<($23>>>0);
    if ($cmp165) {
     _abort();
     // unreachable;
    }
    $parent170 = ((($R$3)) + 24|0);
    HEAP32[$parent170>>2] = $9;
    $child171 = ((($add$ptr16)) + 16|0);
    $24 = HEAP32[$child171>>2]|0;
    $cmp173 = ($24|0)==(0|0);
    do {
     if (!($cmp173)) {
      $cmp176 = ($24>>>0)<($23>>>0);
      if ($cmp176) {
       _abort();
       // unreachable;
      } else {
       $arrayidx182 = ((($R$3)) + 16|0);
       HEAP32[$arrayidx182>>2] = $24;
       $parent183 = ((($24)) + 24|0);
       HEAP32[$parent183>>2] = $R$3;
       break;
      }
     }
    } while(0);
    $arrayidx188 = ((($child171)) + 4|0);
    $25 = HEAP32[$arrayidx188>>2]|0;
    $cmp189 = ($25|0)==(0|0);
    if ($cmp189) {
     $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
    } else {
     $26 = HEAP32[(7940)>>2]|0;
     $cmp192 = ($25>>>0)<($26>>>0);
     if ($cmp192) {
      _abort();
      // unreachable;
     } else {
      $arrayidx198 = ((($R$3)) + 20|0);
      HEAP32[$arrayidx198>>2] = $25;
      $parent199 = ((($25)) + 24|0);
      HEAP32[$parent199>>2] = $R$3;
      $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
      break;
     }
    }
   }
  } else {
   $28 = $add$ptr;$p$1 = $add$ptr;$psize$1 = $and5;
  }
 } while(0);
 $cmp228 = ($28>>>0)<($add$ptr6>>>0);
 if (!($cmp228)) {
  _abort();
  // unreachable;
 }
 $head231 = ((($add$ptr6)) + 4|0);
 $29 = HEAP32[$head231>>2]|0;
 $and232 = $29 & 1;
 $tobool233 = ($and232|0)==(0);
 if ($tobool233) {
  _abort();
  // unreachable;
 }
 $and240 = $29 & 2;
 $tobool241 = ($and240|0)==(0);
 if ($tobool241) {
  $30 = HEAP32[(7948)>>2]|0;
  $cmp243 = ($add$ptr6|0)==($30|0);
  $31 = HEAP32[(7944)>>2]|0;
  if ($cmp243) {
   $32 = HEAP32[(7936)>>2]|0;
   $add246 = (($32) + ($psize$1))|0;
   HEAP32[(7936)>>2] = $add246;
   HEAP32[(7948)>>2] = $p$1;
   $or247 = $add246 | 1;
   $head248 = ((($p$1)) + 4|0);
   HEAP32[$head248>>2] = $or247;
   $cmp249 = ($p$1|0)==($31|0);
   if (!($cmp249)) {
    return;
   }
   HEAP32[(7944)>>2] = 0;
   HEAP32[(7932)>>2] = 0;
   return;
  }
  $cmp255 = ($add$ptr6|0)==($31|0);
  if ($cmp255) {
   $33 = HEAP32[(7932)>>2]|0;
   $add258 = (($33) + ($psize$1))|0;
   HEAP32[(7932)>>2] = $add258;
   HEAP32[(7944)>>2] = $28;
   $or259 = $add258 | 1;
   $head260 = ((($p$1)) + 4|0);
   HEAP32[$head260>>2] = $or259;
   $add$ptr261 = (($28) + ($add258)|0);
   HEAP32[$add$ptr261>>2] = $add258;
   return;
  }
  $and266 = $29 & -8;
  $add267 = (($and266) + ($psize$1))|0;
  $shr268 = $29 >>> 3;
  $cmp269 = ($29>>>0)<(256);
  L108: do {
   if ($cmp269) {
    $fd273 = ((($add$ptr6)) + 8|0);
    $34 = HEAP32[$fd273>>2]|0;
    $bk275 = ((($add$ptr6)) + 12|0);
    $35 = HEAP32[$bk275>>2]|0;
    $shl278 = $shr268 << 1;
    $arrayidx279 = (7964 + ($shl278<<2)|0);
    $cmp280 = ($34|0)==($arrayidx279|0);
    if (!($cmp280)) {
     $36 = HEAP32[(7940)>>2]|0;
     $cmp283 = ($34>>>0)<($36>>>0);
     if ($cmp283) {
      _abort();
      // unreachable;
     }
     $bk286 = ((($34)) + 12|0);
     $37 = HEAP32[$bk286>>2]|0;
     $cmp287 = ($37|0)==($add$ptr6|0);
     if (!($cmp287)) {
      _abort();
      // unreachable;
     }
    }
    $cmp296 = ($35|0)==($34|0);
    if ($cmp296) {
     $shl299 = 1 << $shr268;
     $neg300 = $shl299 ^ -1;
     $38 = HEAP32[1981]|0;
     $and301 = $38 & $neg300;
     HEAP32[1981] = $and301;
     break;
    }
    $cmp305 = ($35|0)==($arrayidx279|0);
    if ($cmp305) {
     $$pre308 = ((($35)) + 8|0);
     $fd322$pre$phiZ2D = $$pre308;
    } else {
     $39 = HEAP32[(7940)>>2]|0;
     $cmp308 = ($35>>>0)<($39>>>0);
     if ($cmp308) {
      _abort();
      // unreachable;
     }
     $fd311 = ((($35)) + 8|0);
     $40 = HEAP32[$fd311>>2]|0;
     $cmp312 = ($40|0)==($add$ptr6|0);
     if ($cmp312) {
      $fd322$pre$phiZ2D = $fd311;
     } else {
      _abort();
      // unreachable;
     }
    }
    $bk321 = ((($34)) + 12|0);
    HEAP32[$bk321>>2] = $35;
    HEAP32[$fd322$pre$phiZ2D>>2] = $34;
   } else {
    $parent331 = ((($add$ptr6)) + 24|0);
    $41 = HEAP32[$parent331>>2]|0;
    $bk333 = ((($add$ptr6)) + 12|0);
    $42 = HEAP32[$bk333>>2]|0;
    $cmp334 = ($42|0)==($add$ptr6|0);
    do {
     if ($cmp334) {
      $child361 = ((($add$ptr6)) + 16|0);
      $arrayidx362 = ((($child361)) + 4|0);
      $47 = HEAP32[$arrayidx362>>2]|0;
      $cmp363 = ($47|0)==(0|0);
      if ($cmp363) {
       $48 = HEAP32[$child361>>2]|0;
       $cmp368 = ($48|0)==(0|0);
       if ($cmp368) {
        $R332$3 = 0;
        break;
       } else {
        $R332$1 = $48;$RP360$1 = $child361;
       }
      } else {
       $R332$1 = $47;$RP360$1 = $arrayidx362;
      }
      while(1) {
       $arrayidx374 = ((($R332$1)) + 20|0);
       $49 = HEAP32[$arrayidx374>>2]|0;
       $cmp375 = ($49|0)==(0|0);
       if (!($cmp375)) {
        $R332$1 = $49;$RP360$1 = $arrayidx374;
        continue;
       }
       $arrayidx379 = ((($R332$1)) + 16|0);
       $50 = HEAP32[$arrayidx379>>2]|0;
       $cmp380 = ($50|0)==(0|0);
       if ($cmp380) {
        break;
       } else {
        $R332$1 = $50;$RP360$1 = $arrayidx379;
       }
      }
      $51 = HEAP32[(7940)>>2]|0;
      $cmp386 = ($RP360$1>>>0)<($51>>>0);
      if ($cmp386) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP360$1>>2] = 0;
       $R332$3 = $R332$1;
       break;
      }
     } else {
      $fd338 = ((($add$ptr6)) + 8|0);
      $43 = HEAP32[$fd338>>2]|0;
      $44 = HEAP32[(7940)>>2]|0;
      $cmp340 = ($43>>>0)<($44>>>0);
      if ($cmp340) {
       _abort();
       // unreachable;
      }
      $bk343 = ((($43)) + 12|0);
      $45 = HEAP32[$bk343>>2]|0;
      $cmp344 = ($45|0)==($add$ptr6|0);
      if (!($cmp344)) {
       _abort();
       // unreachable;
      }
      $fd347 = ((($42)) + 8|0);
      $46 = HEAP32[$fd347>>2]|0;
      $cmp348 = ($46|0)==($add$ptr6|0);
      if ($cmp348) {
       HEAP32[$bk343>>2] = $42;
       HEAP32[$fd347>>2] = $43;
       $R332$3 = $42;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $cmp395 = ($41|0)==(0|0);
    if (!($cmp395)) {
     $index399 = ((($add$ptr6)) + 28|0);
     $52 = HEAP32[$index399>>2]|0;
     $arrayidx400 = (8228 + ($52<<2)|0);
     $53 = HEAP32[$arrayidx400>>2]|0;
     $cmp401 = ($add$ptr6|0)==($53|0);
     do {
      if ($cmp401) {
       HEAP32[$arrayidx400>>2] = $R332$3;
       $cond293 = ($R332$3|0)==(0|0);
       if ($cond293) {
        $shl408 = 1 << $52;
        $neg409 = $shl408 ^ -1;
        $54 = HEAP32[(7928)>>2]|0;
        $and410 = $54 & $neg409;
        HEAP32[(7928)>>2] = $and410;
        break L108;
       }
      } else {
       $55 = HEAP32[(7940)>>2]|0;
       $cmp413 = ($41>>>0)<($55>>>0);
       if ($cmp413) {
        _abort();
        // unreachable;
       } else {
        $arrayidx419 = ((($41)) + 16|0);
        $56 = HEAP32[$arrayidx419>>2]|0;
        $not$cmp420 = ($56|0)!=($add$ptr6|0);
        $$sink4 = $not$cmp420&1;
        $arrayidx427 = (((($41)) + 16|0) + ($$sink4<<2)|0);
        HEAP32[$arrayidx427>>2] = $R332$3;
        $cmp432 = ($R332$3|0)==(0|0);
        if ($cmp432) {
         break L108;
        } else {
         break;
        }
       }
      }
     } while(0);
     $57 = HEAP32[(7940)>>2]|0;
     $cmp435 = ($R332$3>>>0)<($57>>>0);
     if ($cmp435) {
      _abort();
      // unreachable;
     }
     $parent442 = ((($R332$3)) + 24|0);
     HEAP32[$parent442>>2] = $41;
     $child443 = ((($add$ptr6)) + 16|0);
     $58 = HEAP32[$child443>>2]|0;
     $cmp445 = ($58|0)==(0|0);
     do {
      if (!($cmp445)) {
       $cmp448 = ($58>>>0)<($57>>>0);
       if ($cmp448) {
        _abort();
        // unreachable;
       } else {
        $arrayidx454 = ((($R332$3)) + 16|0);
        HEAP32[$arrayidx454>>2] = $58;
        $parent455 = ((($58)) + 24|0);
        HEAP32[$parent455>>2] = $R332$3;
        break;
       }
      }
     } while(0);
     $arrayidx460 = ((($child443)) + 4|0);
     $59 = HEAP32[$arrayidx460>>2]|0;
     $cmp461 = ($59|0)==(0|0);
     if (!($cmp461)) {
      $60 = HEAP32[(7940)>>2]|0;
      $cmp464 = ($59>>>0)<($60>>>0);
      if ($cmp464) {
       _abort();
       // unreachable;
      } else {
       $arrayidx470 = ((($R332$3)) + 20|0);
       HEAP32[$arrayidx470>>2] = $59;
       $parent471 = ((($59)) + 24|0);
       HEAP32[$parent471>>2] = $R332$3;
       break;
      }
     }
    }
   }
  } while(0);
  $or480 = $add267 | 1;
  $head481 = ((($p$1)) + 4|0);
  HEAP32[$head481>>2] = $or480;
  $add$ptr482 = (($28) + ($add267)|0);
  HEAP32[$add$ptr482>>2] = $add267;
  $61 = HEAP32[(7944)>>2]|0;
  $cmp484 = ($p$1|0)==($61|0);
  if ($cmp484) {
   HEAP32[(7932)>>2] = $add267;
   return;
  } else {
   $psize$2 = $add267;
  }
 } else {
  $and495 = $29 & -2;
  HEAP32[$head231>>2] = $and495;
  $or496 = $psize$1 | 1;
  $head497 = ((($p$1)) + 4|0);
  HEAP32[$head497>>2] = $or496;
  $add$ptr498 = (($28) + ($psize$1)|0);
  HEAP32[$add$ptr498>>2] = $psize$1;
  $psize$2 = $psize$1;
 }
 $shr501 = $psize$2 >>> 3;
 $cmp502 = ($psize$2>>>0)<(256);
 if ($cmp502) {
  $shl508 = $shr501 << 1;
  $arrayidx509 = (7964 + ($shl508<<2)|0);
  $62 = HEAP32[1981]|0;
  $shl511 = 1 << $shr501;
  $and512 = $62 & $shl511;
  $tobool513 = ($and512|0)==(0);
  if ($tobool513) {
   $or516 = $62 | $shl511;
   HEAP32[1981] = $or516;
   $$pre = ((($arrayidx509)) + 8|0);
   $$pre$phiZ2D = $$pre;$F510$0 = $arrayidx509;
  } else {
   $63 = ((($arrayidx509)) + 8|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = HEAP32[(7940)>>2]|0;
   $cmp519 = ($64>>>0)<($65>>>0);
   if ($cmp519) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $63;$F510$0 = $64;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$1;
  $bk529 = ((($F510$0)) + 12|0);
  HEAP32[$bk529>>2] = $p$1;
  $fd530 = ((($p$1)) + 8|0);
  HEAP32[$fd530>>2] = $F510$0;
  $bk531 = ((($p$1)) + 12|0);
  HEAP32[$bk531>>2] = $arrayidx509;
  return;
 }
 $shr535 = $psize$2 >>> 8;
 $cmp536 = ($shr535|0)==(0);
 if ($cmp536) {
  $I534$0 = 0;
 } else {
  $cmp540 = ($psize$2>>>0)>(16777215);
  if ($cmp540) {
   $I534$0 = 31;
  } else {
   $sub = (($shr535) + 1048320)|0;
   $shr544 = $sub >>> 16;
   $and545 = $shr544 & 8;
   $shl546 = $shr535 << $and545;
   $sub547 = (($shl546) + 520192)|0;
   $shr548 = $sub547 >>> 16;
   $and549 = $shr548 & 4;
   $add550 = $and549 | $and545;
   $shl551 = $shl546 << $and549;
   $sub552 = (($shl551) + 245760)|0;
   $shr553 = $sub552 >>> 16;
   $and554 = $shr553 & 2;
   $add555 = $add550 | $and554;
   $sub556 = (14 - ($add555))|0;
   $shl557 = $shl551 << $and554;
   $shr558 = $shl557 >>> 15;
   $add559 = (($sub556) + ($shr558))|0;
   $shl560 = $add559 << 1;
   $add561 = (($add559) + 7)|0;
   $shr562 = $psize$2 >>> $add561;
   $and563 = $shr562 & 1;
   $add564 = $and563 | $shl560;
   $I534$0 = $add564;
  }
 }
 $arrayidx567 = (8228 + ($I534$0<<2)|0);
 $index568 = ((($p$1)) + 28|0);
 HEAP32[$index568>>2] = $I534$0;
 $child569 = ((($p$1)) + 16|0);
 $arrayidx570 = ((($p$1)) + 20|0);
 HEAP32[$arrayidx570>>2] = 0;
 HEAP32[$child569>>2] = 0;
 $66 = HEAP32[(7928)>>2]|0;
 $shl573 = 1 << $I534$0;
 $and574 = $66 & $shl573;
 $tobool575 = ($and574|0)==(0);
 do {
  if ($tobool575) {
   $or578 = $66 | $shl573;
   HEAP32[(7928)>>2] = $or578;
   HEAP32[$arrayidx567>>2] = $p$1;
   $parent579 = ((($p$1)) + 24|0);
   HEAP32[$parent579>>2] = $arrayidx567;
   $bk580 = ((($p$1)) + 12|0);
   HEAP32[$bk580>>2] = $p$1;
   $fd581 = ((($p$1)) + 8|0);
   HEAP32[$fd581>>2] = $p$1;
  } else {
   $67 = HEAP32[$arrayidx567>>2]|0;
   $cmp584 = ($I534$0|0)==(31);
   $shr586 = $I534$0 >>> 1;
   $sub589 = (25 - ($shr586))|0;
   $cond = $cmp584 ? 0 : $sub589;
   $shl590 = $psize$2 << $cond;
   $K583$0 = $shl590;$T$0 = $67;
   while(1) {
    $head591 = ((($T$0)) + 4|0);
    $68 = HEAP32[$head591>>2]|0;
    $and592 = $68 & -8;
    $cmp593 = ($and592|0)==($psize$2|0);
    if ($cmp593) {
     label = 124;
     break;
    }
    $shr597 = $K583$0 >>> 31;
    $arrayidx599 = (((($T$0)) + 16|0) + ($shr597<<2)|0);
    $shl600 = $K583$0 << 1;
    $69 = HEAP32[$arrayidx599>>2]|0;
    $cmp601 = ($69|0)==(0|0);
    if ($cmp601) {
     label = 121;
     break;
    } else {
     $K583$0 = $shl600;$T$0 = $69;
    }
   }
   if ((label|0) == 121) {
    $70 = HEAP32[(7940)>>2]|0;
    $cmp605 = ($arrayidx599>>>0)<($70>>>0);
    if ($cmp605) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$arrayidx599>>2] = $p$1;
     $parent610 = ((($p$1)) + 24|0);
     HEAP32[$parent610>>2] = $T$0;
     $bk611 = ((($p$1)) + 12|0);
     HEAP32[$bk611>>2] = $p$1;
     $fd612 = ((($p$1)) + 8|0);
     HEAP32[$fd612>>2] = $p$1;
     break;
    }
   }
   else if ((label|0) == 124) {
    $fd620 = ((($T$0)) + 8|0);
    $71 = HEAP32[$fd620>>2]|0;
    $72 = HEAP32[(7940)>>2]|0;
    $cmp624 = ($71>>>0)>=($72>>>0);
    $not$cmp621 = ($T$0>>>0)>=($72>>>0);
    $73 = $cmp624 & $not$cmp621;
    if ($73) {
     $bk631 = ((($71)) + 12|0);
     HEAP32[$bk631>>2] = $p$1;
     HEAP32[$fd620>>2] = $p$1;
     $fd633 = ((($p$1)) + 8|0);
     HEAP32[$fd633>>2] = $71;
     $bk634 = ((($p$1)) + 12|0);
     HEAP32[$bk634>>2] = $T$0;
     $parent635 = ((($p$1)) + 24|0);
     HEAP32[$parent635>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $74 = HEAP32[(7956)>>2]|0;
 $dec = (($74) + -1)|0;
 HEAP32[(7956)>>2] = $dec;
 $cmp640 = ($dec|0)==(0);
 if ($cmp640) {
  $sp$0$in$i = (8380);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $cmp$i = ($sp$0$i|0)==(0|0);
  $next4$i = ((($sp$0$i)) + 8|0);
  if ($cmp$i) {
   break;
  } else {
   $sp$0$in$i = $next4$i;
  }
 }
 HEAP32[(7956)>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $add$ptr = 0, $add$ptr10 = 0, $add6 = 0, $and = 0, $and15 = 0, $and17 = 0, $call = 0, $call12 = 0, $call3 = 0, $call7 = 0, $cmp = 0, $cmp1 = 0, $cmp13 = 0, $cmp18 = 0, $cmp20 = 0, $cmp5 = 0, $cmp8 = 0, $cond = 0, $cond19 = 0;
 var $cond24 = 0, $head = 0, $mem$1 = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($oldmem|0)==(0|0);
 if ($cmp) {
  $call = (_malloc($bytes)|0);
  $mem$1 = $call;
  return ($mem$1|0);
 }
 $cmp1 = ($bytes>>>0)>(4294967231);
 if ($cmp1) {
  $call3 = (___errno_location()|0);
  HEAP32[$call3>>2] = 12;
  $mem$1 = 0;
  return ($mem$1|0);
 }
 $cmp5 = ($bytes>>>0)<(11);
 $add6 = (($bytes) + 11)|0;
 $and = $add6 & -8;
 $cond = $cmp5 ? 16 : $and;
 $add$ptr = ((($oldmem)) + -8|0);
 $call7 = (_try_realloc_chunk($add$ptr,$cond)|0);
 $cmp8 = ($call7|0)==(0|0);
 if (!($cmp8)) {
  $add$ptr10 = ((($call7)) + 8|0);
  $mem$1 = $add$ptr10;
  return ($mem$1|0);
 }
 $call12 = (_malloc($bytes)|0);
 $cmp13 = ($call12|0)==(0|0);
 if ($cmp13) {
  $mem$1 = 0;
  return ($mem$1|0);
 }
 $head = ((($oldmem)) + -4|0);
 $0 = HEAP32[$head>>2]|0;
 $and15 = $0 & -8;
 $and17 = $0 & 3;
 $cmp18 = ($and17|0)==(0);
 $cond19 = $cmp18 ? 8 : 4;
 $sub = (($and15) - ($cond19))|0;
 $cmp20 = ($sub>>>0)<($bytes>>>0);
 $cond24 = $cmp20 ? $sub : $bytes;
 _memcpy(($call12|0),($oldmem|0),($cond24|0))|0;
 _free($oldmem);
 $mem$1 = $call12;
 return ($mem$1|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $R$1 = 0, $R$3 = 0;
 var $RP$1 = 0, $add = 0, $add$i = 0, $add$ptr = 0, $add$ptr17 = 0, $add$ptr298 = 0, $add$ptr30 = 0, $add$ptr303 = 0, $add$ptr317 = 0, $add$ptr41 = 0, $add$ptr66 = 0, $add$ptr67 = 0, $add$ptr91 = 0, $add105 = 0, $add58 = 0, $and = 0, $and100 = 0, $and104 = 0, $and128 = 0, $and19 = 0;
 var $and2 = 0, $and216 = 0, $and294 = 0, $and43 = 0, $and69 = 0, $and7 = 0, $and80 = 0, $arrayidx = 0, $arrayidx179 = 0, $arrayidx186 = 0, $arrayidx190 = 0, $arrayidx206 = 0, $arrayidx226 = 0, $arrayidx234 = 0, $arrayidx261 = 0, $arrayidx267 = 0, $arrayidx278 = 0, $bk = 0, $bk118 = 0, $bk147 = 0;
 var $bk155 = 0, $bk164 = 0, $child = 0, $child249 = 0, $cmp$i = 0, $cmp1$i = 0, $cmp106 = 0, $cmp11 = 0, $cmp111 = 0, $cmp114 = 0, $cmp116 = 0, $cmp119 = 0, $cmp125 = 0, $cmp13 = 0, $cmp133 = 0, $cmp136 = 0, $cmp139 = 0, $cmp15 = 0, $cmp156 = 0, $cmp162 = 0;
 var $cmp165 = 0, $cmp168 = 0, $cmp180 = 0, $cmp183 = 0, $cmp187 = 0, $cmp191 = 0, $cmp195 = 0, $cmp2$i = 0, $cmp203 = 0, $cmp207 = 0, $cmp220 = 0, $cmp239 = 0, $cmp243 = 0, $cmp251 = 0, $cmp255 = 0, $cmp268 = 0, $cmp272 = 0, $cmp288 = 0, $cmp34 = 0, $cmp36 = 0;
 var $cmp5 = 0, $cmp56 = 0, $cmp59 = 0, $cmp63 = 0, $cond = 0, $fd = 0, $fd138 = 0, $fd148$pre$phiZ2D = 0, $fd159 = 0, $fd167 = 0, $head = 0, $head23 = 0, $head299 = 0, $head31 = 0, $head310 = 0, $head318 = 0, $head48 = 0, $head6 = 0, $head74 = 0, $head79 = 0;
 var $head92 = 0, $index = 0, $neg = 0, $neg215 = 0, $newp$2 = 0, $not$cmp227 = 0, $notlhs = 0, $notrhs = 0, $or = 0, $or$cond$not = 0, $or$cond2 = 0, $or20 = 0, $or28 = 0, $or295 = 0, $or296 = 0, $or300 = 0, $or306 = 0, $or307 = 0, $or315 = 0, $or319 = 0;
 var $or32 = 0, $or44 = 0, $or45 = 0, $or50 = 0, $or70 = 0, $or71 = 0, $or76 = 0, $or88 = 0, $or89 = 0, $or93 = 0, $parent = 0, $parent248 = 0, $parent262 = 0, $parent279 = 0, $shl = 0, $shl$i = 0, $shl127 = 0, $shl214 = 0, $shr = 0, $storemerge = 0;
 var $storemerge1 = 0, $sub = 0, $sub$i = 0, $sub110 = 0, $sub40 = 0, $sub62 = 0, $tobool = 0, $tobool101 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $head = ((($p)) + 4|0);
 $0 = HEAP32[$head>>2]|0;
 $and = $0 & -8;
 $add$ptr = (($p) + ($and)|0);
 $1 = HEAP32[(7940)>>2]|0;
 $and2 = $0 & 3;
 $notlhs = ($p>>>0)>=($1>>>0);
 $notrhs = ($and2|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $cmp5 = ($p>>>0)<($add$ptr>>>0);
 $or$cond2 = $or$cond$not & $cmp5;
 if (!($or$cond2)) {
  _abort();
  // unreachable;
 }
 $head6 = ((($add$ptr)) + 4|0);
 $2 = HEAP32[$head6>>2]|0;
 $and7 = $2 & 1;
 $tobool = ($and7|0)==(0);
 if ($tobool) {
  _abort();
  // unreachable;
 }
 $cmp11 = ($and2|0)==(0);
 if ($cmp11) {
  $cmp$i = ($nb>>>0)<(256);
  if ($cmp$i) {
   $newp$2 = 0;
   return ($newp$2|0);
  }
  $add$i = (($nb) + 4)|0;
  $cmp1$i = ($and>>>0)<($add$i>>>0);
  if (!($cmp1$i)) {
   $sub$i = (($and) - ($nb))|0;
   $3 = HEAP32[(8404)>>2]|0;
   $shl$i = $3 << 1;
   $cmp2$i = ($sub$i>>>0)>($shl$i>>>0);
   if (!($cmp2$i)) {
    $newp$2 = $p;
    return ($newp$2|0);
   }
  }
  $newp$2 = 0;
  return ($newp$2|0);
 }
 $cmp13 = ($and>>>0)<($nb>>>0);
 if (!($cmp13)) {
  $sub = (($and) - ($nb))|0;
  $cmp15 = ($sub>>>0)>(15);
  if (!($cmp15)) {
   $newp$2 = $p;
   return ($newp$2|0);
  }
  $add$ptr17 = (($p) + ($nb)|0);
  $and19 = $0 & 1;
  $or = $and19 | $nb;
  $or20 = $or | 2;
  HEAP32[$head>>2] = $or20;
  $head23 = ((($add$ptr17)) + 4|0);
  $or28 = $sub | 3;
  HEAP32[$head23>>2] = $or28;
  $add$ptr30 = (($add$ptr17) + ($sub)|0);
  $head31 = ((($add$ptr30)) + 4|0);
  $4 = HEAP32[$head31>>2]|0;
  $or32 = $4 | 1;
  HEAP32[$head31>>2] = $or32;
  _dispose_chunk($add$ptr17,$sub);
  $newp$2 = $p;
  return ($newp$2|0);
 }
 $5 = HEAP32[(7948)>>2]|0;
 $cmp34 = ($add$ptr|0)==($5|0);
 if ($cmp34) {
  $6 = HEAP32[(7936)>>2]|0;
  $add = (($6) + ($and))|0;
  $cmp36 = ($add>>>0)>($nb>>>0);
  $sub40 = (($add) - ($nb))|0;
  $add$ptr41 = (($p) + ($nb)|0);
  if (!($cmp36)) {
   $newp$2 = 0;
   return ($newp$2|0);
  }
  $or50 = $sub40 | 1;
  $head48 = ((($add$ptr41)) + 4|0);
  $and43 = $0 & 1;
  $or44 = $and43 | $nb;
  $or45 = $or44 | 2;
  HEAP32[$head>>2] = $or45;
  HEAP32[$head48>>2] = $or50;
  HEAP32[(7948)>>2] = $add$ptr41;
  HEAP32[(7936)>>2] = $sub40;
  $newp$2 = $p;
  return ($newp$2|0);
 }
 $7 = HEAP32[(7944)>>2]|0;
 $cmp56 = ($add$ptr|0)==($7|0);
 if ($cmp56) {
  $8 = HEAP32[(7932)>>2]|0;
  $add58 = (($8) + ($and))|0;
  $cmp59 = ($add58>>>0)<($nb>>>0);
  if ($cmp59) {
   $newp$2 = 0;
   return ($newp$2|0);
  }
  $sub62 = (($add58) - ($nb))|0;
  $cmp63 = ($sub62>>>0)>(15);
  $and69 = $0 & 1;
  if ($cmp63) {
   $add$ptr66 = (($p) + ($nb)|0);
   $add$ptr67 = (($add$ptr66) + ($sub62)|0);
   $or70 = $and69 | $nb;
   $or71 = $or70 | 2;
   HEAP32[$head>>2] = $or71;
   $head74 = ((($add$ptr66)) + 4|0);
   $or76 = $sub62 | 1;
   HEAP32[$head74>>2] = $or76;
   HEAP32[$add$ptr67>>2] = $sub62;
   $head79 = ((($add$ptr67)) + 4|0);
   $9 = HEAP32[$head79>>2]|0;
   $and80 = $9 & -2;
   HEAP32[$head79>>2] = $and80;
   $storemerge = $add$ptr66;$storemerge1 = $sub62;
  } else {
   $or88 = $and69 | $add58;
   $or89 = $or88 | 2;
   HEAP32[$head>>2] = $or89;
   $add$ptr91 = (($p) + ($add58)|0);
   $head92 = ((($add$ptr91)) + 4|0);
   $10 = HEAP32[$head92>>2]|0;
   $or93 = $10 | 1;
   HEAP32[$head92>>2] = $or93;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(7932)>>2] = $storemerge1;
  HEAP32[(7944)>>2] = $storemerge;
  $newp$2 = $p;
  return ($newp$2|0);
 }
 $and100 = $2 & 2;
 $tobool101 = ($and100|0)==(0);
 if (!($tobool101)) {
  $newp$2 = 0;
  return ($newp$2|0);
 }
 $and104 = $2 & -8;
 $add105 = (($and104) + ($and))|0;
 $cmp106 = ($add105>>>0)<($nb>>>0);
 if ($cmp106) {
  $newp$2 = 0;
  return ($newp$2|0);
 }
 $sub110 = (($add105) - ($nb))|0;
 $shr = $2 >>> 3;
 $cmp111 = ($2>>>0)<(256);
 L49: do {
  if ($cmp111) {
   $fd = ((($add$ptr)) + 8|0);
   $11 = HEAP32[$fd>>2]|0;
   $bk = ((($add$ptr)) + 12|0);
   $12 = HEAP32[$bk>>2]|0;
   $shl = $shr << 1;
   $arrayidx = (7964 + ($shl<<2)|0);
   $cmp114 = ($11|0)==($arrayidx|0);
   if (!($cmp114)) {
    $cmp116 = ($11>>>0)<($1>>>0);
    if ($cmp116) {
     _abort();
     // unreachable;
    }
    $bk118 = ((($11)) + 12|0);
    $13 = HEAP32[$bk118>>2]|0;
    $cmp119 = ($13|0)==($add$ptr|0);
    if (!($cmp119)) {
     _abort();
     // unreachable;
    }
   }
   $cmp125 = ($12|0)==($11|0);
   if ($cmp125) {
    $shl127 = 1 << $shr;
    $neg = $shl127 ^ -1;
    $14 = HEAP32[1981]|0;
    $and128 = $14 & $neg;
    HEAP32[1981] = $and128;
    break;
   }
   $cmp133 = ($12|0)==($arrayidx|0);
   if ($cmp133) {
    $$pre = ((($12)) + 8|0);
    $fd148$pre$phiZ2D = $$pre;
   } else {
    $cmp136 = ($12>>>0)<($1>>>0);
    if ($cmp136) {
     _abort();
     // unreachable;
    }
    $fd138 = ((($12)) + 8|0);
    $15 = HEAP32[$fd138>>2]|0;
    $cmp139 = ($15|0)==($add$ptr|0);
    if ($cmp139) {
     $fd148$pre$phiZ2D = $fd138;
    } else {
     _abort();
     // unreachable;
    }
   }
   $bk147 = ((($11)) + 12|0);
   HEAP32[$bk147>>2] = $12;
   HEAP32[$fd148$pre$phiZ2D>>2] = $11;
  } else {
   $parent = ((($add$ptr)) + 24|0);
   $16 = HEAP32[$parent>>2]|0;
   $bk155 = ((($add$ptr)) + 12|0);
   $17 = HEAP32[$bk155>>2]|0;
   $cmp156 = ($17|0)==($add$ptr|0);
   do {
    if ($cmp156) {
     $child = ((($add$ptr)) + 16|0);
     $arrayidx179 = ((($child)) + 4|0);
     $21 = HEAP32[$arrayidx179>>2]|0;
     $cmp180 = ($21|0)==(0|0);
     if ($cmp180) {
      $22 = HEAP32[$child>>2]|0;
      $cmp183 = ($22|0)==(0|0);
      if ($cmp183) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $22;$RP$1 = $child;
      }
     } else {
      $R$1 = $21;$RP$1 = $arrayidx179;
     }
     while(1) {
      $arrayidx186 = ((($R$1)) + 20|0);
      $23 = HEAP32[$arrayidx186>>2]|0;
      $cmp187 = ($23|0)==(0|0);
      if (!($cmp187)) {
       $R$1 = $23;$RP$1 = $arrayidx186;
       continue;
      }
      $arrayidx190 = ((($R$1)) + 16|0);
      $24 = HEAP32[$arrayidx190>>2]|0;
      $cmp191 = ($24|0)==(0|0);
      if ($cmp191) {
       break;
      } else {
       $R$1 = $24;$RP$1 = $arrayidx190;
      }
     }
     $cmp195 = ($RP$1>>>0)<($1>>>0);
     if ($cmp195) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$1>>2] = 0;
      $R$3 = $R$1;
      break;
     }
    } else {
     $fd159 = ((($add$ptr)) + 8|0);
     $18 = HEAP32[$fd159>>2]|0;
     $cmp162 = ($18>>>0)<($1>>>0);
     if ($cmp162) {
      _abort();
      // unreachable;
     }
     $bk164 = ((($18)) + 12|0);
     $19 = HEAP32[$bk164>>2]|0;
     $cmp165 = ($19|0)==($add$ptr|0);
     if (!($cmp165)) {
      _abort();
      // unreachable;
     }
     $fd167 = ((($17)) + 8|0);
     $20 = HEAP32[$fd167>>2]|0;
     $cmp168 = ($20|0)==($add$ptr|0);
     if ($cmp168) {
      HEAP32[$bk164>>2] = $17;
      HEAP32[$fd167>>2] = $18;
      $R$3 = $17;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $cmp203 = ($16|0)==(0|0);
   if (!($cmp203)) {
    $index = ((($add$ptr)) + 28|0);
    $25 = HEAP32[$index>>2]|0;
    $arrayidx206 = (8228 + ($25<<2)|0);
    $26 = HEAP32[$arrayidx206>>2]|0;
    $cmp207 = ($add$ptr|0)==($26|0);
    do {
     if ($cmp207) {
      HEAP32[$arrayidx206>>2] = $R$3;
      $cond = ($R$3|0)==(0|0);
      if ($cond) {
       $shl214 = 1 << $25;
       $neg215 = $shl214 ^ -1;
       $27 = HEAP32[(7928)>>2]|0;
       $and216 = $27 & $neg215;
       HEAP32[(7928)>>2] = $and216;
       break L49;
      }
     } else {
      $28 = HEAP32[(7940)>>2]|0;
      $cmp220 = ($16>>>0)<($28>>>0);
      if ($cmp220) {
       _abort();
       // unreachable;
      } else {
       $arrayidx226 = ((($16)) + 16|0);
       $29 = HEAP32[$arrayidx226>>2]|0;
       $not$cmp227 = ($29|0)!=($add$ptr|0);
       $$sink = $not$cmp227&1;
       $arrayidx234 = (((($16)) + 16|0) + ($$sink<<2)|0);
       HEAP32[$arrayidx234>>2] = $R$3;
       $cmp239 = ($R$3|0)==(0|0);
       if ($cmp239) {
        break L49;
       } else {
        break;
       }
      }
     }
    } while(0);
    $30 = HEAP32[(7940)>>2]|0;
    $cmp243 = ($R$3>>>0)<($30>>>0);
    if ($cmp243) {
     _abort();
     // unreachable;
    }
    $parent248 = ((($R$3)) + 24|0);
    HEAP32[$parent248>>2] = $16;
    $child249 = ((($add$ptr)) + 16|0);
    $31 = HEAP32[$child249>>2]|0;
    $cmp251 = ($31|0)==(0|0);
    do {
     if (!($cmp251)) {
      $cmp255 = ($31>>>0)<($30>>>0);
      if ($cmp255) {
       _abort();
       // unreachable;
      } else {
       $arrayidx261 = ((($R$3)) + 16|0);
       HEAP32[$arrayidx261>>2] = $31;
       $parent262 = ((($31)) + 24|0);
       HEAP32[$parent262>>2] = $R$3;
       break;
      }
     }
    } while(0);
    $arrayidx267 = ((($child249)) + 4|0);
    $32 = HEAP32[$arrayidx267>>2]|0;
    $cmp268 = ($32|0)==(0|0);
    if (!($cmp268)) {
     $33 = HEAP32[(7940)>>2]|0;
     $cmp272 = ($32>>>0)<($33>>>0);
     if ($cmp272) {
      _abort();
      // unreachable;
     } else {
      $arrayidx278 = ((($R$3)) + 20|0);
      HEAP32[$arrayidx278>>2] = $32;
      $parent279 = ((($32)) + 24|0);
      HEAP32[$parent279>>2] = $R$3;
      break;
     }
    }
   }
  }
 } while(0);
 $cmp288 = ($sub110>>>0)<(16);
 $and294 = $0 & 1;
 if ($cmp288) {
  $or295 = $add105 | $and294;
  $or296 = $or295 | 2;
  HEAP32[$head>>2] = $or296;
  $add$ptr298 = (($p) + ($add105)|0);
  $head299 = ((($add$ptr298)) + 4|0);
  $34 = HEAP32[$head299>>2]|0;
  $or300 = $34 | 1;
  HEAP32[$head299>>2] = $or300;
  $newp$2 = $p;
  return ($newp$2|0);
 } else {
  $add$ptr303 = (($p) + ($nb)|0);
  $or306 = $and294 | $nb;
  $or307 = $or306 | 2;
  HEAP32[$head>>2] = $or307;
  $head310 = ((($add$ptr303)) + 4|0);
  $or315 = $sub110 | 3;
  HEAP32[$head310>>2] = $or315;
  $add$ptr317 = (($add$ptr303) + ($sub110)|0);
  $head318 = ((($add$ptr317)) + 4|0);
  $35 = HEAP32[$head318>>2]|0;
  $or319 = $35 | 1;
  HEAP32[$head318>>2] = $or319;
  _dispose_chunk($add$ptr303,$sub110);
  $newp$2 = $p;
  return ($newp$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre8 = 0, $$pre9 = 0, $$sink = 0, $$sink3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $F517$0 = 0, $I545$0 = 0, $K597$0 = 0, $R$1 = 0;
 var $R$3 = 0, $R328$1 = 0, $R328$3 = 0, $RP$1 = 0, $RP357$1 = 0, $T$0 = 0, $add$ptr = 0, $add$ptr209 = 0, $add$ptr252 = 0, $add$ptr486 = 0, $add$ptr5 = 0, $add$ptr504 = 0, $add230 = 0, $add248 = 0, $add258 = 0, $add561 = 0, $add566 = 0, $add570 = 0, $add572 = 0, $add575 = 0;
 var $add6 = 0, $and = 0, $and128 = 0, $and2 = 0, $and202 = 0, $and207 = 0, $and224 = 0, $and257 = 0, $and295 = 0, $and32 = 0, $and410 = 0, $and501 = 0, $and520 = 0, $and556 = 0, $and560 = 0, $and565 = 0, $and574 = 0, $and587 = 0, $and606 = 0, $arrayidx = 0;
 var $arrayidx100 = 0, $arrayidx118 = 0, $arrayidx138 = 0, $arrayidx146 = 0, $arrayidx173 = 0, $arrayidx179 = 0, $arrayidx190 = 0, $arrayidx271 = 0, $arrayidx359 = 0, $arrayidx371 = 0, $arrayidx376 = 0, $arrayidx399 = 0, $arrayidx420 = 0, $arrayidx428 = 0, $arrayidx457 = 0, $arrayidx463 = 0, $arrayidx474 = 0, $arrayidx516 = 0, $arrayidx579 = 0, $arrayidx582 = 0;
 var $arrayidx613 = 0, $arrayidx86 = 0, $arrayidx95 = 0, $bk = 0, $bk22 = 0, $bk266 = 0, $bk279 = 0, $bk317 = 0, $bk329 = 0, $bk340 = 0, $bk52 = 0, $bk539 = 0, $bk541 = 0, $bk594 = 0, $bk60 = 0, $bk626 = 0, $bk648 = 0, $bk651 = 0, $bk70 = 0, $child = 0;
 var $child161 = 0, $child358 = 0, $child445 = 0, $child581 = 0, $cmp = 0, $cmp10 = 0, $cmp101 = 0, $cmp106 = 0, $cmp115 = 0, $cmp119 = 0, $cmp13 = 0, $cmp132 = 0, $cmp151 = 0, $cmp155 = 0, $cmp163 = 0, $cmp167 = 0, $cmp17 = 0, $cmp180 = 0, $cmp184 = 0, $cmp20 = 0;
 var $cmp203 = 0, $cmp218 = 0, $cmp227 = 0, $cmp23 = 0, $cmp235 = 0, $cmp244 = 0, $cmp260 = 0, $cmp272 = 0, $cmp276 = 0, $cmp28 = 0, $cmp280 = 0, $cmp289 = 0, $cmp300 = 0, $cmp304 = 0, $cmp308 = 0, $cmp330 = 0, $cmp337 = 0, $cmp341 = 0, $cmp345 = 0, $cmp36 = 0;
 var $cmp360 = 0, $cmp365 = 0, $cmp372 = 0, $cmp377 = 0, $cmp384 = 0, $cmp393 = 0, $cmp40 = 0, $cmp400 = 0, $cmp414 = 0, $cmp433 = 0, $cmp437 = 0, $cmp44 = 0, $cmp447 = 0, $cmp451 = 0, $cmp464 = 0, $cmp468 = 0, $cmp489 = 0, $cmp508 = 0, $cmp529 = 0, $cmp547 = 0;
 var $cmp551 = 0, $cmp598 = 0, $cmp607 = 0, $cmp61 = 0, $cmp615 = 0, $cmp620 = 0, $cmp641 = 0, $cmp68 = 0, $cmp7 = 0, $cmp71 = 0, $cmp75 = 0, $cmp87 = 0, $cmp91 = 0, $cmp96 = 0, $cond = 0, $cond4 = 0, $cond5 = 0, $fd = 0, $fd264 = 0, $fd307 = 0;
 var $fd318$pre$phiZ2D = 0, $fd334 = 0, $fd344 = 0, $fd43 = 0, $fd53$pre$phiZ2D = 0, $fd540 = 0, $fd595 = 0, $fd627 = 0, $fd635 = 0, $fd65 = 0, $fd650 = 0, $fd74 = 0, $head = 0, $head201 = 0, $head208 = 0, $head223 = 0, $head233 = 0, $head251 = 0, $head485 = 0, $head503 = 0;
 var $head605 = 0, $idx$neg = 0, $index = 0, $index398 = 0, $index580 = 0, $neg = 0, $neg127 = 0, $neg293 = 0, $neg408 = 0, $not$cmp139 = 0, $not$cmp421 = 0, $not$cmp637 = 0, $or = 0, $or232 = 0, $or250 = 0, $or484 = 0, $or502 = 0, $or525 = 0, $or592 = 0, $p$addr$1 = 0;
 var $parent = 0, $parent160 = 0, $parent174 = 0, $parent191 = 0, $parent327 = 0, $parent444 = 0, $parent458 = 0, $parent475 = 0, $parent593 = 0, $parent625 = 0, $parent652 = 0, $psize$addr$1 = 0, $psize$addr$2 = 0, $shl = 0, $shl126 = 0, $shl270 = 0, $shl292 = 0, $shl31 = 0, $shl407 = 0, $shl515 = 0;
 var $shl519 = 0, $shl557 = 0, $shl562 = 0, $shl568 = 0, $shl571 = 0, $shl586 = 0, $shl604 = 0, $shl614 = 0, $shr = 0, $shr259 = 0, $shr507 = 0, $shr546 = 0, $shr555 = 0, $shr559 = 0, $shr564 = 0, $shr569 = 0, $shr573 = 0, $shr600 = 0, $shr611 = 0, $sub = 0;
 var $sub558 = 0, $sub563 = 0, $sub567 = 0, $sub603 = 0, $tobool = 0, $tobool225 = 0, $tobool521 = 0, $tobool588 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $add$ptr = (($p) + ($psize)|0);
 $head = ((($p)) + 4|0);
 $0 = HEAP32[$head>>2]|0;
 $and = $0 & 1;
 $tobool = ($and|0)==(0);
 L1: do {
  if ($tobool) {
   $1 = HEAP32[$p>>2]|0;
   $and2 = $0 & 3;
   $cmp = ($and2|0)==(0);
   if ($cmp) {
    return;
   }
   $idx$neg = (0 - ($1))|0;
   $add$ptr5 = (($p) + ($idx$neg)|0);
   $add6 = (($1) + ($psize))|0;
   $2 = HEAP32[(7940)>>2]|0;
   $cmp7 = ($add$ptr5>>>0)<($2>>>0);
   if ($cmp7) {
    _abort();
    // unreachable;
   }
   $3 = HEAP32[(7944)>>2]|0;
   $cmp10 = ($add$ptr5|0)==($3|0);
   if ($cmp10) {
    $head201 = ((($add$ptr)) + 4|0);
    $27 = HEAP32[$head201>>2]|0;
    $and202 = $27 & 3;
    $cmp203 = ($and202|0)==(3);
    if (!($cmp203)) {
     $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
     break;
    }
    $add$ptr209 = (($add$ptr5) + ($add6)|0);
    $head208 = ((($add$ptr5)) + 4|0);
    $or = $add6 | 1;
    $and207 = $27 & -2;
    HEAP32[(7932)>>2] = $add6;
    HEAP32[$head201>>2] = $and207;
    HEAP32[$head208>>2] = $or;
    HEAP32[$add$ptr209>>2] = $add6;
    return;
   }
   $shr = $1 >>> 3;
   $cmp13 = ($1>>>0)<(256);
   if ($cmp13) {
    $fd = ((($add$ptr5)) + 8|0);
    $4 = HEAP32[$fd>>2]|0;
    $bk = ((($add$ptr5)) + 12|0);
    $5 = HEAP32[$bk>>2]|0;
    $shl = $shr << 1;
    $arrayidx = (7964 + ($shl<<2)|0);
    $cmp17 = ($4|0)==($arrayidx|0);
    if (!($cmp17)) {
     $cmp20 = ($4>>>0)<($2>>>0);
     if ($cmp20) {
      _abort();
      // unreachable;
     }
     $bk22 = ((($4)) + 12|0);
     $6 = HEAP32[$bk22>>2]|0;
     $cmp23 = ($6|0)==($add$ptr5|0);
     if (!($cmp23)) {
      _abort();
      // unreachable;
     }
    }
    $cmp28 = ($5|0)==($4|0);
    if ($cmp28) {
     $shl31 = 1 << $shr;
     $neg = $shl31 ^ -1;
     $7 = HEAP32[1981]|0;
     $and32 = $7 & $neg;
     HEAP32[1981] = $and32;
     $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
     break;
    }
    $cmp36 = ($5|0)==($arrayidx|0);
    if ($cmp36) {
     $$pre9 = ((($5)) + 8|0);
     $fd53$pre$phiZ2D = $$pre9;
    } else {
     $cmp40 = ($5>>>0)<($2>>>0);
     if ($cmp40) {
      _abort();
      // unreachable;
     }
     $fd43 = ((($5)) + 8|0);
     $8 = HEAP32[$fd43>>2]|0;
     $cmp44 = ($8|0)==($add$ptr5|0);
     if ($cmp44) {
      $fd53$pre$phiZ2D = $fd43;
     } else {
      _abort();
      // unreachable;
     }
    }
    $bk52 = ((($4)) + 12|0);
    HEAP32[$bk52>>2] = $5;
    HEAP32[$fd53$pre$phiZ2D>>2] = $4;
    $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
    break;
   }
   $parent = ((($add$ptr5)) + 24|0);
   $9 = HEAP32[$parent>>2]|0;
   $bk60 = ((($add$ptr5)) + 12|0);
   $10 = HEAP32[$bk60>>2]|0;
   $cmp61 = ($10|0)==($add$ptr5|0);
   do {
    if ($cmp61) {
     $child = ((($add$ptr5)) + 16|0);
     $arrayidx86 = ((($child)) + 4|0);
     $14 = HEAP32[$arrayidx86>>2]|0;
     $cmp87 = ($14|0)==(0|0);
     if ($cmp87) {
      $15 = HEAP32[$child>>2]|0;
      $cmp91 = ($15|0)==(0|0);
      if ($cmp91) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $15;$RP$1 = $child;
      }
     } else {
      $R$1 = $14;$RP$1 = $arrayidx86;
     }
     while(1) {
      $arrayidx95 = ((($R$1)) + 20|0);
      $16 = HEAP32[$arrayidx95>>2]|0;
      $cmp96 = ($16|0)==(0|0);
      if (!($cmp96)) {
       $R$1 = $16;$RP$1 = $arrayidx95;
       continue;
      }
      $arrayidx100 = ((($R$1)) + 16|0);
      $17 = HEAP32[$arrayidx100>>2]|0;
      $cmp101 = ($17|0)==(0|0);
      if ($cmp101) {
       break;
      } else {
       $R$1 = $17;$RP$1 = $arrayidx100;
      }
     }
     $cmp106 = ($RP$1>>>0)<($2>>>0);
     if ($cmp106) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$1>>2] = 0;
      $R$3 = $R$1;
      break;
     }
    } else {
     $fd65 = ((($add$ptr5)) + 8|0);
     $11 = HEAP32[$fd65>>2]|0;
     $cmp68 = ($11>>>0)<($2>>>0);
     if ($cmp68) {
      _abort();
      // unreachable;
     }
     $bk70 = ((($11)) + 12|0);
     $12 = HEAP32[$bk70>>2]|0;
     $cmp71 = ($12|0)==($add$ptr5|0);
     if (!($cmp71)) {
      _abort();
      // unreachable;
     }
     $fd74 = ((($10)) + 8|0);
     $13 = HEAP32[$fd74>>2]|0;
     $cmp75 = ($13|0)==($add$ptr5|0);
     if ($cmp75) {
      HEAP32[$bk70>>2] = $10;
      HEAP32[$fd74>>2] = $11;
      $R$3 = $10;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $cmp115 = ($9|0)==(0|0);
   if ($cmp115) {
    $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
   } else {
    $index = ((($add$ptr5)) + 28|0);
    $18 = HEAP32[$index>>2]|0;
    $arrayidx118 = (8228 + ($18<<2)|0);
    $19 = HEAP32[$arrayidx118>>2]|0;
    $cmp119 = ($add$ptr5|0)==($19|0);
    do {
     if ($cmp119) {
      HEAP32[$arrayidx118>>2] = $R$3;
      $cond4 = ($R$3|0)==(0|0);
      if ($cond4) {
       $shl126 = 1 << $18;
       $neg127 = $shl126 ^ -1;
       $20 = HEAP32[(7928)>>2]|0;
       $and128 = $20 & $neg127;
       HEAP32[(7928)>>2] = $and128;
       $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
       break L1;
      }
     } else {
      $21 = HEAP32[(7940)>>2]|0;
      $cmp132 = ($9>>>0)<($21>>>0);
      if ($cmp132) {
       _abort();
       // unreachable;
      } else {
       $arrayidx138 = ((($9)) + 16|0);
       $22 = HEAP32[$arrayidx138>>2]|0;
       $not$cmp139 = ($22|0)!=($add$ptr5|0);
       $$sink = $not$cmp139&1;
       $arrayidx146 = (((($9)) + 16|0) + ($$sink<<2)|0);
       HEAP32[$arrayidx146>>2] = $R$3;
       $cmp151 = ($R$3|0)==(0|0);
       if ($cmp151) {
        $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
        break L1;
       } else {
        break;
       }
      }
     }
    } while(0);
    $23 = HEAP32[(7940)>>2]|0;
    $cmp155 = ($R$3>>>0)<($23>>>0);
    if ($cmp155) {
     _abort();
     // unreachable;
    }
    $parent160 = ((($R$3)) + 24|0);
    HEAP32[$parent160>>2] = $9;
    $child161 = ((($add$ptr5)) + 16|0);
    $24 = HEAP32[$child161>>2]|0;
    $cmp163 = ($24|0)==(0|0);
    do {
     if (!($cmp163)) {
      $cmp167 = ($24>>>0)<($23>>>0);
      if ($cmp167) {
       _abort();
       // unreachable;
      } else {
       $arrayidx173 = ((($R$3)) + 16|0);
       HEAP32[$arrayidx173>>2] = $24;
       $parent174 = ((($24)) + 24|0);
       HEAP32[$parent174>>2] = $R$3;
       break;
      }
     }
    } while(0);
    $arrayidx179 = ((($child161)) + 4|0);
    $25 = HEAP32[$arrayidx179>>2]|0;
    $cmp180 = ($25|0)==(0|0);
    if ($cmp180) {
     $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
    } else {
     $26 = HEAP32[(7940)>>2]|0;
     $cmp184 = ($25>>>0)<($26>>>0);
     if ($cmp184) {
      _abort();
      // unreachable;
     } else {
      $arrayidx190 = ((($R$3)) + 20|0);
      HEAP32[$arrayidx190>>2] = $25;
      $parent191 = ((($25)) + 24|0);
      HEAP32[$parent191>>2] = $R$3;
      $p$addr$1 = $add$ptr5;$psize$addr$1 = $add6;
      break;
     }
    }
   }
  } else {
   $p$addr$1 = $p;$psize$addr$1 = $psize;
  }
 } while(0);
 $28 = HEAP32[(7940)>>2]|0;
 $cmp218 = ($add$ptr>>>0)<($28>>>0);
 if ($cmp218) {
  _abort();
  // unreachable;
 }
 $head223 = ((($add$ptr)) + 4|0);
 $29 = HEAP32[$head223>>2]|0;
 $and224 = $29 & 2;
 $tobool225 = ($and224|0)==(0);
 if ($tobool225) {
  $30 = HEAP32[(7948)>>2]|0;
  $cmp227 = ($add$ptr|0)==($30|0);
  $31 = HEAP32[(7944)>>2]|0;
  if ($cmp227) {
   $32 = HEAP32[(7936)>>2]|0;
   $add230 = (($32) + ($psize$addr$1))|0;
   HEAP32[(7936)>>2] = $add230;
   HEAP32[(7948)>>2] = $p$addr$1;
   $or232 = $add230 | 1;
   $head233 = ((($p$addr$1)) + 4|0);
   HEAP32[$head233>>2] = $or232;
   $cmp235 = ($p$addr$1|0)==($31|0);
   if (!($cmp235)) {
    return;
   }
   HEAP32[(7944)>>2] = 0;
   HEAP32[(7932)>>2] = 0;
   return;
  }
  $cmp244 = ($add$ptr|0)==($31|0);
  if ($cmp244) {
   $33 = HEAP32[(7932)>>2]|0;
   $add248 = (($33) + ($psize$addr$1))|0;
   HEAP32[(7932)>>2] = $add248;
   HEAP32[(7944)>>2] = $p$addr$1;
   $or250 = $add248 | 1;
   $head251 = ((($p$addr$1)) + 4|0);
   HEAP32[$head251>>2] = $or250;
   $add$ptr252 = (($p$addr$1) + ($add248)|0);
   HEAP32[$add$ptr252>>2] = $add248;
   return;
  }
  $and257 = $29 & -8;
  $add258 = (($and257) + ($psize$addr$1))|0;
  $shr259 = $29 >>> 3;
  $cmp260 = ($29>>>0)<(256);
  L96: do {
   if ($cmp260) {
    $fd264 = ((($add$ptr)) + 8|0);
    $34 = HEAP32[$fd264>>2]|0;
    $bk266 = ((($add$ptr)) + 12|0);
    $35 = HEAP32[$bk266>>2]|0;
    $shl270 = $shr259 << 1;
    $arrayidx271 = (7964 + ($shl270<<2)|0);
    $cmp272 = ($34|0)==($arrayidx271|0);
    if (!($cmp272)) {
     $cmp276 = ($34>>>0)<($28>>>0);
     if ($cmp276) {
      _abort();
      // unreachable;
     }
     $bk279 = ((($34)) + 12|0);
     $36 = HEAP32[$bk279>>2]|0;
     $cmp280 = ($36|0)==($add$ptr|0);
     if (!($cmp280)) {
      _abort();
      // unreachable;
     }
    }
    $cmp289 = ($35|0)==($34|0);
    if ($cmp289) {
     $shl292 = 1 << $shr259;
     $neg293 = $shl292 ^ -1;
     $37 = HEAP32[1981]|0;
     $and295 = $37 & $neg293;
     HEAP32[1981] = $and295;
     break;
    }
    $cmp300 = ($35|0)==($arrayidx271|0);
    if ($cmp300) {
     $$pre8 = ((($35)) + 8|0);
     $fd318$pre$phiZ2D = $$pre8;
    } else {
     $cmp304 = ($35>>>0)<($28>>>0);
     if ($cmp304) {
      _abort();
      // unreachable;
     }
     $fd307 = ((($35)) + 8|0);
     $38 = HEAP32[$fd307>>2]|0;
     $cmp308 = ($38|0)==($add$ptr|0);
     if ($cmp308) {
      $fd318$pre$phiZ2D = $fd307;
     } else {
      _abort();
      // unreachable;
     }
    }
    $bk317 = ((($34)) + 12|0);
    HEAP32[$bk317>>2] = $35;
    HEAP32[$fd318$pre$phiZ2D>>2] = $34;
   } else {
    $parent327 = ((($add$ptr)) + 24|0);
    $39 = HEAP32[$parent327>>2]|0;
    $bk329 = ((($add$ptr)) + 12|0);
    $40 = HEAP32[$bk329>>2]|0;
    $cmp330 = ($40|0)==($add$ptr|0);
    do {
     if ($cmp330) {
      $child358 = ((($add$ptr)) + 16|0);
      $arrayidx359 = ((($child358)) + 4|0);
      $44 = HEAP32[$arrayidx359>>2]|0;
      $cmp360 = ($44|0)==(0|0);
      if ($cmp360) {
       $45 = HEAP32[$child358>>2]|0;
       $cmp365 = ($45|0)==(0|0);
       if ($cmp365) {
        $R328$3 = 0;
        break;
       } else {
        $R328$1 = $45;$RP357$1 = $child358;
       }
      } else {
       $R328$1 = $44;$RP357$1 = $arrayidx359;
      }
      while(1) {
       $arrayidx371 = ((($R328$1)) + 20|0);
       $46 = HEAP32[$arrayidx371>>2]|0;
       $cmp372 = ($46|0)==(0|0);
       if (!($cmp372)) {
        $R328$1 = $46;$RP357$1 = $arrayidx371;
        continue;
       }
       $arrayidx376 = ((($R328$1)) + 16|0);
       $47 = HEAP32[$arrayidx376>>2]|0;
       $cmp377 = ($47|0)==(0|0);
       if ($cmp377) {
        break;
       } else {
        $R328$1 = $47;$RP357$1 = $arrayidx376;
       }
      }
      $cmp384 = ($RP357$1>>>0)<($28>>>0);
      if ($cmp384) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP357$1>>2] = 0;
       $R328$3 = $R328$1;
       break;
      }
     } else {
      $fd334 = ((($add$ptr)) + 8|0);
      $41 = HEAP32[$fd334>>2]|0;
      $cmp337 = ($41>>>0)<($28>>>0);
      if ($cmp337) {
       _abort();
       // unreachable;
      }
      $bk340 = ((($41)) + 12|0);
      $42 = HEAP32[$bk340>>2]|0;
      $cmp341 = ($42|0)==($add$ptr|0);
      if (!($cmp341)) {
       _abort();
       // unreachable;
      }
      $fd344 = ((($40)) + 8|0);
      $43 = HEAP32[$fd344>>2]|0;
      $cmp345 = ($43|0)==($add$ptr|0);
      if ($cmp345) {
       HEAP32[$bk340>>2] = $40;
       HEAP32[$fd344>>2] = $41;
       $R328$3 = $40;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $cmp393 = ($39|0)==(0|0);
    if (!($cmp393)) {
     $index398 = ((($add$ptr)) + 28|0);
     $48 = HEAP32[$index398>>2]|0;
     $arrayidx399 = (8228 + ($48<<2)|0);
     $49 = HEAP32[$arrayidx399>>2]|0;
     $cmp400 = ($add$ptr|0)==($49|0);
     do {
      if ($cmp400) {
       HEAP32[$arrayidx399>>2] = $R328$3;
       $cond5 = ($R328$3|0)==(0|0);
       if ($cond5) {
        $shl407 = 1 << $48;
        $neg408 = $shl407 ^ -1;
        $50 = HEAP32[(7928)>>2]|0;
        $and410 = $50 & $neg408;
        HEAP32[(7928)>>2] = $and410;
        break L96;
       }
      } else {
       $51 = HEAP32[(7940)>>2]|0;
       $cmp414 = ($39>>>0)<($51>>>0);
       if ($cmp414) {
        _abort();
        // unreachable;
       } else {
        $arrayidx420 = ((($39)) + 16|0);
        $52 = HEAP32[$arrayidx420>>2]|0;
        $not$cmp421 = ($52|0)!=($add$ptr|0);
        $$sink3 = $not$cmp421&1;
        $arrayidx428 = (((($39)) + 16|0) + ($$sink3<<2)|0);
        HEAP32[$arrayidx428>>2] = $R328$3;
        $cmp433 = ($R328$3|0)==(0|0);
        if ($cmp433) {
         break L96;
        } else {
         break;
        }
       }
      }
     } while(0);
     $53 = HEAP32[(7940)>>2]|0;
     $cmp437 = ($R328$3>>>0)<($53>>>0);
     if ($cmp437) {
      _abort();
      // unreachable;
     }
     $parent444 = ((($R328$3)) + 24|0);
     HEAP32[$parent444>>2] = $39;
     $child445 = ((($add$ptr)) + 16|0);
     $54 = HEAP32[$child445>>2]|0;
     $cmp447 = ($54|0)==(0|0);
     do {
      if (!($cmp447)) {
       $cmp451 = ($54>>>0)<($53>>>0);
       if ($cmp451) {
        _abort();
        // unreachable;
       } else {
        $arrayidx457 = ((($R328$3)) + 16|0);
        HEAP32[$arrayidx457>>2] = $54;
        $parent458 = ((($54)) + 24|0);
        HEAP32[$parent458>>2] = $R328$3;
        break;
       }
      }
     } while(0);
     $arrayidx463 = ((($child445)) + 4|0);
     $55 = HEAP32[$arrayidx463>>2]|0;
     $cmp464 = ($55|0)==(0|0);
     if (!($cmp464)) {
      $56 = HEAP32[(7940)>>2]|0;
      $cmp468 = ($55>>>0)<($56>>>0);
      if ($cmp468) {
       _abort();
       // unreachable;
      } else {
       $arrayidx474 = ((($R328$3)) + 20|0);
       HEAP32[$arrayidx474>>2] = $55;
       $parent475 = ((($55)) + 24|0);
       HEAP32[$parent475>>2] = $R328$3;
       break;
      }
     }
    }
   }
  } while(0);
  $or484 = $add258 | 1;
  $head485 = ((($p$addr$1)) + 4|0);
  HEAP32[$head485>>2] = $or484;
  $add$ptr486 = (($p$addr$1) + ($add258)|0);
  HEAP32[$add$ptr486>>2] = $add258;
  $57 = HEAP32[(7944)>>2]|0;
  $cmp489 = ($p$addr$1|0)==($57|0);
  if ($cmp489) {
   HEAP32[(7932)>>2] = $add258;
   return;
  } else {
   $psize$addr$2 = $add258;
  }
 } else {
  $and501 = $29 & -2;
  HEAP32[$head223>>2] = $and501;
  $or502 = $psize$addr$1 | 1;
  $head503 = ((($p$addr$1)) + 4|0);
  HEAP32[$head503>>2] = $or502;
  $add$ptr504 = (($p$addr$1) + ($psize$addr$1)|0);
  HEAP32[$add$ptr504>>2] = $psize$addr$1;
  $psize$addr$2 = $psize$addr$1;
 }
 $shr507 = $psize$addr$2 >>> 3;
 $cmp508 = ($psize$addr$2>>>0)<(256);
 if ($cmp508) {
  $shl515 = $shr507 << 1;
  $arrayidx516 = (7964 + ($shl515<<2)|0);
  $58 = HEAP32[1981]|0;
  $shl519 = 1 << $shr507;
  $and520 = $58 & $shl519;
  $tobool521 = ($and520|0)==(0);
  if ($tobool521) {
   $or525 = $58 | $shl519;
   HEAP32[1981] = $or525;
   $$pre = ((($arrayidx516)) + 8|0);
   $$pre$phiZ2D = $$pre;$F517$0 = $arrayidx516;
  } else {
   $59 = ((($arrayidx516)) + 8|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = HEAP32[(7940)>>2]|0;
   $cmp529 = ($60>>>0)<($61>>>0);
   if ($cmp529) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $59;$F517$0 = $60;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$addr$1;
  $bk539 = ((($F517$0)) + 12|0);
  HEAP32[$bk539>>2] = $p$addr$1;
  $fd540 = ((($p$addr$1)) + 8|0);
  HEAP32[$fd540>>2] = $F517$0;
  $bk541 = ((($p$addr$1)) + 12|0);
  HEAP32[$bk541>>2] = $arrayidx516;
  return;
 }
 $shr546 = $psize$addr$2 >>> 8;
 $cmp547 = ($shr546|0)==(0);
 if ($cmp547) {
  $I545$0 = 0;
 } else {
  $cmp551 = ($psize$addr$2>>>0)>(16777215);
  if ($cmp551) {
   $I545$0 = 31;
  } else {
   $sub = (($shr546) + 1048320)|0;
   $shr555 = $sub >>> 16;
   $and556 = $shr555 & 8;
   $shl557 = $shr546 << $and556;
   $sub558 = (($shl557) + 520192)|0;
   $shr559 = $sub558 >>> 16;
   $and560 = $shr559 & 4;
   $add561 = $and560 | $and556;
   $shl562 = $shl557 << $and560;
   $sub563 = (($shl562) + 245760)|0;
   $shr564 = $sub563 >>> 16;
   $and565 = $shr564 & 2;
   $add566 = $add561 | $and565;
   $sub567 = (14 - ($add566))|0;
   $shl568 = $shl562 << $and565;
   $shr569 = $shl568 >>> 15;
   $add570 = (($sub567) + ($shr569))|0;
   $shl571 = $add570 << 1;
   $add572 = (($add570) + 7)|0;
   $shr573 = $psize$addr$2 >>> $add572;
   $and574 = $shr573 & 1;
   $add575 = $and574 | $shl571;
   $I545$0 = $add575;
  }
 }
 $arrayidx579 = (8228 + ($I545$0<<2)|0);
 $index580 = ((($p$addr$1)) + 28|0);
 HEAP32[$index580>>2] = $I545$0;
 $child581 = ((($p$addr$1)) + 16|0);
 $arrayidx582 = ((($p$addr$1)) + 20|0);
 HEAP32[$arrayidx582>>2] = 0;
 HEAP32[$child581>>2] = 0;
 $62 = HEAP32[(7928)>>2]|0;
 $shl586 = 1 << $I545$0;
 $and587 = $62 & $shl586;
 $tobool588 = ($and587|0)==(0);
 if ($tobool588) {
  $or592 = $62 | $shl586;
  HEAP32[(7928)>>2] = $or592;
  HEAP32[$arrayidx579>>2] = $p$addr$1;
  $parent593 = ((($p$addr$1)) + 24|0);
  HEAP32[$parent593>>2] = $arrayidx579;
  $bk594 = ((($p$addr$1)) + 12|0);
  HEAP32[$bk594>>2] = $p$addr$1;
  $fd595 = ((($p$addr$1)) + 8|0);
  HEAP32[$fd595>>2] = $p$addr$1;
  return;
 }
 $63 = HEAP32[$arrayidx579>>2]|0;
 $cmp598 = ($I545$0|0)==(31);
 $shr600 = $I545$0 >>> 1;
 $sub603 = (25 - ($shr600))|0;
 $cond = $cmp598 ? 0 : $sub603;
 $shl604 = $psize$addr$2 << $cond;
 $K597$0 = $shl604;$T$0 = $63;
 while(1) {
  $head605 = ((($T$0)) + 4|0);
  $64 = HEAP32[$head605>>2]|0;
  $and606 = $64 & -8;
  $cmp607 = ($and606|0)==($psize$addr$2|0);
  if ($cmp607) {
   label = 121;
   break;
  }
  $shr611 = $K597$0 >>> 31;
  $arrayidx613 = (((($T$0)) + 16|0) + ($shr611<<2)|0);
  $shl614 = $K597$0 << 1;
  $65 = HEAP32[$arrayidx613>>2]|0;
  $cmp615 = ($65|0)==(0|0);
  if ($cmp615) {
   label = 118;
   break;
  } else {
   $K597$0 = $shl614;$T$0 = $65;
  }
 }
 if ((label|0) == 118) {
  $66 = HEAP32[(7940)>>2]|0;
  $cmp620 = ($arrayidx613>>>0)<($66>>>0);
  if ($cmp620) {
   _abort();
   // unreachable;
  }
  HEAP32[$arrayidx613>>2] = $p$addr$1;
  $parent625 = ((($p$addr$1)) + 24|0);
  HEAP32[$parent625>>2] = $T$0;
  $bk626 = ((($p$addr$1)) + 12|0);
  HEAP32[$bk626>>2] = $p$addr$1;
  $fd627 = ((($p$addr$1)) + 8|0);
  HEAP32[$fd627>>2] = $p$addr$1;
  return;
 }
 else if ((label|0) == 121) {
  $fd635 = ((($T$0)) + 8|0);
  $67 = HEAP32[$fd635>>2]|0;
  $68 = HEAP32[(7940)>>2]|0;
  $cmp641 = ($67>>>0)>=($68>>>0);
  $not$cmp637 = ($T$0>>>0)>=($68>>>0);
  $69 = $cmp641 & $not$cmp637;
  if (!($69)) {
   _abort();
   // unreachable;
  }
  $bk648 = ((($67)) + 12|0);
  HEAP32[$bk648>>2] = $p$addr$1;
  HEAP32[$fd635>>2] = $p$addr$1;
  $fd650 = ((($p$addr$1)) + 8|0);
  HEAP32[$fd650>>2] = $67;
  $bk651 = ((($p$addr$1)) + 12|0);
  HEAP32[$bk651>>2] = $T$0;
  $parent652 = ((($p$addr$1)) + 24|0);
  HEAP32[$parent652>>2] = 0;
  return;
 }
}
function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $exception = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $exception = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(37,($exception|0),(6741|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  ___cxa_free_exception(($exception|0));
  ___resumeException($2|0);
  // unreachable;
 } else {
  HEAP32[$exception>>2] = (1220);
  ___cxa_throw(($exception|0),(288|0),(22|0));
  // unreachable;
 }
}
function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $exception = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $exception = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(37,($exception|0),(6741|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  ___cxa_free_exception(($exception|0));
  ___resumeException($2|0);
  // unreachable;
 } else {
  HEAP32[$exception>>2] = (1240);
  ___cxa_throw(($exception|0),(304|0),(22|0));
  // unreachable;
 }
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $__cap_$i = 0, $__p$0 = 0, $__size_$i = 0, $__size_$i12 = 0, $add$i$i = 0, $and$i$i = 0, $arrayidx = 0, $call$i$i$i = 0, $cmp = 0, $cmp2 = 0, $conv$i = 0, $or$i = 0, $ref$tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $cmp = ($__sz>>>0)>(4294967279);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this);
  label = 5;
 } else {
  $cmp2 = ($__sz>>>0)<(11);
  if ($cmp2) {
   $conv$i = $__sz&255;
   $__size_$i = ((($this)) + 11|0);
   HEAP8[$__size_$i>>0] = $conv$i;
   $__p$0 = $this;
  } else {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $add$i$i = (($__sz) + 16)|0;
  $and$i$i = $add$i$i & -16;
  $call$i$i$i = (__Znwj($and$i$i)|0);
  HEAP32[$this>>2] = $call$i$i$i;
  $or$i = $and$i$i | -2147483648;
  $__cap_$i = ((($this)) + 8|0);
  HEAP32[$__cap_$i>>2] = $or$i;
  $__size_$i12 = ((($this)) + 4|0);
  HEAP32[$__size_$i12>>2] = $__sz;
  $__p$0 = $call$i$i$i;
 }
 (__ZNSt3__211char_traitsIcE4copyEPcPKcj($__p$0,$__s,$__sz)|0);
 $arrayidx = (($__p$0) + ($__sz)|0);
 HEAP8[$ref$tmp>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE4copyEPcPKcj($__s1,$__s2,$__n) {
 $__s1 = $__s1|0;
 $__s2 = $__s2|0;
 $__n = $__n|0;
 var $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($__n|0)==(0);
 if (!($cmp)) {
  _memcpy(($__s1|0),($__s2|0),($__n|0))|0;
 }
 return ($__s1|0);
}
function __ZNSt3__211char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__c2>>0]|0;
 HEAP8[$__c1>>0] = $0;
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $__size_$i = 0, $tobool$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i>>0]|0;
 $tobool$i = ($0<<24>>24)<(0);
 if ($tobool$i) {
  $1 = HEAP32[$this>>2]|0;
  __ZdlPv($1);
 }
 return;
}
function __ZNSt3__211char_traitsIcE4moveEPcPKcj($__s1,$__s2,$__n) {
 $__s1 = $__s1|0;
 $__s2 = $__s2|0;
 $__n = $__n|0;
 var $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($__n|0)==(0);
 if (!($cmp)) {
  _memmove(($__s1|0),($__s2|0),($__n|0))|0;
 }
 return ($__s1|0);
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__211char_traitsIcE7compareEPKcS3_j($__s1,$__s2,$__n) {
 $__s1 = $__s1|0;
 $__s2 = $__s2|0;
 $__n = $__n|0;
 var $call = 0, $cmp = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($__n|0)==(0);
 if ($cmp) {
  $cond = 0;
 } else {
  $call = (_memcmp($__s1,$__s2,$__n)|0);
  $cond = $call;
 }
 return ($cond|0);
}
function __Znwj($size) {
 $size = $size|0;
 var $$size = 0, $call = 0, $call2 = 0, $cmp = 0, $cmp1 = 0, $exception = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($size|0)==(0);
 $$size = $cmp ? 1 : $size;
 while(1) {
  $call = (_malloc($$size)|0);
  $cmp1 = ($call|0)==(0|0);
  if (!($cmp1)) {
   label = 6;
   break;
  }
  $call2 = (__ZSt15get_new_handlerv()|0);
  $tobool = ($call2|0)==(0|0);
  if ($tobool) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$call2 & 63]();
 }
 if ((label|0) == 5) {
  $exception = (___cxa_allocate_exception(4)|0);
  __ZNSt9bad_allocC2Ev($exception);
  ___cxa_throw(($exception|0),(256|0),(19|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($call|0);
 }
 return (0)|0;
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZNSt3__218__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $add2 = 0, $add6 = 0, $call = 0, $call3 = 0, $call5 = 0, $cap = 0, $count = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_strlen($msg)|0);
 $add2 = (($call) + 13)|0;
 $call3 = (__Znwj($add2)|0);
 HEAP32[$call3>>2] = $call;
 $cap = ((($call3)) + 4|0);
 HEAP32[$cap>>2] = $call;
 $count = ((($call3)) + 8|0);
 HEAP32[$count>>2] = 0;
 $call5 = (__ZNSt3__218__libcpp_refstring13data_from_repEPNS0_9_Rep_baseE($call3)|0);
 $add6 = (($call) + 1)|0;
 _memcpy(($call5|0),($msg|0),($add6|0))|0;
 HEAP32[$this>>2] = $call5;
 return;
}
function __ZNSt3__218__libcpp_refstring13data_from_repEPNS0_9_Rep_baseE($rep) {
 $rep = $rep|0;
 var $add$ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $add$ptr2 = ((($rep)) + 12|0);
 return ($add$ptr2|0);
}
function __ZNSt11logic_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__imp_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1200);
 $__imp_ = ((($this)) + 4|0);
 __THREW__ = 0;
 invoke_vii(38,($__imp_|0),($msg|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  ___resumeException($2|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__type_name$i = 0, $add$ptr = 0, $call = 0, $call10 = 0, $call14 = 0, $cond = 0, $exception_class = 0, $primaryException = 0, $thrown_object = 0, $tobool = 0, $tobool1 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0;
 var $vfn = 0, $vfn13 = 0, $vtable = 0, $vtable12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $call = (___cxa_get_globals_fast()|0);
 $tobool = ($call|0)==(0|0);
 if (!($tobool)) {
  $0 = HEAP32[$call>>2]|0;
  $tobool1 = ($0|0)==(0|0);
  if (!($tobool1)) {
   $add$ptr = ((($0)) + 80|0);
   $exception_class = ((($0)) + 48|0);
   $1 = $exception_class;
   $2 = $1;
   $3 = HEAP32[$2>>2]|0;
   $4 = (($1) + 4)|0;
   $5 = $4;
   $6 = HEAP32[$5>>2]|0;
   $7 = $3 & -256;
   $8 = ($7|0)==(1126902528);
   $9 = ($6|0)==(1129074247);
   $10 = $8 & $9;
   if (!($10)) {
    $21 = HEAP32[272]|0;
    HEAP32[$vararg_buffer7>>2] = $21;
    _abort_message(5172,$vararg_buffer7);
    // unreachable;
   }
   $11 = ($3|0)==(1126902529);
   $12 = ($6|0)==(1129074247);
   $13 = $11 & $12;
   if ($13) {
    $primaryException = ((($0)) + 44|0);
    $14 = HEAP32[$primaryException>>2]|0;
    $cond = $14;
   } else {
    $cond = $add$ptr;
   }
   HEAP32[$thrown_object>>2] = $cond;
   $15 = HEAP32[$0>>2]|0;
   $__type_name$i = ((($15)) + 4|0);
   $16 = HEAP32[$__type_name$i>>2]|0;
   $vtable = HEAP32[48]|0;
   $vfn = ((($vtable)) + 16|0);
   $17 = HEAP32[$vfn>>2]|0;
   $call10 = (FUNCTION_TABLE_iiii[$17 & 127](192,$15,$thrown_object)|0);
   $18 = HEAP32[272]|0;
   if ($call10) {
    $19 = HEAP32[$thrown_object>>2]|0;
    $vtable12 = HEAP32[$19>>2]|0;
    $vfn13 = ((($vtable12)) + 8|0);
    $20 = HEAP32[$vfn13>>2]|0;
    $call14 = (FUNCTION_TABLE_ii[$20 & 63]($19)|0);
    HEAP32[$vararg_buffer>>2] = $18;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $16;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $call14;
    _abort_message(5086,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = $18;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $16;
    _abort_message(5131,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(5210,$vararg_buffer10);
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $call = 0, $call1 = 0, $cmp = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $call = (_pthread_once((8420|0),(39|0))|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  $0 = HEAP32[2106]|0;
  $call1 = (_pthread_getspecific(($0|0))|0);
  STACKTOP = sp;return ($call1|0);
 } else {
  _abort_message(5361,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[115]|0;
 (_vfprintf($0,$format,$list)|0);
 (_fputc(10,$0)|0);
 _abort();
 // unreachable;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $call = 0, $cmp = 0, $cmp4 = 0, $dst_ptr_leading_to_static_ptr = 0, $info = 0, $number_of_dst_type = 0, $path_dst_ptr_to_static_ptr = 0, $retval$0 = 0, $retval$2 = 0, $src2dst_offset = 0, $static_type = 0, $vfn = 0, $vtable = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $info = sp;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$thrown_type,0)|0);
 if ($call) {
  $retval$2 = 1;
 } else {
  $0 = ($thrown_type|0)==(0|0);
  if ($0) {
   $retval$2 = 0;
  } else {
   $1 = (___dynamic_cast($thrown_type,216,200,0)|0);
   $cmp = ($1|0)==(0|0);
   if ($cmp) {
    $retval$2 = 0;
   } else {
    $2 = ((($info)) + 4|0);
    dest=$2; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $1;
    $static_type = ((($info)) + 8|0);
    HEAP32[$static_type>>2] = $this;
    $src2dst_offset = ((($info)) + 12|0);
    HEAP32[$src2dst_offset>>2] = -1;
    $number_of_dst_type = ((($info)) + 48|0);
    HEAP32[$number_of_dst_type>>2] = 1;
    $vtable = HEAP32[$1>>2]|0;
    $vfn = ((($vtable)) + 28|0);
    $3 = HEAP32[$vfn>>2]|0;
    $4 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$3 & 127]($1,$info,$4,1);
    $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
    $5 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
    $cmp4 = ($5|0)==(1);
    if ($cmp4) {
     $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
     $6 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
     HEAP32[$adjustedPtr>>2] = $6;
     $retval$0 = 1;
    } else {
     $retval$0 = 0;
    }
    $retval$2 = $retval$0;
   }
  }
 }
 STACKTOP = sp;return ($retval$2|0);
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $call = 0, $static_type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $add = 0, $call = 0, $call3 = 0, $cmp = 0, $cmp12 = 0, $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0;
 var $path_dst_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_dst_ptr = 0, $search_done = 0, $static_type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$info,$current_ptr,$path_below);
  } else {
   $1 = HEAP32[$info>>2]|0;
   $call3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$1,$use_strcmp)|0);
   if ($call3) {
    $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
    $2 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
    $cmp = ($2|0)==($current_ptr|0);
    $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
    if (!($cmp)) {
     $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
     $3 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
     $cmp5 = ($3|0)==($current_ptr|0);
     if (!($cmp5)) {
      HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = $path_below;
      HEAP32[$dst_ptr_not_leading_to_static_ptr>>2] = $current_ptr;
      $number_to_dst_ptr = ((($info)) + 40|0);
      $4 = HEAP32[$number_to_dst_ptr>>2]|0;
      $add = (($4) + 1)|0;
      HEAP32[$number_to_dst_ptr>>2] = $add;
      $number_to_static_ptr = ((($info)) + 36|0);
      $5 = HEAP32[$number_to_static_ptr>>2]|0;
      $cmp12 = ($5|0)==(1);
      if ($cmp12) {
       $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
       $6 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
       $cmp13 = ($6|0)==(2);
       if ($cmp13) {
        $search_done = ((($info)) + 54|0);
        HEAP8[$search_done>>0] = 1;
       }
      }
      $is_dst_type_derived_from_static_type = ((($info)) + 44|0);
      HEAP32[$is_dst_type_derived_from_static_type>>2] = 4;
      break;
     }
    }
    $cmp7 = ($path_below|0)==(1);
    if ($cmp7) {
     HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $call = 0, $static_type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,0)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($x,$y,$0) {
 $x = $x|0;
 $y = $y|0;
 $0 = $0|0;
 var $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($x|0)==($y|0);
 return ($cmp|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $add = 0, $cmp = 0, $cmp4 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $number_to_static_ptr = 0, $path_dst_ptr_to_static_ptr = 0, $search_done = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
 $0 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
 $cmp = ($0|0)==(0|0);
 $number_to_static_ptr = ((($info)) + 36|0);
 $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
 do {
  if ($cmp) {
   HEAP32[$dst_ptr_leading_to_static_ptr>>2] = $adjustedPtr;
   HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
   HEAP32[$number_to_static_ptr>>2] = 1;
  } else {
   $cmp4 = ($0|0)==($adjustedPtr|0);
   if (!($cmp4)) {
    $2 = HEAP32[$number_to_static_ptr>>2]|0;
    $add = (($2) + 1)|0;
    HEAP32[$number_to_static_ptr>>2] = $add;
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = 2;
    $search_done = ((($info)) + 54|0);
    HEAP8[$search_done>>0] = 1;
    break;
   }
   $1 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp7 = ($1|0)==(2);
   if ($cmp7) {
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($this,$info,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $cmp = 0, $cmp2 = 0, $path_dynamic_ptr_to_static_ptr = 0, $static_ptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_ptr = ((($info)) + 4|0);
 $0 = HEAP32[$static_ptr>>2]|0;
 $cmp = ($0|0)==($current_ptr|0);
 if ($cmp) {
  $path_dynamic_ptr_to_static_ptr = ((($info)) + 28|0);
  $1 = HEAP32[$path_dynamic_ptr_to_static_ptr>>2]|0;
  $cmp2 = ($1|0)==(1);
  if (!($cmp2)) {
   HEAP32[$path_dynamic_ptr_to_static_ptr>>2] = $path_below;
  }
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $add = 0, $cmp = 0, $cmp10 = 0, $cmp13 = 0, $cmp18 = 0, $cmp2 = 0, $cmp21 = 0, $cmp5 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $found_any_static_type = 0, $found_our_static_ptr = 0, $number_of_dst_type = 0;
 var $number_to_static_ptr = 0, $or$cond = 0, $or$cond19 = 0, $path_dst_ptr_to_static_ptr = 0, $search_done = 0, $static_ptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $found_any_static_type = ((($info)) + 53|0);
 HEAP8[$found_any_static_type>>0] = 1;
 $static_ptr = ((($info)) + 4|0);
 $0 = HEAP32[$static_ptr>>2]|0;
 $cmp = ($0|0)==($current_ptr|0);
 do {
  if ($cmp) {
   $found_our_static_ptr = ((($info)) + 52|0);
   HEAP8[$found_our_static_ptr>>0] = 1;
   $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
   $1 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $cmp2 = ($1|0)==(0|0);
   $search_done = ((($info)) + 54|0);
   $number_of_dst_type = ((($info)) + 48|0);
   $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
   $number_to_static_ptr = ((($info)) + 36|0);
   if ($cmp2) {
    HEAP32[$dst_ptr_leading_to_static_ptr>>2] = $dst_ptr;
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
    HEAP32[$number_to_static_ptr>>2] = 1;
    $2 = HEAP32[$number_of_dst_type>>2]|0;
    $cmp5 = ($2|0)==(1);
    $cmp7 = ($path_below|0)==(1);
    $or$cond = $cmp5 & $cmp7;
    if (!($or$cond)) {
     break;
    }
    HEAP8[$search_done>>0] = 1;
    break;
   }
   $cmp10 = ($1|0)==($dst_ptr|0);
   if (!($cmp10)) {
    $6 = HEAP32[$number_to_static_ptr>>2]|0;
    $add = (($6) + 1)|0;
    HEAP32[$number_to_static_ptr>>2] = $add;
    HEAP8[$search_done>>0] = 1;
    break;
   }
   $3 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp13 = ($3|0)==(2);
   if ($cmp13) {
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
    $5 = $path_below;
   } else {
    $5 = $3;
   }
   $4 = HEAP32[$number_of_dst_type>>2]|0;
   $cmp18 = ($4|0)==(1);
   $cmp21 = ($5|0)==(1);
   $or$cond19 = $cmp18 & $cmp21;
   if ($or$cond19) {
    HEAP8[$search_done>>0] = 1;
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add$ptr = 0, $add$ptr$ = 0, $arrayidx = 0;
 var $arrayidx1 = 0, $call = 0, $cmp = 0, $cmp14 = 0, $cmp16 = 0, $cmp19 = 0, $cmp25 = 0, $cmp27 = 0, $cmp30 = 0, $cmp33 = 0, $dst_ptr$0 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $info = 0, $number_of_dst_type = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0, $or$cond = 0, $or$cond15 = 0, $or$cond16 = 0;
 var $or$cond17 = 0, $path_dst_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_dst_ptr = 0, $path_dynamic_ptr_to_static_ptr = 0, $src2dst_offset5 = 0, $static_ptr3 = 0, $static_type4 = 0, $vfn = 0, $vfn11 = 0, $vtable10 = 0, $vtable7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $arrayidx = ((($0)) + -8|0);
 $1 = HEAP32[$arrayidx>>2]|0;
 $add$ptr = (($static_ptr) + ($1)|0);
 $arrayidx1 = ((($0)) + -4|0);
 $2 = HEAP32[$arrayidx1>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $static_ptr3 = ((($info)) + 4|0);
 HEAP32[$static_ptr3>>2] = $static_ptr;
 $static_type4 = ((($info)) + 8|0);
 HEAP32[$static_type4>>2] = $static_type;
 $src2dst_offset5 = ((($info)) + 12|0);
 HEAP32[$src2dst_offset5>>2] = $src2dst_offset;
 $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
 $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
 $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
 $path_dynamic_ptr_to_static_ptr = ((($info)) + 28|0);
 $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
 $number_to_dst_ptr = ((($info)) + 40|0);
 dest=$dst_ptr_leading_to_static_ptr; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$dst_ptr_leading_to_static_ptr+36>>1]=0|0;HEAP8[$dst_ptr_leading_to_static_ptr+38>>0]=0|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($2,$dst_type,0)|0);
 L1: do {
  if ($call) {
   $number_of_dst_type = ((($info)) + 48|0);
   HEAP32[$number_of_dst_type>>2] = 1;
   $vtable7 = HEAP32[$2>>2]|0;
   $vfn = ((($vtable7)) + 20|0);
   $3 = HEAP32[$vfn>>2]|0;
   FUNCTION_TABLE_viiiiii[$3 & 31]($2,$info,$add$ptr,$add$ptr,1,0);
   $4 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp = ($4|0)==(1);
   $add$ptr$ = $cmp ? $add$ptr : 0;
   $dst_ptr$0 = $add$ptr$;
  } else {
   $number_to_static_ptr = ((($info)) + 36|0);
   $vtable10 = HEAP32[$2>>2]|0;
   $vfn11 = ((($vtable10)) + 24|0);
   $5 = HEAP32[$vfn11>>2]|0;
   FUNCTION_TABLE_viiiii[$5 & 31]($2,$info,$add$ptr,1,0);
   $6 = HEAP32[$number_to_static_ptr>>2]|0;
   switch ($6|0) {
   case 0:  {
    $7 = HEAP32[$number_to_dst_ptr>>2]|0;
    $cmp14 = ($7|0)==(1);
    $8 = HEAP32[$path_dynamic_ptr_to_static_ptr>>2]|0;
    $cmp16 = ($8|0)==(1);
    $or$cond = $cmp14 & $cmp16;
    $9 = HEAP32[$path_dynamic_ptr_to_dst_ptr>>2]|0;
    $cmp19 = ($9|0)==(1);
    $or$cond15 = $or$cond & $cmp19;
    $10 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
    $$ = $or$cond15 ? $10 : 0;
    $dst_ptr$0 = $$;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $dst_ptr$0 = 0;
    break L1;
   }
   }
   $11 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp25 = ($11|0)==(1);
   if (!($cmp25)) {
    $12 = HEAP32[$number_to_dst_ptr>>2]|0;
    $cmp27 = ($12|0)==(0);
    $13 = HEAP32[$path_dynamic_ptr_to_static_ptr>>2]|0;
    $cmp30 = ($13|0)==(1);
    $or$cond16 = $cmp27 & $cmp30;
    $14 = HEAP32[$path_dynamic_ptr_to_dst_ptr>>2]|0;
    $cmp33 = ($14|0)==(1);
    $or$cond17 = $or$cond16 & $cmp33;
    if (!($or$cond17)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $15 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $dst_ptr$0 = $15;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $__base_type = 0, $call = 0, $static_type = 0, $vfn = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $__base_type = ((($this)) + 8|0);
  $1 = HEAP32[$__base_type>>2]|0;
  $vtable = HEAP32[$1>>2]|0;
  $vfn = ((($vtable)) + 20|0);
  $2 = HEAP32[$vfn>>2]|0;
  FUNCTION_TABLE_viiiiii[$2 & 31]($1,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__base_type = 0, $add = 0, $call = 0, $call3 = 0, $cmp = 0, $cmp11 = 0;
 var $cmp26 = 0, $cmp27 = 0, $cmp5 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $found_any_static_type = 0, $found_our_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $is_dst_type_derived_from_static_type13$0$off032 = 0, $is_dst_type_derived_from_static_type13$0$off033 = 0, $not$tobool19 = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0, $path_dst_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_dst_ptr = 0, $search_done = 0, $static_type = 0, $tobool16 = 0, $vfn = 0;
 var $vfn42 = 0, $vtable = 0, $vtable41 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$info,$current_ptr,$path_below);
  } else {
   $1 = HEAP32[$info>>2]|0;
   $call3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$1,$use_strcmp)|0);
   $__base_type = ((($this)) + 8|0);
   if (!($call3)) {
    $12 = HEAP32[$__base_type>>2]|0;
    $vtable41 = HEAP32[$12>>2]|0;
    $vfn42 = ((($vtable41)) + 24|0);
    $13 = HEAP32[$vfn42>>2]|0;
    FUNCTION_TABLE_viiiii[$13 & 31]($12,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
   $2 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $cmp = ($2|0)==($current_ptr|0);
   $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
   if (!($cmp)) {
    $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
    $3 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
    $cmp5 = ($3|0)==($current_ptr|0);
    if (!($cmp5)) {
     HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = $path_below;
     $is_dst_type_derived_from_static_type = ((($info)) + 44|0);
     $4 = HEAP32[$is_dst_type_derived_from_static_type>>2]|0;
     $cmp11 = ($4|0)==(4);
     if ($cmp11) {
      break;
     }
     $found_our_static_ptr = ((($info)) + 52|0);
     HEAP8[$found_our_static_ptr>>0] = 0;
     $found_any_static_type = ((($info)) + 53|0);
     HEAP8[$found_any_static_type>>0] = 0;
     $5 = HEAP32[$__base_type>>2]|0;
     $vtable = HEAP32[$5>>2]|0;
     $vfn = ((($vtable)) + 20|0);
     $6 = HEAP32[$vfn>>2]|0;
     FUNCTION_TABLE_viiiiii[$6 & 31]($5,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $7 = HEAP8[$found_any_static_type>>0]|0;
     $tobool16 = ($7<<24>>24)==(0);
     if ($tobool16) {
      $is_dst_type_derived_from_static_type13$0$off032 = 4;
      label = 11;
     } else {
      $8 = HEAP8[$found_our_static_ptr>>0]|0;
      $not$tobool19 = ($8<<24>>24)==(0);
      if ($not$tobool19) {
       $is_dst_type_derived_from_static_type13$0$off032 = 3;
       label = 11;
      } else {
       $is_dst_type_derived_from_static_type13$0$off033 = 3;
      }
     }
     if ((label|0) == 11) {
      HEAP32[$dst_ptr_not_leading_to_static_ptr>>2] = $current_ptr;
      $number_to_dst_ptr = ((($info)) + 40|0);
      $9 = HEAP32[$number_to_dst_ptr>>2]|0;
      $add = (($9) + 1)|0;
      HEAP32[$number_to_dst_ptr>>2] = $add;
      $number_to_static_ptr = ((($info)) + 36|0);
      $10 = HEAP32[$number_to_static_ptr>>2]|0;
      $cmp26 = ($10|0)==(1);
      if ($cmp26) {
       $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
       $11 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
       $cmp27 = ($11|0)==(2);
       if ($cmp27) {
        $search_done = ((($info)) + 54|0);
        HEAP8[$search_done>>0] = 1;
        $is_dst_type_derived_from_static_type13$0$off033 = $is_dst_type_derived_from_static_type13$0$off032;
       } else {
        $is_dst_type_derived_from_static_type13$0$off033 = $is_dst_type_derived_from_static_type13$0$off032;
       }
      } else {
       $is_dst_type_derived_from_static_type13$0$off033 = $is_dst_type_derived_from_static_type13$0$off032;
      }
     }
     HEAP32[$is_dst_type_derived_from_static_type>>2] = $is_dst_type_derived_from_static_type13$0$off033;
     break;
    }
   }
   $cmp7 = ($path_below|0)==(1);
   if ($cmp7) {
    HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $__base_type = 0, $call = 0, $static_type = 0, $vfn = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,0)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $__base_type = ((($this)) + 8|0);
  $1 = HEAP32[$__base_type>>2]|0;
  $vtable = HEAP32[$1>>2]|0;
  $vfn = ((($vtable)) + 28|0);
  $2 = HEAP32[$vfn>>2]|0;
  FUNCTION_TABLE_viiii[$2 & 127]($1,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $call = 0, $cmp = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $call = (_pthread_key_create((8424|0),(40|0))|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  STACKTOP = sp;return;
 } else {
  _abort_message(5410,$vararg_buffer);
  // unreachable;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $call = 0, $cmp = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2106]|0;
 $call = (_pthread_setspecific(($0|0),(0|0))|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  STACKTOP = sp;return;
 } else {
  _abort_message(5460,$vararg_buffer);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $call = 0, $call8 = 0, $exception_class = 0, $terminateHandler = 0;
 var $tobool = 0, $tobool1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $call = (invoke_i(41)|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $tobool = ($call|0)==(0|0);
 if (!($tobool)) {
  $2 = HEAP32[$call>>2]|0;
  $tobool1 = ($2|0)==(0|0);
  if (!($tobool1)) {
   $exception_class = ((($2)) + 48|0);
   $3 = $exception_class;
   $4 = $3;
   $5 = HEAP32[$4>>2]|0;
   $6 = (($3) + 4)|0;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = $5 & -256;
   $10 = ($9|0)==(1126902528);
   $11 = ($8|0)==(1129074247);
   $12 = $10 & $11;
   if ($12) {
    $terminateHandler = ((($2)) + 12|0);
    $13 = HEAP32[$terminateHandler>>2]|0;
    __ZSt11__terminatePFvvE($13);
    // unreachable;
   }
  }
 }
 $call8 = (__ZSt13get_terminatev()|0);
 __ZSt11__terminatePFvvE($call8);
 // unreachable;
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($func|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  invoke_vii(42,(5513|0),($vararg_buffer|0));
  $2 = __THREW__; __THREW__ = 0;
 }
 $3 = ___cxa_find_matching_catch_3(0|0)|0;
 $4 = tempRet0;
 (___cxa_begin_catch(($3|0))|0);
 __THREW__ = 0;
 invoke_vii(42,(5553|0),($vararg_buffer1|0));
 $5 = __THREW__; __THREW__ = 0;
 $6 = ___cxa_find_matching_catch_3(0|0)|0;
 $7 = tempRet0;
 __THREW__ = 0;
 invoke_v(43);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch_3(0|0)|0;
  $11 = tempRet0;
  ___clang_call_terminate($10);
  // unreachable;
 } else {
  ___clang_call_terminate($6);
  // unreachable;
 }
}
function __ZSt13get_terminatev() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[271]|0;HEAP32[271] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt9bad_allocD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5603|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $__imp_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1200);
 $__imp_ = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($__imp_);
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $__imp_ = 0, $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__imp_ = ((($this)) + 4|0);
 $call = (__ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv($__imp_)|0);
 return ($call|0);
}
function __ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 return ($0|0);
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $add$ptr = 0, $call = 0, $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv($this)|0);
 $0 = HEAP32[$call>>2]|0;HEAP32[$call>>2] = (($0+-1)|0);
 $1 = (($0) + -1)|0;
 $cmp = ($1|0)<(0);
 if ($cmp) {
  $2 = HEAP32[$this>>2]|0;
  $add$ptr = ((($2)) + -12|0);
  __ZdlPv($add$ptr);
 }
 return;
}
function __ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv($this) {
 $this = $this|0;
 var $0 = 0, $count = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $count = ((($0)) + -4|0);
 return ($count|0);
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$0) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $0 = $0|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$thrown_type,0)|0);
 return ($call|0);
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__base_count = 0, $__flags = 0, $add$ptr = 0, $and = 0, $and30 = 0, $arraydecay = 0, $call = 0, $cmp = 0, $cmp19 = 0, $cmp40 = 0;
 var $found_any_static_type5 = 0, $found_our_static_ptr2 = 0, $incdec$ptr = 0, $incdec$ptr39 = 0, $p$0 = 0, $path_dst_ptr_to_static_ptr = 0, $search_done = 0, $static_type = 0, $tobool14 = 0, $tobool17 = 0, $tobool22 = 0, $tobool27 = 0, $tobool31 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $found_our_static_ptr2 = ((($info)) + 52|0);
  $1 = HEAP8[$found_our_static_ptr2>>0]|0;
  $found_any_static_type5 = ((($info)) + 53|0);
  $2 = HEAP8[$found_any_static_type5>>0]|0;
  $arraydecay = ((($this)) + 16|0);
  $__base_count = ((($this)) + 12|0);
  $3 = HEAP32[$__base_count>>2]|0;
  $add$ptr = (((($this)) + 16|0) + ($3<<3)|0);
  HEAP8[$found_our_static_ptr2>>0] = 0;
  HEAP8[$found_any_static_type5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($arraydecay,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $cmp = ($3|0)>(1);
  L4: do {
   if ($cmp) {
    $incdec$ptr = ((($this)) + 24|0);
    $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
    $search_done = ((($info)) + 54|0);
    $__flags = ((($this)) + 8|0);
    $p$0 = $incdec$ptr;
    while(1) {
     $4 = HEAP8[$search_done>>0]|0;
     $tobool14 = ($4<<24>>24)==(0);
     if (!($tobool14)) {
      break L4;
     }
     $5 = HEAP8[$found_our_static_ptr2>>0]|0;
     $tobool17 = ($5<<24>>24)==(0);
     if ($tobool17) {
      $8 = HEAP8[$found_any_static_type5>>0]|0;
      $tobool27 = ($8<<24>>24)==(0);
      if (!($tobool27)) {
       $9 = HEAP32[$__flags>>2]|0;
       $and30 = $9 & 1;
       $tobool31 = ($and30|0)==(0);
       if ($tobool31) {
        break L4;
       }
      }
     } else {
      $6 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
      $cmp19 = ($6|0)==(1);
      if ($cmp19) {
       break L4;
      }
      $7 = HEAP32[$__flags>>2]|0;
      $and = $7 & 2;
      $tobool22 = ($and|0)==(0);
      if ($tobool22) {
       break L4;
      }
     }
     HEAP8[$found_our_static_ptr2>>0] = 0;
     HEAP8[$found_any_static_type5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $incdec$ptr39 = ((($p$0)) + 8|0);
     $cmp40 = ($incdec$ptr39>>>0)<($add$ptr>>>0);
     if ($cmp40) {
      $p$0 = $incdec$ptr39;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$found_our_static_ptr2>>0] = $1;
  HEAP8[$found_any_static_type5>>0] = $2;
 }
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__base_count = 0, $__flags = 0, $add = 0, $add$ptr = 0, $add$ptr64 = 0, $and = 0, $and35 = 0, $and73 = 0, $and88 = 0, $arraydecay = 0, $call = 0, $call3 = 0, $cmp = 0, $cmp100 = 0, $cmp106 = 0;
 var $cmp11 = 0, $cmp115 = 0, $cmp121 = 0, $cmp16 = 0, $cmp27 = 0, $cmp44 = 0, $cmp46 = 0, $cmp5 = 0, $cmp7 = 0, $cmp70 = 0, $cmp77 = 0, $cmp85 = 0, $cmp97 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $found_any_static_type = 0, $found_our_static_ptr = 0, $incdec$ptr = 0;
 var $incdec$ptr105 = 0, $incdec$ptr120 = 0, $incdec$ptr69 = 0, $incdec$ptr84 = 0, $is_dst_type_derived_from_static_type = 0, $is_dst_type_derived_from_static_type13$0$off0 = 0, $is_dst_type_derived_from_static_type13$1$off0 = 0, $is_dst_type_derived_from_static_type13$2$off0 = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0, $p$0 = 0, $p65$0 = 0, $p65$1 = 0, $p65$2 = 0, $path_dst_ptr_to_static_ptr45 = 0, $path_dynamic_ptr_to_dst_ptr = 0, $search_done48 = 0, $static_type = 0, $tobool111 = 0, $tobool18 = 0;
 var $tobool22 = 0, $tobool25 = 0, $tobool30 = 0, $tobool36 = 0, $tobool74 = 0, $tobool80 = 0, $tobool89 = 0, $tobool93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 L1: do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$info,$current_ptr,$path_below);
  } else {
   $1 = HEAP32[$info>>2]|0;
   $call3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$1,$use_strcmp)|0);
   $__base_count = ((($this)) + 12|0);
   $path_dst_ptr_to_static_ptr45 = ((($info)) + 24|0);
   $number_to_static_ptr = ((($info)) + 36|0);
   $search_done48 = ((($info)) + 54|0);
   $__flags = ((($this)) + 8|0);
   $arraydecay = ((($this)) + 16|0);
   if (!($call3)) {
    $16 = HEAP32[$__base_count>>2]|0;
    $add$ptr64 = (((($this)) + 16|0) + ($16<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($arraydecay,$info,$current_ptr,$path_below,$use_strcmp);
    $incdec$ptr69 = ((($this)) + 24|0);
    $cmp70 = ($16|0)>(1);
    if (!($cmp70)) {
     break;
    }
    $17 = HEAP32[$__flags>>2]|0;
    $and73 = $17 & 2;
    $tobool74 = ($and73|0)==(0);
    if ($tobool74) {
     $18 = HEAP32[$number_to_static_ptr>>2]|0;
     $cmp77 = ($18|0)==(1);
     if ($cmp77) {
      $p65$0 = $incdec$ptr69;
     } else {
      $and88 = $17 & 1;
      $tobool89 = ($and88|0)==(0);
      if ($tobool89) {
       $p65$2 = $incdec$ptr69;
       while(1) {
        $23 = HEAP8[$search_done48>>0]|0;
        $tobool111 = ($23<<24>>24)==(0);
        if (!($tobool111)) {
         break L1;
        }
        $24 = HEAP32[$number_to_static_ptr>>2]|0;
        $cmp115 = ($24|0)==(1);
        if ($cmp115) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p65$2,$info,$current_ptr,$path_below,$use_strcmp);
        $incdec$ptr120 = ((($p65$2)) + 8|0);
        $cmp121 = ($incdec$ptr120>>>0)<($add$ptr64>>>0);
        if ($cmp121) {
         $p65$2 = $incdec$ptr120;
        } else {
         break L1;
        }
       }
      } else {
       $p65$1 = $incdec$ptr69;
      }
      while(1) {
       $20 = HEAP8[$search_done48>>0]|0;
       $tobool93 = ($20<<24>>24)==(0);
       if (!($tobool93)) {
        break L1;
       }
       $21 = HEAP32[$number_to_static_ptr>>2]|0;
       $cmp97 = ($21|0)==(1);
       if ($cmp97) {
        $22 = HEAP32[$path_dst_ptr_to_static_ptr45>>2]|0;
        $cmp100 = ($22|0)==(1);
        if ($cmp100) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p65$1,$info,$current_ptr,$path_below,$use_strcmp);
       $incdec$ptr105 = ((($p65$1)) + 8|0);
       $cmp106 = ($incdec$ptr105>>>0)<($add$ptr64>>>0);
       if ($cmp106) {
        $p65$1 = $incdec$ptr105;
       } else {
        break L1;
       }
      }
     }
    } else {
     $p65$0 = $incdec$ptr69;
    }
    while(1) {
     $19 = HEAP8[$search_done48>>0]|0;
     $tobool80 = ($19<<24>>24)==(0);
     if (!($tobool80)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p65$0,$info,$current_ptr,$path_below,$use_strcmp);
     $incdec$ptr84 = ((($p65$0)) + 8|0);
     $cmp85 = ($incdec$ptr84>>>0)<($add$ptr64>>>0);
     if ($cmp85) {
      $p65$0 = $incdec$ptr84;
     } else {
      break L1;
     }
    }
   }
   $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
   $2 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $cmp = ($2|0)==($current_ptr|0);
   $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
   if (!($cmp)) {
    $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
    $3 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
    $cmp5 = ($3|0)==($current_ptr|0);
    if (!($cmp5)) {
     HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = $path_below;
     $is_dst_type_derived_from_static_type = ((($info)) + 44|0);
     $4 = HEAP32[$is_dst_type_derived_from_static_type>>2]|0;
     $cmp11 = ($4|0)==(4);
     if ($cmp11) {
      break;
     }
     $5 = HEAP32[$__base_count>>2]|0;
     $add$ptr = (((($this)) + 16|0) + ($5<<3)|0);
     $found_our_static_ptr = ((($info)) + 52|0);
     $found_any_static_type = ((($info)) + 53|0);
     $does_dst_type_point_to_our_static_type$0$off0 = 0;$is_dst_type_derived_from_static_type13$0$off0 = 0;$p$0 = $arraydecay;
     L29: while(1) {
      $cmp16 = ($p$0>>>0)<($add$ptr>>>0);
      if (!($cmp16)) {
       $is_dst_type_derived_from_static_type13$2$off0 = $is_dst_type_derived_from_static_type13$0$off0;
       label = 18;
       break;
      }
      HEAP8[$found_our_static_ptr>>0] = 0;
      HEAP8[$found_any_static_type>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$current_ptr,$current_ptr,1,$use_strcmp);
      $6 = HEAP8[$search_done48>>0]|0;
      $tobool18 = ($6<<24>>24)==(0);
      if (!($tobool18)) {
       $is_dst_type_derived_from_static_type13$2$off0 = $is_dst_type_derived_from_static_type13$0$off0;
       label = 18;
       break;
      }
      $7 = HEAP8[$found_any_static_type>>0]|0;
      $tobool22 = ($7<<24>>24)==(0);
      do {
       if ($tobool22) {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type13$1$off0 = $is_dst_type_derived_from_static_type13$0$off0;
       } else {
        $8 = HEAP8[$found_our_static_ptr>>0]|0;
        $tobool25 = ($8<<24>>24)==(0);
        if ($tobool25) {
         $11 = HEAP32[$__flags>>2]|0;
         $and35 = $11 & 1;
         $tobool36 = ($and35|0)==(0);
         if ($tobool36) {
          $is_dst_type_derived_from_static_type13$2$off0 = 1;
          label = 18;
          break L29;
         } else {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type13$1$off0 = 1;
          break;
         }
        }
        $9 = HEAP32[$path_dst_ptr_to_static_ptr45>>2]|0;
        $cmp27 = ($9|0)==(1);
        if ($cmp27) {
         label = 23;
         break L29;
        }
        $10 = HEAP32[$__flags>>2]|0;
        $and = $10 & 2;
        $tobool30 = ($and|0)==(0);
        if ($tobool30) {
         label = 23;
         break L29;
        } else {
         $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type13$1$off0 = 1;
        }
       }
      } while(0);
      $incdec$ptr = ((($p$0)) + 8|0);
      $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type13$0$off0 = $is_dst_type_derived_from_static_type13$1$off0;$p$0 = $incdec$ptr;
     }
     do {
      if ((label|0) == 18) {
       if (!($does_dst_type_point_to_our_static_type$0$off0)) {
        HEAP32[$dst_ptr_not_leading_to_static_ptr>>2] = $current_ptr;
        $number_to_dst_ptr = ((($info)) + 40|0);
        $12 = HEAP32[$number_to_dst_ptr>>2]|0;
        $add = (($12) + 1)|0;
        HEAP32[$number_to_dst_ptr>>2] = $add;
        $13 = HEAP32[$number_to_static_ptr>>2]|0;
        $cmp44 = ($13|0)==(1);
        if ($cmp44) {
         $14 = HEAP32[$path_dst_ptr_to_static_ptr45>>2]|0;
         $cmp46 = ($14|0)==(2);
         if ($cmp46) {
          HEAP8[$search_done48>>0] = 1;
          if ($is_dst_type_derived_from_static_type13$2$off0) {
           label = 23;
           break;
          } else {
           $15 = 4;
           break;
          }
         }
        }
       }
       if ($is_dst_type_derived_from_static_type13$2$off0) {
        label = 23;
       } else {
        $15 = 4;
       }
      }
     } while(0);
     if ((label|0) == 23) {
      $15 = 3;
     }
     HEAP32[$is_dst_type_derived_from_static_type>>2] = $15;
     break;
    }
   }
   $cmp7 = ($path_below|0)==(1);
   if ($cmp7) {
    HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $__base_count = 0, $add$ptr = 0, $arraydecay = 0, $call = 0, $cmp = 0, $cmp7 = 0, $incdec$ptr = 0, $incdec$ptr6 = 0, $p$0 = 0, $search_done = 0, $static_type = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,0)|0);
 L1: do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $arraydecay = ((($this)) + 16|0);
   $__base_count = ((($this)) + 12|0);
   $1 = HEAP32[$__base_count>>2]|0;
   $add$ptr = (((($this)) + 16|0) + ($1<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($arraydecay,$info,$adjustedPtr,$path_below);
   $cmp = ($1|0)>(1);
   if ($cmp) {
    $incdec$ptr = ((($this)) + 24|0);
    $search_done = ((($info)) + 54|0);
    $p$0 = $incdec$ptr;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $2 = HEAP8[$search_done>>0]|0;
     $tobool = ($2<<24>>24)==(0);
     if (!($tobool)) {
      break L1;
     }
     $incdec$ptr6 = ((($p$0)) + 8|0);
     $cmp7 = ($incdec$ptr6>>>0)<($add$ptr>>>0);
     if ($cmp7) {
      $p$0 = $incdec$ptr6;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__offset_flags = 0, $add$ptr = 0, $add$ptr4 = 0, $and = 0, $and6 = 0, $cond = 0, $offset_to_base$0 = 0, $shr = 0, $tobool = 0, $tobool7 = 0, $vfn = 0, $vtable3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__offset_flags = ((($this)) + 4|0);
 $0 = HEAP32[$__offset_flags>>2]|0;
 $shr = $0 >> 8;
 $and = $0 & 1;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $offset_to_base$0 = $shr;
 } else {
  $1 = HEAP32[$adjustedPtr>>2]|0;
  $add$ptr = (($1) + ($shr)|0);
  $2 = HEAP32[$add$ptr>>2]|0;
  $offset_to_base$0 = $2;
 }
 $3 = HEAP32[$this>>2]|0;
 $vtable3 = HEAP32[$3>>2]|0;
 $vfn = ((($vtable3)) + 28|0);
 $4 = HEAP32[$vfn>>2]|0;
 $add$ptr4 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $and6 = $0 & 2;
 $tobool7 = ($and6|0)!=(0);
 $cond = $tobool7 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$4 & 127]($3,$info,$add$ptr4,$cond);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__offset_flags = 0, $add$ptr = 0, $add$ptr4 = 0, $and = 0, $and6 = 0, $cond = 0, $offset_to_base$0 = 0, $shr = 0, $tobool = 0, $tobool7 = 0, $vfn = 0, $vtable3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__offset_flags = ((($this)) + 4|0);
 $0 = HEAP32[$__offset_flags>>2]|0;
 $shr = $0 >> 8;
 $and = $0 & 1;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $offset_to_base$0 = $shr;
 } else {
  $1 = HEAP32[$current_ptr>>2]|0;
  $add$ptr = (($1) + ($shr)|0);
  $2 = HEAP32[$add$ptr>>2]|0;
  $offset_to_base$0 = $2;
 }
 $3 = HEAP32[$this>>2]|0;
 $vtable3 = HEAP32[$3>>2]|0;
 $vfn = ((($vtable3)) + 20|0);
 $4 = HEAP32[$vfn>>2]|0;
 $add$ptr4 = (($current_ptr) + ($offset_to_base$0)|0);
 $and6 = $0 & 2;
 $tobool7 = ($and6|0)!=(0);
 $cond = $tobool7 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$4 & 31]($3,$info,$dst_ptr,$add$ptr4,$cond,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__offset_flags = 0, $add$ptr = 0, $add$ptr4 = 0, $and = 0, $and6 = 0, $cond = 0, $offset_to_base$0 = 0, $shr = 0, $tobool = 0, $tobool7 = 0, $vfn = 0, $vtable3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__offset_flags = ((($this)) + 4|0);
 $0 = HEAP32[$__offset_flags>>2]|0;
 $shr = $0 >> 8;
 $and = $0 & 1;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $offset_to_base$0 = $shr;
 } else {
  $1 = HEAP32[$current_ptr>>2]|0;
  $add$ptr = (($1) + ($shr)|0);
  $2 = HEAP32[$add$ptr>>2]|0;
  $offset_to_base$0 = $2;
 }
 $3 = HEAP32[$this>>2]|0;
 $vtable3 = HEAP32[$3>>2]|0;
 $vfn = ((($vtable3)) + 24|0);
 $4 = HEAP32[$vfn>>2]|0;
 $add$ptr4 = (($current_ptr) + ($offset_to_base$0)|0);
 $and6 = $0 & 2;
 $tobool7 = ($and6|0)!=(0);
 $cond = $tobool7 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$4 & 31]($3,$info,$add$ptr4,$cond,$use_strcmp);
 return;
}
function ___cxa_demangle($mangled_name,$buf,$n,$status) {
 $mangled_name = $mangled_name|0;
 $buf = $buf|0;
 $n = $n|0;
 $status = $status|0;
 var $$pr = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__begin_$i$i39 = 0, $__end_$i = 0, $__end_$i$i$i = 0, $__end_$i$i$i$i$i = 0, $__end_$i$i$i40 = 0, $__end_$i37 = 0, $__end_$i45 = 0, $__end_cap_$i$i$i$i$i = 0, $__first_$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i = 0, $__size_$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $a = 0, $add = 0, $add$ptr = 0, $add$ptr$i = 0;
 var $arrayidx = 0, $buf$addr$155 = 0, $buf$addr$2 = 0, $call = 0, $call40 = 0, $call45 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i41 = 0, $cmp$i34 = 0, $cmp$i38 = 0, $cmp1 = 0, $cmp12 = 0, $cmp2 = 0, $cmp34 = 0, $cmp41 = 0, $cmp46 = 0, $cmp53 = 0, $cond = 0;
 var $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $cv = 0, $db = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $first = 0, $first66 = 0, $fix_forward_references = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i43 = 0, $internal_status = 0, $or$cond = 0, $or$cond31 = 0, $ref$tmp$i$i$i = 0;
 var $retval$0 = 0, $second = 0, $tag_templates = 0, $template_param = 0, $tobool = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool15 = 0, $tobool30 = 0, $try_to_parse_template_args = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4192|0);
 $ref$tmp$i$i$i = sp + 4184|0;
 $a = sp;
 $db = sp + 4120|0;
 $internal_status = sp + 4112|0;
 $cmp = ($mangled_name|0)==(0|0);
 $tobool = ($status|0)!=(0|0);
 L1: do {
  if ($cmp) {
   label = 3;
  } else {
   $cmp1 = ($buf|0)!=(0|0);
   $cmp2 = ($n|0)==(0|0);
   $or$cond = $cmp1 & $cmp2;
   if ($or$cond) {
    label = 3;
   } else {
    if ($cmp1) {
     $0 = HEAP32[$n>>2]|0;
     $cond = $0;
    } else {
     $cond = 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EEC2Ev($a);
    __THREW__ = 0;
    invoke_vii(44,($db|0),($a|0));
    $1 = __THREW__; __THREW__ = 0;
    $2 = $1&1;
    if ($2) {
     $24 = ___cxa_find_matching_catch_2()|0;
     $25 = tempRet0;
     $ehselector$slot$3 = $25;$exn$slot$3 = $24;
    } else {
     $cv = ((($db)) + 48|0);
     $tag_templates = ((($db)) + 61|0);
     ;HEAP32[$cv>>2]=0|0;HEAP32[$cv+4>>2]=0|0;HEAP32[$cv+8>>2]=0|0;HEAP8[$cv+12>>0]=0|0;
     HEAP8[$tag_templates>>0] = 1;
     $template_param = ((($db)) + 32|0);
     $__end_$i = ((($db)) + 36|0);
     $3 = HEAP32[$__end_$i>>2]|0;
     $__first_$i$i$i$i = ((($db)) + 40|0);
     $4 = HEAP32[$__first_$i$i$i$i>>2]|0;
     $cmp$i = ($3>>>0)<($4>>>0);
     if ($cmp$i) {
      __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($ref$tmp$i$i$i,$a);
      HEAP32[$3>>2] = 0;
      $__end_$i$i$i$i$i = ((($3)) + 4|0);
      HEAP32[$__end_$i$i$i$i$i>>2] = 0;
      $__end_cap_$i$i$i$i$i = ((($3)) + 8|0);
      $5 = HEAP32[$ref$tmp$i$i$i>>2]|0;
      HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
      $__second_$i$i$i$i$i$i$i = ((($3)) + 12|0);
      HEAP32[$__second_$i$i$i$i$i$i$i>>2] = $5;
      $6 = HEAP32[$__end_$i>>2]|0;
      $incdec$ptr$i = ((($6)) + 16|0);
      HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      label = 11;
     } else {
      __THREW__ = 0;
      invoke_vii(45,($template_param|0),($a|0));
      $7 = __THREW__; __THREW__ = 0;
      $8 = $7&1;
      if ($8) {
       $26 = ___cxa_find_matching_catch_2()|0;
       $27 = tempRet0;
       $ehselector$slot$2 = $27;$exn$slot$2 = $26;
      } else {
       label = 11;
      }
     }
     if ((label|0) == 11) {
      $fix_forward_references = ((($db)) + 62|0);
      HEAP8[$fix_forward_references>>0] = 0;
      $try_to_parse_template_args = ((($db)) + 63|0);
      HEAP8[$try_to_parse_template_args>>0] = 1;
      HEAP32[$internal_status>>2] = 0;
      $call = (_strlen($mangled_name)|0);
      $add$ptr = (($mangled_name) + ($call)|0);
      __THREW__ = 0;
      invoke_viiii(46,($mangled_name|0),($add$ptr|0),($db|0),($internal_status|0));
      $9 = __THREW__; __THREW__ = 0;
      $10 = $9&1;
      L16: do {
       if (!($10)) {
        $11 = HEAP32[$internal_status>>2]|0;
        $cmp12 = ($11|0)!=(0);
        $12 = HEAP8[$fix_forward_references>>0]|0;
        $tobool15 = ($12<<24>>24)==(0);
        $or$cond31 = $cmp12 | $tobool15;
        do {
         if ($or$cond31) {
          $$pr = $11;
          label = 27;
         } else {
          $13 = HEAP32[$template_param>>2]|0;
          $14 = HEAP32[$__end_$i>>2]|0;
          $cmp$i34 = ($13|0)==($14|0);
          if ($cmp$i34) {
           label = 28;
          } else {
           $15 = HEAP32[$13>>2]|0;
           $__end_$i37 = ((($13)) + 4|0);
           $16 = HEAP32[$__end_$i37>>2]|0;
           $cmp$i38 = ($15|0)==($16|0);
           if ($cmp$i38) {
            label = 28;
           } else {
            HEAP8[$fix_forward_references>>0] = 0;
            HEAP8[$tag_templates>>0] = 0;
            $17 = HEAP32[$db>>2]|0;
            $__end_$i$i$i = ((($db)) + 4|0);
            while(1) {
             $18 = HEAP32[$__end_$i$i$i>>2]|0;
             $cmp$i$i$i = ($18|0)==($17|0);
             if ($cmp$i$i$i) {
              break;
             }
             $incdec$ptr$i$i$i = ((($18)) + -24|0);
             HEAP32[$__end_$i$i$i>>2] = $incdec$ptr$i$i$i;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
            }
            $__begin_$i$i39 = ((($db)) + 16|0);
            $19 = HEAP32[$__begin_$i$i39>>2]|0;
            $__end_$i$i$i40 = ((($db)) + 20|0);
            while(1) {
             $20 = HEAP32[$__end_$i$i$i40>>2]|0;
             $cmp$i$i$i41 = ($20|0)==($19|0);
             if ($cmp$i$i$i41) {
              break;
             }
             $incdec$ptr$i$i$i43 = ((($20)) + -16|0);
             HEAP32[$__end_$i$i$i40>>2] = $incdec$ptr$i$i$i43;
             __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($incdec$ptr$i$i$i43);
            }
            __THREW__ = 0;
            invoke_viiii(46,($mangled_name|0),($add$ptr|0),($db|0),($internal_status|0));
            $21 = __THREW__; __THREW__ = 0;
            $22 = $21&1;
            if ($22) {
             break L16;
            }
            $23 = HEAP8[$fix_forward_references>>0]|0;
            $tobool30 = ($23<<24>>24)==(0);
            if ($tobool30) {
             $$pr$pre = HEAP32[$internal_status>>2]|0;
             $$pr = $$pr$pre;
             label = 27;
             break;
            } else {
             HEAP32[$internal_status>>2] = -2;
             $38 = -2;$buf$addr$2 = 0;
             break;
            }
           }
          }
         }
        } while(0);
        if ((label|0) == 27) {
         $cmp34 = ($$pr|0)==(0);
         if ($cmp34) {
          label = 28;
         } else {
          $38 = $$pr;$buf$addr$2 = 0;
         }
        }
        do {
         if ((label|0) == 28) {
          $__end_$i45 = ((($db)) + 4|0);
          $28 = HEAP32[$__end_$i45>>2]|0;
          $add$ptr$i = ((($28)) + -24|0);
          $call40 = (__ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv($add$ptr$i)|0);
          $add = (($call40) + 1)|0;
          $cmp41 = ($add>>>0)>($cond>>>0);
          if ($cmp41) {
           $call45 = (_realloc($buf,$add)|0);
           $cmp46 = ($call45|0)==(0|0);
           if ($cmp46) {
            HEAP32[$internal_status>>2] = -1;
            $38 = -1;$buf$addr$2 = 0;
            break;
           }
           if ($cmp2) {
            $buf$addr$155 = $call45;
           } else {
            HEAP32[$n>>2] = $add;
            $buf$addr$155 = $call45;
           }
          } else {
           $cmp53 = ($buf|0)==(0|0);
           if ($cmp53) {
            $38 = 0;$buf$addr$2 = 0;
            break;
           } else {
            $buf$addr$155 = $buf;
           }
          }
          $29 = HEAP32[$__end_$i45>>2]|0;
          $second = ((($29)) + -12|0);
          $first = ((($29)) + -24|0);
          $__size_$i$i$i$i$i = ((($second)) + 11|0);
          $30 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($30<<24>>24)<(0);
          $31 = HEAP32[$second>>2]|0;
          $cond$i$i$i$i = $tobool$i$i$i$i$i ? $31 : $second;
          $__size_$i3$i$i$i = ((($29)) + -8|0);
          $32 = HEAP32[$__size_$i3$i$i$i>>2]|0;
          $conv$i$i$i$i = $30&255;
          $cond$i$i$i = $tobool$i$i$i$i$i ? $32 : $conv$i$i$i$i;
          __THREW__ = 0;
          (invoke_iiii(47,($first|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
          $33 = __THREW__; __THREW__ = 0;
          $34 = $33&1;
          if ($34) {
           break L16;
          }
          $35 = HEAP32[$__end_$i45>>2]|0;
          $first66 = ((($35)) + -24|0);
          $__size_$i$i$i = ((($first66)) + 11|0);
          $36 = HEAP8[$__size_$i$i$i>>0]|0;
          $tobool$i$i$i = ($36<<24>>24)<(0);
          if ($tobool$i$i$i) {
           $37 = HEAP32[$first66>>2]|0;
           $cond$i$i = $37;
          } else {
           $cond$i$i = $first66;
          }
          _memcpy(($buf$addr$155|0),($cond$i$i|0),($call40|0))|0;
          $arrayidx = (($buf$addr$155) + ($call40)|0);
          HEAP8[$arrayidx>>0] = 0;
          $38 = 0;$buf$addr$2 = $buf$addr$155;
         }
        } while(0);
        if ($tobool) {
         HEAP32[$status>>2] = $38;
        }
        __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($db);
        __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EED2Ev($a);
        $retval$0 = $buf$addr$2;
        break L1;
       }
      } while(0);
      $39 = ___cxa_find_matching_catch_2()|0;
      $40 = tempRet0;
      $ehselector$slot$2 = $40;$exn$slot$2 = $39;
     }
     __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($db);
     $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
    }
    __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EED2Ev($a);
    ___resumeException($exn$slot$3|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  if ($tobool) {
   HEAP32[$status>>2] = -3;
   $retval$0 = 0;
  } else {
   $retval$0 = 0;
  }
 }
 STACKTOP = sp;return ($retval$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EEC2Ev($this) {
 $this = $this|0;
 var $ptr_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ptr_ = ((($this)) + 4096|0);
 HEAP32[$ptr_>>2] = $this;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILj4096EEERNS0_5arenaIXT_EEE($this,$ar) {
 $this = $this|0;
 $ar = $ar|0;
 var $0 = 0, $__end_$i$i = 0, $__end_cap_$i$i = 0, $__second_$i$i$i$i = 0, $ref$tmp = 0, $ref$tmp3 = 0, $ref$tmp5 = 0, $subs = 0, $template_param = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp + 8|0;
 $ref$tmp3 = sp + 4|0;
 $ref$tmp5 = sp;
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EEC2ERNS0_5arenaILj4096EEE($ref$tmp,$ar);
 HEAP32[$this>>2] = 0;
 $__end_$i$i = ((($this)) + 4|0);
 HEAP32[$__end_$i$i>>2] = 0;
 $__end_cap_$i$i = ((($this)) + 8|0);
 $0 = HEAP32[$ref$tmp>>2]|0;
 HEAP32[$__end_cap_$i$i>>2] = 0;
 $__second_$i$i$i$i = ((($this)) + 12|0);
 HEAP32[$__second_$i$i$i$i>>2] = $0;
 $subs = ((($this)) + 16|0);
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($ref$tmp3,$ar);
 __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEC2EjRKS6_RKS7_($subs,$ref$tmp3);
 $template_param = ((($this)) + 32|0);
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($ref$tmp5,$ar);
 __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEEC2EjRKS8_RKS9_($template_param,$ref$tmp5);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($this,$a) {
 $this = $this|0;
 $a = $a|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = $a;
 return;
}
function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILj4096EEEEEEvDpOT_($this,$__args) {
 $this = $this|0;
 $__args = $__args|0;
 var $$sroa$speculated$call$i = 0, $$sroa$speculated$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__end_ = 0, $__end_$i = 0, $__end_$i$i$i$i = 0, $__end_cap_$i$i$i$i = 0, $__first_$i$i$i$i$i$i = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i$i$i = 0, $__v = 0, $add = 0, $call$i = 0, $cmp$i = 0;
 var $cmp$i$i$i$i = 0, $cmp3$i = 0, $div$i = 0, $incdec$ptr = 0, $mul$i = 0, $ref$tmp$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i6 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp$i$i = sp + 20|0;
 $__v = sp;
 $__second_$i$i$i = ((($this)) + 12|0);
 $__end_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__end_$i>>2]|0;
 $1 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i = (($0) - ($1))|0;
 $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
 $add = (($sub$ptr$div$i) + 1)|0;
 $call$i = (__ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp$i = ($call$i>>>0)<($add>>>0);
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__first_$i$i$i$i$i$i = ((($this)) + 8|0);
 $2 = HEAP32[$__first_$i$i$i$i$i$i>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i$i$i = (($2) - ($3))|0;
 $sub$ptr$div$i$i$i = $sub$ptr$sub$i$i$i >> 4;
 $div$i = $call$i >>> 1;
 $cmp3$i = ($sub$ptr$div$i$i$i>>>0)<($div$i>>>0);
 $mul$i = $sub$ptr$sub$i$i$i >> 3;
 $cmp$i$i$i$i = ($mul$i>>>0)<($add>>>0);
 $$sroa$speculated$i = $cmp$i$i$i$i ? $add : $mul$i;
 $$sroa$speculated$call$i = $cmp3$i ? $$sroa$speculated$i : $call$i;
 $4 = HEAP32[$__end_$i>>2]|0;
 $sub$ptr$sub$i5 = (($4) - ($3))|0;
 $sub$ptr$div$i6 = $sub$ptr$sub$i5 >> 4;
 __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($__v,$$sroa$speculated$call$i,$sub$ptr$div$i6,$__second_$i$i$i);
 $__end_ = ((($__v)) + 8|0);
 $5 = HEAP32[$__end_>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($ref$tmp$i$i,$__args);
 HEAP32[$5>>2] = 0;
 $__end_$i$i$i$i = ((($5)) + 4|0);
 HEAP32[$__end_$i$i$i$i>>2] = 0;
 $__end_cap_$i$i$i$i = ((($5)) + 8|0);
 $6 = HEAP32[$ref$tmp$i$i>>2]|0;
 HEAP32[$__end_cap_$i$i$i$i>>2] = 0;
 $__second_$i$i$i$i$i$i = ((($5)) + 12|0);
 HEAP32[$__second_$i$i$i$i$i$i>>2] = $6;
 $incdec$ptr = ((($5)) + 16|0);
 HEAP32[$__end_>>2] = $incdec$ptr;
 __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($this,$__v);
 __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($first,$last,$db,$status) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 $status = $status|0;
 var $$pr = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__end_$i = 0, $add$ptr = 0, $add$ptr33 = 0, $arrayidx = 0, $arrayidx28 = 0, $call = 0, $call15 = 0, $call34 = 0, $call40 = 0, $call53 = 0, $cmp = 0, $cmp$i = 0;
 var $cmp1 = 0, $cmp10 = 0, $cmp13 = 0, $cmp17 = 0, $cmp26 = 0, $cmp3 = 0, $cmp30 = 0, $cmp36 = 0, $cmp38 = 0, $cmp41 = 0, $cmp54 = 0, $cmp58 = 0, $cmp9 = 0, $or$cond = 0, $or$cond46 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t$0 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $cmp = ($first>>>0)<($last>>>0);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(95);
   L3: do {
    if ($cmp1) {
     $sub$ptr$lhs$cast = $last;
     $sub$ptr$rhs$cast = $first;
     $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
     $cmp3 = ($sub$ptr$sub|0)>(3);
     if (!($cmp3)) {
      HEAP32[$status>>2] = -2;
      break L1;
     }
     $arrayidx = ((($first)) + 1|0);
     $1 = HEAP8[$arrayidx>>0]|0;
     $add$ptr = ((($first)) + 2|0);
     switch ($1<<24>>24) {
     case 90:  {
      $call = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp9 = ($call|0)==($add$ptr|0);
      $cmp10 = ($call|0)==($last|0);
      $or$cond = $cmp9 | $cmp10;
      if ($or$cond) {
       $t$0 = $call;
      } else {
       $2 = HEAP8[$call>>0]|0;
       $cmp13 = ($2<<24>>24)==(46);
       if ($cmp13) {
        $call15 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
        $t$0 = $call15;
       } else {
        $t$0 = $call;
       }
      }
      $cmp17 = ($t$0|0)==($last|0);
      if ($cmp17) {
       break L3;
      }
      HEAP32[$status>>2] = -2;
      break L1;
      break;
     }
     case 95:  {
      $3 = HEAP8[$add$ptr>>0]|0;
      $cmp26 = ($3<<24>>24)==(95);
      if ($cmp26) {
       $arrayidx28 = ((($first)) + 3|0);
       $4 = HEAP8[$arrayidx28>>0]|0;
       $cmp30 = ($4<<24>>24)==(90);
       if ($cmp30) {
        $add$ptr33 = ((($first)) + 4|0);
        $call34 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($add$ptr33,$last,$db)|0);
        $cmp36 = ($call34|0)==($add$ptr33|0);
        $cmp38 = ($call34|0)==($last|0);
        $or$cond46 = $cmp36 | $cmp38;
        if (!($or$cond46)) {
         $call40 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_($call34,$last,$db)|0);
         $cmp41 = ($call40|0)==($last|0);
         if ($cmp41) {
          break L3;
         }
        }
        HEAP32[$status>>2] = -2;
        break L1;
       }
      }
      break;
     }
     default: {
     }
     }
     HEAP32[$status>>2] = -2;
     break L1;
    } else {
     $call53 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $cmp54 = ($call53|0)==($last|0);
     if (!($cmp54)) {
      HEAP32[$status>>2] = -2;
      break L1;
     }
    }
   } while(0);
   $$pr = HEAP32[$status>>2]|0;
   $cmp58 = ($$pr|0)==(0);
   if ($cmp58) {
    $5 = HEAP32[$db>>2]|0;
    $__end_$i = ((($db)) + 4|0);
    $6 = HEAP32[$__end_$i>>2]|0;
    $cmp$i = ($5|0)==($6|0);
    if ($cmp$i) {
     HEAP32[$status>>2] = -2;
    }
   }
  } else {
   HEAP32[$status>>2] = -2;
  }
 } while(0);
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($this) {
 $this = $this|0;
 var $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $second = ((($this)) + 12|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($second);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this);
 return;
}
function __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__end_$i$i = 0, $__first_$i$i$i$i = 0, $__second_$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $incdec$ptr$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $cmp = ($0|0)==(0|0);
 if (!($cmp)) {
  $__end_$i$i = ((($this)) + 4|0);
  while(1) {
   $1 = HEAP32[$__end_$i$i>>2]|0;
   $cmp$i$i = ($1|0)==($0|0);
   if ($cmp$i$i) {
    break;
   }
   $incdec$ptr$i$i = ((($1)) + -24|0);
   HEAP32[$__end_$i$i>>2] = $incdec$ptr$i$i;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i);
  }
  $__second_$i$i$i = ((($this)) + 12|0);
  $2 = HEAP32[$this>>2]|0;
  $__first_$i$i$i$i = ((($this)) + 8|0);
  $3 = HEAP32[$__first_$i$i$i$i>>2]|0;
  $$cast = $2;
  $sub$ptr$sub$i = (($3) - ($$cast))|0;
  $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE10deallocateEPS2_j($__second_$i$i$i,$2,$sub$ptr$div$i);
 }
 return;
}
function __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__size_$i$i = 0, $__size_$i$i2 = 0, $__size_$i3$i = 0, $__size_$i3$i4 = 0, $add = 0, $cond$i = 0, $cond$i8 = 0, $conv$i$i = 0, $conv$i$i6 = 0, $second = 0, $tobool$i$i = 0, $tobool$i$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__size_$i3$i = ((($this)) + 4|0);
  $1 = HEAP32[$__size_$i3$i>>2]|0;
  $cond$i = $1;
 } else {
  $conv$i$i = $0&255;
  $cond$i = $conv$i$i;
 }
 $second = ((($this)) + 12|0);
 $__size_$i$i2 = ((($second)) + 11|0);
 $2 = HEAP8[$__size_$i$i2>>0]|0;
 $tobool$i$i3 = ($2<<24>>24)<(0);
 if ($tobool$i$i3) {
  $__size_$i3$i4 = ((($this)) + 16|0);
  $3 = HEAP32[$__size_$i3$i4>>2]|0;
  $cond$i8 = $3;
 } else {
  $conv$i$i6 = $2&255;
  $cond$i8 = $conv$i$i6;
 }
 $add = (($cond$i8) + ($cond$i))|0;
 return ($add|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__cap_$i$i = 0, $__size_$i$i = 0, $__size_$i2$i = 0, $__size_$i3$i = 0, $add = 0, $add$ptr = 0, $and$i$i = 0, $arrayidx = 0, $cmp = 0, $cond$i24 = 0, $cond$i30 = 0, $cond$i36 = 0, $conv$i$i = 0, $conv$i$i34 = 0, $phitmp$i = 0;
 var $ref$tmp = 0, $sub = 0, $sub8 = 0, $tobool = 0, $tobool$i$i = 0, $tobool$i$i33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__cap_$i$i = ((($this)) + 8|0);
  $1 = HEAP32[$__cap_$i$i>>2]|0;
  $and$i$i = $1 & 2147483647;
  $phitmp$i = (($and$i$i) + -1)|0;
  $__size_$i3$i = ((($this)) + 4|0);
  $2 = HEAP32[$__size_$i3$i>>2]|0;
  $cond$i24 = $2;$cond$i36 = $phitmp$i;
 } else {
  $conv$i$i = $0&255;
  $cond$i24 = $conv$i$i;$cond$i36 = 10;
 }
 $sub = (($cond$i36) - ($cond$i24))|0;
 $cmp = ($sub>>>0)<($__n>>>0);
 $add = (($cond$i24) + ($__n))|0;
 if ($cmp) {
  $sub8 = (($add) - ($cond$i36))|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$cond$i36,$sub8,$cond$i24,$cond$i24,0,$__n,$__s);
 } else {
  $tobool = ($__n|0)==(0);
  if (!($tobool)) {
   if ($tobool$i$i) {
    $3 = HEAP32[$this>>2]|0;
    $cond$i30 = $3;
   } else {
    $cond$i30 = $this;
   }
   $add$ptr = (($cond$i30) + ($cond$i24)|0);
   (__ZNSt3__211char_traitsIcE4copyEPcPKcj($add$ptr,$__s,$__n)|0);
   $4 = HEAP8[$__size_$i$i>>0]|0;
   $tobool$i$i33 = ($4<<24>>24)<(0);
   if ($tobool$i$i33) {
    $__size_$i2$i = ((($this)) + 4|0);
    HEAP32[$__size_$i2$i>>2] = $add;
   } else {
    $conv$i$i34 = $add&255;
    HEAP8[$__size_$i$i>>0] = $conv$i$i34;
   }
   $arrayidx = (($cond$i30) + ($add)|0);
   HEAP8[$ref$tmp>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp);
  }
 }
 STACKTOP = sp;return ($this|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 32|0);
 __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($0);
 $1 = ((($this)) + 16|0);
 __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($1);
 __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this);
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EED2Ev($this) {
 $this = $this|0;
 var $ptr_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ptr_ = ((($this)) + 4096|0);
 HEAP32[$ptr_>>2] = 0;
 return;
}
function __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__end_$i$i = 0, $__first_$i$i$i$i = 0, $__second_$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $incdec$ptr$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $cmp = ($0|0)==(0|0);
 if (!($cmp)) {
  $__end_$i$i = ((($this)) + 4|0);
  while(1) {
   $1 = HEAP32[$__end_$i$i>>2]|0;
   $cmp$i$i = ($1|0)==($0|0);
   if ($cmp$i$i) {
    break;
   }
   $incdec$ptr$i$i = ((($1)) + -16|0);
   HEAP32[$__end_$i$i>>2] = $incdec$ptr$i$i;
   __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($incdec$ptr$i$i);
  }
  $__second_$i$i$i = ((($this)) + 12|0);
  $2 = HEAP32[$this>>2]|0;
  $__first_$i$i$i$i = ((($this)) + 8|0);
  $3 = HEAP32[$__first_$i$i$i$i>>2]|0;
  $$cast = $2;
  $sub$ptr$sub$i = (($3) - ($$cast))|0;
  $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE10deallocateEPS8_j($__second_$i$i$i,$2,$sub$ptr$div$i);
 }
 return;
}
function __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__end_$i$i = 0, $__first_$i$i$i$i = 0, $__second_$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $incdec$ptr$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $cmp = ($0|0)==(0|0);
 if (!($cmp)) {
  $__end_$i$i = ((($this)) + 4|0);
  while(1) {
   $1 = HEAP32[$__end_$i$i>>2]|0;
   $cmp$i$i = ($1|0)==($0|0);
   if ($cmp$i$i) {
    break;
   }
   $incdec$ptr$i$i = ((($1)) + -16|0);
   HEAP32[$__end_$i$i>>2] = $incdec$ptr$i$i;
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($incdec$ptr$i$i);
  }
  $__second_$i$i$i = ((($this)) + 12|0);
  $2 = HEAP32[$this>>2]|0;
  $__first_$i$i$i$i = ((($this)) + 8|0);
  $3 = HEAP32[$__first_$i$i$i$i>>2]|0;
  $$cast = $2;
  $sub$ptr$sub$i = (($3) - ($$cast))|0;
  $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE10deallocateEPS6_j($__second_$i$i$i,$2,$sub$ptr$div$i);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE10deallocateEPS6_j($this,$p,$n) {
 $this = $this|0;
 $p = $p|0;
 $n = $n|0;
 var $mul = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ref = HEAP32[$this>>2]|0;
 $mul = $n << 4;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($ref,$p,$mul);
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($this,$p,$n) {
 $this = $this|0;
 $p = $p|0;
 $n = $n|0;
 var $0 = 0, $add$ptr = 0, $call = 0, $call2 = 0, $cmp = 0, $ptr_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE17pointer_in_bufferEPc($this,$p)|0);
 if ($call) {
  $call2 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8align_upEj($n)|0);
  $add$ptr = (($p) + ($call2)|0);
  $ptr_ = ((($this)) + 4096|0);
  $0 = HEAP32[$ptr_>>2]|0;
  $cmp = ($add$ptr|0)==($0|0);
  if ($cmp) {
   HEAP32[$ptr_>>2] = $p;
  }
 } else {
  _free($p);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE17pointer_in_bufferEPc($this,$p) {
 $this = $this|0;
 $p = $p|0;
 var $0 = 0, $add$ptr = 0, $cmp = 0, $cmp4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($this>>>0)<=($p>>>0);
 $add$ptr = ((($this)) + 4096|0);
 $cmp4 = ($add$ptr>>>0)>=($p>>>0);
 $0 = $cmp & $cmp4;
 return ($0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8align_upEj($n) {
 $n = $n|0;
 var $add = 0, $and = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $add = (($n) + 15)|0;
 $and = $add & -16;
 return ($and|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE10deallocateEPS8_j($this,$p,$n) {
 $this = $this|0;
 $p = $p|0;
 $n = $n|0;
 var $mul = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ref = HEAP32[$this>>2]|0;
 $mul = $n << 4;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($ref,$p,$mul);
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sroa$speculated = 0, $0 = 0, $1 = 0, $__cap_$i = 0, $__size_$i = 0, $__size_$i$i = 0, $add = 0, $add$i$i = 0, $add$ptr = 0, $add$ptr33 = 0, $add$ptr34 = 0, $add$ptr36 = 0, $add$ptr37 = 0, $add48 = 0, $and$i$i = 0, $arrayidx = 0, $call$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0;
 var $cmp17 = 0, $cmp23 = 0, $cmp30 = 0, $cmp41 = 0, $cmp5 = 0, $cond$i = 0, $cond40 = 0, $mul = 0, $or$i = 0, $phitmp = 0, $ref$tmp49 = 0, $sub2 = 0, $sub28 = 0, $sub29 = 0, $tobool$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp49 = sp;
 $sub2 = (-18 - ($__old_cap))|0;
 $cmp = ($sub2>>>0)<($__delta_cap>>>0);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this);
 }
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $1 = HEAP32[$this>>2]|0;
  $cond$i = $1;
 } else {
  $cond$i = $this;
 }
 $cmp5 = ($__old_cap>>>0)<(2147483623);
 if ($cmp5) {
  $add = (($__delta_cap) + ($__old_cap))|0;
  $mul = $__old_cap << 1;
  $cmp$i$i$i = ($add>>>0)<($mul>>>0);
  $$sroa$speculated = $cmp$i$i$i ? $mul : $add;
  $cmp$i = ($$sroa$speculated>>>0)<(11);
  $add$i$i = (($$sroa$speculated) + 16)|0;
  $and$i$i = $add$i$i & -16;
  $phitmp = $cmp$i ? 11 : $and$i$i;
  $cond40 = $phitmp;
 } else {
  $cond40 = -17;
 }
 $call$i = (__ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($cond40)|0);
 $cmp17 = ($__n_copy|0)==(0);
 if (!($cmp17)) {
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($call$i,$cond$i,$__n_copy)|0);
 }
 $cmp23 = ($__n_add|0)==(0);
 if (!($cmp23)) {
  $add$ptr = (($call$i) + ($__n_copy)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($add$ptr,$__p_new_stuff,$__n_add)|0);
 }
 $sub28 = (($__old_sz) - ($__n_del))|0;
 $sub29 = (($sub28) - ($__n_copy))|0;
 $cmp30 = ($sub29|0)==(0);
 if (!($cmp30)) {
  $add$ptr33 = (($call$i) + ($__n_copy)|0);
  $add$ptr34 = (($add$ptr33) + ($__n_add)|0);
  $add$ptr36 = (($cond$i) + ($__n_copy)|0);
  $add$ptr37 = (($add$ptr36) + ($__n_del)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($add$ptr34,$add$ptr37,$sub29)|0);
 }
 $cmp41 = ($__old_cap|0)==(10);
 if (!($cmp41)) {
  __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($cond$i);
 }
 HEAP32[$this>>2] = $call$i;
 $or$i = $cond40 | -2147483648;
 $__cap_$i = ((($this)) + 8|0);
 HEAP32[$__cap_$i>>2] = $or$i;
 $add48 = (($sub28) + ($__n_add))|0;
 $__size_$i = ((($this)) + 4|0);
 HEAP32[$__size_$i>>2] = $add48;
 $arrayidx = (($call$i) + ($add48)|0);
 HEAP8[$ref$tmp49>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp49);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($n) {
 $n = $n|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_malloc($n)|0);
 return ($call|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($p) {
 $p = $p|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($p);
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE10deallocateEPS2_j($this,$p,$n) {
 $this = $this|0;
 $p = $p|0;
 $n = $n|0;
 var $mul = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ref = HEAP32[$this>>2]|0;
 $mul = ($n*24)|0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($ref,$p,$mul);
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $__size_$i = 0, $tobool$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i>>0]|0;
 $tobool$i = ($0<<24>>24)<(0);
 if ($tobool$i) {
  $1 = HEAP32[$this>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($1);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i198 = 0, $$pre326 = 0, $$pre327 = 0, $$pre328 = 0, $$pre329 = 0, $$pre330 = 0, $$pre331 = 0, $$pre332 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i281 = 0, $__i$0$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i220 = 0, $__i$0$i$i284 = 0;
 var $__size_$i$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i156 = 0, $__size_$i$i$i170 = 0, $__size_$i$i$i269 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $__size_$i3$i = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i161 = 0, $__size_$i3$i$i172 = 0, $__size_$i3$i$i187 = 0, $__size_$i3$i$i205 = 0, $__size_$i3$i$i261 = 0, $__size_$i3$i$i271 = 0, $__size_$i3$i251 = 0, $add$ptr$i153 = 0, $add$ptr$i194 = 0, $add$ptr$i237 = 0, $add$ptr$i246 = 0;
 var $add$ptr$i267 = 0, $add$ptr3$i = 0, $and = 0, $and204 = 0, $and214 = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i$i$i$i216 = 0, $arrayidx$i$i223 = 0, $arrayidx$i$i287 = 0, $call = 0, $call107 = 0, $call57 = 0, $call9 = 0, $cleanup$dest$slot$4 = 0, $cleanup$dest$slot$6 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i195 = 0;
 var $cmp$i151 = 0, $cmp$i154 = 0, $cmp$i177 = 0, $cmp$i210 = 0, $cmp$i276 = 0, $cmp$i282 = 0, $cmp101 = 0, $cmp110 = 0, $cmp113 = 0, $cmp116 = 0, $cmp12 = 0, $cmp136 = 0, $cmp14 = 0, $cmp3 = 0, $cmp41 = 0, $cmp47 = 0, $cmp54 = 0, $cmp58 = 0, $cmp63 = 0, $cmp98 = 0;
 var $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i138 = 0, $cond$i$i$i$i160 = 0, $cond$i$i$i141 = 0, $cond$i$i$i163 = 0, $cond$i$i$i186 = 0, $cond$i$i$i236 = 0, $cond$i$i$i245 = 0, $cond$i$i1$i = 0, $cond$i$i176 = 0, $cond$i$i189 = 0, $cond$i$i209 = 0, $cond$i$i266 = 0, $cond$i$i275 = 0, $conv = 0, $conv$i$i = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0;
 var $conv$i$i$i$i140 = 0, $conv$i$i$i$i162 = 0, $conv$i$i$i174 = 0, $conv$i$i$i188 = 0, $conv$i$i$i207 = 0, $conv$i$i$i264 = 0, $conv$i$i$i273 = 0, $conv$i$i253 = 0, $cv10 = 0, $ehselector$slot$0 = 0, $ehselector$slot$2 = 0, $ehselector$slot$4 = 0, $ehselector$slot$5 = 0, $encoding_depth = 0, $exitcond$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i221 = 0, $exitcond$i$i285 = 0, $exn$slot$0 = 0, $exn$slot$2 = 0;
 var $exn$slot$4 = 0, $exn$slot$5 = 0, $first$addr$1 = 0, $first$addr$2 = 0, $first$addr$5 = 0, $first$addr$6 = 0, $first158 = 0, $first166 = 0, $first192 = 0, $first200 = 0, $first210 = 0, $first220 = 0, $first229 = 0, $first238 = 0, $first246 = 0, $first32 = 0, $first69 = 0, $first88 = 0, $first95 = 0, $first_arg$0$off0$ph = 0;
 var $first_arg$3$off0$ph = 0, $inc = 0, $inc$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i224 = 0, $inc$i$i288 = 0, $inc131 = 0, $inc143 = 0, $incdec$ptr = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i197 = 0, $k$0 = 0, $k134$0 = 0, $parsed_ctor_dtor_cv = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp4$i$i$i$i = 0, $ref11 = 0, $ret1 = 0, $ret2 = 0;
 var $retval$11 = 0, $sb = 0, $sb2 = 0, $second = 0, $su = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i182 = 0, $sub$ptr$div$i230 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i181 = 0, $sub$ptr$sub$i229 = 0, $sub334 = 0, $sub334$in = 0, $sub50337 = 0, $sub50337$in = 0, $t$0 = 0, $t$1 = 0, $t$1$ph = 0, $t$3 = 0, $tag_templates = 0;
 var $tmp = 0, $tobool = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i135 = 0, $tobool$i$i$i$i$i157 = 0, $tobool$i$i$i$i$i213 = 0, $tobool$i$i$i171 = 0, $tobool$i$i$i204 = 0, $tobool$i$i$i270 = 0, $tobool195 = 0, $tobool205 = 0, $tobool215 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $ref$tmp$i$i$i$i = sp + 73|0;
 $ref$tmp4$i$i$i$i = sp + 72|0;
 $su = sp + 64|0;
 $sb = sp + 56|0;
 $sb2 = sp + 48|0;
 $ret2 = sp + 36|0;
 $ret1 = sp + 24|0;
 $tmp = sp + 12|0;
 $ref$tmp = sp;
 $cmp = ($first|0)==($last|0);
 do {
  if ($cmp) {
   $first$addr$6 = $first;
   label = 111;
  } else {
   $encoding_depth = ((($db)) + 56|0);
   __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj($su,$encoding_depth);
   $0 = HEAP32[$encoding_depth>>2]|0;
   $inc = (($0) + 1)|0;
   HEAP32[$encoding_depth>>2] = $inc;
   $tag_templates = ((($db)) + 61|0);
   __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($sb,$tag_templates);
   $1 = HEAP32[$encoding_depth>>2]|0;
   $cmp3 = ($1>>>0)>(1);
   if ($cmp3) {
    HEAP8[$tag_templates>>0] = 1;
   }
   $2 = HEAP8[$first>>0]|0;
   $conv = $2 << 24 >> 24;
   L6: do {
    switch ($conv|0) {
    case 84: case 71:  {
     __THREW__ = 0;
     $call = (invoke_iiii(48,($first|0),($last|0),($db|0))|0);
     $3 = __THREW__; __THREW__ = 0;
     $4 = $3&1;
     if ($4) {
      label = 6;
     } else {
      $cleanup$dest$slot$6 = 1;$first$addr$5 = $call;
      label = 109;
     }
     break;
    }
    default: {
     __THREW__ = 0;
     $call9 = (invoke_iiii(49,($first|0),($last|0),($db|0))|0);
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if ($8) {
      label = 6;
     } else {
      $cv10 = ((($db)) + 48|0);
      $9 = HEAP32[$cv10>>2]|0;
      $ref11 = ((($db)) + 52|0);
      $10 = HEAP32[$ref11>>2]|0;
      $cmp12 = ($call9|0)==($first|0);
      L9: do {
       if ($cmp12) {
        $first$addr$2 = $first;
       } else {
        $cmp14 = ($call9|0)==($last|0);
        if ($cmp14) {
         $first$addr$2 = $last;
        } else {
         $11 = HEAP8[$call9>>0]|0;
         switch ($11<<24>>24) {
         case 46: case 69:  {
          $first$addr$2 = $call9;
          break L9;
          break;
         }
         default: {
         }
         }
         __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($sb2,$tag_templates);
         HEAP8[$tag_templates>>0] = 0;
         ;HEAP32[$ret2>>2]=0|0;HEAP32[$ret2+4>>2]=0|0;HEAP32[$ret2+8>>2]=0|0;
         $__i$0$i$i284 = 0;
         while(1) {
          $exitcond$i$i285 = ($__i$0$i$i284|0)==(3);
          if ($exitcond$i$i285) {
           break;
          }
          $arrayidx$i$i287 = (($ret2) + ($__i$0$i$i284<<2)|0);
          HEAP32[$arrayidx$i$i287>>2] = 0;
          $inc$i$i288 = (($__i$0$i$i284) + 1)|0;
          $__i$0$i$i284 = $inc$i$i288;
         }
         $12 = HEAP32[$db>>2]|0;
         $__end_$i281 = ((($db)) + 4|0);
         $13 = HEAP32[$__end_$i281>>2]|0;
         $cmp$i282 = ($12|0)==($13|0);
         L17: do {
          if ($cmp$i282) {
           $cleanup$dest$slot$4 = 0;$first$addr$1 = $first;
          } else {
           $first32 = ((($13)) + -24|0);
           $__size_$i$i$i269 = ((($first32)) + 11|0);
           $14 = HEAP8[$__size_$i$i$i269>>0]|0;
           $tobool$i$i$i270 = ($14<<24>>24)<(0);
           if ($tobool$i$i$i270) {
            $__size_$i3$i$i271 = ((($13)) + -20|0);
            $15 = HEAP32[$__size_$i3$i$i271>>2]|0;
            $cond$i$i275 = $15;
           } else {
            $conv$i$i$i273 = $14&255;
            $cond$i$i275 = $conv$i$i$i273;
           }
           $cmp$i276 = ($cond$i$i275|0)==(0);
           if ($cmp$i276) {
            $cleanup$dest$slot$4 = 0;$first$addr$1 = $first;
           } else {
            $parsed_ctor_dtor_cv = ((($db)) + 60|0);
            $16 = HEAP8[$parsed_ctor_dtor_cv>>0]|0;
            $tobool = ($16<<24>>24)==(0);
            L24: do {
             if ($tobool) {
              if ($tobool$i$i$i270) {
               $17 = HEAP32[$first32>>2]|0;
               $__size_$i3$i$i261 = ((($13)) + -20|0);
               $18 = HEAP32[$__size_$i3$i$i261>>2]|0;
               $cond$i$i1$i = $17;$cond$i$i266 = $18;
              } else {
               $conv$i$i$i264 = $14&255;
               $cond$i$i1$i = $first32;$cond$i$i266 = $conv$i$i$i264;
              }
              $add$ptr$i267 = (($cond$i$i1$i) + ($cond$i$i266)|0);
              $add$ptr3$i = ((($add$ptr$i267)) + -1|0);
              $19 = HEAP8[$add$ptr3$i>>0]|0;
              $cmp41 = ($19<<24>>24)==(62);
              if ($cmp41) {
               if ($tobool$i$i$i270) {
                $__size_$i3$i251 = ((($13)) + -20|0);
                $20 = HEAP32[$__size_$i3$i251>>2]|0;
                $21 = HEAP32[$first32>>2]|0;
                $cond$i$i$i245 = $21;$sub334$in = $20;
               } else {
                $conv$i$i253 = $14&255;
                $cond$i$i$i245 = $first32;$sub334$in = $conv$i$i253;
               }
               $sub334 = (($sub334$in) + -2)|0;
               $add$ptr$i246 = (($cond$i$i$i245) + ($sub334)|0);
               $22 = HEAP8[$add$ptr$i246>>0]|0;
               $cmp47 = ($22<<24>>24)==(45);
               if ($cmp47) {
                $52 = $13;$t$0 = $call9;
                label = 55;
               } else {
                if ($tobool$i$i$i270) {
                 $__size_$i3$i = ((($13)) + -20|0);
                 $23 = HEAP32[$__size_$i3$i>>2]|0;
                 $24 = HEAP32[$first32>>2]|0;
                 $cond$i$i$i236 = $24;$sub50337$in = $23;
                } else {
                 $conv$i$i = $14&255;
                 $cond$i$i$i236 = $first32;$sub50337$in = $conv$i$i;
                }
                $sub50337 = (($sub50337$in) + -2)|0;
                $add$ptr$i237 = (($cond$i$i$i236) + ($sub50337)|0);
                $25 = HEAP8[$add$ptr$i237>>0]|0;
                $cmp54 = ($25<<24>>24)==(62);
                if ($cmp54) {
                 $52 = $13;$t$0 = $call9;
                 label = 55;
                } else {
                 __THREW__ = 0;
                 $call57 = (invoke_iiii(50,($call9|0),($last|0),($db|0))|0);
                 $26 = __THREW__; __THREW__ = 0;
                 $27 = $26&1;
                 if ($27) {
                  label = 34;
                  break;
                 }
                 $cmp58 = ($call57|0)==($call9|0);
                 if ($cmp58) {
                  $cleanup$dest$slot$4 = 0;$first$addr$1 = $first;
                  break L17;
                 }
                 $30 = HEAP32[$__end_$i281>>2]|0;
                 $31 = HEAP32[$db>>2]|0;
                 $sub$ptr$sub$i229 = (($30) - ($31))|0;
                 $sub$ptr$div$i230 = (($sub$ptr$sub$i229|0) / 24)&-1;
                 $cmp63 = ($sub$ptr$div$i230>>>0)<(2);
                 $32 = $30;
                 if ($cmp63) {
                  $cleanup$dest$slot$4 = 0;$first$addr$1 = $first;
                  break L17;
                 }
                 $first69 = ((($32)) + -24|0);
                 ;HEAP32[$ret1>>2]=HEAP32[$first69>>2]|0;HEAP32[$ret1+4>>2]=HEAP32[$first69+4>>2]|0;HEAP32[$ret1+8>>2]=HEAP32[$first69+8>>2]|0;
                 $__i$0$i$i220 = 0;
                 while(1) {
                  $exitcond$i$i221 = ($__i$0$i$i220|0)==(3);
                  if ($exitcond$i$i221) {
                   break;
                  }
                  $arrayidx$i$i223 = (($first69) + ($__i$0$i$i220<<2)|0);
                  HEAP32[$arrayidx$i$i223>>2] = 0;
                  $inc$i$i224 = (($__i$0$i$i220) + 1)|0;
                  $__i$0$i$i220 = $inc$i$i224;
                 }
                 $second = ((($32)) + -12|0);
                 $__size_$i1$i$i$i$i = ((($ret2)) + 11|0);
                 $33 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
                 $tobool$i$i$i$i$i213 = ($33<<24>>24)<(0);
                 if ($tobool$i$i$i$i$i213) {
                  $34 = HEAP32[$ret2>>2]|0;
                  HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
                  __ZNSt3__211char_traitsIcE6assignERcRKc($34,$ref$tmp$i$i$i$i);
                  $__size_$i2$i$i$i$i = ((($ret2)) + 4|0);
                  HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
                 } else {
                  HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
                  __ZNSt3__211char_traitsIcE6assignERcRKc($ret2,$ref$tmp4$i$i$i$i);
                  HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
                 }
                 __THREW__ = 0;
                 invoke_vi(51,($ret2|0));
                 $35 = __THREW__; __THREW__ = 0;
                 $36 = $35&1;
                 if ($36) {
                  $37 = ___cxa_find_matching_catch_3(0|0)|0;
                  $38 = tempRet0;
                  ___clang_call_terminate($37);
                  // unreachable;
                 }
                 ;HEAP32[$ret2>>2]=HEAP32[$second>>2]|0;HEAP32[$ret2+4>>2]=HEAP32[$second+4>>2]|0;HEAP32[$ret2+8>>2]=HEAP32[$second+8>>2]|0;
                 $__i$0$i$i$i$i = 0;
                 while(1) {
                  $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
                  if ($exitcond$i$i$i$i) {
                   break;
                  }
                  $arrayidx$i$i$i$i216 = (($second) + ($__i$0$i$i$i$i<<2)|0);
                  HEAP32[$arrayidx$i$i$i$i216>>2] = 0;
                  $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
                  $__i$0$i$i$i$i = $inc$i$i$i$i;
                 }
                 $39 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
                 $tobool$i$i$i204 = ($39<<24>>24)<(0);
                 $__size_$i3$i$i205 = ((($ret2)) + 4|0);
                 $40 = HEAP32[$__size_$i3$i$i205>>2]|0;
                 $conv$i$i$i207 = $39&255;
                 $cond$i$i209 = $tobool$i$i$i204 ? $40 : $conv$i$i$i207;
                 $cmp$i210 = ($cond$i$i209|0)==(0);
                 if ($cmp$i210) {
                  __THREW__ = 0;
                  invoke_vii(52,($ret1|0),32);
                  $41 = __THREW__; __THREW__ = 0;
                  $42 = $41&1;
                  if (!($42)) {
                   label = 50;
                  }
                 } else {
                  label = 50;
                 }
                 do {
                  if ((label|0) == 50) {
                   $45 = HEAP32[$__end_$i281>>2]|0;
                   $add$ptr$i194 = ((($45)) + -24|0);
                   $46 = $45;
                   while(1) {
                    $cmp$i$i$i195 = ($46|0)==($add$ptr$i194|0);
                    if ($cmp$i$i$i195) {
                     break;
                    }
                    $incdec$ptr$i$i$i197 = ((($46)) + -24|0);
                    HEAP32[$__end_$i281>>2] = $incdec$ptr$i$i$i197;
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i197);
                    $$pre$i198 = HEAP32[$__end_$i281>>2]|0;
                    $46 = $$pre$i198;
                   }
                   $first88 = ((($45)) + -48|0);
                   $__size_$i$i$i$i = ((($ret1)) + 11|0);
                   $47 = HEAP8[$__size_$i$i$i$i>>0]|0;
                   $tobool$i$i$i$i = ($47<<24>>24)<(0);
                   $48 = HEAP32[$ret1>>2]|0;
                   $cond$i$i$i186 = $tobool$i$i$i$i ? $48 : $ret1;
                   $__size_$i3$i$i187 = ((($ret1)) + 4|0);
                   $49 = HEAP32[$__size_$i3$i$i187>>2]|0;
                   $conv$i$i$i188 = $47&255;
                   $cond$i$i189 = $tobool$i$i$i$i ? $49 : $conv$i$i$i188;
                   __THREW__ = 0;
                   (invoke_iiiii(53,($first88|0),0,($cond$i$i$i186|0),($cond$i$i189|0))|0);
                   $50 = __THREW__; __THREW__ = 0;
                   $51 = $50&1;
                   if ($51) {
                    break;
                   }
                   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret1);
                   $$pre = HEAP32[$__end_$i281>>2]|0;
                   $52 = $$pre;$t$0 = $call57;
                   label = 55;
                   break L24;
                  }
                 } while(0);
                 $43 = ___cxa_find_matching_catch_2()|0;
                 $44 = tempRet0;
                 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret1);
                 $ehselector$slot$4 = $44;$exn$slot$4 = $43;
                }
               }
              } else {
               $52 = $13;$t$0 = $call9;
               label = 55;
              }
             } else {
              $52 = $13;$t$0 = $call9;
              label = 55;
             }
            } while(0);
            L69: do {
             if ((label|0) == 55) {
              $first95 = ((($52)) + -24|0);
              __THREW__ = 0;
              invoke_vii(52,($first95|0),40);
              $53 = __THREW__; __THREW__ = 0;
              $54 = $53&1;
              if ($54) {
               label = 34;
              } else {
               $cmp98 = ($t$0|0)==($last|0);
               if ($cmp98) {
                label = 58;
               } else {
                $55 = HEAP8[$t$0>>0]|0;
                $cmp101 = ($55<<24>>24)==(118);
                if ($cmp101) {
                 $incdec$ptr = ((($t$0)) + 1|0);
                 $$pre331 = HEAP32[$db>>2]|0;
                 $$pre332 = HEAP32[$__end_$i281>>2]|0;
                 $100 = $$pre331;$101 = $$pre332;$t$3 = $incdec$ptr;
                } else {
                 label = 58;
                }
               }
               do {
                if ((label|0) == 58) {
                 $__size_$i$i$i170 = ((($tmp)) + 11|0);
                 $__size_$i3$i$i172 = ((($tmp)) + 4|0);
                 $__size_$i$i$i$i$i156 = ((($ref$tmp)) + 11|0);
                 $__size_$i3$i$i$i161 = ((($ref$tmp)) + 4|0);
                 $first_arg$0$off0$ph = 1;$t$1$ph = $t$0;
                 L77: while(1) {
                  $$pre326 = HEAP32[$__end_$i281>>2]|0;
                  $$pre327 = HEAP32[$db>>2]|0;
                  $56 = $$pre326;$57 = $$pre327;$t$1 = $t$1$ph;
                  while(1) {
                   $sub$ptr$sub$i181 = (($56) - ($57))|0;
                   $sub$ptr$div$i182 = (($sub$ptr$sub$i181|0) / 24)&-1;
                   __THREW__ = 0;
                   $call107 = (invoke_iiii(50,($t$1|0),($last|0),($db|0))|0);
                   $58 = __THREW__; __THREW__ = 0;
                   $59 = $58&1;
                   if ($59) {
                    label = 62;
                    break L77;
                   }
                   $60 = HEAP32[$__end_$i281>>2]|0;
                   $61 = HEAP32[$db>>2]|0;
                   $sub$ptr$sub$i = (($60) - ($61))|0;
                   $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
                   $cmp110 = ($call107|0)==($t$1|0);
                   if ($cmp110) {
                    label = 92;
                    break L77;
                   }
                   $cmp113 = ($sub$ptr$div$i>>>0)>($sub$ptr$div$i182>>>0);
                   if ($cmp113) {
                    break;
                   } else {
                    $56 = $60;$57 = $61;$t$1 = $call107;
                   }
                  }
                  ;HEAP32[$tmp>>2]=0|0;HEAP32[$tmp+4>>2]=0|0;HEAP32[$tmp+8>>2]=0|0;
                  $__i$0$i$i = 0;
                  while(1) {
                   $exitcond$i$i = ($__i$0$i$i|0)==(3);
                   if ($exitcond$i$i) {
                    $k$0 = $sub$ptr$div$i182;
                    break;
                   }
                   $arrayidx$i$i = (($tmp) + ($__i$0$i$i<<2)|0);
                   HEAP32[$arrayidx$i$i>>2] = 0;
                   $inc$i$i = (($__i$0$i$i) + 1)|0;
                   $__i$0$i$i = $inc$i$i;
                  }
                  while(1) {
                   $cmp116 = ($k$0>>>0)<($sub$ptr$div$i>>>0);
                   if (!($cmp116)) {
                    $k134$0 = $sub$ptr$div$i182;
                    break;
                   }
                   $64 = HEAP8[$__size_$i$i$i170>>0]|0;
                   $tobool$i$i$i171 = ($64<<24>>24)<(0);
                   $65 = HEAP32[$__size_$i3$i$i172>>2]|0;
                   $conv$i$i$i174 = $64&255;
                   $cond$i$i176 = $tobool$i$i$i171 ? $65 : $conv$i$i$i174;
                   $cmp$i177 = ($cond$i$i176|0)==(0);
                   if (!($cmp$i177)) {
                    __THREW__ = 0;
                    (invoke_iii(54,($tmp|0),(6060|0))|0);
                    $66 = __THREW__; __THREW__ = 0;
                    $67 = $66&1;
                    if ($67) {
                     label = 70;
                     break L77;
                    }
                   }
                   $70 = HEAP32[$db>>2]|0;
                   $arrayidx$i = (($70) + (($k$0*24)|0)|0);
                   __THREW__ = 0;
                   invoke_vii(55,($ref$tmp|0),($arrayidx$i|0));
                   $71 = __THREW__; __THREW__ = 0;
                   $72 = $71&1;
                   if ($72) {
                    label = 74;
                    break L77;
                   }
                   $73 = HEAP8[$__size_$i$i$i$i$i156>>0]|0;
                   $tobool$i$i$i$i$i157 = ($73<<24>>24)<(0);
                   $74 = HEAP32[$ref$tmp>>2]|0;
                   $cond$i$i$i$i160 = $tobool$i$i$i$i$i157 ? $74 : $ref$tmp;
                   $75 = HEAP32[$__size_$i3$i$i$i161>>2]|0;
                   $conv$i$i$i$i162 = $73&255;
                   $cond$i$i$i163 = $tobool$i$i$i$i$i157 ? $75 : $conv$i$i$i$i162;
                   __THREW__ = 0;
                   (invoke_iiii(47,($tmp|0),($cond$i$i$i$i160|0),($cond$i$i$i163|0))|0);
                   $76 = __THREW__; __THREW__ = 0;
                   $77 = $76&1;
                   if ($77) {
                    label = 75;
                    break L77;
                   }
                   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
                   $inc131 = (($k$0) + 1)|0;
                   $k$0 = $inc131;
                  }
                  while(1) {
                   $cmp136 = ($k134$0>>>0)<($sub$ptr$div$i>>>0);
                   if (!($cmp136)) {
                    break;
                   }
                   $84 = HEAP32[$__end_$i281>>2]|0;
                   $add$ptr$i153 = ((($84)) + -24|0);
                   $85 = $84;
                   while(1) {
                    $cmp$i$i$i = ($85|0)==($add$ptr$i153|0);
                    if ($cmp$i$i$i) {
                     break;
                    }
                    $incdec$ptr$i$i$i = ((($85)) + -24|0);
                    HEAP32[$__end_$i281>>2] = $incdec$ptr$i$i$i;
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
                    $$pre$i = HEAP32[$__end_$i281>>2]|0;
                    $85 = $$pre$i;
                   }
                   $inc143 = (($k134$0) + 1)|0;
                   $k134$0 = $inc143;
                  }
                  $82 = HEAP8[$__size_$i$i$i170>>0]|0;
                  $tobool$i$i$i = ($82<<24>>24)<(0);
                  $83 = HEAP32[$__size_$i3$i$i172>>2]|0;
                  $conv$i$i$i = $82&255;
                  $cond$i$i = $tobool$i$i$i ? $83 : $conv$i$i$i;
                  $cmp$i154 = ($cond$i$i|0)==(0);
                  if ($cmp$i154) {
                   $first_arg$3$off0$ph = $first_arg$0$off0$ph;
                  } else {
                   $86 = HEAP32[$db>>2]|0;
                   $87 = HEAP32[$__end_$i281>>2]|0;
                   $cmp$i151 = ($86|0)==($87|0);
                   if ($cmp$i151) {
                    label = 105;
                    break;
                   }
                   if ($first_arg$0$off0$ph) {
                    $92 = $87;$93 = $82;$95 = $83;
                   } else {
                    $first158 = ((($87)) + -24|0);
                    __THREW__ = 0;
                    (invoke_iii(54,($first158|0),(6060|0))|0);
                    $88 = __THREW__; __THREW__ = 0;
                    $89 = $88&1;
                    if ($89) {
                     label = 87;
                     break;
                    }
                    $$pre328 = HEAP32[$__end_$i281>>2]|0;
                    $$pre329 = HEAP8[$__size_$i$i$i170>>0]|0;
                    $$pre330 = HEAP32[$__size_$i3$i$i172>>2]|0;
                    $92 = $$pre328;$93 = $$pre329;$95 = $$pre330;
                   }
                   $first166 = ((($92)) + -24|0);
                   $tobool$i$i$i$i$i135 = ($93<<24>>24)<(0);
                   $94 = HEAP32[$tmp>>2]|0;
                   $cond$i$i$i$i138 = $tobool$i$i$i$i$i135 ? $94 : $tmp;
                   $conv$i$i$i$i140 = $93&255;
                   $cond$i$i$i141 = $tobool$i$i$i$i$i135 ? $95 : $conv$i$i$i$i140;
                   __THREW__ = 0;
                   (invoke_iiii(47,($first166|0),($cond$i$i$i$i138|0),($cond$i$i$i141|0))|0);
                   $96 = __THREW__; __THREW__ = 0;
                   $97 = $96&1;
                   if ($97) {
                    label = 87;
                    break;
                   } else {
                    $first_arg$3$off0$ph = 0;
                   }
                  }
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
                  $first_arg$0$off0$ph = $first_arg$3$off0$ph;$t$1$ph = $call107;
                 }
                 if ((label|0) == 62) {
                  $62 = ___cxa_find_matching_catch_2()|0;
                  $63 = tempRet0;
                  $ehselector$slot$4 = $63;$exn$slot$4 = $62;
                  break L69;
                 }
                 else if ((label|0) == 70) {
                  $68 = ___cxa_find_matching_catch_2()|0;
                  $69 = tempRet0;
                  $ehselector$slot$2 = $69;$exn$slot$2 = $68;
                 }
                 else if ((label|0) == 74) {
                  $78 = ___cxa_find_matching_catch_2()|0;
                  $79 = tempRet0;
                  $ehselector$slot$0 = $79;$exn$slot$0 = $78;
                  label = 76;
                 }
                 else if ((label|0) == 75) {
                  $80 = ___cxa_find_matching_catch_2()|0;
                  $81 = tempRet0;
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
                  $ehselector$slot$0 = $81;$exn$slot$0 = $80;
                  label = 76;
                 }
                 else if ((label|0) == 87) {
                  $90 = ___cxa_find_matching_catch_2()|0;
                  $91 = tempRet0;
                  $ehselector$slot$2 = $91;$exn$slot$2 = $90;
                 }
                 else if ((label|0) == 92) {
                  $98 = $60;
                  $99 = $61;
                  $100 = $99;$101 = $98;$t$3 = $t$1;
                  break;
                 }
                 else if ((label|0) == 105) {
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
                  $cleanup$dest$slot$4 = 0;$first$addr$1 = $first;
                  break L17;
                 }
                 if ((label|0) == 76) {
                  $ehselector$slot$2 = $ehselector$slot$0;$exn$slot$2 = $exn$slot$0;
                 }
                 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
                 $ehselector$slot$4 = $ehselector$slot$2;$exn$slot$4 = $exn$slot$2;
                 break L69;
                }
               } while(0);
               $cmp$i = ($100|0)==($101|0);
               if ($cmp$i) {
                $cleanup$dest$slot$4 = 0;$first$addr$1 = $first;
                break L17;
               }
               $first192 = ((($101)) + -24|0);
               __THREW__ = 0;
               invoke_vii(52,($first192|0),41);
               $102 = __THREW__; __THREW__ = 0;
               $103 = $102&1;
               if ($103) {
                label = 34;
               } else {
                $and = $9 & 1;
                $tobool195 = ($and|0)==(0);
                if (!($tobool195)) {
                 $104 = HEAP32[$__end_$i281>>2]|0;
                 $first200 = ((($104)) + -24|0);
                 __THREW__ = 0;
                 (invoke_iii(54,($first200|0),(5783|0))|0);
                 $105 = __THREW__; __THREW__ = 0;
                 $106 = $105&1;
                 if ($106) {
                  label = 34;
                  break;
                 }
                }
                $and204 = $9 & 2;
                $tobool205 = ($and204|0)==(0);
                if (!($tobool205)) {
                 $107 = HEAP32[$__end_$i281>>2]|0;
                 $first210 = ((($107)) + -24|0);
                 __THREW__ = 0;
                 (invoke_iii(54,($first210|0),(5790|0))|0);
                 $108 = __THREW__; __THREW__ = 0;
                 $109 = $108&1;
                 if ($109) {
                  label = 34;
                  break;
                 }
                }
                $and214 = $9 & 4;
                $tobool215 = ($and214|0)==(0);
                if (!($tobool215)) {
                 $110 = HEAP32[$__end_$i281>>2]|0;
                 $first220 = ((($110)) + -24|0);
                 __THREW__ = 0;
                 (invoke_iii(54,($first220|0),(5800|0))|0);
                 $111 = __THREW__; __THREW__ = 0;
                 $112 = $111&1;
                 if ($112) {
                  label = 34;
                  break;
                 }
                }
                switch ($10|0) {
                case 1:  {
                 $113 = HEAP32[$__end_$i281>>2]|0;
                 $first229 = ((($113)) + -24|0);
                 __THREW__ = 0;
                 (invoke_iii(54,($first229|0),(7393|0))|0);
                 $114 = __THREW__; __THREW__ = 0;
                 $115 = $114&1;
                 if ($115) {
                  label = 34;
                  break L69;
                 }
                 break;
                }
                case 2:  {
                 $116 = HEAP32[$__end_$i281>>2]|0;
                 $first238 = ((($116)) + -24|0);
                 __THREW__ = 0;
                 (invoke_iii(54,($first238|0),(7396|0))|0);
                 $117 = __THREW__; __THREW__ = 0;
                 $118 = $117&1;
                 if ($118) {
                  label = 34;
                  break L69;
                 }
                 break;
                }
                default: {
                }
                }
                $119 = HEAP32[$__end_$i281>>2]|0;
                $first246 = ((($119)) + -24|0);
                $__size_$i$i$i$i$i = ((($ret2)) + 11|0);
                $120 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
                $tobool$i$i$i$i$i = ($120<<24>>24)<(0);
                $121 = HEAP32[$ret2>>2]|0;
                $cond$i$i$i$i = $tobool$i$i$i$i$i ? $121 : $ret2;
                $__size_$i3$i$i$i = ((($ret2)) + 4|0);
                $122 = HEAP32[$__size_$i3$i$i$i>>2]|0;
                $conv$i$i$i$i = $120&255;
                $cond$i$i$i = $tobool$i$i$i$i$i ? $122 : $conv$i$i$i$i;
                __THREW__ = 0;
                (invoke_iiii(47,($first246|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
                $123 = __THREW__; __THREW__ = 0;
                $124 = $123&1;
                if ($124) {
                 label = 34;
                } else {
                 $cleanup$dest$slot$4 = 1;$first$addr$1 = $t$3;
                 break L17;
                }
               }
              }
             }
            } while(0);
            if ((label|0) == 34) {
             $28 = ___cxa_find_matching_catch_2()|0;
             $29 = tempRet0;
             $ehselector$slot$4 = $29;$exn$slot$4 = $28;
            }
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret2);
            __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($sb2);
            $ehselector$slot$5 = $ehselector$slot$4;$exn$slot$5 = $exn$slot$4;
            break L6;
           }
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret2);
         __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($sb2);
         if ($cleanup$dest$slot$4) {
          $first$addr$2 = $first$addr$1;
         } else {
          $cleanup$dest$slot$6 = 0;$first$addr$5 = $first$addr$1;
          label = 109;
          break L6;
         }
        }
       }
      } while(0);
      $cleanup$dest$slot$6 = 1;$first$addr$5 = $first$addr$2;
      label = 109;
     }
    }
    }
   } while(0);
   if ((label|0) == 6) {
    $5 = ___cxa_find_matching_catch_2()|0;
    $6 = tempRet0;
    $ehselector$slot$5 = $6;$exn$slot$5 = $5;
   }
   else if ((label|0) == 109) {
    __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($sb);
    __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev($su);
    if ($cleanup$dest$slot$6) {
     $first$addr$6 = $first$addr$5;
     label = 111;
     break;
    } else {
     $retval$11 = $first;
     break;
    }
   }
   __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($sb);
   __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev($su);
   ___resumeException($exn$slot$5|0);
   // unreachable;
  }
 } while(0);
 if ((label|0) == 111) {
  $retval$11 = $first$addr$6;
 }
 STACKTOP = sp;return ($retval$11|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0;
 var $__i$0$i$i$i = 0, $__i$0$i$i$i10 = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i13 = 0, $call$i17 = 0, $call$i8 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i11 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0;
 var $first11 = 0, $inc$i$i$i = 0, $inc$i$i$i14 = 0, $ref$tmp = 0, $ref$tmp3 = 0, $ref$tmp4 = 0, $retval$0 = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $ref$tmp = sp + 24|0;
 $ref$tmp3 = sp + 12|0;
 $ref$tmp4 = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$0 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(46);
   if ($cmp1) {
    $1 = HEAP32[$db>>2]|0;
    $__end_$i = ((($db)) + 4|0);
    $2 = HEAP32[$__end_$i>>2]|0;
    $cmp$i = ($1|0)==($2|0);
    if ($cmp$i) {
     $retval$0 = $first;
    } else {
     ;HEAP32[$ref$tmp4>>2]=0|0;HEAP32[$ref$tmp4+4>>2]=0|0;HEAP32[$ref$tmp4+8>>2]=0|0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($ref$tmp4,$first,$last);
     __THREW__ = 0;
     $call$i8 = (invoke_iiii(56,($ref$tmp4|0),0,(5833|0))|0);
     $3 = __THREW__; __THREW__ = 0;
     $4 = $3&1;
     if ($4) {
      $13 = ___cxa_find_matching_catch_2()|0;
      $14 = tempRet0;
      $ehselector$slot$1 = $14;$exn$slot$1 = $13;
     } else {
      ;HEAP32[$ref$tmp3>>2]=HEAP32[$ref$tmp4>>2]|0;HEAP32[$ref$tmp3+4>>2]=HEAP32[$ref$tmp4+4>>2]|0;HEAP32[$ref$tmp3+8>>2]=HEAP32[$ref$tmp4+8>>2]|0;
      $__i$0$i$i$i = 0;
      while(1) {
       $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
       if ($exitcond$i$i$i) {
        break;
       }
       $arrayidx$i$i$i = (($ref$tmp4) + ($__i$0$i$i$i<<2)|0);
       HEAP32[$arrayidx$i$i$i>>2] = 0;
       $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
       $__i$0$i$i$i = $inc$i$i$i;
      }
      __THREW__ = 0;
      $call$i17 = (invoke_iii(54,($ref$tmp3|0),(5836|0))|0);
      $5 = __THREW__; __THREW__ = 0;
      $6 = $5&1;
      do {
       if ($6) {
        $15 = ___cxa_find_matching_catch_2()|0;
        $16 = tempRet0;
        $ehselector$slot$0 = $16;$exn$slot$0 = $15;
       } else {
        ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp3>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp3+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp3+8>>2]|0;
        $__i$0$i$i$i10 = 0;
        while(1) {
         $exitcond$i$i$i11 = ($__i$0$i$i$i10|0)==(3);
         if ($exitcond$i$i$i11) {
          break;
         }
         $arrayidx$i$i$i13 = (($ref$tmp3) + ($__i$0$i$i$i10<<2)|0);
         HEAP32[$arrayidx$i$i$i13>>2] = 0;
         $inc$i$i$i14 = (($__i$0$i$i$i10) + 1)|0;
         $__i$0$i$i$i10 = $inc$i$i$i14;
        }
        $7 = HEAP32[$__end_$i>>2]|0;
        $first11 = ((($7)) + -24|0);
        $__size_$i$i$i$i$i = ((($ref$tmp)) + 11|0);
        $8 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
        $tobool$i$i$i$i$i = ($8<<24>>24)<(0);
        $9 = HEAP32[$ref$tmp>>2]|0;
        $cond$i$i$i$i = $tobool$i$i$i$i$i ? $9 : $ref$tmp;
        $__size_$i3$i$i$i = ((($ref$tmp)) + 4|0);
        $10 = HEAP32[$__size_$i3$i$i$i>>2]|0;
        $conv$i$i$i$i = $8&255;
        $cond$i$i$i = $tobool$i$i$i$i$i ? $10 : $conv$i$i$i$i;
        __THREW__ = 0;
        (invoke_iiii(47,($first11|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
        $11 = __THREW__; __THREW__ = 0;
        $12 = $11&1;
        if ($12) {
         $17 = ___cxa_find_matching_catch_2()|0;
         $18 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
         $ehselector$slot$0 = $18;$exn$slot$0 = $17;
         break;
        } else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp3);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp4);
         $retval$0 = $last;
         break L1;
        }
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp3);
      $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp4);
     ___resumeException($exn$slot$1|0);
     // unreachable;
    }
   } else {
    $retval$0 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__end_$i = 0, $arrayidx = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp11 = 0, $cmp17 = 0, $cmp3 = 0, $cmp5 = 0, $cmp8 = 0, $conv12 = 0, $conv18 = 0, $first28 = 0;
 var $i$0 = 0, $inc = 0, $incdec$ptr10 = 0, $incdec$ptr15 = 0, $incdec$ptr21 = 0, $isdigit = 0, $isdigit26 = 0, $isdigittmp = 0, $isdigittmp25 = 0, $retval$2 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t$0 = 0, $t$1 = 0, $t$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(12);
 L1: do {
  if ($cmp) {
   $i$0 = 0;$t$0 = $first;
   while(1) {
    $cmp1 = ($i$0|0)<(13);
    $incdec$ptr10 = ((($t$0)) + 1|0);
    if (!($cmp1)) {
     break;
    }
    $0 = HEAP8[$t$0>>0]|0;
    $arrayidx = (7598 + ($i$0)|0);
    $1 = HEAP8[$arrayidx>>0]|0;
    $cmp3 = ($0<<24>>24)==($1<<24>>24);
    $inc = (($i$0) + 1)|0;
    if ($cmp3) {
     $i$0 = $inc;$t$0 = $incdec$ptr10;
    } else {
     $retval$2 = $first;
     break L1;
    }
   }
   $cmp5 = ($t$0|0)==($last|0);
   L6: do {
    if ($cmp5) {
     $t$2 = $last;
    } else {
     $2 = HEAP8[$t$0>>0]|0;
     $cmp8 = ($2<<24>>24)==(95);
     if ($cmp8) {
      $cmp11 = ($incdec$ptr10|0)==($last|0);
      if ($cmp11) {
       $retval$2 = $first;
       break L1;
      }
      $3 = HEAP8[$incdec$ptr10>>0]|0;
      $conv12 = $3 << 24 >> 24;
      $isdigittmp25 = (($conv12) + -48)|0;
      $isdigit26 = ($isdigittmp25>>>0)<(10);
      if (!($isdigit26)) {
       $retval$2 = $first;
       break L1;
      }
      $incdec$ptr15 = ((($t$0)) + 2|0);
      $t$1 = $incdec$ptr15;
     } else {
      $t$1 = $t$0;
     }
     while(1) {
      $cmp17 = ($t$1|0)==($last|0);
      if ($cmp17) {
       $t$2 = $last;
       break L6;
      }
      $4 = HEAP8[$t$1>>0]|0;
      $conv18 = $4 << 24 >> 24;
      $isdigittmp = (($conv18) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if (!($isdigit)) {
       $t$2 = $t$1;
       break L6;
      }
      $incdec$ptr21 = ((($t$1)) + 1|0);
      $t$1 = $incdec$ptr21;
     }
    }
   } while(0);
   $5 = HEAP32[$db>>2]|0;
   $__end_$i = ((($db)) + 4|0);
   $6 = HEAP32[$__end_$i>>2]|0;
   $cmp$i = ($5|0)==($6|0);
   if ($cmp$i) {
    $retval$2 = $first;
   } else {
    $first28 = ((($6)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first28,0,7612)|0);
    $retval$2 = $t$2;
   }
  } else {
   $retval$2 = $first;
  }
 } while(0);
 return ($retval$2|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$ph = 0, $$pre$i = 0, $$pre$i1004 = 0, $$pre$i1050 = 0, $$pre$i490 = 0, $$pre$i937 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i = 0, $__end_$i$i$i$i = 0, $__end_$i$i$i$i$i = 0, $__end_$i$i$i$i$i380 = 0, $__end_$i$i$i$i$i404 = 0, $__end_$i$i$i$i$i436 = 0, $__end_$i$i$i$i$i453 = 0, $__end_$i$i$i$i$i498 = 0, $__end_$i$i$i$i$i546 = 0, $__end_$i$i$i$i$i570 = 0, $__end_$i$i$i$i$i596 = 0, $__end_$i$i$i$i$i622 = 0;
 var $__end_$i$i$i$i$i650 = 0, $__end_$i$i$i$i$i677 = 0, $__end_$i$i$i$i$i701 = 0, $__end_$i$i$i$i$i761 = 0, $__end_$i$i$i$i$i838 = 0, $__end_$i$i$i$i$i910 = 0, $__end_$i$i$i$i$i963 = 0, $__end_$i$i$i$i$i981 = 0, $__end_$i$i$i$i384 = 0, $__end_$i$i$i$i408 = 0, $__end_$i$i$i$i457 = 0, $__end_$i$i$i$i550 = 0, $__end_$i$i$i$i574 = 0, $__end_$i$i$i$i600 = 0, $__end_$i$i$i$i626 = 0, $__end_$i$i$i$i654 = 0, $__end_$i$i$i$i681 = 0, $__end_$i$i$i$i967 = 0, $__end_$i$i$i$i985 = 0, $__end_$i373 = 0;
 var $__end_$i375 = 0, $__end_$i397 = 0, $__end_$i399 = 0, $__end_$i421 = 0, $__end_$i423 = 0, $__end_$i432 = 0, $__end_$i445 = 0, $__end_$i448 = 0, $__end_$i476 = 0, $__end_$i479 = 0, $__end_$i485 = 0, $__end_$i534 = 0, $__end_$i541 = 0, $__end_$i559 = 0, $__end_$i565 = 0, $__end_$i583 = 0, $__end_$i591 = 0, $__end_$i611 = 0, $__end_$i617 = 0, $__end_$i637 = 0;
 var $__end_$i645 = 0, $__end_$i663 = 0, $__end_$i666 = 0, $__end_$i672 = 0, $__end_$i689 = 0, $__end_$i697 = 0, $__end_$i741 = 0, $__end_$i749 = 0, $__end_$i757 = 0, $__end_$i818 = 0, $__end_$i826 = 0, $__end_$i834 = 0, $__end_$i890 = 0, $__end_$i898 = 0, $__end_$i906 = 0, $__end_$i922 = 0, $__end_$i976 = 0, $__end_$i994 = 0, $__end_cap_$i$i$i$i$i = 0, $__end_cap_$i$i$i$i$i381 = 0;
 var $__end_cap_$i$i$i$i$i405 = 0, $__end_cap_$i$i$i$i$i437 = 0, $__end_cap_$i$i$i$i$i454 = 0, $__end_cap_$i$i$i$i$i499 = 0, $__end_cap_$i$i$i$i$i547 = 0, $__end_cap_$i$i$i$i$i571 = 0, $__end_cap_$i$i$i$i$i597 = 0, $__end_cap_$i$i$i$i$i623 = 0, $__end_cap_$i$i$i$i$i651 = 0, $__end_cap_$i$i$i$i$i678 = 0, $__end_cap_$i$i$i$i$i702 = 0, $__end_cap_$i$i$i$i$i762 = 0, $__end_cap_$i$i$i$i$i839 = 0, $__end_cap_$i$i$i$i$i911 = 0, $__end_cap_$i$i$i$i$i964 = 0, $__end_cap_$i$i$i$i$i982 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i1139 = 0, $__first_$i$i$i$i376 = 0, $__first_$i$i$i$i400 = 0;
 var $__first_$i$i$i$i424 = 0, $__first_$i$i$i$i433 = 0, $__first_$i$i$i$i449 = 0, $__first_$i$i$i$i495 = 0, $__first_$i$i$i$i535 = 0, $__first_$i$i$i$i542 = 0, $__first_$i$i$i$i566 = 0, $__first_$i$i$i$i592 = 0, $__first_$i$i$i$i618 = 0, $__first_$i$i$i$i646 = 0, $__first_$i$i$i$i673 = 0, $__first_$i$i$i$i698 = 0, $__first_$i$i$i$i742 = 0, $__first_$i$i$i$i758 = 0, $__first_$i$i$i$i819 = 0, $__first_$i$i$i$i835 = 0, $__first_$i$i$i$i891 = 0, $__first_$i$i$i$i907 = 0, $__first_$i$i$i$i923 = 0, $__first_$i$i$i$i977 = 0;
 var $__first_$i$i$i7$i$i$i$i = 0, $__first_$i$i$i7$i$i$i$i386 = 0, $__first_$i$i$i7$i$i$i$i410 = 0, $__first_$i$i$i7$i$i$i$i459 = 0, $__first_$i$i$i7$i$i$i$i552 = 0, $__first_$i$i$i7$i$i$i$i576 = 0, $__first_$i$i$i7$i$i$i$i602 = 0, $__first_$i$i$i7$i$i$i$i628 = 0, $__first_$i$i$i7$i$i$i$i656 = 0, $__first_$i$i$i7$i$i$i$i683 = 0, $__first_$i$i$i7$i$i$i$i969 = 0, $__first_$i$i$i7$i$i$i$i987 = 0, $__first_$i$i$i8$i$i$i$i = 0, $__first_$i$i$i8$i$i$i$i385 = 0, $__first_$i$i$i8$i$i$i$i409 = 0, $__first_$i$i$i8$i$i$i$i458 = 0, $__first_$i$i$i8$i$i$i$i551 = 0, $__first_$i$i$i8$i$i$i$i575 = 0, $__first_$i$i$i8$i$i$i$i601 = 0, $__first_$i$i$i8$i$i$i$i627 = 0;
 var $__first_$i$i$i8$i$i$i$i655 = 0, $__first_$i$i$i8$i$i$i$i682 = 0, $__first_$i$i$i8$i$i$i$i968 = 0, $__first_$i$i$i8$i$i$i$i986 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i1101 = 0, $__i$0$i$i$i1111 = 0, $__i$0$i$i$i1131 = 0, $__second_$i$i$i$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i378 = 0, $__second_$i$i$i$i$i$i$i402 = 0, $__second_$i$i$i$i$i$i$i438 = 0, $__second_$i$i$i$i$i$i$i451 = 0, $__second_$i$i$i$i$i$i$i500 = 0, $__second_$i$i$i$i$i$i$i544 = 0, $__second_$i$i$i$i$i$i$i568 = 0, $__second_$i$i$i$i$i$i$i594 = 0, $__second_$i$i$i$i$i$i$i620 = 0, $__second_$i$i$i$i$i$i$i648 = 0, $__second_$i$i$i$i$i$i$i675 = 0;
 var $__second_$i$i$i$i$i$i$i703 = 0, $__second_$i$i$i$i$i$i$i763 = 0, $__second_$i$i$i$i$i$i$i840 = 0, $__second_$i$i$i$i$i$i$i912 = 0, $__second_$i$i$i$i$i$i$i961 = 0, $__second_$i$i$i$i$i$i$i979 = 0, $__second_$i$i$i9$i$i$i$i = 0, $__second_$i$i$i9$i$i$i$i382 = 0, $__second_$i$i$i9$i$i$i$i406 = 0, $__second_$i$i$i9$i$i$i$i455 = 0, $__second_$i$i$i9$i$i$i$i548 = 0, $__second_$i$i$i9$i$i$i$i572 = 0, $__second_$i$i$i9$i$i$i$i598 = 0, $__second_$i$i$i9$i$i$i$i624 = 0, $__second_$i$i$i9$i$i$i$i652 = 0, $__second_$i$i$i9$i$i$i$i679 = 0, $__second_$i$i$i9$i$i$i$i965 = 0, $__second_$i$i$i9$i$i$i$i983 = 0, $__size_$i$i = 0, $__size_$i$i$i$i = 0;
 var $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i1030 = 0, $__size_$i$i$i$i$i1091 = 0, $__size_$i$i$i$i$i943 = 0, $__size_$i$i$i$i1012 = 0, $__size_$i$i$i1054 = 0, $__size_$i$i$i711 = 0, $__size_$i$i$i723 = 0, $__size_$i$i$i773 = 0, $__size_$i$i$i794 = 0, $__size_$i$i$i850 = 0, $__size_$i$i$i871 = 0, $__size_$i3$i = 0, $__size_$i3$i$i = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i1014 = 0, $__size_$i3$i$i$i1035 = 0, $__size_$i3$i$i$i1096 = 0, $__size_$i3$i$i$i1126 = 0, $__size_$i3$i$i$i809 = 0;
 var $__size_$i3$i$i$i948 = 0, $__size_$i3$i$i713 = 0, $__size_$i3$i$i775 = 0, $__size_$i3$i$i852 = 0, $__size_$i3$i1073 = 0, $add = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i1000 = 0, $add$ptr$i1028 = 0, $add$ptr$i1042 = 0, $add$ptr$i1044 = 0, $add$ptr$i1046 = 0, $add$ptr$i1089 = 0, $add$ptr$i1119 = 0, $add$ptr$i1147 = 0, $add$ptr$i395 = 0, $add$ptr$i419 = 0, $add$ptr$i431 = 0, $add$ptr$i468 = 0;
 var $add$ptr$i473 = 0, $add$ptr$i475 = 0, $add$ptr$i486 = 0, $add$ptr$i509 = 0, $add$ptr$i517 = 0, $add$ptr$i531 = 0, $add$ptr$i562 = 0, $add$ptr$i588 = 0, $add$ptr$i614 = 0, $add$ptr$i635 = 0, $add$ptr$i642 = 0, $add$ptr$i669 = 0, $add$ptr$i738 = 0, $add$ptr$i815 = 0, $add$ptr$i887 = 0, $add$ptr$i919 = 0, $add$ptr$i931 = 0, $add$ptr$i933 = 0, $add$ptr$i955 = 0, $add$ptr$i998 = 0;
 var $add$ptr3$i = 0, $add$ptr5591155$ph = 0, $add$ptr5591155$ph1195 = 0, $add$ptr55911551159 = 0, $add$ptr562 = 0, $add$ptr566 = 0, $add$ptr731 = 0, $add449 = 0, $add53 = 0, $agg$tmp = 0, $agg$tmp570 = 0, $agg$tmp605 = 0, $and = 0, $and46 = 0, $and55 = 0, $args = 0, $arrayidx$i = 0, $arrayidx$i$i$i1039 = 0, $arrayidx$i$i$i1104 = 0, $arrayidx$i$i$i1114 = 0;
 var $arrayidx$i$i$i1134 = 0, $arrayidx$i533 = 0, $arrayidx$i740 = 0, $arrayidx$i817 = 0, $arrayidx$i889 = 0, $arrayidx$i921 = 0, $call = 0, $call$i = 0, $call$i$i = 0, $call$i$i1010 = 0, $call$i11091117 = 0, $call$i771 = 0, $call$i848 = 0, $call102 = 0, $call119 = 0, $call143 = 0, $call163 = 0, $call187 = 0, $call210 = 0, $call276 = 0;
 var $call3$i = 0, $call3$i$i = 0, $call3$i$i1019 = 0, $call3$i$i10381040 = 0, $call3$i$i10991107 = 0, $call3$i$i11291137 = 0, $call3$i780 = 0, $call3$i857 = 0, $call360 = 0, $call425 = 0, $call453 = 0, $call496 = 0, $call500 = 0, $call564 = 0, $call6 = 0, $call655 = 0, $call677 = 0, $call680 = 0, $call732 = 0, $call762 = 0;
 var $call784 = 0, $call807 = 0, $call811 = 0, $call96 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i1001 = 0, $cmp$i$i$i1047 = 0, $cmp$i$i$i487 = 0, $cmp$i$i$i934 = 0, $cmp$i$i1017 = 0, $cmp$i1140 = 0, $cmp$i374 = 0, $cmp$i377 = 0, $cmp$i398 = 0, $cmp$i401 = 0, $cmp$i422 = 0, $cmp$i425 = 0;
 var $cmp$i434 = 0, $cmp$i450 = 0, $cmp$i496 = 0, $cmp$i536 = 0, $cmp$i543 = 0, $cmp$i560 = 0, $cmp$i567 = 0, $cmp$i584 = 0, $cmp$i593 = 0, $cmp$i612 = 0, $cmp$i619 = 0, $cmp$i638 = 0, $cmp$i647 = 0, $cmp$i664 = 0, $cmp$i667 = 0, $cmp$i674 = 0, $cmp$i699 = 0, $cmp$i716 = 0, $cmp$i743 = 0, $cmp$i759 = 0;
 var $cmp$i778 = 0, $cmp$i820 = 0, $cmp$i836 = 0, $cmp$i855 = 0, $cmp$i892 = 0, $cmp$i908 = 0, $cmp$i924 = 0, $cmp$i960 = 0, $cmp$i978 = 0, $cmp1 = 0, $cmp103 = 0, $cmp121 = 0, $cmp144 = 0, $cmp15 = 0, $cmp165 = 0, $cmp188 = 0, $cmp215 = 0, $cmp224 = 0, $cmp247 = 0, $cmp26 = 0;
 var $cmp281 = 0, $cmp290 = 0, $cmp313 = 0, $cmp326 = 0, $cmp34 = 0, $cmp365 = 0, $cmp374 = 0, $cmp397 = 0, $cmp4 = 0, $cmp4$i = 0, $cmp4$i782 = 0, $cmp4$i859 = 0, $cmp429 = 0, $cmp438 = 0, $cmp450 = 0, $cmp454 = 0, $cmp493 = 0, $cmp498 = 0, $cmp501 = 0, $cmp505 = 0;
 var $cmp567 = 0, $cmp653 = 0, $cmp656 = 0, $cmp678 = 0, $cmp681 = 0, $cmp685 = 0, $cmp737 = 0, $cmp746 = 0, $cmp763 = 0, $cmp785 = 0, $cmp808 = 0, $cmp812 = 0, $cmp9 = 0, $cmp97 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i1034 = 0, $cond$i$i$i$i1095 = 0, $cond$i$i$i$i1125 = 0;
 var $cond$i$i$i$i947 = 0, $cond$i$i$i1016 = 0, $cond$i$i$i1037 = 0, $cond$i$i$i1098 = 0, $cond$i$i$i1128 = 0, $cond$i$i$i811 = 0, $cond$i$i$i950 = 0, $cond$i$i10681161 = 0, $cond$i$i1086 = 0, $cond$i$i715 = 0, $cond$i$i729 = 0, $cond$i$i777 = 0, $cond$i$i800 = 0, $cond$i$i854 = 0, $cond$i$i877 = 0, $cond$i1077 = 0, $cond$i6$i = 0, $cond$i7$i = 0, $conv = 0, $conv$i$i = 0;
 var $conv$i$i$i = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i1015 = 0, $conv$i$i$i$i1036 = 0, $conv$i$i$i$i1097 = 0, $conv$i$i$i$i1127 = 0, $conv$i$i$i$i810 = 0, $conv$i$i$i$i949 = 0, $conv$i$i$i714 = 0, $conv$i$i$i776 = 0, $conv$i$i$i853 = 0, $conv$i$i1075 = 0, $conv100 = 0, $conv726 = 0, $cv = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$10 = 0, $ehselector$slot$11 = 0, $ehselector$slot$12 = 0;
 var $ehselector$slot$13 = 0, $ehselector$slot$14 = 0, $ehselector$slot$15 = 0, $ehselector$slot$16 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $ehselector$slot$6 = 0, $ehselector$slot$7 = 0, $ehselector$slot$8 = 0, $ehselector$slot$9 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i1102 = 0, $exitcond$i$i$i1112 = 0, $exitcond$i$i$i1132 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$10 = 0, $exn$slot$11 = 0, $exn$slot$12 = 0, $exn$slot$13 = 0;
 var $exn$slot$14 = 0, $exn$slot$15 = 0, $exn$slot$16 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $exn$slot$6 = 0, $exn$slot$7 = 0, $exn$slot$8 = 0, $exn$slot$9 = 0, $first$addr$1 = 0, $first129 = 0, $first173 = 0, $first235 = 0, $first251 = 0, $first261 = 0, $first301 = 0, $first317 = 0, $first330 = 0, $first339 = 0, $first3391151 = 0;
 var $first3391152 = 0, $first385 = 0, $first401 = 0, $first411 = 0, $first465 = 0, $first518 = 0, $first69 = 0, $first696 = 0, $first77 = 0, $first85 = 0, $inc = 0, $inc$i$i$i = 0, $inc$i$i$i1105 = 0, $inc$i$i$i1115 = 0, $inc$i$i$i1135 = 0, $inc268 = 0, $inc352 = 0, $inc418 = 0, $inc446 = 0, $inc754 = 0;
 var $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i1003 = 0, $incdec$ptr$i$i$i1049 = 0, $incdec$ptr$i$i$i489 = 0, $incdec$ptr$i$i$i936 = 0, $incdec$ptr$i1141 = 0, $incdec$ptr$i387 = 0, $incdec$ptr$i411 = 0, $incdec$ptr$i426 = 0, $incdec$ptr$i439 = 0, $incdec$ptr$i460 = 0, $incdec$ptr$i501 = 0, $incdec$ptr$i537 = 0, $incdec$ptr$i553 = 0, $incdec$ptr$i577 = 0, $incdec$ptr$i603 = 0, $incdec$ptr$i629 = 0, $incdec$ptr$i657 = 0, $incdec$ptr$i684 = 0;
 var $incdec$ptr$i704 = 0, $incdec$ptr$i744 = 0, $incdec$ptr$i764 = 0, $incdec$ptr$i821 = 0, $incdec$ptr$i841 = 0, $incdec$ptr$i893 = 0, $incdec$ptr$i913 = 0, $incdec$ptr$i925 = 0, $incdec$ptr$i970 = 0, $incdec$ptr$i988 = 0, $k$0 = 0, $k222$0 = 0, $k288$0 = 0, $k372$0 = 0, $k436$0 = 0, $k744$0 = 0, $or$cond = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0;
 var $phitmp$i = 0, $phitmp$i1021 = 0, $proto = 0, $ref$tmp = 0, $ref$tmp110 = 0, $ref$tmp113 = 0, $ref$tmp132 = 0, $ref$tmp135 = 0, $ref$tmp151 = 0, $ref$tmp154 = 0, $ref$tmp176 = 0, $ref$tmp179 = 0, $ref$tmp195 = 0, $ref$tmp198 = 0, $ref$tmp218 = 0, $ref$tmp227 = 0, $ref$tmp284 = 0, $ref$tmp293 = 0, $ref$tmp327 = 0, $ref$tmp368 = 0;
 var $ref$tmp377 = 0, $ref$tmp432 = 0, $ref$tmp469 = 0, $ref$tmp474 = 0, $ref$tmp513 = 0, $ref$tmp523 = 0, $ref$tmp524 = 0, $ref$tmp527 = 0, $ref$tmp569 = 0, $ref$tmp571 = 0, $ref$tmp572 = 0, $ref$tmp575 = 0, $ref$tmp604 = 0, $ref$tmp606 = 0, $ref$tmp625 = 0, $ref$tmp630 = 0, $ref$tmp663 = 0, $ref$tmp666 = 0, $ref$tmp700 = 0, $ref$tmp705 = 0;
 var $ref$tmp740 = 0, $ref$tmp770 = 0, $ref$tmp773 = 0, $ref$tmp792 = 0, $ref$tmp795 = 0, $ref$tmp819 = 0, $ref$tmp822 = 0, $retval$0$i = 0, $retval$0$i785 = 0, $retval$0$i862 = 0, $retval$5 = 0, $retval$sroa$0$0$$sroa_idx$i = 0, $retval$sroa$0$0$$sroa_idx$i1148 = 0, $retval$sroa$0$0$$sroa_idx$i392 = 0, $retval$sroa$0$0$$sroa_idx$i416 = 0, $retval$sroa$0$0$$sroa_idx$i442 = 0, $retval$sroa$0$0$$sroa_idx$i465 = 0, $retval$sroa$0$0$$sroa_idx$i492 = 0, $retval$sroa$0$0$$sroa_idx$i563 = 0, $retval$sroa$0$0$$sroa_idx$i589 = 0;
 var $retval$sroa$0$0$$sroa_idx$i608 = 0, $retval$sroa$0$0$$sroa_idx$i615 = 0, $retval$sroa$0$0$$sroa_idx$i643 = 0, $retval$sroa$0$0$$sroa_idx$i670 = 0, $retval$sroa$0$0$$sroa_idx$i695 = 0, $retval$sroa$0$0$$sroa_idx$i755 = 0, $retval$sroa$0$0$$sroa_idx$i832 = 0, $retval$sroa$0$0$$sroa_idx$i904 = 0, $retval$sroa$0$0$copyload$i11491173 = 0, $retval$sroa$0$0$copyload$i1167 = 0, $retval$sroa$0$0$copyload$i3931168 = 0, $retval$sroa$0$0$copyload$i4171169 = 0, $retval$sroa$0$0$copyload$i4431170 = 0, $retval$sroa$0$0$copyload$i4661171 = 0, $retval$sroa$0$0$copyload$i4931166 = 0, $retval$sroa$0$0$copyload$i5641183 = 0, $retval$sroa$0$0$copyload$i5901182 = 0, $retval$sroa$0$0$copyload$i6091172 = 0, $retval$sroa$0$0$copyload$i6161181 = 0, $retval$sroa$0$0$copyload$i6441180 = 0;
 var $retval$sroa$0$0$copyload$i6711179 = 0, $retval$sroa$0$0$copyload$i6961178 = 0, $retval$sroa$0$0$copyload$i7561177 = 0, $retval$sroa$0$0$copyload$i8331176 = 0, $retval$sroa$0$0$copyload$i9051174 = 0, $retval$sroa$0$0$copyload$i9571175 = 0, $second = 0, $second230 = 0, $second239 = 0, $second244 = 0, $second255 = 0, $second296 = 0, $second305 = 0, $second310 = 0, $second321 = 0, $second380 = 0, $second389 = 0, $second394 = 0, $second405 = 0, $second51 = 0;
 var $second60 = 0, $sub$call20 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i447 = 0, $sub$ptr$div$i478 = 0, $sub$ptr$div$i481 = 0, $sub$ptr$div$i484 = 0, $sub$ptr$div$i691 = 0, $sub$ptr$div$i694 = 0, $sub$ptr$div$i751 = 0, $sub$ptr$div$i754 = 0, $sub$ptr$div$i828 = 0, $sub$ptr$div$i831 = 0, $sub$ptr$div$i900 = 0, $sub$ptr$div$i903 = 0, $sub$ptr$div$i996 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i446 = 0, $sub$ptr$sub$i477 = 0, $sub$ptr$sub$i480 = 0;
 var $sub$ptr$sub$i483 = 0, $sub$ptr$sub$i690 = 0, $sub$ptr$sub$i693 = 0, $sub$ptr$sub$i750 = 0, $sub$ptr$sub$i753 = 0, $sub$ptr$sub$i827 = 0, $sub$ptr$sub$i830 = 0, $sub$ptr$sub$i899 = 0, $sub$ptr$sub$i902 = 0, $sub$ptr$sub$i995 = 0, $sub1193 = 0, $sub1193$in = 0, $sub28 = 0, $subs818 = 0, $template_args = 0, $tobool$i$i = 0, $tobool$i$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i1031 = 0, $tobool$i$i$i$i$i1092 = 0;
 var $tobool$i$i$i$i$i1122 = 0, $tobool$i$i$i$i$i944 = 0, $tobool$i$i$i$i1013 = 0, $tobool$i$i$i1055 = 0, $tobool$i$i$i1081 = 0, $tobool$i$i$i712 = 0, $tobool$i$i$i724 = 0, $tobool$i$i$i774 = 0, $tobool$i$i$i795 = 0, $tobool$i$i$i851 = 0, $tobool$i$i$i872 = 0, $tobool39 = 0, $tobool448 = 0, $tobool47 = 0, $tobool56 = 0, $try_to_parse_template_args = 0, $type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(592|0);
 $cv = sp + 588|0;
 $ref$tmp = sp + 584|0;
 $ref$tmp110 = sp + 568|0;
 $ref$tmp113 = sp + 560|0;
 $ref$tmp132 = sp + 544|0;
 $ref$tmp135 = sp + 536|0;
 $ref$tmp151 = sp + 520|0;
 $ref$tmp154 = sp + 512|0;
 $ref$tmp176 = sp + 496|0;
 $ref$tmp179 = sp + 488|0;
 $ref$tmp195 = sp + 472|0;
 $ref$tmp198 = sp + 468|0;
 $ref$tmp218 = sp + 464|0;
 $ref$tmp227 = sp + 452|0;
 $ref$tmp284 = sp + 448|0;
 $ref$tmp293 = sp + 436|0;
 $ref$tmp327 = sp + 424|0;
 $ref$tmp368 = sp + 420|0;
 $ref$tmp377 = sp + 408|0;
 $ref$tmp432 = sp + 404|0;
 $args = sp + 392|0;
 $ref$tmp469 = sp + 376|0;
 $ref$tmp474 = sp + 368|0;
 $type = sp + 356|0;
 $ref$tmp513 = sp + 344|0;
 $ref$tmp523 = sp + 320|0;
 $agg$tmp = sp + 308|0;
 $ref$tmp524 = sp + 296|0;
 $ref$tmp527 = sp + 284|0;
 $proto = sp + 272|0;
 $ref$tmp569 = sp + 248|0;
 $agg$tmp570 = sp + 236|0;
 $ref$tmp571 = sp + 224|0;
 $ref$tmp572 = sp + 212|0;
 $ref$tmp575 = sp + 200|0;
 $ref$tmp604 = sp + 176|0;
 $agg$tmp605 = sp + 164|0;
 $ref$tmp606 = sp + 152|0;
 $ref$tmp625 = sp + 136|0;
 $ref$tmp630 = sp + 128|0;
 $ref$tmp663 = sp + 112|0;
 $ref$tmp666 = sp + 108|0;
 $template_args = sp + 96|0;
 $ref$tmp700 = sp + 80|0;
 $ref$tmp705 = sp + 76|0;
 $ref$tmp740 = sp + 72|0;
 $ref$tmp770 = sp + 56|0;
 $ref$tmp773 = sp + 48|0;
 $ref$tmp792 = sp + 32|0;
 $ref$tmp795 = sp + 24|0;
 $ref$tmp819 = sp + 8|0;
 $ref$tmp822 = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$5 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $subs818 = ((($db)) + 16|0);
   switch ($conv|0) {
   case 75: case 86: case 114:  {
    HEAP32[$cv>>2] = 0;
    $call = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first,$last,$cv)|0);
    $cmp1 = ($call|0)==($first|0);
    L5: do {
     if ($cmp1) {
      $first$addr$1 = $first;
     } else {
      $1 = HEAP8[$call>>0]|0;
      $cmp4 = ($1<<24>>24)==(70);
      $__end_$i479 = ((($db)) + 4|0);
      $2 = HEAP32[$__end_$i479>>2]|0;
      $3 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i480 = (($2) - ($3))|0;
      $sub$ptr$div$i481 = (($sub$ptr$sub$i480|0) / 24)&-1;
      $call6 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $4 = HEAP32[$__end_$i479>>2]|0;
      $5 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i483 = (($4) - ($5))|0;
      $sub$ptr$div$i484 = (($sub$ptr$sub$i483|0) / 24)&-1;
      $cmp9 = ($call6|0)==($call|0);
      if ($cmp9) {
       $first$addr$1 = $first;
      } else {
       $__end_$i485 = ((($db)) + 20|0);
       $6 = HEAP32[$__end_$i485>>2]|0;
       L8: do {
        if ($cmp4) {
         $add$ptr$i486 = ((($6)) + -16|0);
         $7 = $6;
         while(1) {
          $cmp$i$i$i487 = ($7|0)==($add$ptr$i486|0);
          if ($cmp$i$i$i487) {
           $9 = $add$ptr$i486;
           break L8;
          }
          $incdec$ptr$i$i$i489 = ((($7)) + -16|0);
          HEAP32[$__end_$i485>>2] = $incdec$ptr$i$i$i489;
          __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($incdec$ptr$i$i$i489);
          $$pre$i490 = HEAP32[$__end_$i485>>2]|0;
          $7 = $$pre$i490;
         }
        } else {
         $9 = $6;
        }
       } while(0);
       $retval$sroa$0$0$$sroa_idx$i492 = ((($db)) + 12|0);
       $retval$sroa$0$0$copyload$i4931166 = HEAP32[$retval$sroa$0$0$$sroa_idx$i492>>2]|0;
       HEAP32[$ref$tmp>>2] = $retval$sroa$0$0$copyload$i4931166;
       $__first_$i$i$i$i495 = ((($db)) + 24|0);
       $8 = HEAP32[$__first_$i$i$i$i495>>2]|0;
       $cmp$i496 = ($9>>>0)<($8>>>0);
       if ($cmp$i496) {
        HEAP32[$9>>2] = 0;
        $__end_$i$i$i$i$i498 = ((($9)) + 4|0);
        HEAP32[$__end_$i$i$i$i$i498>>2] = 0;
        $__end_cap_$i$i$i$i$i499 = ((($9)) + 8|0);
        $10 = HEAP32[$ref$tmp>>2]|0;
        HEAP32[$__end_cap_$i$i$i$i$i499>>2] = 0;
        $__second_$i$i$i$i$i$i$i500 = ((($9)) + 12|0);
        HEAP32[$__second_$i$i$i$i$i$i$i500>>2] = $10;
        $11 = HEAP32[$__end_$i485>>2]|0;
        $incdec$ptr$i501 = ((($11)) + 16|0);
        HEAP32[$__end_$i485>>2] = $incdec$ptr$i501;
       } else {
        __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($subs818,$ref$tmp);
       }
       $12 = HEAP32[$cv>>2]|0;
       $and = $12 & 1;
       $tobool39 = ($and|0)==(0);
       $and46 = $12 & 2;
       $tobool47 = ($and46|0)==(0);
       $and55 = $12 & 4;
       $tobool56 = ($and55|0)==(0);
       $k$0 = $sub$ptr$div$i481;
       while(1) {
        $cmp15 = ($k$0>>>0)<($sub$ptr$div$i484>>>0);
        if (!($cmp15)) {
         $first$addr$1 = $call6;
         break L5;
        }
        if ($cmp4) {
         $13 = HEAP32[$db>>2]|0;
         $second = (((($13) + (($k$0*24)|0)|0)) + 12|0);
         $__size_$i$i = ((($second)) + 11|0);
         $14 = HEAP8[$__size_$i$i>>0]|0;
         $tobool$i$i = ($14<<24>>24)<(0);
         if ($tobool$i$i) {
          $__size_$i3$i = (((($13) + (($k$0*24)|0)|0)) + 16|0);
          $15 = HEAP32[$__size_$i3$i>>2]|0;
          $16 = HEAP32[$second>>2]|0;
          $cond$i$i = $16;$sub1193$in = $15;
         } else {
          $conv$i$i = $14&255;
          $cond$i$i = $second;$sub1193$in = $conv$i$i;
         }
         $sub1193 = (($sub1193$in) + -2)|0;
         $add$ptr$i509 = (($cond$i$i) + ($sub1193)|0);
         $17 = HEAP8[$add$ptr$i509>>0]|0;
         $cmp26 = ($17<<24>>24)==(38);
         if ($cmp26) {
          $sub28 = (($sub1193$in) + -3)|0;
          $p$0 = $sub28;
         } else {
          if ($tobool$i$i) {
           $18 = HEAP32[$second>>2]|0;
           $__size_$i3$i$i = (((($13) + (($k$0*24)|0)|0)) + 16|0);
           $19 = HEAP32[$__size_$i3$i$i>>2]|0;
           $cond$i6$i = $19;$cond$i7$i = $18;
          } else {
           $conv$i$i$i = $14&255;
           $cond$i6$i = $conv$i$i$i;$cond$i7$i = $second;
          }
          $add$ptr$i517 = (($cond$i7$i) + ($cond$i6$i)|0);
          $add$ptr3$i = ((($add$ptr$i517)) + -1|0);
          $20 = HEAP8[$add$ptr3$i>>0]|0;
          $cmp34 = ($20<<24>>24)==(38);
          $sub$call20 = $cmp34 ? $sub1193 : $sub1193$in;
          $p$0 = $sub$call20;
         }
         if ($tobool39) {
          $p$1 = $p$0;
         } else {
          $add = (($p$0) + 6)|0;
          (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second,$p$0,5783)|0);
          $p$1 = $add;
         }
         if ($tobool47) {
          $p$2 = $p$1;
         } else {
          $add53 = (($p$1) + 9)|0;
          $21 = HEAP32[$db>>2]|0;
          $second51 = (((($21) + (($k$0*24)|0)|0)) + 12|0);
          (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second51,$p$1,5790)|0);
          $p$2 = $add53;
         }
         if (!($tobool56)) {
          $22 = HEAP32[$db>>2]|0;
          $second60 = (((($22) + (($k$0*24)|0)|0)) + 12|0);
          (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second60,$p$2,5800)|0);
         }
        } else {
         if (!($tobool39)) {
          $23 = HEAP32[$db>>2]|0;
          $first69 = (($23) + (($k$0*24)|0)|0);
          (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first69,5783)|0);
         }
         if (!($tobool47)) {
          $24 = HEAP32[$db>>2]|0;
          $first77 = (($24) + (($k$0*24)|0)|0);
          (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first77,5790)|0);
         }
         if (!($tobool56)) {
          $25 = HEAP32[$db>>2]|0;
          $first85 = (($25) + (($k$0*24)|0)|0);
          (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first85,5800)|0);
         }
        }
        $26 = HEAP32[$__end_$i485>>2]|0;
        $27 = HEAP32[$db>>2]|0;
        $arrayidx$i533 = (($27) + (($k$0*24)|0)|0);
        $__end_$i534 = ((($26)) + -12|0);
        $28 = HEAP32[$__end_$i534>>2]|0;
        $__first_$i$i$i$i535 = ((($26)) + -8|0);
        $29 = HEAP32[$__first_$i$i$i$i535>>2]|0;
        $cmp$i536 = ($28|0)==($29|0);
        if ($cmp$i536) {
         $add$ptr$i531 = ((($26)) + -16|0);
         __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($add$ptr$i531,$arrayidx$i533);
        } else {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($28,$arrayidx$i533);
         $30 = HEAP32[$__end_$i534>>2]|0;
         $incdec$ptr$i537 = ((($30)) + 24|0);
         HEAP32[$__end_$i534>>2] = $incdec$ptr$i537;
        }
        $inc = (($k$0) + 1)|0;
        $k$0 = $inc;
       }
      }
     }
    } while(0);
    $retval$5 = $first$addr$1;
    break L1;
    break;
   }
   default: {
   }
   }
   $call96 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $cmp97 = ($call96|0)==($first|0);
   if ($cmp97) {
    $31 = HEAP8[$first>>0]|0;
    $conv100 = $31 << 24 >> 24;
    $add$ptr = ((($first)) + 1|0);
    $cmp493 = ($add$ptr|0)!=($last|0);
    L58: do {
     switch ($conv100|0) {
     case 65:  {
      $call102 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $cmp103 = ($call102|0)==($first|0);
      if ($cmp103) {
       $retval$5 = $first;
       break L1;
      }
      $32 = HEAP32[$db>>2]|0;
      $__end_$i559 = ((($db)) + 4|0);
      $33 = HEAP32[$__end_$i559>>2]|0;
      $cmp$i560 = ($32|0)==($33|0);
      if ($cmp$i560) {
       $retval$5 = $first;
       break L1;
      }
      $add$ptr$i562 = ((($33)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i563 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i5641183 = HEAP32[$retval$sroa$0$0$$sroa_idx$i563>>2]|0;
      HEAP32[$ref$tmp113>>2] = $retval$sroa$0$0$copyload$i5641183;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp110,$add$ptr$i562,$ref$tmp113);
      $__end_$i565 = ((($db)) + 20|0);
      $34 = HEAP32[$__end_$i565>>2]|0;
      $__first_$i$i$i$i566 = ((($db)) + 24|0);
      $35 = HEAP32[$__first_$i$i$i$i566>>2]|0;
      $cmp$i567 = ($34>>>0)<($35>>>0);
      if ($cmp$i567) {
       $__second_$i$i$i$i$i$i$i568 = ((($ref$tmp110)) + 12|0);
       HEAP32[$34>>2] = 0;
       $__end_$i$i$i$i$i570 = ((($34)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i570>>2] = 0;
       $__end_cap_$i$i$i$i$i571 = ((($34)) + 8|0);
       $36 = HEAP32[$__second_$i$i$i$i$i$i$i568>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i571>>2] = 0;
       $__second_$i$i$i9$i$i$i$i572 = ((($34)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i572>>2] = $36;
       $37 = HEAP32[$ref$tmp110>>2]|0;
       HEAP32[$34>>2] = $37;
       $__end_$i$i$i$i574 = ((($ref$tmp110)) + 4|0);
       $38 = HEAP32[$__end_$i$i$i$i574>>2]|0;
       HEAP32[$__end_$i$i$i$i$i570>>2] = $38;
       $__first_$i$i$i8$i$i$i$i575 = ((($ref$tmp110)) + 8|0);
       $39 = HEAP32[$__first_$i$i$i8$i$i$i$i575>>2]|0;
       $__first_$i$i$i7$i$i$i$i576 = ((($34)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i576>>2] = $39;
       HEAP32[$__first_$i$i$i8$i$i$i$i575>>2] = 0;
       HEAP32[$__end_$i$i$i$i574>>2] = 0;
       HEAP32[$ref$tmp110>>2] = 0;
       $40 = HEAP32[$__end_$i565>>2]|0;
       $incdec$ptr$i577 = ((($40)) + 16|0);
       HEAP32[$__end_$i565>>2] = $incdec$ptr$i577;
      } else {
       __THREW__ = 0;
       invoke_vii(57,($subs818|0),($ref$tmp110|0));
       $41 = __THREW__; __THREW__ = 0;
       $42 = $41&1;
       if ($42) {
        $43 = ___cxa_find_matching_catch_2()|0;
        $44 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp110);
        $ehselector$slot$16 = $44;$exn$slot$16 = $43;
        break L58;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp110);
      $retval$5 = $call102;
      break L1;
      break;
     }
     case 67:  {
      $call119 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp121 = ($call119|0)==($add$ptr|0);
      if ($cmp121) {
       $retval$5 = $first;
       break L1;
      }
      $45 = HEAP32[$db>>2]|0;
      $__end_$i583 = ((($db)) + 4|0);
      $46 = HEAP32[$__end_$i583>>2]|0;
      $cmp$i584 = ($45|0)==($46|0);
      if ($cmp$i584) {
       $retval$5 = $first;
       break L1;
      }
      $first129 = ((($46)) + -24|0);
      (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first129,5810)|0);
      $47 = HEAP32[$__end_$i583>>2]|0;
      $add$ptr$i588 = ((($47)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i589 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i5901182 = HEAP32[$retval$sroa$0$0$$sroa_idx$i589>>2]|0;
      HEAP32[$ref$tmp135>>2] = $retval$sroa$0$0$copyload$i5901182;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp132,$add$ptr$i588,$ref$tmp135);
      $__end_$i591 = ((($db)) + 20|0);
      $48 = HEAP32[$__end_$i591>>2]|0;
      $__first_$i$i$i$i592 = ((($db)) + 24|0);
      $49 = HEAP32[$__first_$i$i$i$i592>>2]|0;
      $cmp$i593 = ($48>>>0)<($49>>>0);
      if ($cmp$i593) {
       $__second_$i$i$i$i$i$i$i594 = ((($ref$tmp132)) + 12|0);
       HEAP32[$48>>2] = 0;
       $__end_$i$i$i$i$i596 = ((($48)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i596>>2] = 0;
       $__end_cap_$i$i$i$i$i597 = ((($48)) + 8|0);
       $50 = HEAP32[$__second_$i$i$i$i$i$i$i594>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i597>>2] = 0;
       $__second_$i$i$i9$i$i$i$i598 = ((($48)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i598>>2] = $50;
       $51 = HEAP32[$ref$tmp132>>2]|0;
       HEAP32[$48>>2] = $51;
       $__end_$i$i$i$i600 = ((($ref$tmp132)) + 4|0);
       $52 = HEAP32[$__end_$i$i$i$i600>>2]|0;
       HEAP32[$__end_$i$i$i$i$i596>>2] = $52;
       $__first_$i$i$i8$i$i$i$i601 = ((($ref$tmp132)) + 8|0);
       $53 = HEAP32[$__first_$i$i$i8$i$i$i$i601>>2]|0;
       $__first_$i$i$i7$i$i$i$i602 = ((($48)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i602>>2] = $53;
       HEAP32[$__first_$i$i$i8$i$i$i$i601>>2] = 0;
       HEAP32[$__end_$i$i$i$i600>>2] = 0;
       HEAP32[$ref$tmp132>>2] = 0;
       $54 = HEAP32[$__end_$i591>>2]|0;
       $incdec$ptr$i603 = ((($54)) + 16|0);
       HEAP32[$__end_$i591>>2] = $incdec$ptr$i603;
      } else {
       __THREW__ = 0;
       invoke_vii(57,($subs818|0),($ref$tmp132|0));
       $55 = __THREW__; __THREW__ = 0;
       $56 = $55&1;
       if ($56) {
        $57 = ___cxa_find_matching_catch_2()|0;
        $58 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp132);
        $ehselector$slot$16 = $58;$exn$slot$16 = $57;
        break L58;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp132);
      $retval$5 = $call119;
      break L1;
      break;
     }
     case 70:  {
      $call143 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $cmp144 = ($call143|0)==($first|0);
      if ($cmp144) {
       $retval$5 = $first;
       break L1;
      }
      $59 = HEAP32[$db>>2]|0;
      $__end_$i611 = ((($db)) + 4|0);
      $60 = HEAP32[$__end_$i611>>2]|0;
      $cmp$i612 = ($59|0)==($60|0);
      if ($cmp$i612) {
       $retval$5 = $first;
       break L1;
      }
      $add$ptr$i614 = ((($60)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i615 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i6161181 = HEAP32[$retval$sroa$0$0$$sroa_idx$i615>>2]|0;
      HEAP32[$ref$tmp154>>2] = $retval$sroa$0$0$copyload$i6161181;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp151,$add$ptr$i614,$ref$tmp154);
      $__end_$i617 = ((($db)) + 20|0);
      $61 = HEAP32[$__end_$i617>>2]|0;
      $__first_$i$i$i$i618 = ((($db)) + 24|0);
      $62 = HEAP32[$__first_$i$i$i$i618>>2]|0;
      $cmp$i619 = ($61>>>0)<($62>>>0);
      if ($cmp$i619) {
       $__second_$i$i$i$i$i$i$i620 = ((($ref$tmp151)) + 12|0);
       HEAP32[$61>>2] = 0;
       $__end_$i$i$i$i$i622 = ((($61)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i622>>2] = 0;
       $__end_cap_$i$i$i$i$i623 = ((($61)) + 8|0);
       $63 = HEAP32[$__second_$i$i$i$i$i$i$i620>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i623>>2] = 0;
       $__second_$i$i$i9$i$i$i$i624 = ((($61)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i624>>2] = $63;
       $64 = HEAP32[$ref$tmp151>>2]|0;
       HEAP32[$61>>2] = $64;
       $__end_$i$i$i$i626 = ((($ref$tmp151)) + 4|0);
       $65 = HEAP32[$__end_$i$i$i$i626>>2]|0;
       HEAP32[$__end_$i$i$i$i$i622>>2] = $65;
       $__first_$i$i$i8$i$i$i$i627 = ((($ref$tmp151)) + 8|0);
       $66 = HEAP32[$__first_$i$i$i8$i$i$i$i627>>2]|0;
       $__first_$i$i$i7$i$i$i$i628 = ((($61)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i628>>2] = $66;
       HEAP32[$__first_$i$i$i8$i$i$i$i627>>2] = 0;
       HEAP32[$__end_$i$i$i$i626>>2] = 0;
       HEAP32[$ref$tmp151>>2] = 0;
       $67 = HEAP32[$__end_$i617>>2]|0;
       $incdec$ptr$i629 = ((($67)) + 16|0);
       HEAP32[$__end_$i617>>2] = $incdec$ptr$i629;
      } else {
       __THREW__ = 0;
       invoke_vii(57,($subs818|0),($ref$tmp151|0));
       $68 = __THREW__; __THREW__ = 0;
       $69 = $68&1;
       if ($69) {
        $70 = ___cxa_find_matching_catch_2()|0;
        $71 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp151);
        $ehselector$slot$16 = $71;$exn$slot$16 = $70;
        break L58;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp151);
      $retval$5 = $call143;
      break L1;
      break;
     }
     case 71:  {
      $call163 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp165 = ($call163|0)==($add$ptr|0);
      if ($cmp165) {
       $retval$5 = $first;
       break L1;
      }
      $72 = HEAP32[$db>>2]|0;
      $__end_$i637 = ((($db)) + 4|0);
      $73 = HEAP32[$__end_$i637>>2]|0;
      $cmp$i638 = ($72|0)==($73|0);
      if ($cmp$i638) {
       $retval$5 = $first;
       break L1;
      }
      $first173 = ((($73)) + -24|0);
      (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first173,5819)|0);
      $74 = HEAP32[$__end_$i637>>2]|0;
      $add$ptr$i642 = ((($74)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i643 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i6441180 = HEAP32[$retval$sroa$0$0$$sroa_idx$i643>>2]|0;
      HEAP32[$ref$tmp179>>2] = $retval$sroa$0$0$copyload$i6441180;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp176,$add$ptr$i642,$ref$tmp179);
      $__end_$i645 = ((($db)) + 20|0);
      $75 = HEAP32[$__end_$i645>>2]|0;
      $__first_$i$i$i$i646 = ((($db)) + 24|0);
      $76 = HEAP32[$__first_$i$i$i$i646>>2]|0;
      $cmp$i647 = ($75>>>0)<($76>>>0);
      if ($cmp$i647) {
       $__second_$i$i$i$i$i$i$i648 = ((($ref$tmp176)) + 12|0);
       HEAP32[$75>>2] = 0;
       $__end_$i$i$i$i$i650 = ((($75)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i650>>2] = 0;
       $__end_cap_$i$i$i$i$i651 = ((($75)) + 8|0);
       $77 = HEAP32[$__second_$i$i$i$i$i$i$i648>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i651>>2] = 0;
       $__second_$i$i$i9$i$i$i$i652 = ((($75)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i652>>2] = $77;
       $78 = HEAP32[$ref$tmp176>>2]|0;
       HEAP32[$75>>2] = $78;
       $__end_$i$i$i$i654 = ((($ref$tmp176)) + 4|0);
       $79 = HEAP32[$__end_$i$i$i$i654>>2]|0;
       HEAP32[$__end_$i$i$i$i$i650>>2] = $79;
       $__first_$i$i$i8$i$i$i$i655 = ((($ref$tmp176)) + 8|0);
       $80 = HEAP32[$__first_$i$i$i8$i$i$i$i655>>2]|0;
       $__first_$i$i$i7$i$i$i$i656 = ((($75)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i656>>2] = $80;
       HEAP32[$__first_$i$i$i8$i$i$i$i655>>2] = 0;
       HEAP32[$__end_$i$i$i$i654>>2] = 0;
       HEAP32[$ref$tmp176>>2] = 0;
       $81 = HEAP32[$__end_$i645>>2]|0;
       $incdec$ptr$i657 = ((($81)) + 16|0);
       HEAP32[$__end_$i645>>2] = $incdec$ptr$i657;
      } else {
       __THREW__ = 0;
       invoke_vii(57,($subs818|0),($ref$tmp176|0));
       $82 = __THREW__; __THREW__ = 0;
       $83 = $82&1;
       if ($83) {
        $84 = ___cxa_find_matching_catch_2()|0;
        $85 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp176);
        $ehselector$slot$16 = $85;$exn$slot$16 = $84;
        break L58;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp176);
      $retval$5 = $call163;
      break L1;
      break;
     }
     case 77:  {
      $call187 = (__ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $cmp188 = ($call187|0)==($first|0);
      if ($cmp188) {
       $retval$5 = $first;
       break L1;
      }
      $86 = HEAP32[$db>>2]|0;
      $__end_$i666 = ((($db)) + 4|0);
      $87 = HEAP32[$__end_$i666>>2]|0;
      $cmp$i667 = ($86|0)==($87|0);
      if ($cmp$i667) {
       $retval$5 = $first;
       break L1;
      }
      $add$ptr$i669 = ((($87)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i670 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i6711179 = HEAP32[$retval$sroa$0$0$$sroa_idx$i670>>2]|0;
      HEAP32[$ref$tmp198>>2] = $retval$sroa$0$0$copyload$i6711179;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp195,$add$ptr$i669,$ref$tmp198);
      $__end_$i672 = ((($db)) + 20|0);
      $88 = HEAP32[$__end_$i672>>2]|0;
      $__first_$i$i$i$i673 = ((($db)) + 24|0);
      $89 = HEAP32[$__first_$i$i$i$i673>>2]|0;
      $cmp$i674 = ($88>>>0)<($89>>>0);
      if ($cmp$i674) {
       $__second_$i$i$i$i$i$i$i675 = ((($ref$tmp195)) + 12|0);
       HEAP32[$88>>2] = 0;
       $__end_$i$i$i$i$i677 = ((($88)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i677>>2] = 0;
       $__end_cap_$i$i$i$i$i678 = ((($88)) + 8|0);
       $90 = HEAP32[$__second_$i$i$i$i$i$i$i675>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i678>>2] = 0;
       $__second_$i$i$i9$i$i$i$i679 = ((($88)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i679>>2] = $90;
       $91 = HEAP32[$ref$tmp195>>2]|0;
       HEAP32[$88>>2] = $91;
       $__end_$i$i$i$i681 = ((($ref$tmp195)) + 4|0);
       $92 = HEAP32[$__end_$i$i$i$i681>>2]|0;
       HEAP32[$__end_$i$i$i$i$i677>>2] = $92;
       $__first_$i$i$i8$i$i$i$i682 = ((($ref$tmp195)) + 8|0);
       $93 = HEAP32[$__first_$i$i$i8$i$i$i$i682>>2]|0;
       $__first_$i$i$i7$i$i$i$i683 = ((($88)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i683>>2] = $93;
       HEAP32[$__first_$i$i$i8$i$i$i$i682>>2] = 0;
       HEAP32[$__end_$i$i$i$i681>>2] = 0;
       HEAP32[$ref$tmp195>>2] = 0;
       $94 = HEAP32[$__end_$i672>>2]|0;
       $incdec$ptr$i684 = ((($94)) + 16|0);
       HEAP32[$__end_$i672>>2] = $incdec$ptr$i684;
      } else {
       __THREW__ = 0;
       invoke_vii(57,($subs818|0),($ref$tmp195|0));
       $95 = __THREW__; __THREW__ = 0;
       $96 = $95&1;
       if ($96) {
        $97 = ___cxa_find_matching_catch_2()|0;
        $98 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp195);
        $ehselector$slot$16 = $98;$exn$slot$16 = $97;
        break L58;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp195);
      $retval$5 = $call187;
      break L1;
      break;
     }
     case 79:  {
      $__end_$i689 = ((($db)) + 4|0);
      $99 = HEAP32[$__end_$i689>>2]|0;
      $100 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i690 = (($99) - ($100))|0;
      $sub$ptr$div$i691 = (($sub$ptr$sub$i690|0) / 24)&-1;
      $call210 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $101 = HEAP32[$__end_$i689>>2]|0;
      $102 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i693 = (($101) - ($102))|0;
      $sub$ptr$div$i694 = (($sub$ptr$sub$i693|0) / 24)&-1;
      $cmp215 = ($call210|0)==($add$ptr|0);
      if ($cmp215) {
       $retval$5 = $first;
       break L1;
      }
      $retval$sroa$0$0$$sroa_idx$i695 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i6961178 = HEAP32[$retval$sroa$0$0$$sroa_idx$i695>>2]|0;
      HEAP32[$ref$tmp218>>2] = $retval$sroa$0$0$copyload$i6961178;
      $__end_$i697 = ((($db)) + 20|0);
      $103 = HEAP32[$__end_$i697>>2]|0;
      $__first_$i$i$i$i698 = ((($db)) + 24|0);
      $104 = HEAP32[$__first_$i$i$i$i698>>2]|0;
      $cmp$i699 = ($103>>>0)<($104>>>0);
      if ($cmp$i699) {
       HEAP32[$103>>2] = 0;
       $__end_$i$i$i$i$i701 = ((($103)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i701>>2] = 0;
       $__end_cap_$i$i$i$i$i702 = ((($103)) + 8|0);
       HEAP32[$__end_cap_$i$i$i$i$i702>>2] = 0;
       $__second_$i$i$i$i$i$i$i703 = ((($103)) + 12|0);
       HEAP32[$__second_$i$i$i$i$i$i$i703>>2] = $retval$sroa$0$0$copyload$i6961178;
       $105 = HEAP32[$__end_$i697>>2]|0;
       $incdec$ptr$i704 = ((($105)) + 16|0);
       HEAP32[$__end_$i697>>2] = $incdec$ptr$i704;
      } else {
       __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($subs818,$ref$tmp218);
      }
      $__size_$i$i$i711 = ((($ref$tmp227)) + 11|0);
      $__size_$i3$i$i713 = ((($ref$tmp227)) + 4|0);
      $k222$0 = $sub$ptr$div$i691;
      while(1) {
       $cmp224 = ($k222$0>>>0)<($sub$ptr$div$i694>>>0);
       if (!($cmp224)) {
        $retval$5 = $call210;
        break L1;
       }
       $106 = HEAP32[$db>>2]|0;
       $second230 = (((($106) + (($k222$0*24)|0)|0)) + 12|0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($ref$tmp227,$second230,2);
       __THREW__ = 0;
       $call$i = (invoke_ii(58,(5830|0))|0);
       $107 = __THREW__; __THREW__ = 0;
       $108 = $107&1;
       if ($108) {
        label = 89;
        break;
       }
       $109 = HEAP8[$__size_$i$i$i711>>0]|0;
       $tobool$i$i$i712 = ($109<<24>>24)<(0);
       $110 = HEAP32[$__size_$i3$i$i713>>2]|0;
       $conv$i$i$i714 = $109&255;
       $cond$i$i715 = $tobool$i$i$i712 ? $110 : $conv$i$i$i714;
       $cmp$i716 = ($call$i|0)==($cond$i$i715|0);
       if ($cmp$i716) {
        __THREW__ = 0;
        $call3$i = (invoke_iiii(59,($ref$tmp227|0),(5830|0),($call$i|0))|0);
        $111 = __THREW__; __THREW__ = 0;
        $112 = $111&1;
        if ($112) {
         label = 88;
         break;
        }
        $cmp4$i = ($call3$i|0)==(0);
        $retval$0$i = $cmp4$i;
       } else {
        $retval$0$i = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp227);
       $117 = HEAP32[$db>>2]|0;
       if ($retval$0$i) {
        $first235 = (($117) + (($k222$0*24)|0)|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first235,5833)|0);
        $118 = HEAP32[$db>>2]|0;
        $second239 = (((($118) + (($k222$0*24)|0)|0)) + 12|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second239,0,5836)|0);
       } else {
        $second244 = (((($117) + (($k222$0*24)|0)|0)) + 12|0);
        $__size_$i$i$i723 = ((($second244)) + 11|0);
        $119 = HEAP8[$__size_$i$i$i723>>0]|0;
        $tobool$i$i$i724 = ($119<<24>>24)<(0);
        if ($tobool$i$i$i724) {
         $120 = HEAP32[$second244>>2]|0;
         $cond$i$i729 = $120;
        } else {
         $cond$i$i729 = $second244;
        }
        $121 = HEAP8[$cond$i$i729>>0]|0;
        $cmp247 = ($121<<24>>24)==(40);
        if ($cmp247) {
         $first251 = (($117) + (($k222$0*24)|0)|0);
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first251,5838)|0);
         $122 = HEAP32[$db>>2]|0;
         $second255 = (((($122) + (($k222$0*24)|0)|0)) + 12|0);
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second255,0,5836)|0);
        }
       }
       $123 = HEAP32[$db>>2]|0;
       $first261 = (($123) + (($k222$0*24)|0)|0);
       (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first261,5840)|0);
       $124 = HEAP32[$__end_$i697>>2]|0;
       $125 = HEAP32[$db>>2]|0;
       $arrayidx$i740 = (($125) + (($k222$0*24)|0)|0);
       $__end_$i741 = ((($124)) + -12|0);
       $126 = HEAP32[$__end_$i741>>2]|0;
       $__first_$i$i$i$i742 = ((($124)) + -8|0);
       $127 = HEAP32[$__first_$i$i$i$i742>>2]|0;
       $cmp$i743 = ($126|0)==($127|0);
       if ($cmp$i743) {
        $add$ptr$i738 = ((($124)) + -16|0);
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($add$ptr$i738,$arrayidx$i740);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($126,$arrayidx$i740);
        $128 = HEAP32[$__end_$i741>>2]|0;
        $incdec$ptr$i744 = ((($128)) + 24|0);
        HEAP32[$__end_$i741>>2] = $incdec$ptr$i744;
       }
       $inc268 = (($k222$0) + 1)|0;
       $k222$0 = $inc268;
      }
      if ((label|0) == 88) {
       $113 = ___cxa_find_matching_catch_3(0|0)|0;
       $114 = tempRet0;
       ___clang_call_terminate($113);
       // unreachable;
      }
      else if ((label|0) == 89) {
       $115 = ___cxa_find_matching_catch_3(0|0)|0;
       $116 = tempRet0;
       ___clang_call_terminate($115);
       // unreachable;
      }
      break;
     }
     case 80:  {
      $__end_$i749 = ((($db)) + 4|0);
      $129 = HEAP32[$__end_$i749>>2]|0;
      $130 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i750 = (($129) - ($130))|0;
      $sub$ptr$div$i751 = (($sub$ptr$sub$i750|0) / 24)&-1;
      $call276 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $131 = HEAP32[$__end_$i749>>2]|0;
      $132 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i753 = (($131) - ($132))|0;
      $sub$ptr$div$i754 = (($sub$ptr$sub$i753|0) / 24)&-1;
      $cmp281 = ($call276|0)==($add$ptr|0);
      if ($cmp281) {
       $retval$5 = $first;
       break L1;
      }
      $retval$sroa$0$0$$sroa_idx$i755 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i7561177 = HEAP32[$retval$sroa$0$0$$sroa_idx$i755>>2]|0;
      HEAP32[$ref$tmp284>>2] = $retval$sroa$0$0$copyload$i7561177;
      $__end_$i757 = ((($db)) + 20|0);
      $133 = HEAP32[$__end_$i757>>2]|0;
      $__first_$i$i$i$i758 = ((($db)) + 24|0);
      $134 = HEAP32[$__first_$i$i$i$i758>>2]|0;
      $cmp$i759 = ($133>>>0)<($134>>>0);
      if ($cmp$i759) {
       HEAP32[$133>>2] = 0;
       $__end_$i$i$i$i$i761 = ((($133)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i761>>2] = 0;
       $__end_cap_$i$i$i$i$i762 = ((($133)) + 8|0);
       HEAP32[$__end_cap_$i$i$i$i$i762>>2] = 0;
       $__second_$i$i$i$i$i$i$i763 = ((($133)) + 12|0);
       HEAP32[$__second_$i$i$i$i$i$i$i763>>2] = $retval$sroa$0$0$copyload$i7561177;
       $135 = HEAP32[$__end_$i757>>2]|0;
       $incdec$ptr$i764 = ((($135)) + 16|0);
       HEAP32[$__end_$i757>>2] = $incdec$ptr$i764;
      } else {
       __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($subs818,$ref$tmp284);
      }
      $__size_$i$i$i773 = ((($ref$tmp293)) + 11|0);
      $__size_$i3$i$i775 = ((($ref$tmp293)) + 4|0);
      $__size_$i$i$i$i = ((($ref$tmp327)) + 11|0);
      $__size_$i3$i$i$i809 = ((($ref$tmp327)) + 4|0);
      $k288$0 = $sub$ptr$div$i751;
      while(1) {
       $cmp290 = ($k288$0>>>0)<($sub$ptr$div$i754>>>0);
       if (!($cmp290)) {
        $retval$5 = $call276;
        break L1;
       }
       $136 = HEAP32[$db>>2]|0;
       $second296 = (((($136) + (($k288$0*24)|0)|0)) + 12|0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($ref$tmp293,$second296,2);
       __THREW__ = 0;
       $call$i771 = (invoke_ii(58,(5830|0))|0);
       $137 = __THREW__; __THREW__ = 0;
       $138 = $137&1;
       if ($138) {
        label = 112;
        break;
       }
       $139 = HEAP8[$__size_$i$i$i773>>0]|0;
       $tobool$i$i$i774 = ($139<<24>>24)<(0);
       $140 = HEAP32[$__size_$i3$i$i775>>2]|0;
       $conv$i$i$i776 = $139&255;
       $cond$i$i777 = $tobool$i$i$i774 ? $140 : $conv$i$i$i776;
       $cmp$i778 = ($call$i771|0)==($cond$i$i777|0);
       if ($cmp$i778) {
        __THREW__ = 0;
        $call3$i780 = (invoke_iiii(59,($ref$tmp293|0),(5830|0),($call$i771|0))|0);
        $141 = __THREW__; __THREW__ = 0;
        $142 = $141&1;
        if ($142) {
         label = 111;
         break;
        }
        $cmp4$i782 = ($call3$i780|0)==(0);
        $retval$0$i785 = $cmp4$i782;
       } else {
        $retval$0$i785 = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp293);
       $147 = HEAP32[$db>>2]|0;
       if ($retval$0$i785) {
        $first301 = (($147) + (($k288$0*24)|0)|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first301,5833)|0);
        $148 = HEAP32[$db>>2]|0;
        $second305 = (((($148) + (($k288$0*24)|0)|0)) + 12|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second305,0,5836)|0);
       } else {
        $second310 = (((($147) + (($k288$0*24)|0)|0)) + 12|0);
        $__size_$i$i$i794 = ((($second310)) + 11|0);
        $149 = HEAP8[$__size_$i$i$i794>>0]|0;
        $tobool$i$i$i795 = ($149<<24>>24)<(0);
        if ($tobool$i$i$i795) {
         $150 = HEAP32[$second310>>2]|0;
         $cond$i$i800 = $150;
        } else {
         $cond$i$i800 = $second310;
        }
        $151 = HEAP8[$cond$i$i800>>0]|0;
        $cmp313 = ($151<<24>>24)==(40);
        if ($cmp313) {
         $first317 = (($147) + (($k288$0*24)|0)|0);
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first317,5838)|0);
         $152 = HEAP32[$db>>2]|0;
         $second321 = (((($152) + (($k288$0*24)|0)|0)) + 12|0);
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second321,0,5836)|0);
        }
       }
       $153 = HEAP8[$add$ptr>>0]|0;
       $cmp326 = ($153<<24>>24)==(85);
       if ($cmp326) {
        $155 = HEAP32[$db>>2]|0;
        $first330 = (($155) + (($k288$0*24)|0)|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($ref$tmp327,$first330,12);
        __THREW__ = 0;
        $call$i$i = (invoke_ii(58,(5843|0))|0);
        $156 = __THREW__; __THREW__ = 0;
        $157 = $156&1;
        if ($157) {
         label = 127;
         break;
        }
        $158 = HEAP8[$__size_$i$i$i$i>>0]|0;
        $tobool$i$i$i$i = ($158<<24>>24)<(0);
        $159 = HEAP32[$__size_$i3$i$i$i809>>2]|0;
        $conv$i$i$i$i810 = $158&255;
        $cond$i$i$i811 = $tobool$i$i$i$i ? $159 : $conv$i$i$i$i810;
        $cmp$i$i = ($call$i$i|0)==($cond$i$i$i811|0);
        if ($cmp$i$i) {
         __THREW__ = 0;
         $call3$i$i = (invoke_iiii(59,($ref$tmp327|0),(5843|0),($call$i$i|0))|0);
         $160 = __THREW__; __THREW__ = 0;
         $161 = $160&1;
         if ($161) {
          label = 126;
          break;
         }
         $phitmp$i = ($call3$i$i|0)!=(0);
         $$ph = $phitmp$i;
        } else {
         $$ph = 1;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp327);
        $166 = HEAP32[$db>>2]|0;
        $first339 = (($166) + (($k288$0*24)|0)|0);
        if ($$ph) {
         $first3391152 = $first339;
         label = 129;
        } else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKc($first339);
        }
       } else {
        $154 = HEAP32[$db>>2]|0;
        $first3391151 = (($154) + (($k288$0*24)|0)|0);
        $first3391152 = $first3391151;
        label = 129;
       }
       if ((label|0) == 129) {
        label = 0;
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first3391152,5856)|0);
       }
       $167 = HEAP32[$__end_$i757>>2]|0;
       $168 = HEAP32[$db>>2]|0;
       $arrayidx$i817 = (($168) + (($k288$0*24)|0)|0);
       $__end_$i818 = ((($167)) + -12|0);
       $169 = HEAP32[$__end_$i818>>2]|0;
       $__first_$i$i$i$i819 = ((($167)) + -8|0);
       $170 = HEAP32[$__first_$i$i$i$i819>>2]|0;
       $cmp$i820 = ($169|0)==($170|0);
       if ($cmp$i820) {
        $add$ptr$i815 = ((($167)) + -16|0);
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($add$ptr$i815,$arrayidx$i817);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($169,$arrayidx$i817);
        $171 = HEAP32[$__end_$i818>>2]|0;
        $incdec$ptr$i821 = ((($171)) + 24|0);
        HEAP32[$__end_$i818>>2] = $incdec$ptr$i821;
       }
       $inc352 = (($k288$0) + 1)|0;
       $k288$0 = $inc352;
      }
      if ((label|0) == 111) {
       $143 = ___cxa_find_matching_catch_3(0|0)|0;
       $144 = tempRet0;
       ___clang_call_terminate($143);
       // unreachable;
      }
      else if ((label|0) == 112) {
       $145 = ___cxa_find_matching_catch_3(0|0)|0;
       $146 = tempRet0;
       ___clang_call_terminate($145);
       // unreachable;
      }
      else if ((label|0) == 126) {
       $162 = ___cxa_find_matching_catch_3(0|0)|0;
       $163 = tempRet0;
       ___clang_call_terminate($162);
       // unreachable;
      }
      else if ((label|0) == 127) {
       $164 = ___cxa_find_matching_catch_3(0|0)|0;
       $165 = tempRet0;
       ___clang_call_terminate($164);
       // unreachable;
      }
      break;
     }
     case 82:  {
      $__end_$i826 = ((($db)) + 4|0);
      $172 = HEAP32[$__end_$i826>>2]|0;
      $173 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i827 = (($172) - ($173))|0;
      $sub$ptr$div$i828 = (($sub$ptr$sub$i827|0) / 24)&-1;
      $call360 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $174 = HEAP32[$__end_$i826>>2]|0;
      $175 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i830 = (($174) - ($175))|0;
      $sub$ptr$div$i831 = (($sub$ptr$sub$i830|0) / 24)&-1;
      $cmp365 = ($call360|0)==($add$ptr|0);
      if ($cmp365) {
       $retval$5 = $first;
       break L1;
      }
      $retval$sroa$0$0$$sroa_idx$i832 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i8331176 = HEAP32[$retval$sroa$0$0$$sroa_idx$i832>>2]|0;
      HEAP32[$ref$tmp368>>2] = $retval$sroa$0$0$copyload$i8331176;
      $__end_$i834 = ((($db)) + 20|0);
      $176 = HEAP32[$__end_$i834>>2]|0;
      $__first_$i$i$i$i835 = ((($db)) + 24|0);
      $177 = HEAP32[$__first_$i$i$i$i835>>2]|0;
      $cmp$i836 = ($176>>>0)<($177>>>0);
      if ($cmp$i836) {
       HEAP32[$176>>2] = 0;
       $__end_$i$i$i$i$i838 = ((($176)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i838>>2] = 0;
       $__end_cap_$i$i$i$i$i839 = ((($176)) + 8|0);
       HEAP32[$__end_cap_$i$i$i$i$i839>>2] = 0;
       $__second_$i$i$i$i$i$i$i840 = ((($176)) + 12|0);
       HEAP32[$__second_$i$i$i$i$i$i$i840>>2] = $retval$sroa$0$0$copyload$i8331176;
       $178 = HEAP32[$__end_$i834>>2]|0;
       $incdec$ptr$i841 = ((($178)) + 16|0);
       HEAP32[$__end_$i834>>2] = $incdec$ptr$i841;
      } else {
       __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($subs818,$ref$tmp368);
      }
      $__size_$i$i$i850 = ((($ref$tmp377)) + 11|0);
      $__size_$i3$i$i852 = ((($ref$tmp377)) + 4|0);
      $k372$0 = $sub$ptr$div$i828;
      while(1) {
       $cmp374 = ($k372$0>>>0)<($sub$ptr$div$i831>>>0);
       if (!($cmp374)) {
        $retval$5 = $call360;
        break L1;
       }
       $179 = HEAP32[$db>>2]|0;
       $second380 = (((($179) + (($k372$0*24)|0)|0)) + 12|0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($ref$tmp377,$second380,2);
       __THREW__ = 0;
       $call$i848 = (invoke_ii(58,(5830|0))|0);
       $180 = __THREW__; __THREW__ = 0;
       $181 = $180&1;
       if ($181) {
        label = 146;
        break;
       }
       $182 = HEAP8[$__size_$i$i$i850>>0]|0;
       $tobool$i$i$i851 = ($182<<24>>24)<(0);
       $183 = HEAP32[$__size_$i3$i$i852>>2]|0;
       $conv$i$i$i853 = $182&255;
       $cond$i$i854 = $tobool$i$i$i851 ? $183 : $conv$i$i$i853;
       $cmp$i855 = ($call$i848|0)==($cond$i$i854|0);
       if ($cmp$i855) {
        __THREW__ = 0;
        $call3$i857 = (invoke_iiii(59,($ref$tmp377|0),(5830|0),($call$i848|0))|0);
        $184 = __THREW__; __THREW__ = 0;
        $185 = $184&1;
        if ($185) {
         label = 145;
         break;
        }
        $cmp4$i859 = ($call3$i857|0)==(0);
        $retval$0$i862 = $cmp4$i859;
       } else {
        $retval$0$i862 = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp377);
       $190 = HEAP32[$db>>2]|0;
       if ($retval$0$i862) {
        $first385 = (($190) + (($k372$0*24)|0)|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first385,5833)|0);
        $191 = HEAP32[$db>>2]|0;
        $second389 = (((($191) + (($k372$0*24)|0)|0)) + 12|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second389,0,5836)|0);
       } else {
        $second394 = (((($190) + (($k372$0*24)|0)|0)) + 12|0);
        $__size_$i$i$i871 = ((($second394)) + 11|0);
        $192 = HEAP8[$__size_$i$i$i871>>0]|0;
        $tobool$i$i$i872 = ($192<<24>>24)<(0);
        if ($tobool$i$i$i872) {
         $193 = HEAP32[$second394>>2]|0;
         $cond$i$i877 = $193;
        } else {
         $cond$i$i877 = $second394;
        }
        $194 = HEAP8[$cond$i$i877>>0]|0;
        $cmp397 = ($194<<24>>24)==(40);
        if ($cmp397) {
         $first401 = (($190) + (($k372$0*24)|0)|0);
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first401,5838)|0);
         $195 = HEAP32[$db>>2]|0;
         $second405 = (((($195) + (($k372$0*24)|0)|0)) + 12|0);
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second405,0,5836)|0);
        }
       }
       $196 = HEAP32[$db>>2]|0;
       $first411 = (($196) + (($k372$0*24)|0)|0);
       (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first411,5858)|0);
       $197 = HEAP32[$__end_$i834>>2]|0;
       $198 = HEAP32[$db>>2]|0;
       $arrayidx$i889 = (($198) + (($k372$0*24)|0)|0);
       $__end_$i890 = ((($197)) + -12|0);
       $199 = HEAP32[$__end_$i890>>2]|0;
       $__first_$i$i$i$i891 = ((($197)) + -8|0);
       $200 = HEAP32[$__first_$i$i$i$i891>>2]|0;
       $cmp$i892 = ($199|0)==($200|0);
       if ($cmp$i892) {
        $add$ptr$i887 = ((($197)) + -16|0);
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($add$ptr$i887,$arrayidx$i889);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($199,$arrayidx$i889);
        $201 = HEAP32[$__end_$i890>>2]|0;
        $incdec$ptr$i893 = ((($201)) + 24|0);
        HEAP32[$__end_$i890>>2] = $incdec$ptr$i893;
       }
       $inc418 = (($k372$0) + 1)|0;
       $k372$0 = $inc418;
      }
      if ((label|0) == 145) {
       $186 = ___cxa_find_matching_catch_3(0|0)|0;
       $187 = tempRet0;
       ___clang_call_terminate($186);
       // unreachable;
      }
      else if ((label|0) == 146) {
       $188 = ___cxa_find_matching_catch_3(0|0)|0;
       $189 = tempRet0;
       ___clang_call_terminate($188);
       // unreachable;
      }
      break;
     }
     case 84:  {
      $__end_$i898 = ((($db)) + 4|0);
      $202 = HEAP32[$__end_$i898>>2]|0;
      $203 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i899 = (($202) - ($203))|0;
      $sub$ptr$div$i900 = (($sub$ptr$sub$i899|0) / 24)&-1;
      $call425 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $204 = HEAP32[$__end_$i898>>2]|0;
      $205 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i902 = (($204) - ($205))|0;
      $sub$ptr$div$i903 = (($sub$ptr$sub$i902|0) / 24)&-1;
      $cmp429 = ($call425|0)==($first|0);
      if ($cmp429) {
       $retval$5 = $first;
       break L1;
      }
      $retval$sroa$0$0$$sroa_idx$i904 = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i9051174 = HEAP32[$retval$sroa$0$0$$sroa_idx$i904>>2]|0;
      HEAP32[$ref$tmp432>>2] = $retval$sroa$0$0$copyload$i9051174;
      $__end_$i906 = ((($db)) + 20|0);
      $206 = HEAP32[$__end_$i906>>2]|0;
      $__first_$i$i$i$i907 = ((($db)) + 24|0);
      $207 = HEAP32[$__first_$i$i$i$i907>>2]|0;
      $cmp$i908 = ($206>>>0)<($207>>>0);
      if ($cmp$i908) {
       HEAP32[$206>>2] = 0;
       $__end_$i$i$i$i$i910 = ((($206)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i910>>2] = 0;
       $__end_cap_$i$i$i$i$i911 = ((($206)) + 8|0);
       HEAP32[$__end_cap_$i$i$i$i$i911>>2] = 0;
       $__second_$i$i$i$i$i$i$i912 = ((($206)) + 12|0);
       HEAP32[$__second_$i$i$i$i$i$i$i912>>2] = $retval$sroa$0$0$copyload$i9051174;
       $208 = HEAP32[$__end_$i906>>2]|0;
       $incdec$ptr$i913 = ((($208)) + 16|0);
       HEAP32[$__end_$i906>>2] = $incdec$ptr$i913;
      } else {
       __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($subs818,$ref$tmp432);
      }
      $k436$0 = $sub$ptr$div$i900;
      while(1) {
       $cmp438 = ($k436$0>>>0)<($sub$ptr$div$i903>>>0);
       if (!($cmp438)) {
        break;
       }
       $210 = HEAP32[$__end_$i906>>2]|0;
       $211 = HEAP32[$db>>2]|0;
       $arrayidx$i921 = (($211) + (($k436$0*24)|0)|0);
       $__end_$i922 = ((($210)) + -12|0);
       $212 = HEAP32[$__end_$i922>>2]|0;
       $__first_$i$i$i$i923 = ((($210)) + -8|0);
       $213 = HEAP32[$__first_$i$i$i$i923>>2]|0;
       $cmp$i924 = ($212|0)==($213|0);
       if ($cmp$i924) {
        $add$ptr$i919 = ((($210)) + -16|0);
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($add$ptr$i919,$arrayidx$i921);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($212,$arrayidx$i921);
        $214 = HEAP32[$__end_$i922>>2]|0;
        $incdec$ptr$i925 = ((($214)) + 24|0);
        HEAP32[$__end_$i922>>2] = $incdec$ptr$i925;
       }
       $inc446 = (($k436$0) + 1)|0;
       $k436$0 = $inc446;
      }
      $try_to_parse_template_args = ((($db)) + 63|0);
      $209 = HEAP8[$try_to_parse_template_args>>0]|0;
      $tobool448 = ($209<<24>>24)!=(0);
      $add449 = (($sub$ptr$div$i900) + 1)|0;
      $cmp450 = ($sub$ptr$div$i903|0)==($add449|0);
      $or$cond = $cmp450 & $tobool448;
      if (!($or$cond)) {
       $retval$5 = $call425;
       break L1;
      }
      $call453 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call425,$last,$db)|0);
      $cmp454 = ($call453|0)==($call425|0);
      if ($cmp454) {
       $retval$5 = $call425;
       break L1;
      }
      $215 = HEAP32[$__end_$i898>>2]|0;
      $add$ptr$i931 = ((($215)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$add$ptr$i931);
      $216 = HEAP32[$__end_$i898>>2]|0;
      $add$ptr$i933 = ((($216)) + -24|0);
      $217 = $216;
      while(1) {
       $cmp$i$i$i934 = ($217|0)==($add$ptr$i933|0);
       if ($cmp$i$i$i934) {
        break;
       }
       $incdec$ptr$i$i$i936 = ((($217)) + -24|0);
       HEAP32[$__end_$i898>>2] = $incdec$ptr$i$i$i936;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i936);
       $$pre$i937 = HEAP32[$__end_$i898>>2]|0;
       $217 = $$pre$i937;
      }
      $first465 = ((($216)) + -48|0);
      $__size_$i$i$i$i$i943 = ((($args)) + 11|0);
      $218 = HEAP8[$__size_$i$i$i$i$i943>>0]|0;
      $tobool$i$i$i$i$i944 = ($218<<24>>24)<(0);
      $219 = HEAP32[$args>>2]|0;
      $cond$i$i$i$i947 = $tobool$i$i$i$i$i944 ? $219 : $args;
      $__size_$i3$i$i$i948 = ((($args)) + 4|0);
      $220 = HEAP32[$__size_$i3$i$i$i948>>2]|0;
      $conv$i$i$i$i949 = $218&255;
      $cond$i$i$i950 = $tobool$i$i$i$i$i944 ? $220 : $conv$i$i$i$i949;
      __THREW__ = 0;
      (invoke_iiii(47,($first465|0),($cond$i$i$i$i947|0),($cond$i$i$i950|0))|0);
      $221 = __THREW__; __THREW__ = 0;
      $222 = $221&1;
      if ($222) {
       $235 = ___cxa_find_matching_catch_2()|0;
       $236 = tempRet0;
       $ehselector$slot$1 = $236;$exn$slot$1 = $235;
      } else {
       $223 = HEAP32[$__end_$i898>>2]|0;
       $add$ptr$i955 = ((($223)) + -24|0);
       $retval$sroa$0$0$copyload$i9571175 = HEAP32[$retval$sroa$0$0$$sroa_idx$i904>>2]|0;
       HEAP32[$ref$tmp474>>2] = $retval$sroa$0$0$copyload$i9571175;
       __THREW__ = 0;
       invoke_viii(60,($ref$tmp469|0),($add$ptr$i955|0),($ref$tmp474|0));
       $224 = __THREW__; __THREW__ = 0;
       $225 = $224&1;
       do {
        if ($225) {
         $237 = ___cxa_find_matching_catch_2()|0;
         $238 = tempRet0;
         $ehselector$slot$0 = $238;$exn$slot$0 = $237;
        } else {
         $226 = HEAP32[$__end_$i906>>2]|0;
         $227 = HEAP32[$__first_$i$i$i$i907>>2]|0;
         $cmp$i960 = ($226>>>0)<($227>>>0);
         if ($cmp$i960) {
          $__second_$i$i$i$i$i$i$i961 = ((($ref$tmp469)) + 12|0);
          HEAP32[$226>>2] = 0;
          $__end_$i$i$i$i$i963 = ((($226)) + 4|0);
          HEAP32[$__end_$i$i$i$i$i963>>2] = 0;
          $__end_cap_$i$i$i$i$i964 = ((($226)) + 8|0);
          $228 = HEAP32[$__second_$i$i$i$i$i$i$i961>>2]|0;
          HEAP32[$__end_cap_$i$i$i$i$i964>>2] = 0;
          $__second_$i$i$i9$i$i$i$i965 = ((($226)) + 12|0);
          HEAP32[$__second_$i$i$i9$i$i$i$i965>>2] = $228;
          $229 = HEAP32[$ref$tmp469>>2]|0;
          HEAP32[$226>>2] = $229;
          $__end_$i$i$i$i967 = ((($ref$tmp469)) + 4|0);
          $230 = HEAP32[$__end_$i$i$i$i967>>2]|0;
          HEAP32[$__end_$i$i$i$i$i963>>2] = $230;
          $__first_$i$i$i8$i$i$i$i968 = ((($ref$tmp469)) + 8|0);
          $231 = HEAP32[$__first_$i$i$i8$i$i$i$i968>>2]|0;
          $__first_$i$i$i7$i$i$i$i969 = ((($226)) + 8|0);
          HEAP32[$__first_$i$i$i7$i$i$i$i969>>2] = $231;
          HEAP32[$__first_$i$i$i8$i$i$i$i968>>2] = 0;
          HEAP32[$__end_$i$i$i$i967>>2] = 0;
          HEAP32[$ref$tmp469>>2] = 0;
          $232 = HEAP32[$__end_$i906>>2]|0;
          $incdec$ptr$i970 = ((($232)) + 16|0);
          HEAP32[$__end_$i906>>2] = $incdec$ptr$i970;
         } else {
          __THREW__ = 0;
          invoke_vii(57,($subs818|0),($ref$tmp469|0));
          $233 = __THREW__; __THREW__ = 0;
          $234 = $233&1;
          if ($234) {
           $239 = ___cxa_find_matching_catch_2()|0;
           $240 = tempRet0;
           __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp469);
           $ehselector$slot$0 = $240;$exn$slot$0 = $239;
           break;
          }
         }
         __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp469);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
         $retval$5 = $call453;
         break L1;
        }
       } while(0);
       $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
      $ehselector$slot$16 = $ehselector$slot$1;$exn$slot$16 = $exn$slot$1;
      break;
     }
     case 85:  {
      if (!($cmp493)) {
       $retval$5 = $first;
       break L1;
      }
      $call496 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp498 = ($call496|0)==($add$ptr|0);
      if ($cmp498) {
       $retval$5 = $first;
       break L1;
      }
      $call500 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($call496,$last,$db)|0);
      $cmp501 = ($call500|0)==($call496|0);
      if ($cmp501) {
       $retval$5 = $first;
       break L1;
      }
      $__end_$i994 = ((($db)) + 4|0);
      $241 = HEAP32[$__end_$i994>>2]|0;
      $242 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i995 = (($241) - ($242))|0;
      $sub$ptr$div$i996 = (($sub$ptr$sub$i995|0) / 24)&-1;
      $cmp505 = ($sub$ptr$div$i996>>>0)<(2);
      if ($cmp505) {
       $retval$5 = $first;
       break L1;
      }
      $243 = $241;
      $add$ptr$i998 = ((($243)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($type,$add$ptr$i998);
      $244 = HEAP32[$__end_$i994>>2]|0;
      $add$ptr$i1000 = ((($244)) + -24|0);
      $245 = $244;
      while(1) {
       $cmp$i$i$i1001 = ($245|0)==($add$ptr$i1000|0);
       if ($cmp$i$i$i1001) {
        break;
       }
       $incdec$ptr$i$i$i1003 = ((($245)) + -24|0);
       HEAP32[$__end_$i994>>2] = $incdec$ptr$i$i$i1003;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i1003);
       $$pre$i1004 = HEAP32[$__end_$i994>>2]|0;
       $245 = $$pre$i1004;
      }
      $first518 = ((($244)) + -48|0);
      __THREW__ = 0;
      invoke_viii(61,($ref$tmp513|0),($first518|0),9);
      $246 = __THREW__; __THREW__ = 0;
      $247 = $246&1;
      L245: do {
       if ($247) {
        $271 = ___cxa_find_matching_catch_2()|0;
        $272 = tempRet0;
        $ehselector$slot$13 = $272;$exn$slot$13 = $271;
       } else {
        __THREW__ = 0;
        $call$i$i1010 = (invoke_ii(58,(5860|0))|0);
        $248 = __THREW__; __THREW__ = 0;
        $249 = $248&1;
        if ($249) {
         $256 = ___cxa_find_matching_catch_3(0|0)|0;
         $257 = tempRet0;
         ___clang_call_terminate($256);
         // unreachable;
        }
        $__size_$i$i$i$i1012 = ((($ref$tmp513)) + 11|0);
        $250 = HEAP8[$__size_$i$i$i$i1012>>0]|0;
        $tobool$i$i$i$i1013 = ($250<<24>>24)<(0);
        $__size_$i3$i$i$i1014 = ((($ref$tmp513)) + 4|0);
        $251 = HEAP32[$__size_$i3$i$i$i1014>>2]|0;
        $conv$i$i$i$i1015 = $250&255;
        $cond$i$i$i1016 = $tobool$i$i$i$i1013 ? $251 : $conv$i$i$i$i1015;
        $cmp$i$i1017 = ($call$i$i1010|0)==($cond$i$i$i1016|0);
        L251: do {
         if ($cmp$i$i1017) {
          __THREW__ = 0;
          $call3$i$i1019 = (invoke_iiii(59,($ref$tmp513|0),(5860|0),($call$i$i1010|0))|0);
          $252 = __THREW__; __THREW__ = 0;
          $253 = $252&1;
          if ($253) {
           $254 = ___cxa_find_matching_catch_3(0|0)|0;
           $255 = tempRet0;
           ___clang_call_terminate($254);
           // unreachable;
          }
          $phitmp$i1021 = ($call3$i$i1019|0)==(0);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp513);
          if ($phitmp$i1021) {
           $279 = HEAP32[$__end_$i994>>2]|0;
           $add$ptr$i1044 = ((($279)) + -24|0);
           __THREW__ = 0;
           invoke_vii(55,($proto|0),($add$ptr$i1044|0));
           $280 = __THREW__; __THREW__ = 0;
           $281 = $280&1;
           if ($281) {
            $269 = ___cxa_find_matching_catch_2()|0;
            $270 = tempRet0;
            $ehselector$slot$13 = $270;$exn$slot$13 = $269;
            break L245;
           }
           $282 = HEAP32[$__end_$i994>>2]|0;
           $add$ptr$i1046 = ((($282)) + -24|0);
           $283 = $282;
           while(1) {
            $cmp$i$i$i1047 = ($283|0)==($add$ptr$i1046|0);
            if ($cmp$i$i$i1047) {
             break;
            }
            $incdec$ptr$i$i$i1049 = ((($283)) + -24|0);
            HEAP32[$__end_$i994>>2] = $incdec$ptr$i$i$i1049;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i1049);
            $$pre$i1050 = HEAP32[$__end_$i994>>2]|0;
            $283 = $$pre$i1050;
           }
           $__size_$i$i$i1054 = ((($proto)) + 11|0);
           $284 = HEAP8[$__size_$i$i$i1054>>0]|0;
           $tobool$i$i$i1055 = ($284<<24>>24)<(0);
           $285 = HEAP32[$proto>>2]|0;
           $add$ptr5591155$ph1195 = ((($285)) + 9|0);
           $__size_$i3$i1073 = ((($proto)) + 4|0);
           $286 = HEAP32[$__size_$i3$i1073>>2]|0;
           $add$ptr5591155$ph = ((($proto)) + 9|0);
           $conv$i$i1075 = $284&255;
           $cond$i$i10681161 = $tobool$i$i$i1055 ? $285 : $proto;
           $add$ptr55911551159 = $tobool$i$i$i1055 ? $add$ptr5591155$ph1195 : $add$ptr5591155$ph;
           $cond$i1077 = $tobool$i$i$i1055 ? $286 : $conv$i$i1075;
           $add$ptr562 = (($cond$i$i10681161) + ($cond$i1077)|0);
           __THREW__ = 0;
           $call564 = (invoke_iiii(63,($add$ptr55911551159|0),($add$ptr562|0),($db|0))|0);
           $287 = __THREW__; __THREW__ = 0;
           $288 = $287&1;
           L264: do {
            if ($288) {
             $304 = ___cxa_find_matching_catch_2()|0;
             $305 = tempRet0;
             $ehselector$slot$11 = $305;$exn$slot$11 = $304;
            } else {
             $289 = HEAP8[$__size_$i$i$i1054>>0]|0;
             $tobool$i$i$i1081 = ($289<<24>>24)<(0);
             $290 = HEAP32[$proto>>2]|0;
             $cond$i$i1086 = $tobool$i$i$i1081 ? $290 : $proto;
             $add$ptr566 = ((($cond$i$i1086)) + 9|0);
             $cmp567 = ($call564|0)==($add$ptr566|0);
             L267: do {
              if ($cmp567) {
               __THREW__ = 0;
               invoke_viii(62,($ref$tmp606|0),($type|0),(5870|0));
               $314 = __THREW__; __THREW__ = 0;
               $315 = $314&1;
               if ($315) {
                $326 = ___cxa_find_matching_catch_2()|0;
                $327 = tempRet0;
                $ehselector$slot$10 = $327;$exn$slot$10 = $326;
               } else {
                $316 = HEAP8[$__size_$i$i$i1054>>0]|0;
                $tobool$i$i$i$i$i1122 = ($316<<24>>24)<(0);
                $317 = HEAP32[$proto>>2]|0;
                $cond$i$i$i$i1125 = $tobool$i$i$i$i$i1122 ? $317 : $proto;
                $__size_$i3$i$i$i1126 = ((($proto)) + 4|0);
                $318 = HEAP32[$__size_$i3$i$i$i1126>>2]|0;
                $conv$i$i$i$i1127 = $316&255;
                $cond$i$i$i1128 = $tobool$i$i$i$i$i1122 ? $318 : $conv$i$i$i$i1127;
                __THREW__ = 0;
                $call3$i$i11291137 = (invoke_iiii(47,($ref$tmp606|0),($cond$i$i$i$i1125|0),($cond$i$i$i1128|0))|0);
                $319 = __THREW__; __THREW__ = 0;
                $320 = $319&1;
                L272: do {
                 if ($320) {
                  $328 = ___cxa_find_matching_catch_2()|0;
                  $329 = tempRet0;
                  $ehselector$slot$9 = $329;$exn$slot$9 = $328;
                 } else {
                  ;HEAP32[$agg$tmp605>>2]=HEAP32[$ref$tmp606>>2]|0;HEAP32[$agg$tmp605+4>>2]=HEAP32[$ref$tmp606+4>>2]|0;HEAP32[$agg$tmp605+8>>2]=HEAP32[$ref$tmp606+8>>2]|0;
                  $__i$0$i$i$i1131 = 0;
                  while(1) {
                   $exitcond$i$i$i1132 = ($__i$0$i$i$i1131|0)==(3);
                   if ($exitcond$i$i$i1132) {
                    break;
                   }
                   $arrayidx$i$i$i1134 = (($ref$tmp606) + ($__i$0$i$i$i1131<<2)|0);
                   HEAP32[$arrayidx$i$i$i1134>>2] = 0;
                   $inc$i$i$i1135 = (($__i$0$i$i$i1131) + 1)|0;
                   $__i$0$i$i$i1131 = $inc$i$i$i1135;
                  }
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp604,$agg$tmp605);
                  $321 = HEAP32[$__end_$i994>>2]|0;
                  $__first_$i$i$i$i1139 = ((($db)) + 8|0);
                  $322 = HEAP32[$__first_$i$i$i$i1139>>2]|0;
                  $cmp$i1140 = ($321>>>0)<($322>>>0);
                  do {
                   if ($cmp$i1140) {
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($321,$ref$tmp604);
                    $323 = HEAP32[$__end_$i994>>2]|0;
                    $incdec$ptr$i1141 = ((($323)) + 24|0);
                    HEAP32[$__end_$i994>>2] = $incdec$ptr$i1141;
                   } else {
                    __THREW__ = 0;
                    invoke_vii(64,($db|0),($ref$tmp604|0));
                    $324 = __THREW__; __THREW__ = 0;
                    $325 = $324&1;
                    if (!($325)) {
                     break;
                    }
                    $330 = ___cxa_find_matching_catch_2()|0;
                    $331 = tempRet0;
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp604);
                    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp605);
                    $ehselector$slot$9 = $331;$exn$slot$9 = $330;
                    break L272;
                   }
                  } while(0);
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp604);
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp605);
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp606);
                  break L267;
                 }
                } while(0);
                __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp606);
                $ehselector$slot$10 = $ehselector$slot$9;$exn$slot$10 = $exn$slot$9;
               }
               $ehselector$slot$11 = $ehselector$slot$10;$exn$slot$11 = $exn$slot$10;
               break L264;
              } else {
               __THREW__ = 0;
               invoke_viii(62,($ref$tmp572|0),($type|0),(5872|0));
               $291 = __THREW__; __THREW__ = 0;
               $292 = $291&1;
               if ($292) {
                $306 = ___cxa_find_matching_catch_2()|0;
                $307 = tempRet0;
                $ehselector$slot$8 = $307;$exn$slot$8 = $306;
               } else {
                $293 = HEAP32[$__end_$i994>>2]|0;
                $add$ptr$i1089 = ((($293)) + -24|0);
                __THREW__ = 0;
                invoke_vii(55,($ref$tmp575|0),($add$ptr$i1089|0));
                $294 = __THREW__; __THREW__ = 0;
                $295 = $294&1;
                if ($295) {
                 $308 = ___cxa_find_matching_catch_2()|0;
                 $309 = tempRet0;
                 $ehselector$slot$7 = $309;$exn$slot$7 = $308;
                } else {
                 $__size_$i$i$i$i$i1091 = ((($ref$tmp575)) + 11|0);
                 $296 = HEAP8[$__size_$i$i$i$i$i1091>>0]|0;
                 $tobool$i$i$i$i$i1092 = ($296<<24>>24)<(0);
                 $297 = HEAP32[$ref$tmp575>>2]|0;
                 $cond$i$i$i$i1095 = $tobool$i$i$i$i$i1092 ? $297 : $ref$tmp575;
                 $__size_$i3$i$i$i1096 = ((($ref$tmp575)) + 4|0);
                 $298 = HEAP32[$__size_$i3$i$i$i1096>>2]|0;
                 $conv$i$i$i$i1097 = $296&255;
                 $cond$i$i$i1098 = $tobool$i$i$i$i$i1092 ? $298 : $conv$i$i$i$i1097;
                 __THREW__ = 0;
                 $call3$i$i10991107 = (invoke_iiii(47,($ref$tmp572|0),($cond$i$i$i$i1095|0),($cond$i$i$i1098|0))|0);
                 $299 = __THREW__; __THREW__ = 0;
                 $300 = $299&1;
                 do {
                  if ($300) {
                   $310 = ___cxa_find_matching_catch_2()|0;
                   $311 = tempRet0;
                   $ehselector$slot$6 = $311;$exn$slot$6 = $310;
                  } else {
                   ;HEAP32[$ref$tmp571>>2]=HEAP32[$ref$tmp572>>2]|0;HEAP32[$ref$tmp571+4>>2]=HEAP32[$ref$tmp572+4>>2]|0;HEAP32[$ref$tmp571+8>>2]=HEAP32[$ref$tmp572+8>>2]|0;
                   $__i$0$i$i$i1101 = 0;
                   while(1) {
                    $exitcond$i$i$i1102 = ($__i$0$i$i$i1101|0)==(3);
                    if ($exitcond$i$i$i1102) {
                     break;
                    }
                    $arrayidx$i$i$i1104 = (($ref$tmp572) + ($__i$0$i$i$i1101<<2)|0);
                    HEAP32[$arrayidx$i$i$i1104>>2] = 0;
                    $inc$i$i$i1105 = (($__i$0$i$i$i1101) + 1)|0;
                    $__i$0$i$i$i1101 = $inc$i$i$i1105;
                   }
                   __THREW__ = 0;
                   $call$i11091117 = (invoke_iii(54,($ref$tmp571|0),(5874|0))|0);
                   $301 = __THREW__; __THREW__ = 0;
                   $302 = $301&1;
                   if ($302) {
                    $312 = ___cxa_find_matching_catch_2()|0;
                    $313 = tempRet0;
                    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp571);
                    $ehselector$slot$6 = $313;$exn$slot$6 = $312;
                    break;
                   }
                   ;HEAP32[$agg$tmp570>>2]=HEAP32[$ref$tmp571>>2]|0;HEAP32[$agg$tmp570+4>>2]=HEAP32[$ref$tmp571+4>>2]|0;HEAP32[$agg$tmp570+8>>2]=HEAP32[$ref$tmp571+8>>2]|0;
                   $__i$0$i$i$i1111 = 0;
                   while(1) {
                    $exitcond$i$i$i1112 = ($__i$0$i$i$i1111|0)==(3);
                    if ($exitcond$i$i$i1112) {
                     break;
                    }
                    $arrayidx$i$i$i1114 = (($ref$tmp571) + ($__i$0$i$i$i1111<<2)|0);
                    HEAP32[$arrayidx$i$i$i1114>>2] = 0;
                    $inc$i$i$i1115 = (($__i$0$i$i$i1111) + 1)|0;
                    $__i$0$i$i$i1111 = $inc$i$i$i1115;
                   }
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp569,$agg$tmp570);
                   $303 = HEAP32[$__end_$i994>>2]|0;
                   $add$ptr$i1119 = ((($303)) + -24|0);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i1119,$ref$tmp569);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp569);
                   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp570);
                   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp571);
                   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp575);
                   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp572);
                   break L267;
                  }
                 } while(0);
                 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp575);
                 $ehselector$slot$7 = $ehselector$slot$6;$exn$slot$7 = $exn$slot$6;
                }
                __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp572);
                $ehselector$slot$8 = $ehselector$slot$7;$exn$slot$8 = $exn$slot$7;
               }
               $ehselector$slot$11 = $ehselector$slot$8;$exn$slot$11 = $exn$slot$8;
               break L264;
              }
             } while(0);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($proto);
             break L251;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($proto);
           $ehselector$slot$13 = $ehselector$slot$11;$exn$slot$13 = $exn$slot$11;
           break L245;
          } else {
           label = 199;
          }
         } else {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp513);
          label = 199;
         }
        } while(0);
        L313: do {
         if ((label|0) == 199) {
          __THREW__ = 0;
          invoke_viii(62,($ref$tmp524|0),($type|0),(5870|0));
          $258 = __THREW__; __THREW__ = 0;
          $259 = $258&1;
          if ($259) {
           $273 = ___cxa_find_matching_catch_2()|0;
           $274 = tempRet0;
           $ehselector$slot$4 = $274;$exn$slot$4 = $273;
          } else {
           $260 = HEAP32[$__end_$i994>>2]|0;
           $add$ptr$i1028 = ((($260)) + -24|0);
           __THREW__ = 0;
           invoke_vii(55,($ref$tmp527|0),($add$ptr$i1028|0));
           $261 = __THREW__; __THREW__ = 0;
           $262 = $261&1;
           do {
            if ($262) {
             $275 = ___cxa_find_matching_catch_2()|0;
             $276 = tempRet0;
             $ehselector$slot$3 = $276;$exn$slot$3 = $275;
            } else {
             $__size_$i$i$i$i$i1030 = ((($ref$tmp527)) + 11|0);
             $263 = HEAP8[$__size_$i$i$i$i$i1030>>0]|0;
             $tobool$i$i$i$i$i1031 = ($263<<24>>24)<(0);
             $264 = HEAP32[$ref$tmp527>>2]|0;
             $cond$i$i$i$i1034 = $tobool$i$i$i$i$i1031 ? $264 : $ref$tmp527;
             $__size_$i3$i$i$i1035 = ((($ref$tmp527)) + 4|0);
             $265 = HEAP32[$__size_$i3$i$i$i1035>>2]|0;
             $conv$i$i$i$i1036 = $263&255;
             $cond$i$i$i1037 = $tobool$i$i$i$i$i1031 ? $265 : $conv$i$i$i$i1036;
             __THREW__ = 0;
             $call3$i$i10381040 = (invoke_iiii(47,($ref$tmp524|0),($cond$i$i$i$i1034|0),($cond$i$i$i1037|0))|0);
             $266 = __THREW__; __THREW__ = 0;
             $267 = $266&1;
             if ($267) {
              $277 = ___cxa_find_matching_catch_2()|0;
              $278 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp527);
              $ehselector$slot$3 = $278;$exn$slot$3 = $277;
              break;
             }
             ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp524>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp524+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp524+8>>2]|0;
             $__i$0$i$i$i = 0;
             while(1) {
              $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
              if ($exitcond$i$i$i) {
               break;
              }
              $arrayidx$i$i$i1039 = (($ref$tmp524) + ($__i$0$i$i$i<<2)|0);
              HEAP32[$arrayidx$i$i$i1039>>2] = 0;
              $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
              $__i$0$i$i$i = $inc$i$i$i;
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp523,$agg$tmp);
             $268 = HEAP32[$__end_$i994>>2]|0;
             $add$ptr$i1042 = ((($268)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i1042,$ref$tmp523);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp523);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp527);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp524);
             break L313;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp524);
           $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
          }
          $ehselector$slot$13 = $ehselector$slot$4;$exn$slot$13 = $exn$slot$4;
          break L245;
         }
        } while(0);
        $332 = HEAP32[$__end_$i994>>2]|0;
        $add$ptr$i1147 = ((($332)) + -24|0);
        $retval$sroa$0$0$$sroa_idx$i1148 = ((($db)) + 12|0);
        $retval$sroa$0$0$copyload$i11491173 = HEAP32[$retval$sroa$0$0$$sroa_idx$i1148>>2]|0;
        HEAP32[$ref$tmp630>>2] = $retval$sroa$0$0$copyload$i11491173;
        __THREW__ = 0;
        invoke_viii(60,($ref$tmp625|0),($add$ptr$i1147|0),($ref$tmp630|0));
        $333 = __THREW__; __THREW__ = 0;
        $334 = $333&1;
        do {
         if ($334) {
          $344 = ___cxa_find_matching_catch_2()|0;
          $345 = tempRet0;
          $ehselector$slot$12 = $345;$exn$slot$12 = $344;
         } else {
          $__end_$i976 = ((($db)) + 20|0);
          $335 = HEAP32[$__end_$i976>>2]|0;
          $__first_$i$i$i$i977 = ((($db)) + 24|0);
          $336 = HEAP32[$__first_$i$i$i$i977>>2]|0;
          $cmp$i978 = ($335>>>0)<($336>>>0);
          if ($cmp$i978) {
           $__second_$i$i$i$i$i$i$i979 = ((($ref$tmp625)) + 12|0);
           HEAP32[$335>>2] = 0;
           $__end_$i$i$i$i$i981 = ((($335)) + 4|0);
           HEAP32[$__end_$i$i$i$i$i981>>2] = 0;
           $__end_cap_$i$i$i$i$i982 = ((($335)) + 8|0);
           $337 = HEAP32[$__second_$i$i$i$i$i$i$i979>>2]|0;
           HEAP32[$__end_cap_$i$i$i$i$i982>>2] = 0;
           $__second_$i$i$i9$i$i$i$i983 = ((($335)) + 12|0);
           HEAP32[$__second_$i$i$i9$i$i$i$i983>>2] = $337;
           $338 = HEAP32[$ref$tmp625>>2]|0;
           HEAP32[$335>>2] = $338;
           $__end_$i$i$i$i985 = ((($ref$tmp625)) + 4|0);
           $339 = HEAP32[$__end_$i$i$i$i985>>2]|0;
           HEAP32[$__end_$i$i$i$i$i981>>2] = $339;
           $__first_$i$i$i8$i$i$i$i986 = ((($ref$tmp625)) + 8|0);
           $340 = HEAP32[$__first_$i$i$i8$i$i$i$i986>>2]|0;
           $__first_$i$i$i7$i$i$i$i987 = ((($335)) + 8|0);
           HEAP32[$__first_$i$i$i7$i$i$i$i987>>2] = $340;
           HEAP32[$__first_$i$i$i8$i$i$i$i986>>2] = 0;
           HEAP32[$__end_$i$i$i$i985>>2] = 0;
           HEAP32[$ref$tmp625>>2] = 0;
           $341 = HEAP32[$__end_$i976>>2]|0;
           $incdec$ptr$i988 = ((($341)) + 16|0);
           HEAP32[$__end_$i976>>2] = $incdec$ptr$i988;
          } else {
           __THREW__ = 0;
           invoke_vii(57,($subs818|0),($ref$tmp625|0));
           $342 = __THREW__; __THREW__ = 0;
           $343 = $342&1;
           if ($343) {
            $346 = ___cxa_find_matching_catch_2()|0;
            $347 = tempRet0;
            __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp625);
            $ehselector$slot$12 = $347;$exn$slot$12 = $346;
            break;
           }
          }
          __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp625);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type);
          $retval$5 = $call500;
          break L1;
         }
        } while(0);
        $ehselector$slot$13 = $ehselector$slot$12;$exn$slot$13 = $exn$slot$12;
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type);
      $ehselector$slot$16 = $ehselector$slot$13;$exn$slot$16 = $exn$slot$13;
      break;
     }
     case 83:  {
      if ($cmp493) {
       $348 = HEAP8[$add$ptr>>0]|0;
       $cmp653 = ($348<<24>>24)==(116);
       if ($cmp653) {
        $call655 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
        $cmp656 = ($call655|0)==($first|0);
        if ($cmp656) {
         $retval$5 = $first;
         break L1;
        }
        $349 = HEAP32[$db>>2]|0;
        $__end_$i663 = ((($db)) + 4|0);
        $350 = HEAP32[$__end_$i663>>2]|0;
        $cmp$i664 = ($349|0)==($350|0);
        if ($cmp$i664) {
         $retval$5 = $first;
         break L1;
        }
        $add$ptr$i635 = ((($350)) + -24|0);
        $retval$sroa$0$0$$sroa_idx$i608 = ((($db)) + 12|0);
        $retval$sroa$0$0$copyload$i6091172 = HEAP32[$retval$sroa$0$0$$sroa_idx$i608>>2]|0;
        HEAP32[$ref$tmp666>>2] = $retval$sroa$0$0$copyload$i6091172;
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp663,$add$ptr$i635,$ref$tmp666);
        $__end_$i541 = ((($db)) + 20|0);
        $351 = HEAP32[$__end_$i541>>2]|0;
        $__first_$i$i$i$i542 = ((($db)) + 24|0);
        $352 = HEAP32[$__first_$i$i$i$i542>>2]|0;
        $cmp$i543 = ($351>>>0)<($352>>>0);
        if ($cmp$i543) {
         $__second_$i$i$i$i$i$i$i544 = ((($ref$tmp663)) + 12|0);
         HEAP32[$351>>2] = 0;
         $__end_$i$i$i$i$i546 = ((($351)) + 4|0);
         HEAP32[$__end_$i$i$i$i$i546>>2] = 0;
         $__end_cap_$i$i$i$i$i547 = ((($351)) + 8|0);
         $353 = HEAP32[$__second_$i$i$i$i$i$i$i544>>2]|0;
         HEAP32[$__end_cap_$i$i$i$i$i547>>2] = 0;
         $__second_$i$i$i9$i$i$i$i548 = ((($351)) + 12|0);
         HEAP32[$__second_$i$i$i9$i$i$i$i548>>2] = $353;
         $354 = HEAP32[$ref$tmp663>>2]|0;
         HEAP32[$351>>2] = $354;
         $__end_$i$i$i$i550 = ((($ref$tmp663)) + 4|0);
         $355 = HEAP32[$__end_$i$i$i$i550>>2]|0;
         HEAP32[$__end_$i$i$i$i$i546>>2] = $355;
         $__first_$i$i$i8$i$i$i$i551 = ((($ref$tmp663)) + 8|0);
         $356 = HEAP32[$__first_$i$i$i8$i$i$i$i551>>2]|0;
         $__first_$i$i$i7$i$i$i$i552 = ((($351)) + 8|0);
         HEAP32[$__first_$i$i$i7$i$i$i$i552>>2] = $356;
         HEAP32[$__first_$i$i$i8$i$i$i$i551>>2] = 0;
         HEAP32[$__end_$i$i$i$i550>>2] = 0;
         HEAP32[$ref$tmp663>>2] = 0;
         $357 = HEAP32[$__end_$i541>>2]|0;
         $incdec$ptr$i553 = ((($357)) + 16|0);
         HEAP32[$__end_$i541>>2] = $incdec$ptr$i553;
        } else {
         __THREW__ = 0;
         invoke_vii(57,($subs818|0),($ref$tmp663|0));
         $358 = __THREW__; __THREW__ = 0;
         $359 = $358&1;
         if ($359) {
          $360 = ___cxa_find_matching_catch_2()|0;
          $361 = tempRet0;
          __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp663);
          $ehselector$slot$16 = $361;$exn$slot$16 = $360;
          break L58;
         }
        }
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp663);
        $retval$5 = $call655;
        break L1;
       }
      }
      $call677 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $cmp678 = ($call677|0)==($first|0);
      if ($cmp678) {
       $retval$5 = $first;
       break L1;
      }
      $call680 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call677,$last,$db)|0);
      $cmp681 = ($call680|0)==($call677|0);
      if ($cmp681) {
       $retval$5 = $call677;
       break L1;
      }
      $__end_$i476 = ((($db)) + 4|0);
      $362 = HEAP32[$__end_$i476>>2]|0;
      $363 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i477 = (($362) - ($363))|0;
      $sub$ptr$div$i478 = (($sub$ptr$sub$i477|0) / 24)&-1;
      $cmp685 = ($sub$ptr$div$i478>>>0)<(2);
      if ($cmp685) {
       $retval$5 = $call677;
       break L1;
      }
      $364 = $362;
      $add$ptr$i475 = ((($364)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($template_args,$add$ptr$i475);
      $365 = HEAP32[$__end_$i476>>2]|0;
      $add$ptr$i473 = ((($365)) + -24|0);
      $366 = $365;
      while(1) {
       $cmp$i$i$i = ($366|0)==($add$ptr$i473|0);
       if ($cmp$i$i$i) {
        break;
       }
       $incdec$ptr$i$i$i = ((($366)) + -24|0);
       HEAP32[$__end_$i476>>2] = $incdec$ptr$i$i$i;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
       $$pre$i = HEAP32[$__end_$i476>>2]|0;
       $366 = $$pre$i;
      }
      $first696 = ((($365)) + -48|0);
      $__size_$i$i$i$i$i = ((($template_args)) + 11|0);
      $367 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
      $tobool$i$i$i$i$i = ($367<<24>>24)<(0);
      $368 = HEAP32[$template_args>>2]|0;
      $cond$i$i$i$i = $tobool$i$i$i$i$i ? $368 : $template_args;
      $__size_$i3$i$i$i = ((($template_args)) + 4|0);
      $369 = HEAP32[$__size_$i3$i$i$i>>2]|0;
      $conv$i$i$i$i = $367&255;
      $cond$i$i$i = $tobool$i$i$i$i$i ? $369 : $conv$i$i$i$i;
      __THREW__ = 0;
      (invoke_iiii(47,($first696|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
      $370 = __THREW__; __THREW__ = 0;
      $371 = $370&1;
      if ($371) {
       $384 = ___cxa_find_matching_catch_2()|0;
       $385 = tempRet0;
       $ehselector$slot$15 = $385;$exn$slot$15 = $384;
      } else {
       $372 = HEAP32[$__end_$i476>>2]|0;
       $add$ptr$i468 = ((($372)) + -24|0);
       $retval$sroa$0$0$$sroa_idx$i465 = ((($db)) + 12|0);
       $retval$sroa$0$0$copyload$i4661171 = HEAP32[$retval$sroa$0$0$$sroa_idx$i465>>2]|0;
       HEAP32[$ref$tmp705>>2] = $retval$sroa$0$0$copyload$i4661171;
       __THREW__ = 0;
       invoke_viii(60,($ref$tmp700|0),($add$ptr$i468|0),($ref$tmp705|0));
       $373 = __THREW__; __THREW__ = 0;
       $374 = $373&1;
       do {
        if ($374) {
         $386 = ___cxa_find_matching_catch_2()|0;
         $387 = tempRet0;
         $ehselector$slot$14 = $387;$exn$slot$14 = $386;
        } else {
         $__end_$i448 = ((($db)) + 20|0);
         $375 = HEAP32[$__end_$i448>>2]|0;
         $__first_$i$i$i$i449 = ((($db)) + 24|0);
         $376 = HEAP32[$__first_$i$i$i$i449>>2]|0;
         $cmp$i450 = ($375>>>0)<($376>>>0);
         if ($cmp$i450) {
          $__second_$i$i$i$i$i$i$i451 = ((($ref$tmp700)) + 12|0);
          HEAP32[$375>>2] = 0;
          $__end_$i$i$i$i$i453 = ((($375)) + 4|0);
          HEAP32[$__end_$i$i$i$i$i453>>2] = 0;
          $__end_cap_$i$i$i$i$i454 = ((($375)) + 8|0);
          $377 = HEAP32[$__second_$i$i$i$i$i$i$i451>>2]|0;
          HEAP32[$__end_cap_$i$i$i$i$i454>>2] = 0;
          $__second_$i$i$i9$i$i$i$i455 = ((($375)) + 12|0);
          HEAP32[$__second_$i$i$i9$i$i$i$i455>>2] = $377;
          $378 = HEAP32[$ref$tmp700>>2]|0;
          HEAP32[$375>>2] = $378;
          $__end_$i$i$i$i457 = ((($ref$tmp700)) + 4|0);
          $379 = HEAP32[$__end_$i$i$i$i457>>2]|0;
          HEAP32[$__end_$i$i$i$i$i453>>2] = $379;
          $__first_$i$i$i8$i$i$i$i458 = ((($ref$tmp700)) + 8|0);
          $380 = HEAP32[$__first_$i$i$i8$i$i$i$i458>>2]|0;
          $__first_$i$i$i7$i$i$i$i459 = ((($375)) + 8|0);
          HEAP32[$__first_$i$i$i7$i$i$i$i459>>2] = $380;
          HEAP32[$__first_$i$i$i8$i$i$i$i458>>2] = 0;
          HEAP32[$__end_$i$i$i$i457>>2] = 0;
          HEAP32[$ref$tmp700>>2] = 0;
          $381 = HEAP32[$__end_$i448>>2]|0;
          $incdec$ptr$i460 = ((($381)) + 16|0);
          HEAP32[$__end_$i448>>2] = $incdec$ptr$i460;
         } else {
          __THREW__ = 0;
          invoke_vii(57,($subs818|0),($ref$tmp700|0));
          $382 = __THREW__; __THREW__ = 0;
          $383 = $382&1;
          if ($383) {
           $388 = ___cxa_find_matching_catch_2()|0;
           $389 = tempRet0;
           __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp700);
           $ehselector$slot$14 = $389;$exn$slot$14 = $388;
           break;
          }
         }
         __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp700);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($template_args);
         $retval$5 = $call680;
         break L1;
        }
       } while(0);
       $ehselector$slot$15 = $ehselector$slot$14;$exn$slot$15 = $exn$slot$14;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($template_args);
      $ehselector$slot$16 = $ehselector$slot$15;$exn$slot$16 = $exn$slot$15;
      break;
     }
     case 68:  {
      if ($cmp493) {
       $390 = HEAP8[$add$ptr>>0]|0;
       $conv726 = $390 << 24 >> 24;
       switch ($conv726|0) {
       case 112:  {
        $__end_$i445 = ((($db)) + 4|0);
        $391 = HEAP32[$__end_$i445>>2]|0;
        $392 = HEAP32[$db>>2]|0;
        $sub$ptr$sub$i446 = (($391) - ($392))|0;
        $sub$ptr$div$i447 = (($sub$ptr$sub$i446|0) / 24)&-1;
        $add$ptr731 = ((($first)) + 2|0);
        $call732 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr731,$last,$db)|0);
        $393 = HEAP32[$__end_$i445>>2]|0;
        $394 = HEAP32[$db>>2]|0;
        $sub$ptr$sub$i = (($393) - ($394))|0;
        $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
        $cmp737 = ($call732|0)==($add$ptr731|0);
        if ($cmp737) {
         label = 315;
         break L58;
        }
        $retval$sroa$0$0$$sroa_idx$i442 = ((($db)) + 12|0);
        $retval$sroa$0$0$copyload$i4431170 = HEAP32[$retval$sroa$0$0$$sroa_idx$i442>>2]|0;
        HEAP32[$ref$tmp740>>2] = $retval$sroa$0$0$copyload$i4431170;
        $__end_$i432 = ((($db)) + 20|0);
        $395 = HEAP32[$__end_$i432>>2]|0;
        $__first_$i$i$i$i433 = ((($db)) + 24|0);
        $396 = HEAP32[$__first_$i$i$i$i433>>2]|0;
        $cmp$i434 = ($395>>>0)<($396>>>0);
        if ($cmp$i434) {
         HEAP32[$395>>2] = 0;
         $__end_$i$i$i$i$i436 = ((($395)) + 4|0);
         HEAP32[$__end_$i$i$i$i$i436>>2] = 0;
         $__end_cap_$i$i$i$i$i437 = ((($395)) + 8|0);
         HEAP32[$__end_cap_$i$i$i$i$i437>>2] = 0;
         $__second_$i$i$i$i$i$i$i438 = ((($395)) + 12|0);
         HEAP32[$__second_$i$i$i$i$i$i$i438>>2] = $retval$sroa$0$0$copyload$i4431170;
         $397 = HEAP32[$__end_$i432>>2]|0;
         $incdec$ptr$i439 = ((($397)) + 16|0);
         HEAP32[$__end_$i432>>2] = $incdec$ptr$i439;
        } else {
         __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($subs818,$ref$tmp740);
        }
        $k744$0 = $sub$ptr$div$i447;
        while(1) {
         $cmp746 = ($k744$0>>>0)<($sub$ptr$div$i>>>0);
         if (!($cmp746)) {
          $retval$5 = $call732;
          break L1;
         }
         $398 = HEAP32[$__end_$i432>>2]|0;
         $399 = HEAP32[$db>>2]|0;
         $arrayidx$i = (($399) + (($k744$0*24)|0)|0);
         $__end_$i423 = ((($398)) + -12|0);
         $400 = HEAP32[$__end_$i423>>2]|0;
         $__first_$i$i$i$i424 = ((($398)) + -8|0);
         $401 = HEAP32[$__first_$i$i$i$i424>>2]|0;
         $cmp$i425 = ($400|0)==($401|0);
         if ($cmp$i425) {
          $add$ptr$i431 = ((($398)) + -16|0);
          __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($add$ptr$i431,$arrayidx$i);
         } else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($400,$arrayidx$i);
          $402 = HEAP32[$__end_$i423>>2]|0;
          $incdec$ptr$i426 = ((($402)) + 24|0);
          HEAP32[$__end_$i423>>2] = $incdec$ptr$i426;
         }
         $inc754 = (($k744$0) + 1)|0;
         $k744$0 = $inc754;
        }
        break;
       }
       case 84: case 116:  {
        $call762 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
        $cmp763 = ($call762|0)==($first|0);
        if ($cmp763) {
         label = 315;
         break L58;
        }
        $403 = HEAP32[$db>>2]|0;
        $__end_$i421 = ((($db)) + 4|0);
        $404 = HEAP32[$__end_$i421>>2]|0;
        $cmp$i422 = ($403|0)==($404|0);
        if ($cmp$i422) {
         $retval$5 = $first;
         break L1;
        }
        $add$ptr$i419 = ((($404)) + -24|0);
        $retval$sroa$0$0$$sroa_idx$i416 = ((($db)) + 12|0);
        $retval$sroa$0$0$copyload$i4171169 = HEAP32[$retval$sroa$0$0$$sroa_idx$i416>>2]|0;
        HEAP32[$ref$tmp773>>2] = $retval$sroa$0$0$copyload$i4171169;
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp770,$add$ptr$i419,$ref$tmp773);
        $__end_$i399 = ((($db)) + 20|0);
        $405 = HEAP32[$__end_$i399>>2]|0;
        $__first_$i$i$i$i400 = ((($db)) + 24|0);
        $406 = HEAP32[$__first_$i$i$i$i400>>2]|0;
        $cmp$i401 = ($405>>>0)<($406>>>0);
        if ($cmp$i401) {
         $__second_$i$i$i$i$i$i$i402 = ((($ref$tmp770)) + 12|0);
         HEAP32[$405>>2] = 0;
         $__end_$i$i$i$i$i404 = ((($405)) + 4|0);
         HEAP32[$__end_$i$i$i$i$i404>>2] = 0;
         $__end_cap_$i$i$i$i$i405 = ((($405)) + 8|0);
         $407 = HEAP32[$__second_$i$i$i$i$i$i$i402>>2]|0;
         HEAP32[$__end_cap_$i$i$i$i$i405>>2] = 0;
         $__second_$i$i$i9$i$i$i$i406 = ((($405)) + 12|0);
         HEAP32[$__second_$i$i$i9$i$i$i$i406>>2] = $407;
         $408 = HEAP32[$ref$tmp770>>2]|0;
         HEAP32[$405>>2] = $408;
         $__end_$i$i$i$i408 = ((($ref$tmp770)) + 4|0);
         $409 = HEAP32[$__end_$i$i$i$i408>>2]|0;
         HEAP32[$__end_$i$i$i$i$i404>>2] = $409;
         $__first_$i$i$i8$i$i$i$i409 = ((($ref$tmp770)) + 8|0);
         $410 = HEAP32[$__first_$i$i$i8$i$i$i$i409>>2]|0;
         $__first_$i$i$i7$i$i$i$i410 = ((($405)) + 8|0);
         HEAP32[$__first_$i$i$i7$i$i$i$i410>>2] = $410;
         HEAP32[$__first_$i$i$i8$i$i$i$i409>>2] = 0;
         HEAP32[$__end_$i$i$i$i408>>2] = 0;
         HEAP32[$ref$tmp770>>2] = 0;
         $411 = HEAP32[$__end_$i399>>2]|0;
         $incdec$ptr$i411 = ((($411)) + 16|0);
         HEAP32[$__end_$i399>>2] = $incdec$ptr$i411;
        } else {
         __THREW__ = 0;
         invoke_vii(57,($subs818|0),($ref$tmp770|0));
         $412 = __THREW__; __THREW__ = 0;
         $413 = $412&1;
         if ($413) {
          $414 = ___cxa_find_matching_catch_2()|0;
          $415 = tempRet0;
          __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp770);
          $ehselector$slot$16 = $415;$exn$slot$16 = $414;
          break L58;
         }
        }
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp770);
        $retval$5 = $call762;
        break L1;
        break;
       }
       case 118:  {
        $call784 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
        $cmp785 = ($call784|0)==($first|0);
        if ($cmp785) {
         label = 315;
         break L58;
        }
        $416 = HEAP32[$db>>2]|0;
        $__end_$i397 = ((($db)) + 4|0);
        $417 = HEAP32[$__end_$i397>>2]|0;
        $cmp$i398 = ($416|0)==($417|0);
        if ($cmp$i398) {
         $retval$5 = $first;
         break L1;
        }
        $add$ptr$i395 = ((($417)) + -24|0);
        $retval$sroa$0$0$$sroa_idx$i392 = ((($db)) + 12|0);
        $retval$sroa$0$0$copyload$i3931168 = HEAP32[$retval$sroa$0$0$$sroa_idx$i392>>2]|0;
        HEAP32[$ref$tmp795>>2] = $retval$sroa$0$0$copyload$i3931168;
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp792,$add$ptr$i395,$ref$tmp795);
        $__end_$i375 = ((($db)) + 20|0);
        $418 = HEAP32[$__end_$i375>>2]|0;
        $__first_$i$i$i$i376 = ((($db)) + 24|0);
        $419 = HEAP32[$__first_$i$i$i$i376>>2]|0;
        $cmp$i377 = ($418>>>0)<($419>>>0);
        if ($cmp$i377) {
         $__second_$i$i$i$i$i$i$i378 = ((($ref$tmp792)) + 12|0);
         HEAP32[$418>>2] = 0;
         $__end_$i$i$i$i$i380 = ((($418)) + 4|0);
         HEAP32[$__end_$i$i$i$i$i380>>2] = 0;
         $__end_cap_$i$i$i$i$i381 = ((($418)) + 8|0);
         $420 = HEAP32[$__second_$i$i$i$i$i$i$i378>>2]|0;
         HEAP32[$__end_cap_$i$i$i$i$i381>>2] = 0;
         $__second_$i$i$i9$i$i$i$i382 = ((($418)) + 12|0);
         HEAP32[$__second_$i$i$i9$i$i$i$i382>>2] = $420;
         $421 = HEAP32[$ref$tmp792>>2]|0;
         HEAP32[$418>>2] = $421;
         $__end_$i$i$i$i384 = ((($ref$tmp792)) + 4|0);
         $422 = HEAP32[$__end_$i$i$i$i384>>2]|0;
         HEAP32[$__end_$i$i$i$i$i380>>2] = $422;
         $__first_$i$i$i8$i$i$i$i385 = ((($ref$tmp792)) + 8|0);
         $423 = HEAP32[$__first_$i$i$i8$i$i$i$i385>>2]|0;
         $__first_$i$i$i7$i$i$i$i386 = ((($418)) + 8|0);
         HEAP32[$__first_$i$i$i7$i$i$i$i386>>2] = $423;
         HEAP32[$__first_$i$i$i8$i$i$i$i385>>2] = 0;
         HEAP32[$__end_$i$i$i$i384>>2] = 0;
         HEAP32[$ref$tmp792>>2] = 0;
         $424 = HEAP32[$__end_$i375>>2]|0;
         $incdec$ptr$i387 = ((($424)) + 16|0);
         HEAP32[$__end_$i375>>2] = $incdec$ptr$i387;
        } else {
         __THREW__ = 0;
         invoke_vii(57,($subs818|0),($ref$tmp792|0));
         $425 = __THREW__; __THREW__ = 0;
         $426 = $425&1;
         if ($426) {
          $427 = ___cxa_find_matching_catch_2()|0;
          $428 = tempRet0;
          __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp792);
          $ehselector$slot$16 = $428;$exn$slot$16 = $427;
          break L58;
         }
        }
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp792);
        $retval$5 = $call784;
        break L1;
        break;
       }
       default: {
        label = 315;
        break L58;
       }
       }
      } else {
       label = 315;
      }
      break;
     }
     default: {
      label = 315;
     }
     }
    } while(0);
    do {
     if ((label|0) == 315) {
      $call807 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $cmp808 = ($call807|0)==($first|0);
      if (!($cmp808)) {
       $retval$5 = $call807;
       break L1;
      }
      $call811 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $cmp812 = ($call811|0)==($first|0);
      if ($cmp812) {
       $retval$5 = $first;
       break L1;
      }
      $429 = HEAP32[$db>>2]|0;
      $__end_$i373 = ((($db)) + 4|0);
      $430 = HEAP32[$__end_$i373>>2]|0;
      $cmp$i374 = ($429|0)==($430|0);
      if ($cmp$i374) {
       $retval$5 = $first;
       break L1;
      }
      $add$ptr$i = ((($430)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i1167 = HEAP32[$retval$sroa$0$0$$sroa_idx$i>>2]|0;
      HEAP32[$ref$tmp822>>2] = $retval$sroa$0$0$copyload$i1167;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp819,$add$ptr$i,$ref$tmp822);
      $__end_$i = ((($db)) + 20|0);
      $431 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 24|0);
      $432 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($431>>>0)<($432>>>0);
      if ($cmp$i) {
       $__second_$i$i$i$i$i$i$i = ((($ref$tmp819)) + 12|0);
       HEAP32[$431>>2] = 0;
       $__end_$i$i$i$i$i = ((($431)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i>>2] = 0;
       $__end_cap_$i$i$i$i$i = ((($431)) + 8|0);
       $433 = HEAP32[$__second_$i$i$i$i$i$i$i>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
       $__second_$i$i$i9$i$i$i$i = ((($431)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i>>2] = $433;
       $434 = HEAP32[$ref$tmp819>>2]|0;
       HEAP32[$431>>2] = $434;
       $__end_$i$i$i$i = ((($ref$tmp819)) + 4|0);
       $435 = HEAP32[$__end_$i$i$i$i>>2]|0;
       HEAP32[$__end_$i$i$i$i$i>>2] = $435;
       $__first_$i$i$i8$i$i$i$i = ((($ref$tmp819)) + 8|0);
       $436 = HEAP32[$__first_$i$i$i8$i$i$i$i>>2]|0;
       $__first_$i$i$i7$i$i$i$i = ((($431)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i>>2] = $436;
       HEAP32[$__first_$i$i$i8$i$i$i$i>>2] = 0;
       HEAP32[$__end_$i$i$i$i>>2] = 0;
       HEAP32[$ref$tmp819>>2] = 0;
       $437 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($437)) + 16|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(57,($subs818|0),($ref$tmp819|0));
       $438 = __THREW__; __THREW__ = 0;
       $439 = $438&1;
       if ($439) {
        $440 = ___cxa_find_matching_catch_2()|0;
        $441 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp819);
        $ehselector$slot$16 = $441;$exn$slot$16 = $440;
        break;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp819);
      $retval$5 = $call811;
      break L1;
     }
    } while(0);
    ___resumeException($exn$slot$16|0);
    // unreachable;
   } else {
    $retval$5 = $call96;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$5|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first,$last,$cv) {
 $first = $first|0;
 $last = $last|0;
 $cv = $cv|0;
 var $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $cmp = 0, $cmp1 = 0, $cmp10 = 0, $cmp4 = 0, $first$addr$0 = 0, $first$addr$1 = 0, $first$addr$2 = 0, $incdec$ptr = 0, $incdec$ptr13 = 0, $incdec$ptr7 = 0, $or12 = 0, $or6 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$cv>>2] = 0;
 $cmp = ($first|0)==($last|0);
 if ($cmp) {
  $first$addr$2 = $first;
 } else {
  $0 = HEAP8[$first>>0]|0;
  $cmp1 = ($0<<24>>24)==(114);
  if ($cmp1) {
   HEAP32[$cv>>2] = 4;
   $incdec$ptr = ((($first)) + 1|0);
   $$pre = HEAP8[$incdec$ptr>>0]|0;
   $1 = $$pre;$2 = 4;$first$addr$0 = $incdec$ptr;
  } else {
   $1 = $0;$2 = 0;$first$addr$0 = $first;
  }
  $cmp4 = ($1<<24>>24)==(86);
  if ($cmp4) {
   $or6 = $2 | 2;
   HEAP32[$cv>>2] = $or6;
   $incdec$ptr7 = ((($first$addr$0)) + 1|0);
   $$pre11 = HEAP8[$incdec$ptr7>>0]|0;
   $3 = $$pre11;$4 = $or6;$first$addr$1 = $incdec$ptr7;
  } else {
   $3 = $1;$4 = $2;$first$addr$1 = $first$addr$0;
  }
  $cmp10 = ($3<<24>>24)==(75);
  if ($cmp10) {
   $or12 = $4 | 1;
   HEAP32[$cv>>2] = $or12;
   $incdec$ptr13 = ((($first$addr$1)) + 1|0);
   $first$addr$2 = $incdec$ptr13;
  } else {
   $first$addr$2 = $first$addr$1;
  }
 }
 return ($first$addr$2|0);
}
function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($this,$__args) {
 $this = $this|0;
 $__args = $__args|0;
 var $$sroa$speculated$call$i = 0, $$sroa$speculated$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__end_ = 0, $__end_$i = 0, $__end_$i$i$i$i = 0, $__end_cap_$i$i$i$i = 0, $__first_$i$i$i$i$i$i = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i$i$i = 0, $__v = 0, $add = 0, $call$i = 0, $cmp$i = 0;
 var $cmp$i$i$i$i = 0, $cmp3$i = 0, $div$i = 0, $incdec$ptr = 0, $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i6 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__v = sp;
 $__second_$i$i$i = ((($this)) + 12|0);
 $__end_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__end_$i>>2]|0;
 $1 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i = (($0) - ($1))|0;
 $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
 $add = (($sub$ptr$div$i) + 1)|0;
 $call$i = (__ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp$i = ($call$i>>>0)<($add>>>0);
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__first_$i$i$i$i$i$i = ((($this)) + 8|0);
 $2 = HEAP32[$__first_$i$i$i$i$i$i>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i$i$i = (($2) - ($3))|0;
 $sub$ptr$div$i$i$i = $sub$ptr$sub$i$i$i >> 4;
 $div$i = $call$i >>> 1;
 $cmp3$i = ($sub$ptr$div$i$i$i>>>0)<($div$i>>>0);
 $mul$i = $sub$ptr$sub$i$i$i >> 3;
 $cmp$i$i$i$i = ($mul$i>>>0)<($add>>>0);
 $$sroa$speculated$i = $cmp$i$i$i$i ? $add : $mul$i;
 $$sroa$speculated$call$i = $cmp3$i ? $$sroa$speculated$i : $call$i;
 $4 = HEAP32[$__end_$i>>2]|0;
 $sub$ptr$sub$i5 = (($4) - ($3))|0;
 $sub$ptr$div$i6 = $sub$ptr$sub$i5 >> 4;
 __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v,$$sroa$speculated$call$i,$sub$ptr$div$i6,$__second_$i$i$i);
 $__end_ = ((($__v)) + 8|0);
 $5 = HEAP32[$__end_>>2]|0;
 HEAP32[$5>>2] = 0;
 $__end_$i$i$i$i = ((($5)) + 4|0);
 HEAP32[$__end_$i$i$i$i>>2] = 0;
 $__end_cap_$i$i$i$i = ((($5)) + 8|0);
 $6 = HEAP32[$__args>>2]|0;
 HEAP32[$__end_cap_$i$i$i$i>>2] = 0;
 $__second_$i$i$i$i$i$i = ((($5)) + 12|0);
 HEAP32[$__second_$i$i$i$i$i$i>>2] = $6;
 $incdec$ptr = ((($5)) + 16|0);
 HEAP32[$__end_>>2] = $incdec$ptr;
 __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($this,$__v);
 __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($this,$__pos,$__s) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__s = $__s|0;
 var $call = 0, $call2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZNSt3__211char_traitsIcE6lengthEPKc($__s)|0);
 $call2 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($this,$__pos,$__s,$call)|0);
 return ($call2|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $call = 0, $call2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZNSt3__211char_traitsIcE6lengthEPKc($__s)|0);
 $call2 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$__s,$call)|0);
 return ($call2|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $second = 0, $second3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($this,$0);
 $second = ((($this)) + 12|0);
 $second3 = ((($0)) + 12|0);
 __THREW__ = 0;
 invoke_vii(65,($second|0),($second3|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this);
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$sroa$speculated$call$i = 0, $$sroa$speculated$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_ = 0, $__end_$i = 0, $__first_$i$i$i$i$i$i = 0, $__second_$i$i$i = 0, $__v = 0, $add = 0, $call$i = 0, $cmp$i = 0;
 var $cmp$i$i$i$i = 0, $cmp3$i = 0, $div$i = 0, $incdec$ptr = 0, $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i6 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__v = sp;
 $__second_$i$i$i = ((($this)) + 12|0);
 $__end_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__end_$i>>2]|0;
 $1 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i = (($0) - ($1))|0;
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
 $add = (($sub$ptr$div$i) + 1)|0;
 $call$i = (__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp$i = ($call$i>>>0)<($add>>>0);
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__first_$i$i$i$i$i$i = ((($this)) + 8|0);
 $2 = HEAP32[$__first_$i$i$i$i$i$i>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i$i$i = (($2) - ($3))|0;
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 24)&-1;
 $div$i = $call$i >>> 1;
 $cmp3$i = ($sub$ptr$div$i$i$i>>>0)<($div$i>>>0);
 $mul$i = $sub$ptr$div$i$i$i << 1;
 $cmp$i$i$i$i = ($mul$i>>>0)<($add>>>0);
 $$sroa$speculated$i = $cmp$i$i$i$i ? $add : $mul$i;
 $$sroa$speculated$call$i = $cmp3$i ? $$sroa$speculated$i : $call$i;
 $4 = HEAP32[$__end_$i>>2]|0;
 $sub$ptr$sub$i5 = (($4) - ($3))|0;
 $sub$ptr$div$i6 = (($sub$ptr$sub$i5|0) / 24)&-1;
 __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v,$$sroa$speculated$call$i,$sub$ptr$div$i6,$__second_$i$i$i);
 $__end_ = ((($__v)) + 8|0);
 $5 = HEAP32[$__end_>>2]|0;
 __THREW__ = 0;
 invoke_vii(66,($5|0),($__x|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_2()|0;
  $9 = tempRet0;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v);
  ___resumeException($8|0);
  // unreachable;
 } else {
  $incdec$ptr = ((($5)) + 24|0);
  HEAP32[$__end_>>2] = $incdec$ptr;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v);
  STACKTOP = sp;return;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i = 0, $__end_$i101 = 0, $__end_$i109 = 0, $__end_$i117 = 0, $__end_$i125 = 0, $__end_$i133 = 0, $__end_$i141 = 0, $__end_$i149 = 0, $__end_$i157 = 0, $__end_$i165 = 0, $__end_$i173 = 0, $__end_$i181 = 0, $__end_$i189 = 0, $__end_$i197 = 0, $__end_$i205 = 0;
 var $__end_$i213 = 0, $__end_$i221 = 0, $__end_$i229 = 0, $__end_$i237 = 0, $__end_$i245 = 0, $__end_$i253 = 0, $__end_$i261 = 0, $__end_$i269 = 0, $__end_$i277 = 0, $__end_$i285 = 0, $__end_$i69 = 0, $__end_$i77 = 0, $__end_$i85 = 0, $__end_$i93 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i102 = 0, $__first_$i$i$i$i110 = 0, $__first_$i$i$i$i118 = 0, $__first_$i$i$i$i126 = 0, $__first_$i$i$i$i134 = 0;
 var $__first_$i$i$i$i142 = 0, $__first_$i$i$i$i150 = 0, $__first_$i$i$i$i158 = 0, $__first_$i$i$i$i166 = 0, $__first_$i$i$i$i174 = 0, $__first_$i$i$i$i182 = 0, $__first_$i$i$i$i190 = 0, $__first_$i$i$i$i198 = 0, $__first_$i$i$i$i206 = 0, $__first_$i$i$i$i214 = 0, $__first_$i$i$i$i222 = 0, $__first_$i$i$i$i230 = 0, $__first_$i$i$i$i238 = 0, $__first_$i$i$i$i246 = 0, $__first_$i$i$i$i254 = 0, $__first_$i$i$i$i262 = 0, $__first_$i$i$i$i270 = 0, $__first_$i$i$i$i278 = 0, $__first_$i$i$i$i286 = 0, $__first_$i$i$i$i70 = 0;
 var $__first_$i$i$i$i78 = 0, $__first_$i$i$i$i86 = 0, $__first_$i$i$i$i94 = 0, $add$ptr135 = 0, $call = 0, $cmp = 0, $cmp$i = 0, $cmp$i103 = 0, $cmp$i111 = 0, $cmp$i119 = 0, $cmp$i127 = 0, $cmp$i135 = 0, $cmp$i143 = 0, $cmp$i151 = 0, $cmp$i159 = 0, $cmp$i167 = 0, $cmp$i175 = 0, $cmp$i183 = 0, $cmp$i191 = 0, $cmp$i199 = 0;
 var $cmp$i207 = 0, $cmp$i215 = 0, $cmp$i223 = 0, $cmp$i231 = 0, $cmp$i239 = 0, $cmp$i247 = 0, $cmp$i255 = 0, $cmp$i263 = 0, $cmp$i271 = 0, $cmp$i279 = 0, $cmp$i287 = 0, $cmp$i71 = 0, $cmp$i79 = 0, $cmp$i87 = 0, $cmp$i95 = 0, $cmp123 = 0, $cmp127 = 0, $conv = 0, $conv129 = 0, $ehselector$slot$0 = 0;
 var $exn$slot$0 = 0, $first$addr$1 = 0, $first$call = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i104 = 0, $incdec$ptr$i112 = 0, $incdec$ptr$i120 = 0, $incdec$ptr$i128 = 0, $incdec$ptr$i136 = 0, $incdec$ptr$i144 = 0, $incdec$ptr$i152 = 0, $incdec$ptr$i160 = 0, $incdec$ptr$i168 = 0, $incdec$ptr$i176 = 0, $incdec$ptr$i184 = 0, $incdec$ptr$i192 = 0, $incdec$ptr$i200 = 0, $incdec$ptr$i208 = 0, $incdec$ptr$i216 = 0;
 var $incdec$ptr$i224 = 0, $incdec$ptr$i232 = 0, $incdec$ptr$i240 = 0, $incdec$ptr$i248 = 0, $incdec$ptr$i256 = 0, $incdec$ptr$i264 = 0, $incdec$ptr$i272 = 0, $incdec$ptr$i280 = 0, $incdec$ptr$i288 = 0, $incdec$ptr$i72 = 0, $incdec$ptr$i80 = 0, $incdec$ptr$i88 = 0, $incdec$ptr$i96 = 0, $ref$tmp = 0, $ref$tmp105 = 0, $ref$tmp111 = 0, $ref$tmp117 = 0, $ref$tmp132 = 0, $ref$tmp138 = 0, $ref$tmp144 = 0;
 var $ref$tmp15 = 0, $ref$tmp150 = 0, $ref$tmp156 = 0, $ref$tmp162 = 0, $ref$tmp168 = 0, $ref$tmp174 = 0, $ref$tmp21 = 0, $ref$tmp27 = 0, $ref$tmp3 = 0, $ref$tmp33 = 0, $ref$tmp39 = 0, $ref$tmp45 = 0, $ref$tmp51 = 0, $ref$tmp57 = 0, $ref$tmp63 = 0, $ref$tmp69 = 0, $ref$tmp75 = 0, $ref$tmp81 = 0, $ref$tmp87 = 0, $ref$tmp9 = 0;
 var $ref$tmp93 = 0, $ref$tmp99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 704|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(704|0);
 $ref$tmp = sp + 672|0;
 $ref$tmp3 = sp + 648|0;
 $ref$tmp9 = sp + 624|0;
 $ref$tmp15 = sp + 600|0;
 $ref$tmp21 = sp + 576|0;
 $ref$tmp27 = sp + 552|0;
 $ref$tmp33 = sp + 528|0;
 $ref$tmp39 = sp + 504|0;
 $ref$tmp45 = sp + 480|0;
 $ref$tmp51 = sp + 456|0;
 $ref$tmp57 = sp + 432|0;
 $ref$tmp63 = sp + 408|0;
 $ref$tmp69 = sp + 384|0;
 $ref$tmp75 = sp + 360|0;
 $ref$tmp81 = sp + 336|0;
 $ref$tmp87 = sp + 312|0;
 $ref$tmp93 = sp + 288|0;
 $ref$tmp99 = sp + 264|0;
 $ref$tmp105 = sp + 240|0;
 $ref$tmp111 = sp + 216|0;
 $ref$tmp117 = sp + 192|0;
 $ref$tmp132 = sp + 168|0;
 $ref$tmp138 = sp + 144|0;
 $ref$tmp144 = sp + 120|0;
 $ref$tmp150 = sp + 96|0;
 $ref$tmp156 = sp + 72|0;
 $ref$tmp162 = sp + 48|0;
 $ref$tmp168 = sp + 24|0;
 $ref$tmp174 = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $first$addr$1 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $incdec$ptr = ((($first)) + 1|0);
   L3: do {
    switch ($conv|0) {
    case 118:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($ref$tmp,7404);
     $__end_$i = ((($db)) + 4|0);
     $1 = HEAP32[$__end_$i>>2]|0;
     $__first_$i$i$i$i = ((($db)) + 8|0);
     $2 = HEAP32[$__first_$i$i$i$i>>2]|0;
     $cmp$i = ($1>>>0)<($2>>>0);
     if ($cmp$i) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1,$ref$tmp);
      $3 = HEAP32[$__end_$i>>2]|0;
      $incdec$ptr$i = ((($3)) + 24|0);
      HEAP32[$__end_$i>>2] = $incdec$ptr$i;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp|0));
      $4 = __THREW__; __THREW__ = 0;
      $5 = $4&1;
      if ($5) {
       $6 = ___cxa_find_matching_catch_2()|0;
       $7 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
       $ehselector$slot$0 = $7;$exn$slot$0 = $6;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 119:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj8EEERAT__Kc($ref$tmp3);
     $__end_$i69 = ((($db)) + 4|0);
     $8 = HEAP32[$__end_$i69>>2]|0;
     $__first_$i$i$i$i70 = ((($db)) + 8|0);
     $9 = HEAP32[$__first_$i$i$i$i70>>2]|0;
     $cmp$i71 = ($8>>>0)<($9>>>0);
     if ($cmp$i71) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($8,$ref$tmp3);
      $10 = HEAP32[$__end_$i69>>2]|0;
      $incdec$ptr$i72 = ((($10)) + 24|0);
      HEAP32[$__end_$i69>>2] = $incdec$ptr$i72;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp3|0));
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $13 = ___cxa_find_matching_catch_2()|0;
       $14 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp3);
       $ehselector$slot$0 = $14;$exn$slot$0 = $13;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp3);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 98:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($ref$tmp9,7409);
     $__end_$i77 = ((($db)) + 4|0);
     $15 = HEAP32[$__end_$i77>>2]|0;
     $__first_$i$i$i$i78 = ((($db)) + 8|0);
     $16 = HEAP32[$__first_$i$i$i$i78>>2]|0;
     $cmp$i79 = ($15>>>0)<($16>>>0);
     if ($cmp$i79) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($15,$ref$tmp9);
      $17 = HEAP32[$__end_$i77>>2]|0;
      $incdec$ptr$i80 = ((($17)) + 24|0);
      HEAP32[$__end_$i77>>2] = $incdec$ptr$i80;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp9|0));
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       $20 = ___cxa_find_matching_catch_2()|0;
       $21 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp9);
       $ehselector$slot$0 = $21;$exn$slot$0 = $20;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp9);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 99:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($ref$tmp15,7178);
     $__end_$i85 = ((($db)) + 4|0);
     $22 = HEAP32[$__end_$i85>>2]|0;
     $__first_$i$i$i$i86 = ((($db)) + 8|0);
     $23 = HEAP32[$__first_$i$i$i$i86>>2]|0;
     $cmp$i87 = ($22>>>0)<($23>>>0);
     if ($cmp$i87) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($22,$ref$tmp15);
      $24 = HEAP32[$__end_$i85>>2]|0;
      $incdec$ptr$i88 = ((($24)) + 24|0);
      HEAP32[$__end_$i85>>2] = $incdec$ptr$i88;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp15|0));
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if ($26) {
       $27 = ___cxa_find_matching_catch_2()|0;
       $28 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp15);
       $ehselector$slot$0 = $28;$exn$slot$0 = $27;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp15);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 97:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($ref$tmp21,7183);
     $__end_$i93 = ((($db)) + 4|0);
     $29 = HEAP32[$__end_$i93>>2]|0;
     $__first_$i$i$i$i94 = ((($db)) + 8|0);
     $30 = HEAP32[$__first_$i$i$i$i94>>2]|0;
     $cmp$i95 = ($29>>>0)<($30>>>0);
     if ($cmp$i95) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($29,$ref$tmp21);
      $31 = HEAP32[$__end_$i93>>2]|0;
      $incdec$ptr$i96 = ((($31)) + 24|0);
      HEAP32[$__end_$i93>>2] = $incdec$ptr$i96;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp21|0));
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch_2()|0;
       $35 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp21);
       $ehselector$slot$0 = $35;$exn$slot$0 = $34;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp21);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 104:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($ref$tmp27,7195);
     $__end_$i101 = ((($db)) + 4|0);
     $36 = HEAP32[$__end_$i101>>2]|0;
     $__first_$i$i$i$i102 = ((($db)) + 8|0);
     $37 = HEAP32[$__first_$i$i$i$i102>>2]|0;
     $cmp$i103 = ($36>>>0)<($37>>>0);
     if ($cmp$i103) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($36,$ref$tmp27);
      $38 = HEAP32[$__end_$i101>>2]|0;
      $incdec$ptr$i104 = ((($38)) + 24|0);
      HEAP32[$__end_$i101>>2] = $incdec$ptr$i104;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp27|0));
      $39 = __THREW__; __THREW__ = 0;
      $40 = $39&1;
      if ($40) {
       $41 = ___cxa_find_matching_catch_2()|0;
       $42 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp27);
       $ehselector$slot$0 = $42;$exn$slot$0 = $41;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp27);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 115:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($ref$tmp33,7209);
     $__end_$i109 = ((($db)) + 4|0);
     $43 = HEAP32[$__end_$i109>>2]|0;
     $__first_$i$i$i$i110 = ((($db)) + 8|0);
     $44 = HEAP32[$__first_$i$i$i$i110>>2]|0;
     $cmp$i111 = ($43>>>0)<($44>>>0);
     if ($cmp$i111) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($43,$ref$tmp33);
      $45 = HEAP32[$__end_$i109>>2]|0;
      $incdec$ptr$i112 = ((($45)) + 24|0);
      HEAP32[$__end_$i109>>2] = $incdec$ptr$i112;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp33|0));
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       $48 = ___cxa_find_matching_catch_2()|0;
       $49 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp33);
       $ehselector$slot$0 = $49;$exn$slot$0 = $48;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp33);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 116:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($ref$tmp39,7215);
     $__end_$i117 = ((($db)) + 4|0);
     $50 = HEAP32[$__end_$i117>>2]|0;
     $__first_$i$i$i$i118 = ((($db)) + 8|0);
     $51 = HEAP32[$__first_$i$i$i$i118>>2]|0;
     $cmp$i119 = ($50>>>0)<($51>>>0);
     if ($cmp$i119) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($50,$ref$tmp39);
      $52 = HEAP32[$__end_$i117>>2]|0;
      $incdec$ptr$i120 = ((($52)) + 24|0);
      HEAP32[$__end_$i117>>2] = $incdec$ptr$i120;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp39|0));
      $53 = __THREW__; __THREW__ = 0;
      $54 = $53&1;
      if ($54) {
       $55 = ___cxa_find_matching_catch_2()|0;
       $56 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp39);
       $ehselector$slot$0 = $56;$exn$slot$0 = $55;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp39);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 105:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($ref$tmp45,7414);
     $__end_$i125 = ((($db)) + 4|0);
     $57 = HEAP32[$__end_$i125>>2]|0;
     $__first_$i$i$i$i126 = ((($db)) + 8|0);
     $58 = HEAP32[$__first_$i$i$i$i126>>2]|0;
     $cmp$i127 = ($57>>>0)<($58>>>0);
     if ($cmp$i127) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($57,$ref$tmp45);
      $59 = HEAP32[$__end_$i125>>2]|0;
      $incdec$ptr$i128 = ((($59)) + 24|0);
      HEAP32[$__end_$i125>>2] = $incdec$ptr$i128;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp45|0));
      $60 = __THREW__; __THREW__ = 0;
      $61 = $60&1;
      if ($61) {
       $62 = ___cxa_find_matching_catch_2()|0;
       $63 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp45);
       $ehselector$slot$0 = $63;$exn$slot$0 = $62;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp45);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 106:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($ref$tmp51,7418);
     $__end_$i133 = ((($db)) + 4|0);
     $64 = HEAP32[$__end_$i133>>2]|0;
     $__first_$i$i$i$i134 = ((($db)) + 8|0);
     $65 = HEAP32[$__first_$i$i$i$i134>>2]|0;
     $cmp$i135 = ($64>>>0)<($65>>>0);
     if ($cmp$i135) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($64,$ref$tmp51);
      $66 = HEAP32[$__end_$i133>>2]|0;
      $incdec$ptr$i136 = ((($66)) + 24|0);
      HEAP32[$__end_$i133>>2] = $incdec$ptr$i136;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp51|0));
      $67 = __THREW__; __THREW__ = 0;
      $68 = $67&1;
      if ($68) {
       $69 = ___cxa_find_matching_catch_2()|0;
       $70 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp51);
       $ehselector$slot$0 = $70;$exn$slot$0 = $69;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp51);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 108:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($ref$tmp57,7431);
     $__end_$i141 = ((($db)) + 4|0);
     $71 = HEAP32[$__end_$i141>>2]|0;
     $__first_$i$i$i$i142 = ((($db)) + 8|0);
     $72 = HEAP32[$__first_$i$i$i$i142>>2]|0;
     $cmp$i143 = ($71>>>0)<($72>>>0);
     if ($cmp$i143) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($71,$ref$tmp57);
      $73 = HEAP32[$__end_$i141>>2]|0;
      $incdec$ptr$i144 = ((($73)) + 24|0);
      HEAP32[$__end_$i141>>2] = $incdec$ptr$i144;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp57|0));
      $74 = __THREW__; __THREW__ = 0;
      $75 = $74&1;
      if ($75) {
       $76 = ___cxa_find_matching_catch_2()|0;
       $77 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp57);
       $ehselector$slot$0 = $77;$exn$slot$0 = $76;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp57);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 109:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($ref$tmp63,7436);
     $__end_$i149 = ((($db)) + 4|0);
     $78 = HEAP32[$__end_$i149>>2]|0;
     $__first_$i$i$i$i150 = ((($db)) + 8|0);
     $79 = HEAP32[$__first_$i$i$i$i150>>2]|0;
     $cmp$i151 = ($78>>>0)<($79>>>0);
     if ($cmp$i151) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($78,$ref$tmp63);
      $80 = HEAP32[$__end_$i149>>2]|0;
      $incdec$ptr$i152 = ((($80)) + 24|0);
      HEAP32[$__end_$i149>>2] = $incdec$ptr$i152;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp63|0));
      $81 = __THREW__; __THREW__ = 0;
      $82 = $81&1;
      if ($82) {
       $83 = ___cxa_find_matching_catch_2()|0;
       $84 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp63);
       $ehselector$slot$0 = $84;$exn$slot$0 = $83;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp63);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 120:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp69,7450);
     $__end_$i157 = ((($db)) + 4|0);
     $85 = HEAP32[$__end_$i157>>2]|0;
     $__first_$i$i$i$i158 = ((($db)) + 8|0);
     $86 = HEAP32[$__first_$i$i$i$i158>>2]|0;
     $cmp$i159 = ($85>>>0)<($86>>>0);
     if ($cmp$i159) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($85,$ref$tmp69);
      $87 = HEAP32[$__end_$i157>>2]|0;
      $incdec$ptr$i160 = ((($87)) + 24|0);
      HEAP32[$__end_$i157>>2] = $incdec$ptr$i160;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp69|0));
      $88 = __THREW__; __THREW__ = 0;
      $89 = $88&1;
      if ($89) {
       $90 = ___cxa_find_matching_catch_2()|0;
       $91 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp69);
       $ehselector$slot$0 = $91;$exn$slot$0 = $90;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp69);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 121:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj19EEERAT__Kc($ref$tmp75);
     $__end_$i165 = ((($db)) + 4|0);
     $92 = HEAP32[$__end_$i165>>2]|0;
     $__first_$i$i$i$i166 = ((($db)) + 8|0);
     $93 = HEAP32[$__first_$i$i$i$i166>>2]|0;
     $cmp$i167 = ($92>>>0)<($93>>>0);
     if ($cmp$i167) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($92,$ref$tmp75);
      $94 = HEAP32[$__end_$i165>>2]|0;
      $incdec$ptr$i168 = ((($94)) + 24|0);
      HEAP32[$__end_$i165>>2] = $incdec$ptr$i168;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp75|0));
      $95 = __THREW__; __THREW__ = 0;
      $96 = $95&1;
      if ($96) {
       $97 = ___cxa_find_matching_catch_2()|0;
       $98 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp75);
       $ehselector$slot$0 = $98;$exn$slot$0 = $97;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp75);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 110:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($ref$tmp81,7244);
     $__end_$i173 = ((($db)) + 4|0);
     $99 = HEAP32[$__end_$i173>>2]|0;
     $__first_$i$i$i$i174 = ((($db)) + 8|0);
     $100 = HEAP32[$__first_$i$i$i$i174>>2]|0;
     $cmp$i175 = ($99>>>0)<($100>>>0);
     if ($cmp$i175) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($99,$ref$tmp81);
      $101 = HEAP32[$__end_$i173>>2]|0;
      $incdec$ptr$i176 = ((($101)) + 24|0);
      HEAP32[$__end_$i173>>2] = $incdec$ptr$i176;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp81|0));
      $102 = __THREW__; __THREW__ = 0;
      $103 = $102&1;
      if ($103) {
       $104 = ___cxa_find_matching_catch_2()|0;
       $105 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp81);
       $ehselector$slot$0 = $105;$exn$slot$0 = $104;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp81);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 111:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($ref$tmp87,7253);
     $__end_$i181 = ((($db)) + 4|0);
     $106 = HEAP32[$__end_$i181>>2]|0;
     $__first_$i$i$i$i182 = ((($db)) + 8|0);
     $107 = HEAP32[$__first_$i$i$i$i182>>2]|0;
     $cmp$i183 = ($106>>>0)<($107>>>0);
     if ($cmp$i183) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($106,$ref$tmp87);
      $108 = HEAP32[$__end_$i181>>2]|0;
      $incdec$ptr$i184 = ((($108)) + 24|0);
      HEAP32[$__end_$i181>>2] = $incdec$ptr$i184;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp87|0));
      $109 = __THREW__; __THREW__ = 0;
      $110 = $109&1;
      if ($110) {
       $111 = ___cxa_find_matching_catch_2()|0;
       $112 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp87);
       $ehselector$slot$0 = $112;$exn$slot$0 = $111;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp87);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 102:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($ref$tmp93,7460);
     $__end_$i189 = ((($db)) + 4|0);
     $113 = HEAP32[$__end_$i189>>2]|0;
     $__first_$i$i$i$i190 = ((($db)) + 8|0);
     $114 = HEAP32[$__first_$i$i$i$i190>>2]|0;
     $cmp$i191 = ($113>>>0)<($114>>>0);
     if ($cmp$i191) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($113,$ref$tmp93);
      $115 = HEAP32[$__end_$i189>>2]|0;
      $incdec$ptr$i192 = ((($115)) + 24|0);
      HEAP32[$__end_$i189>>2] = $incdec$ptr$i192;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp93|0));
      $116 = __THREW__; __THREW__ = 0;
      $117 = $116&1;
      if ($117) {
       $118 = ___cxa_find_matching_catch_2()|0;
       $119 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp93);
       $ehselector$slot$0 = $119;$exn$slot$0 = $118;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp93);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 100:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj7EEERAT__Kc($ref$tmp99);
     $__end_$i197 = ((($db)) + 4|0);
     $120 = HEAP32[$__end_$i197>>2]|0;
     $__first_$i$i$i$i198 = ((($db)) + 8|0);
     $121 = HEAP32[$__first_$i$i$i$i198>>2]|0;
     $cmp$i199 = ($120>>>0)<($121>>>0);
     if ($cmp$i199) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($120,$ref$tmp99);
      $122 = HEAP32[$__end_$i197>>2]|0;
      $incdec$ptr$i200 = ((($122)) + 24|0);
      HEAP32[$__end_$i197>>2] = $incdec$ptr$i200;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp99|0));
      $123 = __THREW__; __THREW__ = 0;
      $124 = $123&1;
      if ($124) {
       $125 = ___cxa_find_matching_catch_2()|0;
       $126 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp99);
       $ehselector$slot$0 = $126;$exn$slot$0 = $125;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp99);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 101:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($ref$tmp105,7466);
     $__end_$i205 = ((($db)) + 4|0);
     $127 = HEAP32[$__end_$i205>>2]|0;
     $__first_$i$i$i$i206 = ((($db)) + 8|0);
     $128 = HEAP32[$__first_$i$i$i$i206>>2]|0;
     $cmp$i207 = ($127>>>0)<($128>>>0);
     if ($cmp$i207) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($127,$ref$tmp105);
      $129 = HEAP32[$__end_$i205>>2]|0;
      $incdec$ptr$i208 = ((($129)) + 24|0);
      HEAP32[$__end_$i205>>2] = $incdec$ptr$i208;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp105|0));
      $130 = __THREW__; __THREW__ = 0;
      $131 = $130&1;
      if ($131) {
       $132 = ___cxa_find_matching_catch_2()|0;
       $133 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp105);
       $ehselector$slot$0 = $133;$exn$slot$0 = $132;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp105);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 103:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp111,7478);
     $__end_$i213 = ((($db)) + 4|0);
     $134 = HEAP32[$__end_$i213>>2]|0;
     $__first_$i$i$i$i214 = ((($db)) + 8|0);
     $135 = HEAP32[$__first_$i$i$i$i214>>2]|0;
     $cmp$i215 = ($134>>>0)<($135>>>0);
     if ($cmp$i215) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($134,$ref$tmp111);
      $136 = HEAP32[$__end_$i213>>2]|0;
      $incdec$ptr$i216 = ((($136)) + 24|0);
      HEAP32[$__end_$i213>>2] = $incdec$ptr$i216;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp111|0));
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       $139 = ___cxa_find_matching_catch_2()|0;
       $140 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp111);
       $ehselector$slot$0 = $140;$exn$slot$0 = $139;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp111);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 122:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($ref$tmp117,7489);
     $__end_$i221 = ((($db)) + 4|0);
     $141 = HEAP32[$__end_$i221>>2]|0;
     $__first_$i$i$i$i222 = ((($db)) + 8|0);
     $142 = HEAP32[$__first_$i$i$i$i222>>2]|0;
     $cmp$i223 = ($141>>>0)<($142>>>0);
     if ($cmp$i223) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($141,$ref$tmp117);
      $143 = HEAP32[$__end_$i221>>2]|0;
      $incdec$ptr$i224 = ((($143)) + 24|0);
      HEAP32[$__end_$i221>>2] = $incdec$ptr$i224;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp117|0));
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       $146 = ___cxa_find_matching_catch_2()|0;
       $147 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp117);
       $ehselector$slot$0 = $147;$exn$slot$0 = $146;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp117);
     $first$addr$1 = $incdec$ptr;
     break L1;
     break;
    }
    case 117:  {
     $call = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr,$last,$db)|0);
     $cmp123 = ($call|0)==($incdec$ptr|0);
     $first$call = $cmp123 ? $first : $call;
     $first$addr$1 = $first$call;
     break L1;
     break;
    }
    case 68:  {
     $cmp127 = ($incdec$ptr|0)==($last|0);
     if ($cmp127) {
      $first$addr$1 = $first;
      break L1;
     }
     $148 = HEAP8[$incdec$ptr>>0]|0;
     $conv129 = $148 << 24 >> 24;
     $add$ptr135 = ((($first)) + 2|0);
     switch ($conv129|0) {
     case 100:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp132,7493);
      $__end_$i229 = ((($db)) + 4|0);
      $149 = HEAP32[$__end_$i229>>2]|0;
      $__first_$i$i$i$i230 = ((($db)) + 8|0);
      $150 = HEAP32[$__first_$i$i$i$i230>>2]|0;
      $cmp$i231 = ($149>>>0)<($150>>>0);
      if ($cmp$i231) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($149,$ref$tmp132);
       $151 = HEAP32[$__end_$i229>>2]|0;
       $incdec$ptr$i232 = ((($151)) + 24|0);
       HEAP32[$__end_$i229>>2] = $incdec$ptr$i232;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp132|0));
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        $154 = ___cxa_find_matching_catch_2()|0;
        $155 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp132);
        $ehselector$slot$0 = $155;$exn$slot$0 = $154;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp132);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp138,7503);
      $__end_$i237 = ((($db)) + 4|0);
      $156 = HEAP32[$__end_$i237>>2]|0;
      $__first_$i$i$i$i238 = ((($db)) + 8|0);
      $157 = HEAP32[$__first_$i$i$i$i238>>2]|0;
      $cmp$i239 = ($156>>>0)<($157>>>0);
      if ($cmp$i239) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($156,$ref$tmp138);
       $158 = HEAP32[$__end_$i237>>2]|0;
       $incdec$ptr$i240 = ((($158)) + 24|0);
       HEAP32[$__end_$i237>>2] = $incdec$ptr$i240;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp138|0));
       $159 = __THREW__; __THREW__ = 0;
       $160 = $159&1;
       if ($160) {
        $161 = ___cxa_find_matching_catch_2()|0;
        $162 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp138);
        $ehselector$slot$0 = $162;$exn$slot$0 = $161;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp138);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     case 102:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp144,7514);
      $__end_$i245 = ((($db)) + 4|0);
      $163 = HEAP32[$__end_$i245>>2]|0;
      $__first_$i$i$i$i246 = ((($db)) + 8|0);
      $164 = HEAP32[$__first_$i$i$i$i246>>2]|0;
      $cmp$i247 = ($163>>>0)<($164>>>0);
      if ($cmp$i247) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($163,$ref$tmp144);
       $165 = HEAP32[$__end_$i245>>2]|0;
       $incdec$ptr$i248 = ((($165)) + 24|0);
       HEAP32[$__end_$i245>>2] = $incdec$ptr$i248;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp144|0));
       $166 = __THREW__; __THREW__ = 0;
       $167 = $166&1;
       if ($167) {
        $168 = ___cxa_find_matching_catch_2()|0;
        $169 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp144);
        $ehselector$slot$0 = $169;$exn$slot$0 = $168;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp144);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     case 104:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp150,7524);
      $__end_$i253 = ((($db)) + 4|0);
      $170 = HEAP32[$__end_$i253>>2]|0;
      $__first_$i$i$i$i254 = ((($db)) + 8|0);
      $171 = HEAP32[$__first_$i$i$i$i254>>2]|0;
      $cmp$i255 = ($170>>>0)<($171>>>0);
      if ($cmp$i255) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($170,$ref$tmp150);
       $172 = HEAP32[$__end_$i253>>2]|0;
       $incdec$ptr$i256 = ((($172)) + 24|0);
       HEAP32[$__end_$i253>>2] = $incdec$ptr$i256;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp150|0));
       $173 = __THREW__; __THREW__ = 0;
       $174 = $173&1;
       if ($174) {
        $175 = ___cxa_find_matching_catch_2()|0;
        $176 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp150);
        $ehselector$slot$0 = $176;$exn$slot$0 = $175;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp150);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     case 105:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($ref$tmp156,7534);
      $__end_$i261 = ((($db)) + 4|0);
      $177 = HEAP32[$__end_$i261>>2]|0;
      $__first_$i$i$i$i262 = ((($db)) + 8|0);
      $178 = HEAP32[$__first_$i$i$i$i262>>2]|0;
      $cmp$i263 = ($177>>>0)<($178>>>0);
      if ($cmp$i263) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($177,$ref$tmp156);
       $179 = HEAP32[$__end_$i261>>2]|0;
       $incdec$ptr$i264 = ((($179)) + 24|0);
       HEAP32[$__end_$i261>>2] = $incdec$ptr$i264;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp156|0));
       $180 = __THREW__; __THREW__ = 0;
       $181 = $180&1;
       if ($181) {
        $182 = ___cxa_find_matching_catch_2()|0;
        $183 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp156);
        $ehselector$slot$0 = $183;$exn$slot$0 = $182;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp156);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($ref$tmp162,7543);
      $__end_$i269 = ((($db)) + 4|0);
      $184 = HEAP32[$__end_$i269>>2]|0;
      $__first_$i$i$i$i270 = ((($db)) + 8|0);
      $185 = HEAP32[$__first_$i$i$i$i270>>2]|0;
      $cmp$i271 = ($184>>>0)<($185>>>0);
      if ($cmp$i271) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($184,$ref$tmp162);
       $186 = HEAP32[$__end_$i269>>2]|0;
       $incdec$ptr$i272 = ((($186)) + 24|0);
       HEAP32[$__end_$i269>>2] = $incdec$ptr$i272;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp162|0));
       $187 = __THREW__; __THREW__ = 0;
       $188 = $187&1;
       if ($188) {
        $189 = ___cxa_find_matching_catch_2()|0;
        $190 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp162);
        $ehselector$slot$0 = $190;$exn$slot$0 = $189;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp162);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($ref$tmp168,7552);
      $__end_$i277 = ((($db)) + 4|0);
      $191 = HEAP32[$__end_$i277>>2]|0;
      $__first_$i$i$i$i278 = ((($db)) + 8|0);
      $192 = HEAP32[$__first_$i$i$i$i278>>2]|0;
      $cmp$i279 = ($191>>>0)<($192>>>0);
      if ($cmp$i279) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($191,$ref$tmp168);
       $193 = HEAP32[$__end_$i277>>2]|0;
       $incdec$ptr$i280 = ((($193)) + 24|0);
       HEAP32[$__end_$i277>>2] = $incdec$ptr$i280;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp168|0));
       $194 = __THREW__; __THREW__ = 0;
       $195 = $194&1;
       if ($195) {
        $196 = ___cxa_find_matching_catch_2()|0;
        $197 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp168);
        $ehselector$slot$0 = $197;$exn$slot$0 = $196;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp168);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     case 110:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($ref$tmp174,7557);
      $__end_$i285 = ((($db)) + 4|0);
      $198 = HEAP32[$__end_$i285>>2]|0;
      $__first_$i$i$i$i286 = ((($db)) + 8|0);
      $199 = HEAP32[$__first_$i$i$i$i286>>2]|0;
      $cmp$i287 = ($198>>>0)<($199>>>0);
      if ($cmp$i287) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($198,$ref$tmp174);
       $200 = HEAP32[$__end_$i285>>2]|0;
       $incdec$ptr$i288 = ((($200)) + 24|0);
       HEAP32[$__end_$i285>>2] = $incdec$ptr$i288;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp174|0));
       $201 = __THREW__; __THREW__ = 0;
       $202 = $201&1;
       if ($202) {
        $203 = ___cxa_find_matching_catch_2()|0;
        $204 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp174);
        $ehselector$slot$0 = $204;$exn$slot$0 = $203;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp174);
      $first$addr$1 = $add$ptr135;
      break L1;
      break;
     }
     default: {
      $first$addr$1 = $first;
      break L1;
     }
     }
     break;
    }
    default: {
     $first$addr$1 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($exn$slot$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($first$addr$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$off = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i = 0, $__end_$i117 = 0, $__end_$i76 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i$i193 = 0, $__i$0$i$i$i105 = 0, $__i$0$i$i$i146 = 0, $__i$0$i$i$i156 = 0, $__i$0$i$i$i170 = 0, $__size_$i$i$i = 0, $__size_$i$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i129 = 0;
 var $__size_$i$i$i82 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i1$i$i$i$i182 = 0, $__size_$i2$i$i$i$i = 0, $__size_$i2$i$i$i$i185 = 0, $__size_$i3$i$i = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i112 = 0, $__size_$i3$i$i131 = 0, $__size_$i3$i$i84 = 0, $add$ptr = 0, $add$ptr$i119 = 0, $add$ptr$i121 = 0, $add$ptr$i123 = 0, $add$ptr43 = 0, $add$ptr7 = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i126 = 0, $arrayidx$i$i$i$i196 = 0, $arrayidx$i$i$i108 = 0;
 var $arrayidx$i$i$i149 = 0, $arrayidx$i$i$i159 = 0, $arrayidx$i$i$i173 = 0, $call = 0, $call$i = 0, $call$i101102 = 0, $call$i103111 = 0, $call$i127 = 0, $call$i144152 = 0, $call$i154162 = 0, $call$i80 = 0, $call102 = 0, $call3$i = 0, $call3$i$i176 = 0, $call3$i136 = 0, $call3$i89 = 0, $call37 = 0, $call44 = 0, $call92 = 0, $cmp = 0;
 var $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i134 = 0, $cmp$i70 = 0, $cmp$i77 = 0, $cmp$i87 = 0, $cmp1 = 0, $cmp103 = 0, $cmp107 = 0, $cmp3 = 0, $cmp38 = 0, $cmp4$i = 0, $cmp4$i138 = 0, $cmp4$i91 = 0, $cmp41 = 0, $cmp46 = 0, $cmp5 = 0, $cmp9 = 0, $cmp94 = 0, $cmp96 = 0;
 var $cmp99 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i168 = 0, $cond$i$i114 = 0, $cond$i$i133 = 0, $cond$i$i86 = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0, $conv$i$i$i113 = 0, $conv$i$i$i132 = 0, $conv$i$i$i85 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $ehselector$slot$5 = 0, $ehselector$slot$6 = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i$i194 = 0, $exitcond$i$i$i106 = 0, $exitcond$i$i$i147 = 0, $exitcond$i$i$i157 = 0, $exitcond$i$i$i171 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $exn$slot$5 = 0, $exn$slot$6 = 0, $expr = 0, $first126 = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i$i197 = 0, $inc$i$i$i109 = 0;
 var $inc$i$i$i150 = 0, $inc$i$i$i160 = 0, $inc$i$i$i174 = 0, $incdec$ptr = 0, $incdec$ptr$i$i$i = 0, $or$cond68 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp$i$i$i$i179 = 0, $ref$tmp129 = 0, $ref$tmp140 = 0, $ref$tmp141 = 0, $ref$tmp142 = 0, $ref$tmp143 = 0, $ref$tmp4$i$i$i$i = 0, $ref$tmp4$i$i$i$i180 = 0, $ref$tmp52 = 0, $ref$tmp66 = 0, $ref$tmp67 = 0, $ref$tmp68 = 0;
 var $retval$7 = 0, $second = 0, $second130 = 0, $second158 = 0, $second19 = 0, $second24 = 0, $second55 = 0, $second60 = 0, $second65 = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i165 = 0, $tobool$i$i$i$i$i183 = 0, $tobool$i$i$i130 = 0, $tobool$i$i$i83 = 0, $type = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $ref$tmp$i$i$i$i179 = sp + 175|0;
 $ref$tmp4$i$i$i$i180 = sp + 174|0;
 $ref$tmp$i$i$i$i = sp + 173|0;
 $ref$tmp4$i$i$i$i = sp + 172|0;
 $ref$tmp = sp + 160|0;
 $ref$tmp52 = sp + 148|0;
 $ref$tmp66 = sp + 136|0;
 $ref$tmp67 = sp + 124|0;
 $ref$tmp68 = sp + 112|0;
 $type = sp + 88|0;
 $expr = sp + 64|0;
 $ref$tmp129 = sp + 48|0;
 $ref$tmp140 = sp + 36|0;
 $ref$tmp141 = sp + 24|0;
 $ref$tmp142 = sp + 12|0;
 $ref$tmp143 = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$7 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(65);
   if ($cmp1) {
    $add$ptr = ((($first)) + 1|0);
    $cmp3 = ($add$ptr|0)==($last|0);
    if ($cmp3) {
     $retval$7 = $first;
    } else {
     $1 = HEAP8[$add$ptr>>0]|0;
     $cmp5 = ($1<<24>>24)==(95);
     if ($cmp5) {
      $add$ptr7 = ((($first)) + 2|0);
      $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr7,$last,$db)|0);
      $cmp9 = ($call|0)==($add$ptr7|0);
      if ($cmp9) {
       $retval$7 = $first;
       break;
      }
      $2 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($2|0)==($3|0);
      if ($cmp$i) {
       $retval$7 = $first;
       break;
      }
      $second = ((($3)) + -12|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($ref$tmp,$second,2);
      __THREW__ = 0;
      $call$i = (invoke_ii(58,(5830|0))|0);
      $4 = __THREW__; __THREW__ = 0;
      $5 = $4&1;
      if ($5) {
       $12 = ___cxa_find_matching_catch_3(0|0)|0;
       $13 = tempRet0;
       ___clang_call_terminate($12);
       // unreachable;
      }
      $__size_$i$i$i = ((($ref$tmp)) + 11|0);
      $6 = HEAP8[$__size_$i$i$i>>0]|0;
      $tobool$i$i$i = ($6<<24>>24)<(0);
      $__size_$i3$i$i = ((($ref$tmp)) + 4|0);
      $7 = HEAP32[$__size_$i3$i$i>>2]|0;
      $conv$i$i$i = $6&255;
      $cond$i$i = $tobool$i$i$i ? $7 : $conv$i$i$i;
      $cmp$i70 = ($call$i|0)==($cond$i$i|0);
      if ($cmp$i70) {
       __THREW__ = 0;
       $call3$i = (invoke_iiii(59,($ref$tmp|0),(5830|0),($call$i|0))|0);
       $8 = __THREW__; __THREW__ = 0;
       $9 = $8&1;
       if ($9) {
        $10 = ___cxa_find_matching_catch_3(0|0)|0;
        $11 = tempRet0;
        ___clang_call_terminate($10);
        // unreachable;
       }
       $cmp4$i = ($call3$i|0)==(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
       if ($cmp4$i) {
        $14 = HEAP32[$__end_$i>>2]|0;
        $second19 = ((($14)) + -12|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($second19);
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
      }
      $15 = HEAP32[$__end_$i>>2]|0;
      $second24 = ((($15)) + -12|0);
      (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($second24,0,7400)|0);
      $retval$7 = $call;
      break;
     }
     $$off = (($1) + -49)<<24>>24;
     $16 = ($$off&255)<(9);
     if ($16) {
      $call37 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($add$ptr,$last)|0);
      $cmp38 = ($call37|0)==($last|0);
      if ($cmp38) {
       $retval$7 = $first;
       break;
      }
      $17 = HEAP8[$call37>>0]|0;
      $cmp41 = ($17<<24>>24)==(95);
      if (!($cmp41)) {
       $retval$7 = $first;
       break;
      }
      $add$ptr43 = ((($call37)) + 1|0);
      $call44 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr43,$last,$db)|0);
      $cmp46 = ($call44|0)==($add$ptr43|0);
      if ($cmp46) {
       $retval$7 = $first;
       break;
      }
      $18 = HEAP32[$db>>2]|0;
      $__end_$i76 = ((($db)) + 4|0);
      $19 = HEAP32[$__end_$i76>>2]|0;
      $cmp$i77 = ($18|0)==($19|0);
      if ($cmp$i77) {
       $retval$7 = $first;
       break;
      }
      $second55 = ((($19)) + -12|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($ref$tmp52,$second55,2);
      __THREW__ = 0;
      $call$i80 = (invoke_ii(58,(5830|0))|0);
      $20 = __THREW__; __THREW__ = 0;
      $21 = $20&1;
      if ($21) {
       $28 = ___cxa_find_matching_catch_3(0|0)|0;
       $29 = tempRet0;
       ___clang_call_terminate($28);
       // unreachable;
      }
      $__size_$i$i$i82 = ((($ref$tmp52)) + 11|0);
      $22 = HEAP8[$__size_$i$i$i82>>0]|0;
      $tobool$i$i$i83 = ($22<<24>>24)<(0);
      $__size_$i3$i$i84 = ((($ref$tmp52)) + 4|0);
      $23 = HEAP32[$__size_$i3$i$i84>>2]|0;
      $conv$i$i$i85 = $22&255;
      $cond$i$i86 = $tobool$i$i$i83 ? $23 : $conv$i$i$i85;
      $cmp$i87 = ($call$i80|0)==($cond$i$i86|0);
      if ($cmp$i87) {
       __THREW__ = 0;
       $call3$i89 = (invoke_iiii(59,($ref$tmp52|0),(5830|0),($call$i80|0))|0);
       $24 = __THREW__; __THREW__ = 0;
       $25 = $24&1;
       if ($25) {
        $26 = ___cxa_find_matching_catch_3(0|0)|0;
        $27 = tempRet0;
        ___clang_call_terminate($26);
        // unreachable;
       }
       $cmp4$i91 = ($call3$i89|0)==(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp52);
       if ($cmp4$i91) {
        $30 = HEAP32[$__end_$i76>>2]|0;
        $second60 = ((($30)) + -12|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($second60);
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp52);
      }
      $31 = HEAP32[$__end_$i76>>2]|0;
      $second65 = ((($31)) + -12|0);
      ;HEAP32[$ref$tmp68>>2]=0|0;HEAP32[$ref$tmp68+4>>2]=0|0;HEAP32[$ref$tmp68+8>>2]=0|0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($ref$tmp68,$add$ptr,$call37);
      __THREW__ = 0;
      $call$i101102 = (invoke_iiii(56,($ref$tmp68|0),0,(5830|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $41 = ___cxa_find_matching_catch_2()|0;
       $42 = tempRet0;
       $ehselector$slot$1 = $42;$exn$slot$1 = $41;
      } else {
       ;HEAP32[$ref$tmp67>>2]=HEAP32[$ref$tmp68>>2]|0;HEAP32[$ref$tmp67+4>>2]=HEAP32[$ref$tmp68+4>>2]|0;HEAP32[$ref$tmp67+8>>2]=HEAP32[$ref$tmp68+8>>2]|0;
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $arrayidx$i$i$i = (($ref$tmp68) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$arrayidx$i$i$i>>2] = 0;
        $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $inc$i$i$i;
       }
       __THREW__ = 0;
       $call$i103111 = (invoke_iii(54,($ref$tmp67|0),(5885|0))|0);
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       do {
        if ($35) {
         $43 = ___cxa_find_matching_catch_2()|0;
         $44 = tempRet0;
         $ehselector$slot$0 = $44;$exn$slot$0 = $43;
        } else {
         ;HEAP32[$ref$tmp66>>2]=HEAP32[$ref$tmp67>>2]|0;HEAP32[$ref$tmp66+4>>2]=HEAP32[$ref$tmp67+4>>2]|0;HEAP32[$ref$tmp66+8>>2]=HEAP32[$ref$tmp67+8>>2]|0;
         $__i$0$i$i$i105 = 0;
         while(1) {
          $exitcond$i$i$i106 = ($__i$0$i$i$i105|0)==(3);
          if ($exitcond$i$i$i106) {
           break;
          }
          $arrayidx$i$i$i108 = (($ref$tmp67) + ($__i$0$i$i$i105<<2)|0);
          HEAP32[$arrayidx$i$i$i108>>2] = 0;
          $inc$i$i$i109 = (($__i$0$i$i$i105) + 1)|0;
          $__i$0$i$i$i105 = $inc$i$i$i109;
         }
         $__size_$i$i$i$i = ((($ref$tmp66)) + 11|0);
         $36 = HEAP8[$__size_$i$i$i$i>>0]|0;
         $tobool$i$i$i$i = ($36<<24>>24)<(0);
         $37 = HEAP32[$ref$tmp66>>2]|0;
         $cond$i$i$i = $tobool$i$i$i$i ? $37 : $ref$tmp66;
         $__size_$i3$i$i112 = ((($ref$tmp66)) + 4|0);
         $38 = HEAP32[$__size_$i3$i$i112>>2]|0;
         $conv$i$i$i113 = $36&255;
         $cond$i$i114 = $tobool$i$i$i$i ? $38 : $conv$i$i$i113;
         __THREW__ = 0;
         (invoke_iiiii(53,($second65|0),0,($cond$i$i$i|0),($cond$i$i114|0))|0);
         $39 = __THREW__; __THREW__ = 0;
         $40 = $39&1;
         if ($40) {
          $45 = ___cxa_find_matching_catch_2()|0;
          $46 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp66);
          $ehselector$slot$0 = $46;$exn$slot$0 = $45;
          break;
         } else {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp66);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp67);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp68);
          $retval$7 = $call44;
          break L1;
         }
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp67);
       $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp68);
      $ehselector$slot$6 = $ehselector$slot$1;$exn$slot$6 = $exn$slot$1;
     } else {
      $call92 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp94 = ($call92|0)==($add$ptr|0);
      $cmp96 = ($call92|0)==($last|0);
      $or$cond68 = $cmp94 | $cmp96;
      if ($or$cond68) {
       $retval$7 = $first;
       break;
      }
      $47 = HEAP8[$call92>>0]|0;
      $cmp99 = ($47<<24>>24)==(95);
      if (!($cmp99)) {
       $retval$7 = $first;
       break;
      }
      $incdec$ptr = ((($call92)) + 1|0);
      $call102 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr,$last,$db)|0);
      $cmp103 = ($call102|0)==($incdec$ptr|0);
      if ($cmp103) {
       $retval$7 = $first;
       break;
      }
      $__end_$i117 = ((($db)) + 4|0);
      $48 = HEAP32[$__end_$i117>>2]|0;
      $49 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i = (($48) - ($49))|0;
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
      $cmp107 = ($sub$ptr$div$i>>>0)<(2);
      if ($cmp107) {
       $retval$7 = $first;
       break;
      }
      $50 = $48;
      $add$ptr$i119 = ((($50)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($type,$add$ptr$i119);
      $51 = HEAP32[$__end_$i117>>2]|0;
      $add$ptr$i121 = ((($51)) + -24|0);
      $52 = $51;
      while(1) {
       $cmp$i$i$i = ($52|0)==($add$ptr$i121|0);
       if ($cmp$i$i$i) {
        break;
       }
       $incdec$ptr$i$i$i = ((($52)) + -24|0);
       HEAP32[$__end_$i117>>2] = $incdec$ptr$i$i$i;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
       $$pre$i = HEAP32[$__end_$i117>>2]|0;
       $52 = $$pre$i;
      }
      $add$ptr$i123 = ((($51)) + -48|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($expr,$add$ptr$i123);
      $53 = HEAP32[$__end_$i117>>2]|0;
      $first126 = ((($53)) + -24|0);
      $__size_$i1$i$i$i$i = ((($first126)) + 11|0);
      $54 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
      $tobool$i$i$i$i$i = ($54<<24>>24)<(0);
      if ($tobool$i$i$i$i$i) {
       $55 = HEAP32[$first126>>2]|0;
       HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($55,$ref$tmp$i$i$i$i);
       $__size_$i2$i$i$i$i = ((($53)) + -20|0);
       HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
      } else {
       HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($first126,$ref$tmp4$i$i$i$i);
       HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
      }
      __THREW__ = 0;
      invoke_vi(51,($first126|0));
      $56 = __THREW__; __THREW__ = 0;
      $57 = $56&1;
      if ($57) {
       $58 = ___cxa_find_matching_catch_3(0|0)|0;
       $59 = tempRet0;
       ___clang_call_terminate($58);
       // unreachable;
      }
      ;HEAP32[$first126>>2]=HEAP32[$type>>2]|0;HEAP32[$first126+4>>2]=HEAP32[$type+4>>2]|0;HEAP32[$first126+8>>2]=HEAP32[$type+8>>2]|0;
      $__i$0$i$i$i$i = 0;
      while(1) {
       $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
       if ($exitcond$i$i$i$i) {
        break;
       }
       $arrayidx$i$i$i$i126 = (($type) + ($__i$0$i$i$i$i<<2)|0);
       HEAP32[$arrayidx$i$i$i$i126>>2] = 0;
       $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
       $__i$0$i$i$i$i = $inc$i$i$i$i;
      }
      $second130 = ((($type)) + 12|0);
      __THREW__ = 0;
      invoke_viii(61,($ref$tmp129|0),($second130|0),2);
      $60 = __THREW__; __THREW__ = 0;
      $61 = $60&1;
      L77: do {
       if ($61) {
        $76 = ___cxa_find_matching_catch_2()|0;
        $77 = tempRet0;
        $ehselector$slot$5 = $77;$exn$slot$5 = $76;
       } else {
        __THREW__ = 0;
        $call$i127 = (invoke_ii(58,(5830|0))|0);
        $62 = __THREW__; __THREW__ = 0;
        $63 = $62&1;
        if ($63) {
         $70 = ___cxa_find_matching_catch_3(0|0)|0;
         $71 = tempRet0;
         ___clang_call_terminate($70);
         // unreachable;
        }
        $__size_$i$i$i129 = ((($ref$tmp129)) + 11|0);
        $64 = HEAP8[$__size_$i$i$i129>>0]|0;
        $tobool$i$i$i130 = ($64<<24>>24)<(0);
        $__size_$i3$i$i131 = ((($ref$tmp129)) + 4|0);
        $65 = HEAP32[$__size_$i3$i$i131>>2]|0;
        $conv$i$i$i132 = $64&255;
        $cond$i$i133 = $tobool$i$i$i130 ? $65 : $conv$i$i$i132;
        $cmp$i134 = ($call$i127|0)==($cond$i$i133|0);
        do {
         if ($cmp$i134) {
          __THREW__ = 0;
          $call3$i136 = (invoke_iiii(59,($ref$tmp129|0),(5830|0),($call$i127|0))|0);
          $66 = __THREW__; __THREW__ = 0;
          $67 = $66&1;
          if ($67) {
           $68 = ___cxa_find_matching_catch_3(0|0)|0;
           $69 = tempRet0;
           ___clang_call_terminate($68);
           // unreachable;
          }
          $cmp4$i138 = ($call3$i136|0)==(0);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp129);
          if ($cmp4$i138) {
           __THREW__ = 0;
           invoke_vi(67,($second130|0));
           $72 = __THREW__; __THREW__ = 0;
           $73 = $72&1;
           if (!($73)) {
            break;
           }
           $74 = ___cxa_find_matching_catch_2()|0;
           $75 = tempRet0;
           $ehselector$slot$5 = $75;$exn$slot$5 = $74;
           break L77;
          }
         } else {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp129);
         }
        } while(0);
        __THREW__ = 0;
        invoke_vii(55,($ref$tmp143|0),($expr|0));
        $78 = __THREW__; __THREW__ = 0;
        $79 = $78&1;
        if ($79) {
         $96 = ___cxa_find_matching_catch_2()|0;
         $97 = tempRet0;
         $ehselector$slot$4 = $97;$exn$slot$4 = $96;
        } else {
         __THREW__ = 0;
         $call$i144152 = (invoke_iiii(56,($ref$tmp143|0),0,(5830|0))|0);
         $80 = __THREW__; __THREW__ = 0;
         $81 = $80&1;
         if ($81) {
          $98 = ___cxa_find_matching_catch_2()|0;
          $99 = tempRet0;
          $ehselector$slot$3 = $99;$exn$slot$3 = $98;
         } else {
          ;HEAP32[$ref$tmp142>>2]=HEAP32[$ref$tmp143>>2]|0;HEAP32[$ref$tmp142+4>>2]=HEAP32[$ref$tmp143+4>>2]|0;HEAP32[$ref$tmp142+8>>2]=HEAP32[$ref$tmp143+8>>2]|0;
          $__i$0$i$i$i146 = 0;
          while(1) {
           $exitcond$i$i$i147 = ($__i$0$i$i$i146|0)==(3);
           if ($exitcond$i$i$i147) {
            break;
           }
           $arrayidx$i$i$i149 = (($ref$tmp143) + ($__i$0$i$i$i146<<2)|0);
           HEAP32[$arrayidx$i$i$i149>>2] = 0;
           $inc$i$i$i150 = (($__i$0$i$i$i146) + 1)|0;
           $__i$0$i$i$i146 = $inc$i$i$i150;
          }
          __THREW__ = 0;
          $call$i154162 = (invoke_iii(54,($ref$tmp142|0),(5885|0))|0);
          $82 = __THREW__; __THREW__ = 0;
          $83 = $82&1;
          do {
           if ($83) {
            $100 = ___cxa_find_matching_catch_2()|0;
            $101 = tempRet0;
            $ehselector$slot$2 = $101;$exn$slot$2 = $100;
           } else {
            ;HEAP32[$ref$tmp141>>2]=HEAP32[$ref$tmp142>>2]|0;HEAP32[$ref$tmp141+4>>2]=HEAP32[$ref$tmp142+4>>2]|0;HEAP32[$ref$tmp141+8>>2]=HEAP32[$ref$tmp142+8>>2]|0;
            $__i$0$i$i$i156 = 0;
            while(1) {
             $exitcond$i$i$i157 = ($__i$0$i$i$i156|0)==(3);
             if ($exitcond$i$i$i157) {
              break;
             }
             $arrayidx$i$i$i159 = (($ref$tmp142) + ($__i$0$i$i$i156<<2)|0);
             HEAP32[$arrayidx$i$i$i159>>2] = 0;
             $inc$i$i$i160 = (($__i$0$i$i$i156) + 1)|0;
             $__i$0$i$i$i156 = $inc$i$i$i160;
            }
            $__size_$i$i$i$i$i = ((($second130)) + 11|0);
            $84 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
            $tobool$i$i$i$i$i165 = ($84<<24>>24)<(0);
            $85 = HEAP32[$second130>>2]|0;
            $cond$i$i$i$i = $tobool$i$i$i$i$i165 ? $85 : $second130;
            $__size_$i3$i$i$i = ((($type)) + 16|0);
            $86 = HEAP32[$__size_$i3$i$i$i>>2]|0;
            $conv$i$i$i$i = $84&255;
            $cond$i$i$i168 = $tobool$i$i$i$i$i165 ? $86 : $conv$i$i$i$i;
            __THREW__ = 0;
            $call3$i$i176 = (invoke_iiii(47,($ref$tmp141|0),($cond$i$i$i$i|0),($cond$i$i$i168|0))|0);
            $87 = __THREW__; __THREW__ = 0;
            $88 = $87&1;
            if ($88) {
             $102 = ___cxa_find_matching_catch_2()|0;
             $103 = tempRet0;
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp141);
             $ehselector$slot$2 = $103;$exn$slot$2 = $102;
             break;
            }
            ;HEAP32[$ref$tmp140>>2]=HEAP32[$ref$tmp141>>2]|0;HEAP32[$ref$tmp140+4>>2]=HEAP32[$ref$tmp141+4>>2]|0;HEAP32[$ref$tmp140+8>>2]=HEAP32[$ref$tmp141+8>>2]|0;
            $__i$0$i$i$i170 = 0;
            while(1) {
             $exitcond$i$i$i171 = ($__i$0$i$i$i170|0)==(3);
             if ($exitcond$i$i$i171) {
              break;
             }
             $arrayidx$i$i$i173 = (($ref$tmp141) + ($__i$0$i$i$i170<<2)|0);
             HEAP32[$arrayidx$i$i$i173>>2] = 0;
             $inc$i$i$i174 = (($__i$0$i$i$i170) + 1)|0;
             $__i$0$i$i$i170 = $inc$i$i$i174;
            }
            $89 = HEAP32[$__end_$i117>>2]|0;
            $second158 = ((($89)) + -12|0);
            $__size_$i1$i$i$i$i182 = ((($second158)) + 11|0);
            $90 = HEAP8[$__size_$i1$i$i$i$i182>>0]|0;
            $tobool$i$i$i$i$i183 = ($90<<24>>24)<(0);
            if ($tobool$i$i$i$i$i183) {
             $91 = HEAP32[$second158>>2]|0;
             HEAP8[$ref$tmp$i$i$i$i179>>0] = 0;
             __ZNSt3__211char_traitsIcE6assignERcRKc($91,$ref$tmp$i$i$i$i179);
             $__size_$i2$i$i$i$i185 = ((($89)) + -8|0);
             HEAP32[$__size_$i2$i$i$i$i185>>2] = 0;
            } else {
             HEAP8[$ref$tmp4$i$i$i$i180>>0] = 0;
             __ZNSt3__211char_traitsIcE6assignERcRKc($second158,$ref$tmp4$i$i$i$i180);
             HEAP8[$__size_$i1$i$i$i$i182>>0] = 0;
            }
            __THREW__ = 0;
            invoke_vi(51,($second158|0));
            $92 = __THREW__; __THREW__ = 0;
            $93 = $92&1;
            if ($93) {
             $94 = ___cxa_find_matching_catch_3(0|0)|0;
             $95 = tempRet0;
             ___clang_call_terminate($94);
             // unreachable;
            }
            ;HEAP32[$second158>>2]=HEAP32[$ref$tmp140>>2]|0;HEAP32[$second158+4>>2]=HEAP32[$ref$tmp140+4>>2]|0;HEAP32[$second158+8>>2]=HEAP32[$ref$tmp140+8>>2]|0;
            $__i$0$i$i$i$i193 = 0;
            while(1) {
             $exitcond$i$i$i$i194 = ($__i$0$i$i$i$i193|0)==(3);
             if ($exitcond$i$i$i$i194) {
              break;
             }
             $arrayidx$i$i$i$i196 = (($ref$tmp140) + ($__i$0$i$i$i$i193<<2)|0);
             HEAP32[$arrayidx$i$i$i$i196>>2] = 0;
             $inc$i$i$i$i197 = (($__i$0$i$i$i$i193) + 1)|0;
             $__i$0$i$i$i$i193 = $inc$i$i$i$i197;
            }
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp140);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp141);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp142);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp143);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($expr);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($type);
            $retval$7 = $call102;
            break L1;
           }
          } while(0);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp142);
          $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp143);
         $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
        }
        $ehselector$slot$5 = $ehselector$slot$4;$exn$slot$5 = $exn$slot$4;
       }
      } while(0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($expr);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($type);
      $ehselector$slot$6 = $ehselector$slot$5;$exn$slot$6 = $exn$slot$5;
     }
     ___resumeException($exn$slot$6|0);
     // unreachable;
    }
   } else {
    $retval$7 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$7|0);
}
function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($this,$__x,$__a) {
 $this = $this|0;
 $__x = $__x|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__end_$i = 0, $__end_cap_$i = 0, $__second_$i$i$i = 0, $incdec$ptr$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $__end_$i = ((($this)) + 4|0);
 HEAP32[$__end_$i>>2] = 0;
 $__end_cap_$i = ((($this)) + 8|0);
 $0 = HEAP32[$__a>>2]|0;
 HEAP32[$__end_cap_$i>>2] = 0;
 $__second_$i$i$i = ((($this)) + 12|0);
 HEAP32[$__second_$i$i$i>>2] = $0;
 __THREW__ = 0;
 invoke_vi(68,($this|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$__end_$i>>2]|0;
  __THREW__ = 0;
  invoke_vii(66,($3|0),($__x|0));
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if (!($5)) {
   $8 = HEAP32[$__end_$i>>2]|0;
   $incdec$ptr$i = ((($8)) + 24|0);
   HEAP32[$__end_$i>>2] = $incdec$ptr$i;
   return;
  }
 }
 $6 = ___cxa_find_matching_catch_2()|0;
 $7 = tempRet0;
 __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this);
 ___resumeException($6|0);
 // unreachable;
}
function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$sroa$speculated$call$i = 0, $$sroa$speculated$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_ = 0, $__end_$i = 0, $__end_$i$i$i = 0, $__end_$i$i$i$i = 0, $__end_cap_$i$i$i$i = 0, $__first_$i$i$i$i$i$i = 0, $__first_$i$i$i7$i$i$i = 0, $__first_$i$i$i8$i$i$i = 0;
 var $__second_$i$i$i = 0, $__second_$i$i$i$i$i$i = 0, $__second_$i$i$i9$i$i$i = 0, $__v = 0, $add = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $div$i = 0, $incdec$ptr = 0, $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i6 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__v = sp;
 $__second_$i$i$i = ((($this)) + 12|0);
 $__end_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__end_$i>>2]|0;
 $1 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i = (($0) - ($1))|0;
 $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
 $add = (($sub$ptr$div$i) + 1)|0;
 $call$i = (__ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp$i = ($call$i>>>0)<($add>>>0);
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__first_$i$i$i$i$i$i = ((($this)) + 8|0);
 $2 = HEAP32[$__first_$i$i$i$i$i$i>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i$i$i = (($2) - ($3))|0;
 $sub$ptr$div$i$i$i = $sub$ptr$sub$i$i$i >> 4;
 $div$i = $call$i >>> 1;
 $cmp3$i = ($sub$ptr$div$i$i$i>>>0)<($div$i>>>0);
 $mul$i = $sub$ptr$sub$i$i$i >> 3;
 $cmp$i$i$i$i = ($mul$i>>>0)<($add>>>0);
 $$sroa$speculated$i = $cmp$i$i$i$i ? $add : $mul$i;
 $$sroa$speculated$call$i = $cmp3$i ? $$sroa$speculated$i : $call$i;
 $4 = HEAP32[$__end_$i>>2]|0;
 $sub$ptr$sub$i5 = (($4) - ($3))|0;
 $sub$ptr$div$i6 = $sub$ptr$sub$i5 >> 4;
 __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v,$$sroa$speculated$call$i,$sub$ptr$div$i6,$__second_$i$i$i);
 $__end_ = ((($__v)) + 8|0);
 $5 = HEAP32[$__end_>>2]|0;
 $__second_$i$i$i$i$i$i = ((($__x)) + 12|0);
 HEAP32[$5>>2] = 0;
 $__end_$i$i$i$i = ((($5)) + 4|0);
 HEAP32[$__end_$i$i$i$i>>2] = 0;
 $__end_cap_$i$i$i$i = ((($5)) + 8|0);
 $6 = HEAP32[$__second_$i$i$i$i$i$i>>2]|0;
 HEAP32[$__end_cap_$i$i$i$i>>2] = 0;
 $__second_$i$i$i9$i$i$i = ((($5)) + 12|0);
 HEAP32[$__second_$i$i$i9$i$i$i>>2] = $6;
 $7 = HEAP32[$__x>>2]|0;
 HEAP32[$5>>2] = $7;
 $__end_$i$i$i = ((($__x)) + 4|0);
 $8 = HEAP32[$__end_$i$i$i>>2]|0;
 HEAP32[$__end_$i$i$i$i>>2] = $8;
 $__first_$i$i$i8$i$i$i = ((($__x)) + 8|0);
 $9 = HEAP32[$__first_$i$i$i8$i$i$i>>2]|0;
 $__first_$i$i$i7$i$i$i = ((($5)) + 8|0);
 HEAP32[$__first_$i$i$i7$i$i$i>>2] = $9;
 HEAP32[$__first_$i$i$i8$i$i$i>>2] = 0;
 HEAP32[$__end_$i$i$i>>2] = 0;
 HEAP32[$__x>>2] = 0;
 $incdec$ptr = ((($5)) + 16|0);
 HEAP32[$__end_>>2] = $incdec$ptr;
 __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($this,$__v);
 __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i87 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i74 = 0, $__size_$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i = 0, $__size_$i3$i$i$i = 0;
 var $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i83 = 0, $arrayidx$i = 0, $brmerge = 0, $brmerge71 = 0, $call = 0, $call$i = 0, $call52 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i84 = 0, $cmp1 = 0, $cmp10 = 0, $cmp12 = 0, $cmp2 = 0, $cmp26$not = 0, $cmp29$not = 0, $cmp32 = 0;
 var $cmp37$not = 0, $cmp44 = 0, $cmp5 = 0, $cmp55 = 0, $cmp56 = 0, $cmp59 = 0, $cmp61 = 0, $cmp7 = 0, $cmp78 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i105 = 0, $conv$i$i = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$0 = 0, $ehselector$slot$3 = 0, $exn$slot$0 = 0;
 var $exn$slot$3 = 0, $first105 = 0, $inc = 0, $inc85 = 0, $incdec$ptr = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i86 = 0, $incdec$ptr18 = 0, $k$0 = 0, $k76$0 = 0, $or$cond = 0, $ref$tmp = 0, $ref_qual$0$ph = 0, $ref_qual$0$ph$clear = 0, $retval$8 = 0, $second = 0, $sig = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i77 = 0, $sub$ptr$sub$i = 0;
 var $sub$ptr$sub$i76 = 0, $t$0 = 0, $t$1 = 0, $t$1$ph = 0, $tobool$i$i = 0, $tobool$i$i$i$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $sig = sp + 12|0;
 $ref$tmp = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$8 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(70);
   if ($cmp1) {
    $add$ptr = ((($first)) + 1|0);
    $cmp2 = ($add$ptr|0)==($last|0);
    if ($cmp2) {
     $retval$8 = $first;
    } else {
     $1 = HEAP8[$add$ptr>>0]|0;
     $cmp5 = ($1<<24>>24)==(89);
     if ($cmp5) {
      $incdec$ptr = ((($first)) + 2|0);
      $cmp7 = ($incdec$ptr|0)==($last|0);
      if ($cmp7) {
       $retval$8 = $first;
       break;
      } else {
       $t$0 = $incdec$ptr;
      }
     } else {
      $t$0 = $add$ptr;
     }
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
     $cmp10 = ($call|0)==($t$0|0);
     if ($cmp10) {
      $retval$8 = $first;
     } else {
      ;HEAP32[$sig>>2]=0|0;HEAP32[$sig+4>>2]=0|0;HEAP32[$sig+8>>2]=0|0;
      $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc(5838)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($sig,5838,$call$i);
      $__end_$i74 = ((($db)) + 4|0);
      $__size_$i$i = ((($sig)) + 11|0);
      $__size_$i3$i = ((($sig)) + 4|0);
      $__size_$i$i$i$i$i = ((($ref$tmp)) + 11|0);
      $__size_$i3$i$i$i = ((($ref$tmp)) + 4|0);
      $ref_qual$0$ph = 0;$t$1$ph = $call;
      L9: while(1) {
       $t$1 = $t$1$ph;
       L11: while(1) {
        $cmp12 = ($t$1|0)==($last|0);
        if ($cmp12) {
         label = 10;
         break L9;
        }
        $6 = HEAP8[$t$1>>0]|0;
        $incdec$ptr18 = ((($t$1)) + 1|0);
        switch ($6<<24>>24) {
        case 69:  {
         label = 15;
         break L9;
         break;
        }
        case 118:  {
         $t$1 = $incdec$ptr18;
         continue L11;
         break;
        }
        default: {
        }
        }
        $cmp26$not = ($6<<24>>24)!=(82);
        $cmp29$not = ($incdec$ptr18|0)==($last|0);
        $brmerge = $cmp29$not | $cmp26$not;
        if (!($brmerge)) {
         $9 = HEAP8[$incdec$ptr18>>0]|0;
         $cmp32 = ($9<<24>>24)==(69);
         if ($cmp32) {
          $ref_qual$0$ph = 1;$t$1$ph = $incdec$ptr18;
          continue L9;
         }
        }
        $cmp37$not = ($6<<24>>24)!=(79);
        $brmerge71 = $cmp29$not | $cmp37$not;
        if (!($brmerge71)) {
         $10 = HEAP8[$incdec$ptr18>>0]|0;
         $cmp44 = ($10<<24>>24)==(69);
         if ($cmp44) {
          $ref_qual$0$ph = 2;$t$1$ph = $incdec$ptr18;
          continue L9;
         }
        }
        $11 = HEAP32[$__end_$i74>>2]|0;
        $12 = HEAP32[$db>>2]|0;
        $sub$ptr$sub$i = (($11) - ($12))|0;
        $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
        __THREW__ = 0;
        $call52 = (invoke_iiii(50,($t$1|0),($last|0),($db|0))|0);
        $13 = __THREW__; __THREW__ = 0;
        $14 = $13&1;
        if ($14) {
         label = 22;
         break L9;
        }
        $15 = HEAP32[$__end_$i74>>2]|0;
        $16 = HEAP32[$db>>2]|0;
        $sub$ptr$sub$i76 = (($15) - ($16))|0;
        $sub$ptr$div$i77 = (($sub$ptr$sub$i76|0) / 24)&-1;
        $cmp55 = ($call52|0)==($t$1|0);
        $cmp56 = ($call52|0)==($last|0);
        $or$cond = $cmp55 | $cmp56;
        if ($or$cond) {
         label = 44;
         break L9;
        } else {
         $k$0 = $sub$ptr$div$i;
        }
        while(1) {
         $cmp59 = ($k$0>>>0)<($sub$ptr$div$i77>>>0);
         if (!($cmp59)) {
          $k76$0 = $sub$ptr$div$i;
          break;
         }
         $19 = HEAP8[$__size_$i$i>>0]|0;
         $tobool$i$i = ($19<<24>>24)<(0);
         $20 = HEAP32[$__size_$i3$i>>2]|0;
         $conv$i$i = $19&255;
         $cond$i = $tobool$i$i ? $20 : $conv$i$i;
         $cmp61 = ($cond$i>>>0)>(1);
         if ($cmp61) {
          __THREW__ = 0;
          (invoke_iii(54,($sig|0),(6060|0))|0);
          $21 = __THREW__; __THREW__ = 0;
          $22 = $21&1;
          if ($22) {
           label = 26;
           break L9;
          }
         }
         $25 = HEAP32[$db>>2]|0;
         $arrayidx$i = (($25) + (($k$0*24)|0)|0);
         __THREW__ = 0;
         invoke_vii(55,($ref$tmp|0),($arrayidx$i|0));
         $26 = __THREW__; __THREW__ = 0;
         $27 = $26&1;
         if ($27) {
          label = 30;
          break L9;
         }
         $28 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
         $tobool$i$i$i$i$i = ($28<<24>>24)<(0);
         $29 = HEAP32[$ref$tmp>>2]|0;
         $cond$i$i$i$i = $tobool$i$i$i$i$i ? $29 : $ref$tmp;
         $30 = HEAP32[$__size_$i3$i$i$i>>2]|0;
         $conv$i$i$i$i = $28&255;
         $cond$i$i$i = $tobool$i$i$i$i$i ? $30 : $conv$i$i$i$i;
         __THREW__ = 0;
         (invoke_iiii(47,($sig|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
         $31 = __THREW__; __THREW__ = 0;
         $32 = $31&1;
         if ($32) {
          label = 31;
          break L9;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
         $inc = (($k$0) + 1)|0;
         $k$0 = $inc;
        }
        while(1) {
         $cmp78 = ($k76$0>>>0)<($sub$ptr$div$i77>>>0);
         if (!($cmp78)) {
          $t$1 = $call52;
          continue L11;
         }
         $37 = HEAP32[$__end_$i74>>2]|0;
         $add$ptr$i83 = ((($37)) + -24|0);
         $38 = $37;
         while(1) {
          $cmp$i$i$i84 = ($38|0)==($add$ptr$i83|0);
          if ($cmp$i$i$i84) {
           break;
          }
          $incdec$ptr$i$i$i86 = ((($38)) + -24|0);
          HEAP32[$__end_$i74>>2] = $incdec$ptr$i$i$i86;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i86);
          $$pre$i87 = HEAP32[$__end_$i74>>2]|0;
          $38 = $$pre$i87;
         }
         $inc85 = (($k76$0) + 1)|0;
         $k76$0 = $inc85;
        }
       }
      }
      L37: do {
       if ((label|0) == 10) {
        $2 = HEAP32[$__end_$i74>>2]|0;
        $add$ptr$i = ((($2)) + -24|0);
        $3 = $2;
        while(1) {
         $cmp$i$i$i = ($3|0)==($add$ptr$i|0);
         if ($cmp$i$i$i) {
          label = 44;
          break L37;
         }
         $incdec$ptr$i$i$i = ((($3)) + -24|0);
         HEAP32[$__end_$i74>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i74>>2]|0;
         $3 = $$pre$i;
        }
       }
       else if ((label|0) == 15) {
        __THREW__ = 0;
        (invoke_iii(54,($sig|0),(5836|0))|0);
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        L39: do {
         if (!($8)) {
          $ref_qual$0$ph$clear = $ref_qual$0$ph & 3;
          switch ($ref_qual$0$ph$clear<<24>>24) {
          case 1:  {
           __THREW__ = 0;
           (invoke_iii(54,($sig|0),(7393|0))|0);
           $39 = __THREW__; __THREW__ = 0;
           $40 = $39&1;
           if ($40) {
            break L39;
           }
           break;
          }
          case 2:  {
           __THREW__ = 0;
           (invoke_iii(54,($sig|0),(7396|0))|0);
           $41 = __THREW__; __THREW__ = 0;
           $42 = $41&1;
           if ($42) {
            break L39;
           }
           break;
          }
          default: {
          }
          }
          $43 = HEAP32[$db>>2]|0;
          $44 = HEAP32[$__end_$i74>>2]|0;
          $cmp$i = ($43|0)==($44|0);
          if ($cmp$i) {
           label = 44;
           break L37;
          }
          $first105 = ((($44)) + -24|0);
          __THREW__ = 0;
          (invoke_iii(54,($first105|0),(5870|0))|0);
          $45 = __THREW__; __THREW__ = 0;
          $46 = $45&1;
          if (!($46)) {
           $47 = HEAP32[$__end_$i74>>2]|0;
           $second = ((($47)) + -12|0);
           $48 = HEAP8[$__size_$i$i>>0]|0;
           $tobool$i$i$i$i = ($48<<24>>24)<(0);
           $49 = HEAP32[$sig>>2]|0;
           $cond$i$i$i105 = $tobool$i$i$i$i ? $49 : $sig;
           $50 = HEAP32[$__size_$i3$i>>2]|0;
           $conv$i$i$i = $48&255;
           $cond$i$i = $tobool$i$i$i$i ? $50 : $conv$i$i$i;
           __THREW__ = 0;
           (invoke_iiiii(53,($second|0),0,($cond$i$i$i105|0),($cond$i$i|0))|0);
           $51 = __THREW__; __THREW__ = 0;
           $52 = $51&1;
           if (!($52)) {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($sig);
            $retval$8 = $incdec$ptr18;
            break L1;
           }
          }
         }
        } while(0);
        $4 = ___cxa_find_matching_catch_2()|0;
        $5 = tempRet0;
        $ehselector$slot$3 = $5;$exn$slot$3 = $4;
       }
       else if ((label|0) == 22) {
        $17 = ___cxa_find_matching_catch_2()|0;
        $18 = tempRet0;
        $ehselector$slot$3 = $18;$exn$slot$3 = $17;
       }
       else if ((label|0) == 26) {
        $23 = ___cxa_find_matching_catch_2()|0;
        $24 = tempRet0;
        $ehselector$slot$3 = $24;$exn$slot$3 = $23;
       }
       else if ((label|0) == 30) {
        $33 = ___cxa_find_matching_catch_2()|0;
        $34 = tempRet0;
        $ehselector$slot$0 = $34;$exn$slot$0 = $33;
        label = 32;
       }
       else if ((label|0) == 31) {
        $35 = ___cxa_find_matching_catch_2()|0;
        $36 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
        $ehselector$slot$0 = $36;$exn$slot$0 = $35;
        label = 32;
       }
      } while(0);
      if ((label|0) == 32) {
       $ehselector$slot$3 = $ehselector$slot$0;$exn$slot$3 = $exn$slot$0;
      }
      else if ((label|0) == 44) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($sig);
       $retval$8 = $first;
       break;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($sig);
      ___resumeException($exn$slot$3|0);
      // unreachable;
     }
    }
   } else {
    $retval$8 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$8|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0;
 var $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i$i143 = 0, $__i$0$i$i$i$i166 = 0, $__i$0$i$i$i$i81 = 0, $__i$0$i$i$i108 = 0, $__i$0$i$i$i118 = 0, $__i$0$i$i$i33 = 0, $__i$0$i$i$i41 = 0, $__i$0$i$i$i57 = 0, $__i$0$i$i$i89 = 0, $__size_$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i99 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i1$i$i$i$i132 = 0, $__size_$i1$i$i$i$i155 = 0, $__size_$i1$i$i$i$i70 = 0, $__size_$i2$i$i$i$i = 0;
 var $__size_$i2$i$i$i$i135 = 0, $__size_$i2$i$i$i$i158 = 0, $__size_$i2$i$i$i$i73 = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i104 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i27 = 0, $add$ptr$i29 = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i$i146 = 0, $arrayidx$i$i$i$i169 = 0, $arrayidx$i$i$i$i84 = 0, $arrayidx$i$i$i111 = 0, $arrayidx$i$i$i121 = 0, $arrayidx$i$i$i30 = 0, $arrayidx$i$i$i36 = 0, $arrayidx$i$i$i44 = 0, $arrayidx$i$i$i60 = 0, $arrayidx$i$i$i92 = 0;
 var $call = 0, $call$i125 = 0, $call$i31 = 0, $call$i48 = 0, $call$i64 = 0, $call$i96 = 0, $call3$i$i115 = 0, $call3$i$i39 = 0, $call5 = 0, $class_type = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp23 = 0, $cmp3 = 0, $cmp6 = 0, $cmp9 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0;
 var $cond$i$i$i$i103 = 0, $cond$i$i$i106 = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i105 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $ehselector$slot$5 = 0, $ehselector$slot$6 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i$i144 = 0, $exitcond$i$i$i$i167 = 0, $exitcond$i$i$i$i82 = 0, $exitcond$i$i$i109 = 0, $exitcond$i$i$i119 = 0, $exitcond$i$i$i34 = 0, $exitcond$i$i$i42 = 0;
 var $exitcond$i$i$i58 = 0, $exitcond$i$i$i90 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $exn$slot$5 = 0, $exn$slot$6 = 0, $first42 = 0, $first83 = 0, $func = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i$i147 = 0, $inc$i$i$i$i170 = 0, $inc$i$i$i$i85 = 0, $inc$i$i$i112 = 0, $inc$i$i$i122 = 0, $inc$i$i$i37 = 0;
 var $inc$i$i$i45 = 0, $inc$i$i$i61 = 0, $inc$i$i$i93 = 0, $incdec$ptr$i$i$i = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp$i$i$i$i129 = 0, $ref$tmp$i$i$i$i152 = 0, $ref$tmp$i$i$i$i67 = 0, $ref$tmp25 = 0, $ref$tmp26 = 0, $ref$tmp31 = 0, $ref$tmp4$i$i$i$i = 0, $ref$tmp4$i$i$i$i130 = 0, $ref$tmp4$i$i$i$i153 = 0, $ref$tmp4$i$i$i$i68 = 0, $ref$tmp51 = 0, $ref$tmp65 = 0, $ref$tmp66 = 0, $ref$tmp67 = 0;
 var $ref$tmp72 = 0, $retval$3 = 0, $second = 0, $second60 = 0, $second99 = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i100 = 0, $tobool$i$i$i$i$i133 = 0, $tobool$i$i$i$i$i156 = 0, $tobool$i$i$i$i$i53 = 0, $tobool$i$i$i$i$i71 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $ref$tmp$i$i$i$i152 = sp + 167|0;
 $ref$tmp4$i$i$i$i153 = sp + 166|0;
 $ref$tmp$i$i$i$i129 = sp + 165|0;
 $ref$tmp4$i$i$i$i130 = sp + 164|0;
 $ref$tmp$i$i$i$i67 = sp + 163|0;
 $ref$tmp4$i$i$i$i68 = sp + 162|0;
 $ref$tmp$i$i$i$i = sp + 161|0;
 $ref$tmp4$i$i$i$i = sp + 160|0;
 $func = sp + 136|0;
 $class_type = sp + 112|0;
 $ref$tmp = sp + 96|0;
 $ref$tmp25 = sp + 84|0;
 $ref$tmp26 = sp + 72|0;
 $ref$tmp31 = sp + 60|0;
 $ref$tmp51 = sp + 48|0;
 $ref$tmp65 = sp + 36|0;
 $ref$tmp66 = sp + 24|0;
 $ref$tmp67 = sp + 12|0;
 $ref$tmp72 = sp;
 $cmp = ($first|0)==($last|0);
 do {
  if ($cmp) {
   $retval$3 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(77);
   if ($cmp1) {
    $add$ptr = ((($first)) + 1|0);
    $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
    $cmp3 = ($call|0)==($add$ptr|0);
    if ($cmp3) {
     $retval$3 = $first;
    } else {
     $call5 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
     $cmp6 = ($call5|0)==($call|0);
     if ($cmp6) {
      $retval$3 = $first;
     } else {
      $__end_$i = ((($db)) + 4|0);
      $1 = HEAP32[$__end_$i>>2]|0;
      $2 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i = (($1) - ($2))|0;
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
      $cmp9 = ($sub$ptr$div$i>>>0)<(2);
      if ($cmp9) {
       $retval$3 = $first;
      } else {
       $3 = $1;
       $add$ptr$i = ((($3)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($func,$add$ptr$i);
       $4 = HEAP32[$__end_$i>>2]|0;
       $add$ptr$i27 = ((($4)) + -24|0);
       $5 = $4;
       while(1) {
        $cmp$i$i$i = ($5|0)==($add$ptr$i27|0);
        if ($cmp$i$i$i) {
         break;
        }
        $incdec$ptr$i$i$i = ((($5)) + -24|0);
        HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
        $$pre$i = HEAP32[$__end_$i>>2]|0;
        $5 = $$pre$i;
       }
       $add$ptr$i29 = ((($4)) + -48|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($class_type,$add$ptr$i29);
       $second = ((($func)) + 12|0);
       $__size_$i$i$i = ((($second)) + 11|0);
       $6 = HEAP8[$__size_$i$i$i>>0]|0;
       $tobool$i$i$i = ($6<<24>>24)<(0);
       $7 = HEAP32[$second>>2]|0;
       $cond$i$i = $tobool$i$i$i ? $7 : $second;
       $8 = HEAP8[$cond$i$i>>0]|0;
       $cmp23 = ($8<<24>>24)==(40);
       L11: do {
        if ($cmp23) {
         __THREW__ = 0;
         $call$i31 = (invoke_iii(54,($func|0),(5838|0))|0);
         $9 = __THREW__; __THREW__ = 0;
         $10 = $9&1;
         if ($10) {
          $36 = ___cxa_find_matching_catch_2()|0;
          $37 = tempRet0;
          $ehselector$slot$2 = $37;$exn$slot$2 = $36;
         } else {
          ;HEAP32[$ref$tmp26>>2]=HEAP32[$func>>2]|0;HEAP32[$ref$tmp26+4>>2]=HEAP32[$func+4>>2]|0;HEAP32[$ref$tmp26+8>>2]=HEAP32[$func+8>>2]|0;
          $__i$0$i$i$i = 0;
          while(1) {
           $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
           if ($exitcond$i$i$i) {
            break;
           }
           $arrayidx$i$i$i30 = (($func) + ($__i$0$i$i$i<<2)|0);
           HEAP32[$arrayidx$i$i$i30>>2] = 0;
           $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
           $__i$0$i$i$i = $inc$i$i$i;
          }
          __THREW__ = 0;
          invoke_vii(55,($ref$tmp31|0),($class_type|0));
          $11 = __THREW__; __THREW__ = 0;
          $12 = $11&1;
          if ($12) {
           $38 = ___cxa_find_matching_catch_2()|0;
           $39 = tempRet0;
           $ehselector$slot$1 = $39;$exn$slot$1 = $38;
          } else {
           $__size_$i$i$i$i$i = ((($ref$tmp31)) + 11|0);
           $13 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($13<<24>>24)<(0);
           $14 = HEAP32[$ref$tmp31>>2]|0;
           $cond$i$i$i$i = $tobool$i$i$i$i$i ? $14 : $ref$tmp31;
           $__size_$i3$i$i$i = ((($ref$tmp31)) + 4|0);
           $15 = HEAP32[$__size_$i3$i$i$i>>2]|0;
           $conv$i$i$i$i = $13&255;
           $cond$i$i$i = $tobool$i$i$i$i$i ? $15 : $conv$i$i$i$i;
           __THREW__ = 0;
           $call3$i$i39 = (invoke_iiii(47,($ref$tmp26|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
           $16 = __THREW__; __THREW__ = 0;
           $17 = $16&1;
           do {
            if ($17) {
             $40 = ___cxa_find_matching_catch_2()|0;
             $41 = tempRet0;
             $ehselector$slot$0 = $41;$exn$slot$0 = $40;
            } else {
             ;HEAP32[$ref$tmp25>>2]=HEAP32[$ref$tmp26>>2]|0;HEAP32[$ref$tmp25+4>>2]=HEAP32[$ref$tmp26+4>>2]|0;HEAP32[$ref$tmp25+8>>2]=HEAP32[$ref$tmp26+8>>2]|0;
             $__i$0$i$i$i33 = 0;
             while(1) {
              $exitcond$i$i$i34 = ($__i$0$i$i$i33|0)==(3);
              if ($exitcond$i$i$i34) {
               break;
              }
              $arrayidx$i$i$i36 = (($ref$tmp26) + ($__i$0$i$i$i33<<2)|0);
              HEAP32[$arrayidx$i$i$i36>>2] = 0;
              $inc$i$i$i37 = (($__i$0$i$i$i33) + 1)|0;
              $__i$0$i$i$i33 = $inc$i$i$i37;
             }
             __THREW__ = 0;
             $call$i48 = (invoke_iii(54,($ref$tmp25|0),(7389|0))|0);
             $18 = __THREW__; __THREW__ = 0;
             $19 = $18&1;
             if ($19) {
              $42 = ___cxa_find_matching_catch_2()|0;
              $43 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp25);
              $ehselector$slot$0 = $43;$exn$slot$0 = $42;
              break;
             }
             ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp25>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp25+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp25+8>>2]|0;
             $__i$0$i$i$i41 = 0;
             while(1) {
              $exitcond$i$i$i42 = ($__i$0$i$i$i41|0)==(3);
              if ($exitcond$i$i$i42) {
               break;
              }
              $arrayidx$i$i$i44 = (($ref$tmp25) + ($__i$0$i$i$i41<<2)|0);
              HEAP32[$arrayidx$i$i$i44>>2] = 0;
              $inc$i$i$i45 = (($__i$0$i$i$i41) + 1)|0;
              $__i$0$i$i$i41 = $inc$i$i$i45;
             }
             $20 = HEAP32[$__end_$i>>2]|0;
             $first42 = ((($20)) + -24|0);
             $__size_$i1$i$i$i$i = ((($first42)) + 11|0);
             $21 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
             $tobool$i$i$i$i$i53 = ($21<<24>>24)<(0);
             if ($tobool$i$i$i$i$i53) {
              $22 = HEAP32[$first42>>2]|0;
              HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($22,$ref$tmp$i$i$i$i);
              $__size_$i2$i$i$i$i = ((($20)) + -20|0);
              HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
             } else {
              HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($first42,$ref$tmp4$i$i$i$i);
              HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
             }
             __THREW__ = 0;
             invoke_vi(51,($first42|0));
             $23 = __THREW__; __THREW__ = 0;
             $24 = $23&1;
             if ($24) {
              $25 = ___cxa_find_matching_catch_3(0|0)|0;
              $26 = tempRet0;
              ___clang_call_terminate($25);
              // unreachable;
             }
             ;HEAP32[$first42>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$first42+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$first42+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
             $__i$0$i$i$i$i = 0;
             while(1) {
              $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
              if ($exitcond$i$i$i$i) {
               break;
              }
              $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
              HEAP32[$arrayidx$i$i$i$i>>2] = 0;
              $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
              $__i$0$i$i$i$i = $inc$i$i$i$i;
             }
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp25);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp31);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp26);
             __THREW__ = 0;
             $call$i64 = (invoke_iiii(56,($second|0),0,(5836|0))|0);
             $27 = __THREW__; __THREW__ = 0;
             $28 = $27&1;
             if ($28) {
              $44 = ___cxa_find_matching_catch_2()|0;
              $45 = tempRet0;
              $ehselector$slot$6 = $45;$exn$slot$6 = $44;
              label = 89;
              break L11;
             }
             ;HEAP32[$ref$tmp51>>2]=HEAP32[$second>>2]|0;HEAP32[$ref$tmp51+4>>2]=HEAP32[$second+4>>2]|0;HEAP32[$ref$tmp51+8>>2]=HEAP32[$second+8>>2]|0;
             $__i$0$i$i$i57 = 0;
             while(1) {
              $exitcond$i$i$i58 = ($__i$0$i$i$i57|0)==(3);
              if ($exitcond$i$i$i58) {
               break;
              }
              $arrayidx$i$i$i60 = (($second) + ($__i$0$i$i$i57<<2)|0);
              HEAP32[$arrayidx$i$i$i60>>2] = 0;
              $inc$i$i$i61 = (($__i$0$i$i$i57) + 1)|0;
              $__i$0$i$i$i57 = $inc$i$i$i61;
             }
             $29 = HEAP32[$__end_$i>>2]|0;
             $second60 = ((($29)) + -12|0);
             $__size_$i1$i$i$i$i70 = ((($second60)) + 11|0);
             $30 = HEAP8[$__size_$i1$i$i$i$i70>>0]|0;
             $tobool$i$i$i$i$i71 = ($30<<24>>24)<(0);
             if ($tobool$i$i$i$i$i71) {
              $31 = HEAP32[$second60>>2]|0;
              HEAP8[$ref$tmp$i$i$i$i67>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($31,$ref$tmp$i$i$i$i67);
              $__size_$i2$i$i$i$i73 = ((($29)) + -8|0);
              HEAP32[$__size_$i2$i$i$i$i73>>2] = 0;
             } else {
              HEAP8[$ref$tmp4$i$i$i$i68>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($second60,$ref$tmp4$i$i$i$i68);
              HEAP8[$__size_$i1$i$i$i$i70>>0] = 0;
             }
             __THREW__ = 0;
             invoke_vi(51,($second60|0));
             $32 = __THREW__; __THREW__ = 0;
             $33 = $32&1;
             if ($33) {
              $34 = ___cxa_find_matching_catch_3(0|0)|0;
              $35 = tempRet0;
              ___clang_call_terminate($34);
              // unreachable;
             }
             ;HEAP32[$second60>>2]=HEAP32[$ref$tmp51>>2]|0;HEAP32[$second60+4>>2]=HEAP32[$ref$tmp51+4>>2]|0;HEAP32[$second60+8>>2]=HEAP32[$ref$tmp51+8>>2]|0;
             $__i$0$i$i$i$i81 = 0;
             while(1) {
              $exitcond$i$i$i$i82 = ($__i$0$i$i$i$i81|0)==(3);
              if ($exitcond$i$i$i$i82) {
               break;
              }
              $arrayidx$i$i$i$i84 = (($ref$tmp51) + ($__i$0$i$i$i$i81<<2)|0);
              HEAP32[$arrayidx$i$i$i$i84>>2] = 0;
              $inc$i$i$i$i85 = (($__i$0$i$i$i$i81) + 1)|0;
              $__i$0$i$i$i$i81 = $inc$i$i$i$i85;
             }
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp51);
             label = 88;
             break L11;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp31);
           $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp26);
          $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
         }
         $ehselector$slot$6 = $ehselector$slot$2;$exn$slot$6 = $exn$slot$2;
         label = 89;
        } else {
         __THREW__ = 0;
         $call$i96 = (invoke_iii(54,($func|0),(5870|0))|0);
         $46 = __THREW__; __THREW__ = 0;
         $47 = $46&1;
         if ($47) {
          $71 = ___cxa_find_matching_catch_2()|0;
          $72 = tempRet0;
          $ehselector$slot$5 = $72;$exn$slot$5 = $71;
         } else {
          ;HEAP32[$ref$tmp67>>2]=HEAP32[$func>>2]|0;HEAP32[$ref$tmp67+4>>2]=HEAP32[$func+4>>2]|0;HEAP32[$ref$tmp67+8>>2]=HEAP32[$func+8>>2]|0;
          $__i$0$i$i$i89 = 0;
          while(1) {
           $exitcond$i$i$i90 = ($__i$0$i$i$i89|0)==(3);
           if ($exitcond$i$i$i90) {
            break;
           }
           $arrayidx$i$i$i92 = (($func) + ($__i$0$i$i$i89<<2)|0);
           HEAP32[$arrayidx$i$i$i92>>2] = 0;
           $inc$i$i$i93 = (($__i$0$i$i$i89) + 1)|0;
           $__i$0$i$i$i89 = $inc$i$i$i93;
          }
          __THREW__ = 0;
          invoke_vii(55,($ref$tmp72|0),($class_type|0));
          $48 = __THREW__; __THREW__ = 0;
          $49 = $48&1;
          if ($49) {
           $73 = ___cxa_find_matching_catch_2()|0;
           $74 = tempRet0;
           $ehselector$slot$4 = $74;$exn$slot$4 = $73;
          } else {
           $__size_$i$i$i$i$i99 = ((($ref$tmp72)) + 11|0);
           $50 = HEAP8[$__size_$i$i$i$i$i99>>0]|0;
           $tobool$i$i$i$i$i100 = ($50<<24>>24)<(0);
           $51 = HEAP32[$ref$tmp72>>2]|0;
           $cond$i$i$i$i103 = $tobool$i$i$i$i$i100 ? $51 : $ref$tmp72;
           $__size_$i3$i$i$i104 = ((($ref$tmp72)) + 4|0);
           $52 = HEAP32[$__size_$i3$i$i$i104>>2]|0;
           $conv$i$i$i$i105 = $50&255;
           $cond$i$i$i106 = $tobool$i$i$i$i$i100 ? $52 : $conv$i$i$i$i105;
           __THREW__ = 0;
           $call3$i$i115 = (invoke_iiii(47,($ref$tmp67|0),($cond$i$i$i$i103|0),($cond$i$i$i106|0))|0);
           $53 = __THREW__; __THREW__ = 0;
           $54 = $53&1;
           do {
            if ($54) {
             $75 = ___cxa_find_matching_catch_2()|0;
             $76 = tempRet0;
             $ehselector$slot$3 = $76;$exn$slot$3 = $75;
            } else {
             ;HEAP32[$ref$tmp66>>2]=HEAP32[$ref$tmp67>>2]|0;HEAP32[$ref$tmp66+4>>2]=HEAP32[$ref$tmp67+4>>2]|0;HEAP32[$ref$tmp66+8>>2]=HEAP32[$ref$tmp67+8>>2]|0;
             $__i$0$i$i$i108 = 0;
             while(1) {
              $exitcond$i$i$i109 = ($__i$0$i$i$i108|0)==(3);
              if ($exitcond$i$i$i109) {
               break;
              }
              $arrayidx$i$i$i111 = (($ref$tmp67) + ($__i$0$i$i$i108<<2)|0);
              HEAP32[$arrayidx$i$i$i111>>2] = 0;
              $inc$i$i$i112 = (($__i$0$i$i$i108) + 1)|0;
              $__i$0$i$i$i108 = $inc$i$i$i112;
             }
             __THREW__ = 0;
             $call$i125 = (invoke_iii(54,($ref$tmp66|0),(7389|0))|0);
             $55 = __THREW__; __THREW__ = 0;
             $56 = $55&1;
             if ($56) {
              $77 = ___cxa_find_matching_catch_2()|0;
              $78 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp66);
              $ehselector$slot$3 = $78;$exn$slot$3 = $77;
              break;
             }
             ;HEAP32[$ref$tmp65>>2]=HEAP32[$ref$tmp66>>2]|0;HEAP32[$ref$tmp65+4>>2]=HEAP32[$ref$tmp66+4>>2]|0;HEAP32[$ref$tmp65+8>>2]=HEAP32[$ref$tmp66+8>>2]|0;
             $__i$0$i$i$i118 = 0;
             while(1) {
              $exitcond$i$i$i119 = ($__i$0$i$i$i118|0)==(3);
              if ($exitcond$i$i$i119) {
               break;
              }
              $arrayidx$i$i$i121 = (($ref$tmp66) + ($__i$0$i$i$i118<<2)|0);
              HEAP32[$arrayidx$i$i$i121>>2] = 0;
              $inc$i$i$i122 = (($__i$0$i$i$i118) + 1)|0;
              $__i$0$i$i$i118 = $inc$i$i$i122;
             }
             $57 = HEAP32[$__end_$i>>2]|0;
             $first83 = ((($57)) + -24|0);
             $__size_$i1$i$i$i$i132 = ((($first83)) + 11|0);
             $58 = HEAP8[$__size_$i1$i$i$i$i132>>0]|0;
             $tobool$i$i$i$i$i133 = ($58<<24>>24)<(0);
             if ($tobool$i$i$i$i$i133) {
              $59 = HEAP32[$first83>>2]|0;
              HEAP8[$ref$tmp$i$i$i$i129>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($59,$ref$tmp$i$i$i$i129);
              $__size_$i2$i$i$i$i135 = ((($57)) + -20|0);
              HEAP32[$__size_$i2$i$i$i$i135>>2] = 0;
             } else {
              HEAP8[$ref$tmp4$i$i$i$i130>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($first83,$ref$tmp4$i$i$i$i130);
              HEAP8[$__size_$i1$i$i$i$i132>>0] = 0;
             }
             __THREW__ = 0;
             invoke_vi(51,($first83|0));
             $60 = __THREW__; __THREW__ = 0;
             $61 = $60&1;
             if ($61) {
              $62 = ___cxa_find_matching_catch_3(0|0)|0;
              $63 = tempRet0;
              ___clang_call_terminate($62);
              // unreachable;
             }
             ;HEAP32[$first83>>2]=HEAP32[$ref$tmp65>>2]|0;HEAP32[$first83+4>>2]=HEAP32[$ref$tmp65+4>>2]|0;HEAP32[$first83+8>>2]=HEAP32[$ref$tmp65+8>>2]|0;
             $__i$0$i$i$i$i143 = 0;
             while(1) {
              $exitcond$i$i$i$i144 = ($__i$0$i$i$i$i143|0)==(3);
              if ($exitcond$i$i$i$i144) {
               break;
              }
              $arrayidx$i$i$i$i146 = (($ref$tmp65) + ($__i$0$i$i$i$i143<<2)|0);
              HEAP32[$arrayidx$i$i$i$i146>>2] = 0;
              $inc$i$i$i$i147 = (($__i$0$i$i$i$i143) + 1)|0;
              $__i$0$i$i$i$i143 = $inc$i$i$i$i147;
             }
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp65);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp66);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp72);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp67);
             $64 = HEAP32[$__end_$i>>2]|0;
             $second99 = ((($64)) + -12|0);
             $__size_$i1$i$i$i$i155 = ((($second99)) + 11|0);
             $65 = HEAP8[$__size_$i1$i$i$i$i155>>0]|0;
             $tobool$i$i$i$i$i156 = ($65<<24>>24)<(0);
             if ($tobool$i$i$i$i$i156) {
              $66 = HEAP32[$second99>>2]|0;
              HEAP8[$ref$tmp$i$i$i$i152>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($66,$ref$tmp$i$i$i$i152);
              $__size_$i2$i$i$i$i158 = ((($64)) + -8|0);
              HEAP32[$__size_$i2$i$i$i$i158>>2] = 0;
             } else {
              HEAP8[$ref$tmp4$i$i$i$i153>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($second99,$ref$tmp4$i$i$i$i153);
              HEAP8[$__size_$i1$i$i$i$i155>>0] = 0;
             }
             __THREW__ = 0;
             invoke_vi(51,($second99|0));
             $67 = __THREW__; __THREW__ = 0;
             $68 = $67&1;
             if ($68) {
              $69 = ___cxa_find_matching_catch_3(0|0)|0;
              $70 = tempRet0;
              ___clang_call_terminate($69);
              // unreachable;
             }
             ;HEAP32[$second99>>2]=HEAP32[$second>>2]|0;HEAP32[$second99+4>>2]=HEAP32[$second+4>>2]|0;HEAP32[$second99+8>>2]=HEAP32[$second+8>>2]|0;
             $__i$0$i$i$i$i166 = 0;
             while(1) {
              $exitcond$i$i$i$i167 = ($__i$0$i$i$i$i166|0)==(3);
              if ($exitcond$i$i$i$i167) {
               label = 88;
               break L11;
              }
              $arrayidx$i$i$i$i169 = (($second) + ($__i$0$i$i$i$i166<<2)|0);
              HEAP32[$arrayidx$i$i$i$i169>>2] = 0;
              $inc$i$i$i$i170 = (($__i$0$i$i$i$i166) + 1)|0;
              $__i$0$i$i$i$i166 = $inc$i$i$i$i170;
             }
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp72);
           $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp67);
          $ehselector$slot$5 = $ehselector$slot$4;$exn$slot$5 = $exn$slot$4;
         }
         $ehselector$slot$6 = $ehselector$slot$5;$exn$slot$6 = $exn$slot$5;
         label = 89;
        }
       } while(0);
       if ((label|0) == 88) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($class_type);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($func);
        $retval$3 = $call5;
        break;
       }
       else if ((label|0) == 89) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($class_type);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($func);
        ___resumeException($exn$slot$6|0);
        // unreachable;
       }
      }
     }
    }
   } else {
    $retval$3 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($this,$__str,$__n) {
 $this = $this|0;
 $__str = $__str|0;
 $__n = $__n|0;
 var $$sroa$speculated = 0, $0 = 0, $1 = 0, $2 = 0, $__size_$i$i = 0, $__size_$i3$i = 0, $cmp$i$i$i = 0, $cond$i = 0, $cond$i$i = 0, $conv$i$i = 0, $tobool$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 $__size_$i$i = ((($__str)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 $__size_$i3$i = ((($__str)) + 4|0);
 $1 = HEAP32[$__size_$i3$i>>2]|0;
 $conv$i$i = $0&255;
 $cond$i = $tobool$i$i ? $1 : $conv$i$i;
 $2 = HEAP32[$__str>>2]|0;
 $cond$i$i = $tobool$i$i ? $2 : $__str;
 $cmp$i$i$i = ($cond$i>>>0)<($__n>>>0);
 $$sroa$speculated = $cmp$i$i$i ? $cond$i : $__n;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$cond$i$i,$$sroa$speculated);
 return;
}
function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($this,$__s,$__n2) {
 $this = $this|0;
 $__s = $__s|0;
 $__n2 = $__n2|0;
 var $$$call6 = 0, $$call6 = 0, $$pre = 0, $$sroa$speculated9 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__size_$i$i = 0, $__size_$i3$i = 0, $call6 = 0, $cmp$i$i$i1 = 0, $cmp2 = 0, $cmp7 = 0, $cmp9 = 0, $cond$i = 0, $cond$i$i = 0, $conv$i$i = 0, $tobool$i$i = 0, $tobool$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__size_$i3$i = ((($this)) + 4|0);
  $1 = HEAP32[$__size_$i3$i>>2]|0;
  $cond$i = $1;
 } else {
  $conv$i$i = $0&255;
  $cond$i = $conv$i$i;
 }
 $cmp2 = ($__n2|0)==(-1);
 if ($cmp2) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
  $$pre = HEAP8[$__size_$i$i>>0]|0;
  $2 = $$pre;
 } else {
  $2 = $0;
 }
 $tobool$i$i$i = ($2<<24>>24)<(0);
 if ($tobool$i$i$i) {
  $3 = HEAP32[$this>>2]|0;
  $cond$i$i = $3;
 } else {
  $cond$i$i = $this;
 }
 $cmp$i$i$i1 = ($cond$i>>>0)>($__n2>>>0);
 $$sroa$speculated9 = $cmp$i$i$i1 ? $__n2 : $cond$i;
 $call6 = (__ZNSt3__211char_traitsIcE7compareEPKcS3_j($cond$i$i,$__s,$$sroa$speculated9)|0);
 $cmp7 = ($call6|0)==(0);
 if ($cmp7) {
  $cmp9 = ($cond$i>>>0)<($__n2>>>0);
  $$call6 = $cmp$i$i$i1&1;
  $$$call6 = $cmp9 ? -1 : $$call6;
  return ($$$call6|0);
 } else {
  return ($call6|0);
 }
 return (0)|0;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKc($this) {
 $this = $this|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZNSt3__211char_traitsIcE6lengthEPKc(7386)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKcj($this,$call);
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin$sroa$0$0 = 0, $__begin60$sroa$0$0 = 0, $__begin_$i51 = 0, $__begin_$i97 = 0;
 var $__end_$i = 0, $__end_$i52 = 0, $__end_$i57 = 0, $__end_$i60 = 0, $__end_$i63 = 0, $__end_$i69 = 0, $__end_$i78 = 0, $__end_$i87 = 0, $__end_$i91 = 0, $__end_$i96 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i64 = 0, $__first_$i$i$i$i70 = 0, $__first_$i$i$i$i79 = 0, $add = 0, $add$ptr$i90 = 0, $add$ptr21 = 0, $agg$tmp = 0, $arrayidx = 0, $cmp = 0;
 var $cmp$i = 0, $cmp$i53 = 0, $cmp$i58 = 0, $cmp$i65 = 0, $cmp$i71 = 0, $cmp$i80 = 0, $cmp$i88 = 0, $cmp1 = 0, $cmp33 = 0, $cmp4 = 0, $cmp45 = 0, $cmp54 = 0, $conv3 = 0, $conv34 = 0, $ehselector$slot$0 = 0, $exn$slot$0 = 0, $fix_forward_references = 0, $inc = 0, $incdec$ptr = 0, $incdec$ptr$i = 0;
 var $incdec$ptr$i62 = 0, $incdec$ptr$i66 = 0, $incdec$ptr$i72 = 0, $incdec$ptr$i77 = 0, $incdec$ptr$i81 = 0, $incdec$ptr41 = 0, $isdigit = 0, $isdigit49 = 0, $isdigittmp = 0, $isdigittmp48 = 0, $lnot$i = 0, $lnot$i95 = 0, $mul = 0, $ref$tmp = 0, $ref$tmp78 = 0, $retval$1 = 0, $sub$0 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0;
 var $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $t28$0 = 0, $template_param = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp = sp + 40|0;
 $ref$tmp78 = sp + 16|0;
 $agg$tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(84);
   if ($cmp1) {
    $arrayidx = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx>>0]|0;
    $cmp4 = ($1<<24>>24)==(95);
    $fix_forward_references = ((($db)) + 62|0);
    $template_param = ((($db)) + 32|0);
    do {
     if ($cmp4) {
      $2 = HEAP32[$template_param>>2]|0;
      $__end_$i = ((($db)) + 36|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($2|0)==($3|0);
      if ($cmp$i) {
       $retval$1 = $first;
       break L1;
      }
      $__begin_$i51 = ((($3)) + -16|0);
      $4 = HEAP32[$__begin_$i51>>2]|0;
      $__end_$i52 = ((($3)) + -12|0);
      $5 = HEAP32[$__end_$i52>>2]|0;
      $cmp$i53 = ($4|0)==($5|0);
      $add$ptr21 = ((($first)) + 2|0);
      if ($cmp$i53) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj3EEERAT__Kc($ref$tmp);
       $__end_$i78 = ((($db)) + 4|0);
       $11 = HEAP32[$__end_$i78>>2]|0;
       $__first_$i$i$i$i79 = ((($db)) + 8|0);
       $12 = HEAP32[$__first_$i$i$i$i79>>2]|0;
       $cmp$i80 = ($11>>>0)<($12>>>0);
       if ($cmp$i80) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($11,$ref$tmp);
        $13 = HEAP32[$__end_$i78>>2]|0;
        $incdec$ptr$i81 = ((($13)) + 24|0);
        HEAP32[$__end_$i78>>2] = $incdec$ptr$i81;
       } else {
        __THREW__ = 0;
        invoke_vii(64,($db|0),($ref$tmp|0));
        $14 = __THREW__; __THREW__ = 0;
        $15 = $14&1;
        if ($15) {
         $16 = ___cxa_find_matching_catch_2()|0;
         $17 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
         $ehselector$slot$0 = $17;$exn$slot$0 = $16;
         break;
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
       HEAP8[$fix_forward_references>>0] = 1;
       $retval$1 = $add$ptr21;
       break L1;
      }
      $6 = HEAP32[$4>>2]|0;
      $__end_$i60 = ((($4)) + 4|0);
      $7 = HEAP32[$__end_$i60>>2]|0;
      $__end_$i69 = ((($db)) + 4|0);
      $__first_$i$i$i$i70 = ((($db)) + 8|0);
      $__begin$sroa$0$0 = $6;
      while(1) {
       $lnot$i = ($__begin$sroa$0$0|0)==($7|0);
       if ($lnot$i) {
        $retval$1 = $add$ptr21;
        break L1;
       }
       $8 = HEAP32[$__end_$i69>>2]|0;
       $9 = HEAP32[$__first_$i$i$i$i70>>2]|0;
       $cmp$i71 = ($8|0)==($9|0);
       if ($cmp$i71) {
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($db,$__begin$sroa$0$0);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($8,$__begin$sroa$0$0);
        $10 = HEAP32[$__end_$i69>>2]|0;
        $incdec$ptr$i72 = ((($10)) + 24|0);
        HEAP32[$__end_$i69>>2] = $incdec$ptr$i72;
       }
       $incdec$ptr$i77 = ((($__begin$sroa$0$0)) + 24|0);
       $__begin$sroa$0$0 = $incdec$ptr$i77;
      }
     } else {
      $conv3 = $1 << 24 >> 24;
      $isdigittmp = (($conv3) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if (!($isdigit)) {
       $retval$1 = $first;
       break L1;
      }
      $incdec$ptr = ((($first)) + 2|0);
      $sub$0 = $isdigittmp;$t28$0 = $incdec$ptr;
      while(1) {
       $cmp33 = ($t28$0|0)==($last|0);
       $incdec$ptr41 = ((($t28$0)) + 1|0);
       if ($cmp33) {
        $retval$1 = $first;
        break L1;
       }
       $18 = HEAP8[$t28$0>>0]|0;
       $conv34 = $18 << 24 >> 24;
       $isdigittmp48 = (($conv34) + -48)|0;
       $isdigit49 = ($isdigittmp48>>>0)<(10);
       if (!($isdigit49)) {
        break;
       }
       $mul = ($sub$0*10)|0;
       $add = (($isdigittmp48) + ($mul))|0;
       $sub$0 = $add;$t28$0 = $incdec$ptr41;
      }
      $cmp45 = ($18<<24>>24)==(95);
      if (!($cmp45)) {
       $retval$1 = $first;
       break L1;
      }
      $19 = HEAP32[$template_param>>2]|0;
      $__end_$i87 = ((($db)) + 36|0);
      $20 = HEAP32[$__end_$i87>>2]|0;
      $cmp$i88 = ($19|0)==($20|0);
      if ($cmp$i88) {
       $retval$1 = $first;
       break L1;
      }
      $inc = (($sub$0) + 1)|0;
      $add$ptr$i90 = ((($20)) + -16|0);
      $__end_$i91 = ((($20)) + -12|0);
      $21 = HEAP32[$__end_$i91>>2]|0;
      $22 = HEAP32[$add$ptr$i90>>2]|0;
      $sub$ptr$sub$i = (($21) - ($22))|0;
      $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
      $cmp54 = ($inc>>>0)<($sub$ptr$div$i>>>0);
      $23 = $22;
      if (!($cmp54)) {
       ;HEAP32[$agg$tmp>>2]=0|0;HEAP32[$agg$tmp+4>>2]=0|0;HEAP32[$agg$tmp+8>>2]=0|0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($agg$tmp,$first,$incdec$ptr41);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp78,$agg$tmp);
       $__end_$i57 = ((($db)) + 4|0);
       $29 = HEAP32[$__end_$i57>>2]|0;
       $__first_$i$i$i$i = ((($db)) + 8|0);
       $30 = HEAP32[$__first_$i$i$i$i>>2]|0;
       $cmp$i58 = ($29>>>0)<($30>>>0);
       if ($cmp$i58) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($29,$ref$tmp78);
        $31 = HEAP32[$__end_$i57>>2]|0;
        $incdec$ptr$i = ((($31)) + 24|0);
        HEAP32[$__end_$i57>>2] = $incdec$ptr$i;
       } else {
        __THREW__ = 0;
        invoke_vii(64,($db|0),($ref$tmp78|0));
        $32 = __THREW__; __THREW__ = 0;
        $33 = $32&1;
        if ($33) {
         $34 = ___cxa_find_matching_catch_2()|0;
         $35 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp78);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
         $ehselector$slot$0 = $35;$exn$slot$0 = $34;
         break;
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp78);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
       HEAP8[$fix_forward_references>>0] = 1;
       $retval$1 = $incdec$ptr41;
       break L1;
      }
      $__begin_$i97 = (($23) + ($inc<<4)|0);
      $24 = HEAP32[$__begin_$i97>>2]|0;
      $__end_$i96 = (((($23) + ($inc<<4)|0)) + 4|0);
      $25 = HEAP32[$__end_$i96>>2]|0;
      $__end_$i63 = ((($db)) + 4|0);
      $__first_$i$i$i$i64 = ((($db)) + 8|0);
      $__begin60$sroa$0$0 = $24;
      while(1) {
       $lnot$i95 = ($__begin60$sroa$0$0|0)==($25|0);
       if ($lnot$i95) {
        $retval$1 = $incdec$ptr41;
        break L1;
       }
       $26 = HEAP32[$__end_$i63>>2]|0;
       $27 = HEAP32[$__first_$i$i$i$i64>>2]|0;
       $cmp$i65 = ($26|0)==($27|0);
       if ($cmp$i65) {
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($db,$__begin60$sroa$0$0);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($26,$__begin60$sroa$0$0);
        $28 = HEAP32[$__end_$i63>>2]|0;
        $incdec$ptr$i66 = ((($28)) + 24|0);
        HEAP32[$__end_$i63>>2] = $incdec$ptr$i66;
       }
       $incdec$ptr$i62 = ((($__begin60$sroa$0$0)) + 24|0);
       $__begin60$sroa$0$0 = $incdec$ptr$i62;
      }
     }
    } while(0);
    ___resumeException($exn$slot$0|0);
    // unreachable;
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i99 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $__begin_$i$i = 0, $__end_$i$i$i = 0, $__end_$i$i$i$i$i = 0, $__end_$i$i$i$i$i70 = 0, $__end_$i52 = 0, $__end_$i66 = 0, $__end_$i79 = 0, $__end_$i81 = 0, $__end_cap_$i$i$i$i$i = 0, $__end_cap_$i$i$i$i$i71 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i109 = 0, $__first_$i$i$i$i67 = 0;
 var $__first_$i$i$i$i82 = 0, $__i$0$i$i = 0, $__second_$i$i$i$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i72 = 0, $__size_$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0, $add$ptr$i101 = 0, $add$ptr$i57 = 0, $add$ptr$i63 = 0, $add$ptr$i80 = 0, $add$ptr$i95 = 0, $add$ptr3$i = 0, $add$ptr90 = 0, $agg$tmp = 0, $args = 0, $arrayidx$i = 0, $arrayidx$i$i = 0;
 var $arrayidx$i92 = 0, $call$i = 0, $call15 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i58 = 0, $cmp$i$i$i96 = 0, $cmp$i110 = 0, $cmp$i68 = 0, $cmp$i83 = 0, $cmp1 = 0, $cmp25 = 0, $cmp26 = 0, $cmp4 = 0, $cmp41 = 0, $cmp55 = 0, $cmp59 = 0, $cmp79 = 0, $cmp95 = 0;
 var $cond$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i6$i = 0, $cond$i7$i = 0, $conv$i$i = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0, $dec = 0, $ehselector$slot$0 = 0, $ehselector$slot$4 = 0, $exitcond$i$i = 0, $exn$slot$0 = 0, $exn$slot$4 = 0, $inc = 0, $inc$i$i = 0, $inc75 = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i60 = 0;
 var $incdec$ptr$i$i$i98 = 0, $incdec$ptr$i111 = 0, $incdec$ptr$i73 = 0, $incdec$ptr$i84 = 0, $k$0 = 0, $k1$0 = 0, $k53$0 = 0, $or$cond = 0, $ref$tmp = 0, $ref$tmp$i$i$i = 0, $ref$tmp103 = 0, $ref$tmp35 = 0, $ref$tmp65 = 0, $retval$3 = 0, $retval$sroa$0$0$$sroa_idx$i64 = 0, $retval$sroa$0$0$copyload$i116 = 0, $retval$sroa$0$0$copyload$i65117 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i55 = 0, $sub$ptr$lhs$cast = 0;
 var $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i54 = 0, $t$0 = 0, $tag_templates = 0, $template_param = 0, $tobool = 0, $tobool$i$i = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool19 = 0, $tobool30 = 0, $tobool6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $ref$tmp$i$i$i = sp + 72|0;
 $args = sp + 60|0;
 $ref$tmp = sp + 56|0;
 $ref$tmp35 = sp + 52|0;
 $ref$tmp65 = sp + 40|0;
 $ref$tmp103 = sp + 16|0;
 $agg$tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(73);
   if ($cmp1) {
    $tag_templates = ((($db)) + 61|0);
    $1 = HEAP8[$tag_templates>>0]|0;
    $tobool = ($1<<24>>24)==(0);
    $template_param = ((($db)) + 32|0);
    $$pre = ((($db)) + 36|0);
    L4: do {
     if (!($tobool)) {
      $2 = HEAP32[$$pre>>2]|0;
      $__begin_$i$i = ((($2)) + -16|0);
      $3 = HEAP32[$__begin_$i$i>>2]|0;
      $__end_$i$i$i = ((($2)) + -12|0);
      while(1) {
       $4 = HEAP32[$__end_$i$i$i>>2]|0;
       $cmp$i$i$i = ($4|0)==($3|0);
       if ($cmp$i$i$i) {
        break L4;
       }
       $incdec$ptr$i$i$i = ((($4)) + -16|0);
       HEAP32[$__end_$i$i$i>>2] = $incdec$ptr$i$i$i;
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($incdec$ptr$i$i$i);
      }
     }
    } while(0);
    $add$ptr = ((($first)) + 1|0);
    ;HEAP32[$args>>2]=0|0;HEAP32[$args+4>>2]=0|0;HEAP32[$args+8>>2]=0|0;
    $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc(5872)|0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($args,5872,$call$i);
    $__end_$i52 = ((($db)) + 4|0);
    $retval$sroa$0$0$$sroa_idx$i64 = ((($db)) + 12|0);
    $__size_$i$i = ((($args)) + 11|0);
    $__size_$i3$i = ((($args)) + 4|0);
    $__size_$i$i$i$i$i = ((($ref$tmp65)) + 11|0);
    $__size_$i3$i$i$i = ((($ref$tmp65)) + 4|0);
    $__first_$i$i$i$i = ((($db)) + 40|0);
    $t$0 = $add$ptr;
    L10: while(1) {
     $5 = HEAP8[$t$0>>0]|0;
     $cmp4 = ($5<<24>>24)==(69);
     if ($cmp4) {
      label = 50;
      break;
     }
     $6 = HEAP8[$tag_templates>>0]|0;
     $tobool6 = ($6<<24>>24)==(0);
     if (!($tobool6)) {
      $retval$sroa$0$0$copyload$i116 = HEAP32[$retval$sroa$0$0$$sroa_idx$i64>>2]|0;
      HEAP32[$ref$tmp>>2] = $retval$sroa$0$0$copyload$i116;
      $7 = HEAP32[$$pre>>2]|0;
      $8 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($7>>>0)<($8>>>0);
      if ($cmp$i) {
       __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2IS4_EERKNS1_IT_Lj4096EEE($ref$tmp$i$i$i,$ref$tmp);
       HEAP32[$7>>2] = 0;
       $__end_$i$i$i$i$i = ((($7)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i>>2] = 0;
       $__end_cap_$i$i$i$i$i = ((($7)) + 8|0);
       $9 = HEAP32[$ref$tmp$i$i$i>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
       $__second_$i$i$i$i$i$i$i = ((($7)) + 12|0);
       HEAP32[$__second_$i$i$i$i$i$i$i>>2] = $9;
       $10 = HEAP32[$$pre>>2]|0;
       $incdec$ptr$i = ((($10)) + 16|0);
       HEAP32[$$pre>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(69,($template_param|0),($ref$tmp|0));
       $11 = __THREW__; __THREW__ = 0;
       $12 = $11&1;
       if ($12) {
        label = 14;
        break;
       }
      }
     }
     $15 = HEAP32[$__end_$i52>>2]|0;
     $16 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i = (($15) - ($16))|0;
     $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
     __THREW__ = 0;
     $call15 = (invoke_iiii(70,($t$0|0),($last|0),($db|0))|0);
     $17 = __THREW__; __THREW__ = 0;
     $18 = $17&1;
     if ($18) {
      label = 20;
      break;
     }
     $19 = HEAP32[$__end_$i52>>2]|0;
     $20 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i54 = (($19) - ($20))|0;
     $sub$ptr$div$i55 = (($sub$ptr$sub$i54|0) / 24)&-1;
     $21 = HEAP8[$tag_templates>>0]|0;
     $tobool19 = ($21<<24>>24)==(0);
     L21: do {
      if (!($tobool19)) {
       $22 = HEAP32[$$pre>>2]|0;
       $add$ptr$i57 = ((($22)) + -16|0);
       $23 = $22;
       while(1) {
        $cmp$i$i$i58 = ($23|0)==($add$ptr$i57|0);
        if ($cmp$i$i$i58) {
         break L21;
        }
        $incdec$ptr$i$i$i60 = ((($23)) + -16|0);
        HEAP32[$$pre>>2] = $incdec$ptr$i$i$i60;
        __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($incdec$ptr$i$i$i60);
        $$pre$i = HEAP32[$$pre>>2]|0;
        $23 = $$pre$i;
       }
      }
     } while(0);
     $cmp25 = ($call15|0)==($t$0|0);
     $cmp26 = ($call15|0)==($last|0);
     $or$cond = $cmp25 | $cmp26;
     if ($or$cond) {
      label = 61;
      break;
     }
     $26 = HEAP8[$tag_templates>>0]|0;
     $tobool30 = ($26<<24>>24)==(0);
     L28: do {
      if ($tobool30) {
       $k53$0 = $sub$ptr$div$i;
      } else {
       $27 = HEAP32[$$pre>>2]|0;
       $retval$sroa$0$0$copyload$i65117 = HEAP32[$retval$sroa$0$0$$sroa_idx$i64>>2]|0;
       HEAP32[$ref$tmp35>>2] = $retval$sroa$0$0$copyload$i65117;
       $__end_$i66 = ((($27)) + -12|0);
       $28 = HEAP32[$__end_$i66>>2]|0;
       $__first_$i$i$i$i67 = ((($27)) + -8|0);
       $29 = HEAP32[$__first_$i$i$i$i67>>2]|0;
       $cmp$i68 = ($28>>>0)<($29>>>0);
       if ($cmp$i68) {
        HEAP32[$28>>2] = 0;
        $__end_$i$i$i$i$i70 = ((($28)) + 4|0);
        HEAP32[$__end_$i$i$i$i$i70>>2] = 0;
        $__end_cap_$i$i$i$i$i71 = ((($28)) + 8|0);
        HEAP32[$__end_cap_$i$i$i$i$i71>>2] = 0;
        $__second_$i$i$i$i$i$i$i72 = ((($28)) + 12|0);
        HEAP32[$__second_$i$i$i$i$i$i$i72>>2] = $retval$sroa$0$0$copyload$i65117;
        $30 = HEAP32[$__end_$i66>>2]|0;
        $incdec$ptr$i73 = ((($30)) + 16|0);
        HEAP32[$__end_$i66>>2] = $incdec$ptr$i73;
       } else {
        $add$ptr$i63 = ((($27)) + -16|0);
        __THREW__ = 0;
        invoke_vii(71,($add$ptr$i63|0),($ref$tmp35|0));
        $31 = __THREW__; __THREW__ = 0;
        $32 = $31&1;
        if ($32) {
         label = 28;
         break L10;
        }
       }
       $k$0 = $sub$ptr$div$i;
       while(1) {
        $cmp41 = ($k$0>>>0)<($sub$ptr$div$i55>>>0);
        if (!($cmp41)) {
         $k53$0 = $sub$ptr$div$i;
         break L28;
        }
        $35 = HEAP32[$$pre>>2]|0;
        $__end_$i79 = ((($35)) + -12|0);
        $36 = HEAP32[$__end_$i79>>2]|0;
        $37 = HEAP32[$db>>2]|0;
        $arrayidx$i = (($37) + (($k$0*24)|0)|0);
        $__end_$i81 = ((($36)) + -12|0);
        $38 = HEAP32[$__end_$i81>>2]|0;
        $__first_$i$i$i$i82 = ((($36)) + -8|0);
        $39 = HEAP32[$__first_$i$i$i$i82>>2]|0;
        $cmp$i83 = ($38|0)==($39|0);
        if ($cmp$i83) {
         $add$ptr$i80 = ((($36)) + -16|0);
         __THREW__ = 0;
         invoke_vii(72,($add$ptr$i80|0),($arrayidx$i|0));
         $43 = __THREW__; __THREW__ = 0;
         $44 = $43&1;
         if ($44) {
          label = 34;
          break L10;
         }
        } else {
         __THREW__ = 0;
         invoke_vii(66,($38|0),($arrayidx$i|0));
         $40 = __THREW__; __THREW__ = 0;
         $41 = $40&1;
         if ($41) {
          label = 34;
          break L10;
         }
         $42 = HEAP32[$__end_$i81>>2]|0;
         $incdec$ptr$i84 = ((($42)) + 24|0);
         HEAP32[$__end_$i81>>2] = $incdec$ptr$i84;
        }
        $inc = (($k$0) + 1)|0;
        $k$0 = $inc;
       }
      }
     } while(0);
     while(1) {
      $cmp55 = ($k53$0>>>0)<($sub$ptr$div$i55>>>0);
      if (!($cmp55)) {
       $k1$0 = $sub$ptr$div$i55;
       break;
      }
      $47 = HEAP8[$__size_$i$i>>0]|0;
      $tobool$i$i = ($47<<24>>24)<(0);
      $48 = HEAP32[$__size_$i3$i>>2]|0;
      $conv$i$i = $47&255;
      $cond$i = $tobool$i$i ? $48 : $conv$i$i;
      $cmp59 = ($cond$i>>>0)>(1);
      if ($cmp59) {
       __THREW__ = 0;
       (invoke_iii(54,($args|0),(6060|0))|0);
       $49 = __THREW__; __THREW__ = 0;
       $50 = $49&1;
       if ($50) {
        label = 38;
        break L10;
       }
      }
      $53 = HEAP32[$db>>2]|0;
      $arrayidx$i92 = (($53) + (($k53$0*24)|0)|0);
      __THREW__ = 0;
      invoke_vii(55,($ref$tmp65|0),($arrayidx$i92|0));
      $54 = __THREW__; __THREW__ = 0;
      $55 = $54&1;
      if ($55) {
       label = 42;
       break L10;
      }
      $56 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
      $tobool$i$i$i$i$i = ($56<<24>>24)<(0);
      $57 = HEAP32[$ref$tmp65>>2]|0;
      $cond$i$i$i$i = $tobool$i$i$i$i$i ? $57 : $ref$tmp65;
      $58 = HEAP32[$__size_$i3$i$i$i>>2]|0;
      $conv$i$i$i$i = $56&255;
      $cond$i$i$i = $tobool$i$i$i$i$i ? $58 : $conv$i$i$i$i;
      __THREW__ = 0;
      (invoke_iiii(47,($args|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
      $59 = __THREW__; __THREW__ = 0;
      $60 = $59&1;
      if ($60) {
       label = 43;
       break L10;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp65);
      $inc75 = (($k53$0) + 1)|0;
      $k53$0 = $inc75;
     }
     while(1) {
      $cmp79 = ($k1$0|0)==($sub$ptr$div$i|0);
      if ($cmp79) {
       $t$0 = $call15;
       continue L10;
      }
      $65 = HEAP32[$__end_$i52>>2]|0;
      $add$ptr$i95 = ((($65)) + -24|0);
      $66 = $65;
      while(1) {
       $cmp$i$i$i96 = ($66|0)==($add$ptr$i95|0);
       if ($cmp$i$i$i96) {
        break;
       }
       $incdec$ptr$i$i$i98 = ((($66)) + -24|0);
       HEAP32[$__end_$i52>>2] = $incdec$ptr$i$i$i98;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i98);
       $$pre$i99 = HEAP32[$__end_$i52>>2]|0;
       $66 = $$pre$i99;
      }
      $dec = (($k1$0) + -1)|0;
      $k1$0 = $dec;
     }
    }
    do {
     if ((label|0) == 14) {
      $13 = ___cxa_find_matching_catch_2()|0;
      $14 = tempRet0;
      $ehselector$slot$4 = $14;$exn$slot$4 = $13;
     }
     else if ((label|0) == 20) {
      $24 = ___cxa_find_matching_catch_2()|0;
      $25 = tempRet0;
      $ehselector$slot$4 = $25;$exn$slot$4 = $24;
     }
     else if ((label|0) == 28) {
      $33 = ___cxa_find_matching_catch_2()|0;
      $34 = tempRet0;
      $ehselector$slot$4 = $34;$exn$slot$4 = $33;
     }
     else if ((label|0) == 34) {
      $45 = ___cxa_find_matching_catch_2()|0;
      $46 = tempRet0;
      $ehselector$slot$4 = $46;$exn$slot$4 = $45;
     }
     else if ((label|0) == 38) {
      $51 = ___cxa_find_matching_catch_2()|0;
      $52 = tempRet0;
      $ehselector$slot$4 = $52;$exn$slot$4 = $51;
     }
     else if ((label|0) == 42) {
      $61 = ___cxa_find_matching_catch_2()|0;
      $62 = tempRet0;
      $ehselector$slot$0 = $62;$exn$slot$0 = $61;
      label = 44;
     }
     else if ((label|0) == 43) {
      $63 = ___cxa_find_matching_catch_2()|0;
      $64 = tempRet0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp65);
      $ehselector$slot$0 = $64;$exn$slot$0 = $63;
      label = 44;
     }
     else if ((label|0) == 50) {
      $add$ptr90 = ((($t$0)) + 1|0);
      $67 = HEAP8[$__size_$i$i>>0]|0;
      $tobool$i$i$i = ($67<<24>>24)<(0);
      $68 = HEAP32[$args>>2]|0;
      $69 = HEAP32[$__size_$i3$i>>2]|0;
      $conv$i$i$i = $67&255;
      $cond$i7$i = $tobool$i$i$i ? $68 : $args;
      $cond$i6$i = $tobool$i$i$i ? $69 : $conv$i$i$i;
      $add$ptr$i101 = (($cond$i7$i) + ($cond$i6$i)|0);
      $add$ptr3$i = ((($add$ptr$i101)) + -1|0);
      $70 = HEAP8[$add$ptr3$i>>0]|0;
      $cmp95 = ($70<<24>>24)==(62);
      if ($cmp95) {
       __THREW__ = 0;
       (invoke_iii(54,($args|0),(7380|0))|0);
       $75 = __THREW__; __THREW__ = 0;
       $76 = $75&1;
       if ($76) {
        label = 52;
       }
      } else {
       __THREW__ = 0;
       (invoke_iii(54,($args|0),(5874|0))|0);
       $71 = __THREW__; __THREW__ = 0;
       $72 = $71&1;
       if ($72) {
        label = 52;
       }
      }
      if ((label|0) == 52) {
       $73 = ___cxa_find_matching_catch_2()|0;
       $74 = tempRet0;
       $ehselector$slot$4 = $74;$exn$slot$4 = $73;
       break;
      }
      ;HEAP32[$agg$tmp>>2]=HEAP32[$args>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$args+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$args+8>>2]|0;
      $__i$0$i$i = 0;
      while(1) {
       $exitcond$i$i = ($__i$0$i$i|0)==(3);
       if ($exitcond$i$i) {
        break;
       }
       $arrayidx$i$i = (($args) + ($__i$0$i$i<<2)|0);
       HEAP32[$arrayidx$i$i>>2] = 0;
       $inc$i$i = (($__i$0$i$i) + 1)|0;
       $__i$0$i$i = $inc$i$i;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp103,$agg$tmp);
      $77 = HEAP32[$__end_$i52>>2]|0;
      $__first_$i$i$i$i109 = ((($db)) + 8|0);
      $78 = HEAP32[$__first_$i$i$i$i109>>2]|0;
      $cmp$i110 = ($77>>>0)<($78>>>0);
      if ($cmp$i110) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($77,$ref$tmp103);
       $79 = HEAP32[$__end_$i52>>2]|0;
       $incdec$ptr$i111 = ((($79)) + 24|0);
       HEAP32[$__end_$i52>>2] = $incdec$ptr$i111;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp103|0));
       $80 = __THREW__; __THREW__ = 0;
       $81 = $80&1;
       if ($81) {
        $82 = ___cxa_find_matching_catch_2()|0;
        $83 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp103);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
        $ehselector$slot$4 = $83;$exn$slot$4 = $82;
        break;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp103);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
      $retval$3 = $add$ptr90;
      break L1;
     }
     else if ((label|0) == 61) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
      $retval$3 = $first;
      break L1;
     }
    } while(0);
    if ((label|0) == 44) {
     $ehselector$slot$4 = $ehselector$slot$0;$exn$slot$4 = $exn$slot$0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
    ___resumeException($exn$slot$4|0);
    // unreachable;
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $__i$0$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $arrayidx$i$i$i = 0, $call3$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $exitcond$i$i$i = 0, $inc$i$i$i = 0, $second = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $second = ((($this)) + 12|0);
 $__size_$i$i$i$i$i = ((($second)) + 11|0);
 $0 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
 $tobool$i$i$i$i$i = ($0<<24>>24)<(0);
 $1 = HEAP32[$second>>2]|0;
 $cond$i$i$i$i = $tobool$i$i$i$i$i ? $1 : $second;
 $__size_$i3$i$i$i = ((($this)) + 16|0);
 $2 = HEAP32[$__size_$i3$i$i$i>>2]|0;
 $conv$i$i$i$i = $0&255;
 $cond$i$i$i = $tobool$i$i$i$i$i ? $2 : $conv$i$i$i$i;
 $call3$i$i = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$cond$i$i$i$i,$cond$i$i$i)|0);
 ;HEAP32[$agg$result>>2]=HEAP32[$this>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$this+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$this+8>>2]|0;
 $__i$0$i$i$i = 0;
 while(1) {
  $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
  if ($exitcond$i$i$i) {
   break;
  }
  $arrayidx$i$i$i = (($this) + ($__i$0$i$i$i<<2)|0);
  HEAP32[$arrayidx$i$i$i>>2] = 0;
  $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
  $__i$0$i$i$i = $inc$i$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i29 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i30 = 0, $__i$0$i$i = 0, $__size_$i$i$i = 0, $__size_$i3$i$i = 0;
 var $add = 0, $add$ptr = 0, $add$ptr32 = 0, $agg$tmp = 0, $arrayidx$i$i = 0, $c$0 = 0, $c$0$in = 0, $call$i = 0, $call3$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i27 = 0, $cmp$i31 = 0, $cmp1 = 0, $cmp10 = 0, $cmp12 = 0, $cmp4$i = 0, $cond$i$i = 0, $conv = 0, $conv$i$i$i = 0;
 var $conv5 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $exitcond$i$i = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $inc$i$i = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i32 = 0, $isdigit = 0, $isdigit26 = 0, $isdigittmp = 0, $isdigittmp25 = 0, $mul = 0, $n$0 = 0, $r = 0, $ref$tmp = 0, $ref$tmp16 = 0, $ref$tmp22 = 0;
 var $retval$0$i = 0, $retval$3 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $tobool$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $r = sp + 76|0;
 $ref$tmp = sp + 64|0;
 $ref$tmp16 = sp + 40|0;
 $ref$tmp22 = sp + 16|0;
 $agg$tmp = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$3 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $isdigittmp = (($conv) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $add$ptr = ((($first)) + 1|0);
    $cmp1 = ($add$ptr|0)==($last|0);
    if ($cmp1) {
     $retval$3 = $first;
    } else {
     $c$0$in = $add$ptr;$n$0 = $isdigittmp;
     while(1) {
      $c$0 = HEAP8[$c$0$in>>0]|0;
      $conv5 = $c$0 << 24 >> 24;
      $isdigittmp25 = (($conv5) + -48)|0;
      $isdigit26 = ($isdigittmp25>>>0)<(10);
      if (!($isdigit26)) {
       break;
      }
      $incdec$ptr = ((($c$0$in)) + 1|0);
      $cmp10 = ($incdec$ptr|0)==($last|0);
      if ($cmp10) {
       $retval$3 = $first;
       break L1;
      }
      $mul = ($n$0*10)|0;
      $add = (($isdigittmp25) + ($mul))|0;
      $c$0$in = $incdec$ptr;$n$0 = $add;
     }
     $sub$ptr$lhs$cast = $last;
     $sub$ptr$rhs$cast = $c$0$in;
     $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
     $cmp12 = ($sub$ptr$sub>>>0)<($n$0>>>0);
     if ($cmp12) {
      $retval$3 = $first;
     } else {
      ;HEAP32[$r>>2]=0|0;HEAP32[$r+4>>2]=0|0;HEAP32[$r+8>>2]=0|0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($r,$c$0$in,$n$0);
      __THREW__ = 0;
      invoke_viii(61,($ref$tmp|0),($r|0),10);
      $1 = __THREW__; __THREW__ = 0;
      $2 = $1&1;
      L10: do {
       if ($2) {
        $20 = ___cxa_find_matching_catch_2()|0;
        $21 = tempRet0;
        $ehselector$slot$1 = $21;$exn$slot$1 = $20;
       } else {
        __THREW__ = 0;
        $call$i = (invoke_ii(58,(7347|0))|0);
        $3 = __THREW__; __THREW__ = 0;
        $4 = $3&1;
        if ($4) {
         $11 = ___cxa_find_matching_catch_3(0|0)|0;
         $12 = tempRet0;
         ___clang_call_terminate($11);
         // unreachable;
        }
        $__size_$i$i$i = ((($ref$tmp)) + 11|0);
        $5 = HEAP8[$__size_$i$i$i>>0]|0;
        $tobool$i$i$i = ($5<<24>>24)<(0);
        $__size_$i3$i$i = ((($ref$tmp)) + 4|0);
        $6 = HEAP32[$__size_$i3$i$i>>2]|0;
        $conv$i$i$i = $5&255;
        $cond$i$i = $tobool$i$i$i ? $6 : $conv$i$i$i;
        $cmp$i = ($call$i|0)==($cond$i$i|0);
        do {
         if ($cmp$i) {
          __THREW__ = 0;
          $call3$i = (invoke_iiii(59,($ref$tmp|0),(7347|0),($call$i|0))|0);
          $7 = __THREW__; __THREW__ = 0;
          $8 = $7&1;
          if ($8) {
           $9 = ___cxa_find_matching_catch_3(0|0)|0;
           $10 = tempRet0;
           ___clang_call_terminate($9);
           // unreachable;
          } else {
           $cmp4$i = ($call3$i|0)==(0);
           $retval$0$i = $cmp4$i;
           break;
          }
         } else {
          $retval$0$i = 0;
         }
        } while(0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
        L22: do {
         if ($retval$0$i) {
          __THREW__ = 0;
          invoke_vi(73,($ref$tmp16|0));
          $13 = __THREW__; __THREW__ = 0;
          $14 = $13&1;
          do {
           if ($14) {
            $22 = ___cxa_find_matching_catch_2()|0;
            $23 = tempRet0;
            $ehselector$slot$0 = $23;$exn$slot$0 = $22;
           } else {
            $__end_$i = ((($db)) + 4|0);
            $15 = HEAP32[$__end_$i>>2]|0;
            $__first_$i$i$i$i = ((($db)) + 8|0);
            $16 = HEAP32[$__first_$i$i$i$i>>2]|0;
            $cmp$i27 = ($15>>>0)<($16>>>0);
            if ($cmp$i27) {
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($15,$ref$tmp16);
             $17 = HEAP32[$__end_$i>>2]|0;
             $incdec$ptr$i = ((($17)) + 24|0);
             HEAP32[$__end_$i>>2] = $incdec$ptr$i;
            } else {
             __THREW__ = 0;
             invoke_vii(64,($db|0),($ref$tmp16|0));
             $18 = __THREW__; __THREW__ = 0;
             $19 = $18&1;
             if ($19) {
              $24 = ___cxa_find_matching_catch_2()|0;
              $25 = tempRet0;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp16);
              $ehselector$slot$0 = $25;$exn$slot$0 = $24;
              break;
             }
            }
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp16);
            break L22;
           }
          } while(0);
          $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
          break L10;
         } else {
          ;HEAP32[$agg$tmp>>2]=HEAP32[$r>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$r+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$r+8>>2]|0;
          $__i$0$i$i = 0;
          while(1) {
           $exitcond$i$i = ($__i$0$i$i|0)==(3);
           if ($exitcond$i$i) {
            break;
           }
           $arrayidx$i$i = (($r) + ($__i$0$i$i<<2)|0);
           HEAP32[$arrayidx$i$i>>2] = 0;
           $inc$i$i = (($__i$0$i$i) + 1)|0;
           $__i$0$i$i = $inc$i$i;
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp22,$agg$tmp);
          $__end_$i29 = ((($db)) + 4|0);
          $26 = HEAP32[$__end_$i29>>2]|0;
          $__first_$i$i$i$i30 = ((($db)) + 8|0);
          $27 = HEAP32[$__first_$i$i$i$i30>>2]|0;
          $cmp$i31 = ($26>>>0)<($27>>>0);
          if ($cmp$i31) {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($26,$ref$tmp22);
           $28 = HEAP32[$__end_$i29>>2]|0;
           $incdec$ptr$i32 = ((($28)) + 24|0);
           HEAP32[$__end_$i29>>2] = $incdec$ptr$i32;
          } else {
           __THREW__ = 0;
           invoke_vii(64,($db|0),($ref$tmp22|0));
           $29 = __THREW__; __THREW__ = 0;
           $30 = $29&1;
           if ($30) {
            $31 = ___cxa_find_matching_catch_2()|0;
            $32 = tempRet0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp22);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
            $ehselector$slot$1 = $32;$exn$slot$1 = $31;
            break L10;
           }
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp22);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
         }
        } while(0);
        $add$ptr32 = (($c$0$in) + ($n$0)|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r);
        $retval$3 = $add$ptr32;
        break L1;
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r);
      ___resumeException($exn$slot$1|0);
      // unreachable;
     }
    }
   } else {
    $retval$3 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $__size_$i$i = 0, $__size_$i3$i = 0, $add = 0, $arrayidx$i$i = 0, $call1 = 0, $cond$i = 0, $cond$i$i = 0;
 var $conv$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $tobool$i$i = 0, $tobool$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 $__size_$i$i = ((($__lhs)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 $__size_$i3$i = ((($__lhs)) + 4|0);
 $1 = HEAP32[$__size_$i3$i>>2]|0;
 $conv$i$i = $0&255;
 $cond$i = $tobool$i$i ? $1 : $conv$i$i;
 __THREW__ = 0;
 $call1 = (invoke_ii(58,($__rhs|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP8[$__size_$i$i>>0]|0;
  $tobool$i$i$i = ($4<<24>>24)<(0);
  $5 = HEAP32[$__lhs>>2]|0;
  $cond$i$i = $tobool$i$i$i ? $5 : $__lhs;
  $add = (($cond$i) + ($call1))|0;
  __THREW__ = 0;
  invoke_viiii(74,($agg$result|0),($cond$i$i|0),($cond$i|0),($add|0));
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   (invoke_iiii(47,($agg$result|0),($__rhs|0),($call1|0))|0);
   $8 = __THREW__; __THREW__ = 0;
   $9 = $8&1;
   if (!($9)) {
    return;
   }
  }
 }
 $10 = ___cxa_find_matching_catch_2()|0;
 $11 = tempRet0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$result);
 ___resumeException($10|0);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $__i$0$i$i = 0, $__i$0$i$i2 = 0, $arrayidx$i$i = 0, $arrayidx$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i3 = 0, $inc$i$i = 0, $inc$i$i6 = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=HEAP32[$f>>2]|0;HEAP32[$this+4>>2]=HEAP32[$f+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$f+8>>2]|0;
 $__i$0$i$i2 = 0;
 while(1) {
  $exitcond$i$i3 = ($__i$0$i$i2|0)==(3);
  if ($exitcond$i$i3) {
   break;
  }
  $arrayidx$i$i5 = (($f) + ($__i$0$i$i2<<2)|0);
  HEAP32[$arrayidx$i$i5>>2] = 0;
  $inc$i$i6 = (($__i$0$i$i2) + 1)|0;
  $__i$0$i$i2 = $inc$i$i6;
 }
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i$i15 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i1$i$i$i$i4 = 0, $__size_$i2$i$i$i$i = 0, $__size_$i2$i$i$i$i7 = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i$i18 = 0;
 var $exitcond$i$i$i$i = 0, $exitcond$i$i$i$i16 = 0, $inc$i$i$i$i = 0, $inc$i$i$i$i19 = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp$i$i$i$i1 = 0, $ref$tmp4$i$i$i$i = 0, $ref$tmp4$i$i$i$i2 = 0, $second = 0, $second3 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp$i$i$i$i1 = sp + 3|0;
 $ref$tmp4$i$i$i$i2 = sp + 2|0;
 $ref$tmp$i$i$i$i = sp + 1|0;
 $ref$tmp4$i$i$i$i = sp;
 $__size_$i1$i$i$i$i = ((($this)) + 11|0);
 $1 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
 $tobool$i$i$i$i$i = ($1<<24>>24)<(0);
 if ($tobool$i$i$i$i$i) {
  $2 = HEAP32[$this>>2]|0;
  HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($2,$ref$tmp$i$i$i$i);
  $__size_$i2$i$i$i$i = ((($this)) + 4|0);
  HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
 } else {
  HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($this,$ref$tmp4$i$i$i$i);
  HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
 }
 __THREW__ = 0;
 invoke_vi(51,($this|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch_3(0|0)|0;
  $6 = tempRet0;
  ___clang_call_terminate($5);
  // unreachable;
 }
 ;HEAP32[$this>>2]=HEAP32[$0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$0+8>>2]|0;
 $__i$0$i$i$i$i = 0;
 while(1) {
  $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
  if ($exitcond$i$i$i$i) {
   break;
  }
  $arrayidx$i$i$i$i = (($0) + ($__i$0$i$i$i$i<<2)|0);
  HEAP32[$arrayidx$i$i$i$i>>2] = 0;
  $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
  $__i$0$i$i$i$i = $inc$i$i$i$i;
 }
 $second = ((($this)) + 12|0);
 $second3 = ((($0)) + 12|0);
 $__size_$i1$i$i$i$i4 = ((($second)) + 11|0);
 $7 = HEAP8[$__size_$i1$i$i$i$i4>>0]|0;
 $tobool$i$i$i$i$i5 = ($7<<24>>24)<(0);
 if ($tobool$i$i$i$i$i5) {
  $8 = HEAP32[$second>>2]|0;
  HEAP8[$ref$tmp$i$i$i$i1>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($8,$ref$tmp$i$i$i$i1);
  $__size_$i2$i$i$i$i7 = ((($this)) + 16|0);
  HEAP32[$__size_$i2$i$i$i$i7>>2] = 0;
 } else {
  HEAP8[$ref$tmp4$i$i$i$i2>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($second,$ref$tmp4$i$i$i$i2);
  HEAP8[$__size_$i1$i$i$i$i4>>0] = 0;
 }
 __THREW__ = 0;
 invoke_vi(51,($second|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_3(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 }
 ;HEAP32[$second>>2]=HEAP32[$second3>>2]|0;HEAP32[$second+4>>2]=HEAP32[$second3+4>>2]|0;HEAP32[$second+8>>2]=HEAP32[$second3+8>>2]|0;
 $__i$0$i$i$i$i15 = 0;
 while(1) {
  $exitcond$i$i$i$i16 = ($__i$0$i$i$i$i15|0)==(3);
  if ($exitcond$i$i$i$i16) {
   break;
  }
  $arrayidx$i$i$i$i18 = (($second3) + ($__i$0$i$i$i$i15<<2)|0);
  HEAP32[$arrayidx$i$i$i$i18>>2] = 0;
  $inc$i$i$i$i19 = (($__i$0$i$i$i$i15) + 1)|0;
  $__i$0$i$i$i$i15 = $inc$i$i$i$i19;
 }
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $__i$0$i$i = 0, $__i$0$i$i3 = 0, $arrayidx$i$i = 0, $arrayidx$i$i6 = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $inc$i$i = 0, $inc$i$i7 = 0, $second = 0, $second3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=HEAP32[$0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$0+8>>2]|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($0) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 $second = ((($this)) + 12|0);
 $second3 = ((($0)) + 12|0);
 ;HEAP32[$second>>2]=HEAP32[$second3>>2]|0;HEAP32[$second+4>>2]=HEAP32[$second3+4>>2]|0;HEAP32[$second+8>>2]=HEAP32[$second3+8>>2]|0;
 $__i$0$i$i3 = 0;
 while(1) {
  $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
  if ($exitcond$i$i4) {
   break;
  }
  $arrayidx$i$i6 = (($second3) + ($__i$0$i$i3<<2)|0);
  HEAP32[$arrayidx$i$i6>>2] = 0;
  $inc$i$i7 = (($__i$0$i$i3) + 1)|0;
  $__i$0$i$i3 = $inc$i$i7;
 }
 return;
}
function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$sroa$speculated$call$i = 0, $$sroa$speculated$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__end_ = 0, $__end_$i = 0, $__first_$i$i$i$i$i$i = 0, $__second_$i$i$i = 0, $__v = 0, $add = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $div$i = 0, $incdec$ptr = 0;
 var $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i6 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__v = sp;
 $__second_$i$i$i = ((($this)) + 12|0);
 $__end_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__end_$i>>2]|0;
 $1 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i = (($0) - ($1))|0;
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
 $add = (($sub$ptr$div$i) + 1)|0;
 $call$i = (__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp$i = ($call$i>>>0)<($add>>>0);
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__first_$i$i$i$i$i$i = ((($this)) + 8|0);
 $2 = HEAP32[$__first_$i$i$i$i$i$i>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i$i$i = (($2) - ($3))|0;
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 24)&-1;
 $div$i = $call$i >>> 1;
 $cmp3$i = ($sub$ptr$div$i$i$i>>>0)<($div$i>>>0);
 $mul$i = $sub$ptr$div$i$i$i << 1;
 $cmp$i$i$i$i = ($mul$i>>>0)<($add>>>0);
 $$sroa$speculated$i = $cmp$i$i$i$i ? $add : $mul$i;
 $$sroa$speculated$call$i = $cmp3$i ? $$sroa$speculated$i : $call$i;
 $4 = HEAP32[$__end_$i>>2]|0;
 $sub$ptr$sub$i5 = (($4) - ($3))|0;
 $sub$ptr$div$i6 = (($sub$ptr$sub$i5|0) / 24)&-1;
 __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v,$$sroa$speculated$call$i,$sub$ptr$div$i6,$__second_$i$i$i);
 $__end_ = ((($__v)) + 8|0);
 $5 = HEAP32[$__end_>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5,$__x);
 $incdec$ptr = ((($5)) + 24|0);
 HEAP32[$__end_>>2] = $incdec$ptr;
 __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
 __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i87 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i$i$i$i = 0, $__end_$i$i$i$i$i = 0, $__end_$i67 = 0, $__end_$i77 = 0, $__end_cap_$i$i$i$i$i = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i7$i$i$i$i = 0, $__first_$i$i$i8$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i = 0, $__second_$i$i$i9$i$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i93 = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i98 = 0, $add$ptr$i = 0, $add$ptr$i71 = 0;
 var $add$ptr$i73 = 0, $add$ptr$i81 = 0, $add$ptr$i83 = 0, $call = 0, $call14 = 0, $call29 = 0, $call51 = 0, $call59 = 0, $call9 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i84 = 0, $cmp$i68 = 0, $cmp1 = 0, $cmp10 = 0, $cmp15 = 0, $cmp17 = 0, $cmp19 = 0, $cmp30 = 0;
 var $cmp34 = 0, $cmp4 = 0, $cmp52 = 0, $cmp54 = 0, $cmp57 = 0, $cmp60 = 0, $cmp64 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i97 = 0, $cond$i$i$i100 = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i99 = 0, $conv3 = 0, $ehselector$slot$0 = 0, $exn$slot$0 = 0, $first$call = 0, $first$call9 = 0, $first45 = 0, $first77 = 0;
 var $incdec$ptr = 0, $incdec$ptr$first = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i86 = 0, $or$cond = 0, $ref$tmp = 0, $ref$tmp26 = 0, $retval$3 = 0, $retval$sroa$0$0$$sroa_idx$i = 0, $retval$sroa$0$0$copyload$i103 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i79 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i78 = 0, $subs = 0, $tmp = 0;
 var $tmp68 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $ref$tmp = sp + 32|0;
 $ref$tmp26 = sp + 24|0;
 $tmp = sp + 12|0;
 $tmp68 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(76);
   $incdec$ptr = ((($first)) + 1|0);
   $incdec$ptr$first = $cmp1 ? $incdec$ptr : $first;
   $1 = HEAP8[$incdec$ptr$first>>0]|0;
   $conv3 = $1 << 24 >> 24;
   switch ($conv3|0) {
   case 78:  {
    $call = (__ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr$first,$last,$db)|0);
    $cmp4 = ($call|0)==($incdec$ptr$first|0);
    $first$call = $cmp4 ? $first : $call;
    $retval$3 = $first$call;
    break L1;
    break;
   }
   case 90:  {
    $call9 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr$first,$last,$db)|0);
    $cmp10 = ($call9|0)==($incdec$ptr$first|0);
    $first$call9 = $cmp10 ? $first : $call9;
    $retval$3 = $first$call9;
    break L1;
    break;
   }
   default: {
    $call14 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr$first,$last,$db)|0);
    $cmp15 = ($call14|0)==($incdec$ptr$first|0);
    do {
     if ($cmp15) {
      $call51 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr$first,$last,$db)|0);
      $cmp52 = ($call51|0)==($incdec$ptr$first|0);
      $cmp54 = ($call51|0)==($last|0);
      $or$cond = $cmp52 | $cmp54;
      if ($or$cond) {
       $retval$3 = $first;
       break L1;
      }
      $28 = HEAP8[$call51>>0]|0;
      $cmp57 = ($28<<24>>24)==(73);
      if (!($cmp57)) {
       $retval$3 = $first;
       break L1;
      }
      $call59 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call51,$last,$db)|0);
      $cmp60 = ($call59|0)==($call51|0);
      if ($cmp60) {
       $retval$3 = $first;
       break L1;
      }
      $__end_$i77 = ((($db)) + 4|0);
      $29 = HEAP32[$__end_$i77>>2]|0;
      $30 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i78 = (($29) - ($30))|0;
      $sub$ptr$div$i79 = (($sub$ptr$sub$i78|0) / 24)&-1;
      $cmp64 = ($sub$ptr$div$i79>>>0)<(2);
      if ($cmp64) {
       $retval$3 = $first;
       break L1;
      }
      $31 = $29;
      $add$ptr$i81 = ((($31)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp68,$add$ptr$i81);
      $32 = HEAP32[$__end_$i77>>2]|0;
      $add$ptr$i83 = ((($32)) + -24|0);
      $33 = $32;
      while(1) {
       $cmp$i$i$i84 = ($33|0)==($add$ptr$i83|0);
       if ($cmp$i$i$i84) {
        break;
       }
       $incdec$ptr$i$i$i86 = ((($33)) + -24|0);
       HEAP32[$__end_$i77>>2] = $incdec$ptr$i$i$i86;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i86);
       $$pre$i87 = HEAP32[$__end_$i77>>2]|0;
       $33 = $$pre$i87;
      }
      $first77 = ((($32)) + -48|0);
      $__size_$i$i$i$i$i93 = ((($tmp68)) + 11|0);
      $34 = HEAP8[$__size_$i$i$i$i$i93>>0]|0;
      $tobool$i$i$i$i$i94 = ($34<<24>>24)<(0);
      $35 = HEAP32[$tmp68>>2]|0;
      $cond$i$i$i$i97 = $tobool$i$i$i$i$i94 ? $35 : $tmp68;
      $__size_$i3$i$i$i98 = ((($tmp68)) + 4|0);
      $36 = HEAP32[$__size_$i3$i$i$i98>>2]|0;
      $conv$i$i$i$i99 = $34&255;
      $cond$i$i$i100 = $tobool$i$i$i$i$i94 ? $36 : $conv$i$i$i$i99;
      __THREW__ = 0;
      (invoke_iiii(47,($first77|0),($cond$i$i$i$i97|0),($cond$i$i$i100|0))|0);
      $37 = __THREW__; __THREW__ = 0;
      $38 = $37&1;
      if ($38) {
       $39 = ___cxa_find_matching_catch_2()|0;
       $40 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp68);
       $ehselector$slot$0 = $40;$exn$slot$0 = $39;
       break;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp68);
       $retval$3 = $call59;
       break L1;
      }
     } else {
      $cmp17 = ($call14|0)==($last|0);
      if ($cmp17) {
       $retval$3 = $last;
       break L1;
      }
      $2 = HEAP8[$call14>>0]|0;
      $cmp19 = ($2<<24>>24)==(73);
      if (!($cmp19)) {
       $retval$3 = $call14;
       break L1;
      }
      $3 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $4 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($3|0)==($4|0);
      if ($cmp$i) {
       $retval$3 = $first;
       break L1;
      }
      $add$ptr$i = ((($4)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i103 = HEAP32[$retval$sroa$0$0$$sroa_idx$i>>2]|0;
      HEAP32[$ref$tmp26>>2] = $retval$sroa$0$0$copyload$i103;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp,$add$ptr$i,$ref$tmp26);
      $__end_$i67 = ((($db)) + 20|0);
      $5 = HEAP32[$__end_$i67>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 24|0);
      $6 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i68 = ($5>>>0)<($6>>>0);
      if ($cmp$i68) {
       $__second_$i$i$i$i$i$i$i = ((($ref$tmp)) + 12|0);
       HEAP32[$5>>2] = 0;
       $__end_$i$i$i$i$i = ((($5)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i>>2] = 0;
       $__end_cap_$i$i$i$i$i = ((($5)) + 8|0);
       $7 = HEAP32[$__second_$i$i$i$i$i$i$i>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
       $__second_$i$i$i9$i$i$i$i = ((($5)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i>>2] = $7;
       $8 = HEAP32[$ref$tmp>>2]|0;
       HEAP32[$5>>2] = $8;
       $__end_$i$i$i$i = ((($ref$tmp)) + 4|0);
       $9 = HEAP32[$__end_$i$i$i$i>>2]|0;
       HEAP32[$__end_$i$i$i$i$i>>2] = $9;
       $__first_$i$i$i8$i$i$i$i = ((($ref$tmp)) + 8|0);
       $10 = HEAP32[$__first_$i$i$i8$i$i$i$i>>2]|0;
       $__first_$i$i$i7$i$i$i$i = ((($5)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i>>2] = $10;
       HEAP32[$__first_$i$i$i8$i$i$i$i>>2] = 0;
       HEAP32[$__end_$i$i$i$i>>2] = 0;
       HEAP32[$ref$tmp>>2] = 0;
       $11 = HEAP32[$__end_$i67>>2]|0;
       $incdec$ptr$i = ((($11)) + 16|0);
       HEAP32[$__end_$i67>>2] = $incdec$ptr$i;
      } else {
       $subs = ((($db)) + 16|0);
       __THREW__ = 0;
       invoke_vii(57,($subs|0),($ref$tmp|0));
       $12 = __THREW__; __THREW__ = 0;
       $13 = $12&1;
       if ($13) {
        $16 = ___cxa_find_matching_catch_2()|0;
        $17 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp);
        $ehselector$slot$0 = $17;$exn$slot$0 = $16;
        break;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp);
      $call29 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call14,$last,$db)|0);
      $cmp30 = ($call29|0)==($call14|0);
      if ($cmp30) {
       $retval$3 = $first;
       break L1;
      }
      $14 = HEAP32[$__end_$i>>2]|0;
      $15 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i = (($14) - ($15))|0;
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
      $cmp34 = ($sub$ptr$div$i>>>0)<(2);
      if ($cmp34) {
       $retval$3 = $first;
       break L1;
      }
      $18 = $14;
      $add$ptr$i71 = ((($18)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp,$add$ptr$i71);
      $19 = HEAP32[$__end_$i>>2]|0;
      $add$ptr$i73 = ((($19)) + -24|0);
      $20 = $19;
      while(1) {
       $cmp$i$i$i = ($20|0)==($add$ptr$i73|0);
       if ($cmp$i$i$i) {
        break;
       }
       $incdec$ptr$i$i$i = ((($20)) + -24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
       $$pre$i = HEAP32[$__end_$i>>2]|0;
       $20 = $$pre$i;
      }
      $first45 = ((($19)) + -48|0);
      $__size_$i$i$i$i$i = ((($tmp)) + 11|0);
      $21 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
      $tobool$i$i$i$i$i = ($21<<24>>24)<(0);
      $22 = HEAP32[$tmp>>2]|0;
      $cond$i$i$i$i = $tobool$i$i$i$i$i ? $22 : $tmp;
      $__size_$i3$i$i$i = ((($tmp)) + 4|0);
      $23 = HEAP32[$__size_$i3$i$i$i>>2]|0;
      $conv$i$i$i$i = $21&255;
      $cond$i$i$i = $tobool$i$i$i$i$i ? $23 : $conv$i$i$i$i;
      __THREW__ = 0;
      (invoke_iiii(47,($first45|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
      $24 = __THREW__; __THREW__ = 0;
      $25 = $24&1;
      if ($25) {
       $26 = ___cxa_find_matching_catch_2()|0;
       $27 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
       $ehselector$slot$0 = $27;$exn$slot$0 = $26;
       break;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
       $retval$3 = $call29;
       break L1;
      }
     }
    } while(0);
    ___resumeException($exn$slot$0|0);
    // unreachable;
   }
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$sink = 0, $$sink58 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__begin$sroa$0$0 = 0, $__begin102$sroa$0$0 = 0, $__begin_$i123 = 0, $__end_$i = 0, $__end_$i103 = 0, $__end_$i104 = 0, $__end_$i112 = 0, $__end_$i115 = 0, $__end_$i128 = 0, $__end_$i59 = 0, $__end_$i67 = 0, $__end_$i75 = 0, $__end_$i83 = 0, $__end_$i91 = 0, $__end_$i99 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i105 = 0, $__first_$i$i$i$i116 = 0;
 var $__first_$i$i$i$i60 = 0, $__first_$i$i$i$i68 = 0, $__first_$i$i$i$i76 = 0, $__first_$i$i$i$i84 = 0, $__first_$i$i$i$i92 = 0, $add = 0, $add$ptr = 0, $arrayidx = 0, $call51 = 0, $call70 = 0, $cmp = 0, $cmp$i = 0, $cmp$i100 = 0, $cmp$i106 = 0, $cmp$i117 = 0, $cmp$i61 = 0, $cmp$i69 = 0, $cmp$i77 = 0, $cmp$i85 = 0, $cmp$i93 = 0;
 var $cmp1 = 0, $cmp65 = 0, $cmp92 = 0, $cmp97 = 0, $conv3 = 0, $conv66 = 0, $ehselector$slot$0 = 0, $exn$slot$0 = 0, $inc = 0, $incdec$ptr$i = 0, $incdec$ptr$i107 = 0, $incdec$ptr$i111 = 0, $incdec$ptr$i114 = 0, $incdec$ptr$i118 = 0, $incdec$ptr$i62 = 0, $incdec$ptr$i70 = 0, $incdec$ptr$i78 = 0, $incdec$ptr$i86 = 0, $incdec$ptr$i94 = 0, $incdec$ptr87 = 0;
 var $isdigit = 0, $isdigit55 = 0, $isdigittmp = 0, $isdigittmp54 = 0, $lnot$i = 0, $lnot$i127 = 0, $mul = 0, $ref$tmp = 0, $ref$tmp12 = 0, $ref$tmp18 = 0, $ref$tmp24 = 0, $ref$tmp30 = 0, $ref$tmp6 = 0, $retval$1 = 0, $sub$1 = 0, $sub$2 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0;
 var $sub$ptr$sub$i = 0, $sub78 = 0, $subs95 = 0, $t$0 = 0, $tobool52 = 0, $tobool71 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $ref$tmp = sp + 120|0;
 $ref$tmp6 = sp + 96|0;
 $ref$tmp12 = sp + 72|0;
 $ref$tmp18 = sp + 48|0;
 $ref$tmp24 = sp + 24|0;
 $ref$tmp30 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(83);
   if ($cmp1) {
    $arrayidx = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx>>0]|0;
    $conv3 = $1 << 24 >> 24;
    $add$ptr = ((($first)) + 2|0);
    $subs95 = ((($db)) + 16|0);
    L4: do {
     switch ($conv3|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($ref$tmp,7293);
      $__end_$i = ((($db)) + 4|0);
      $2 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $3 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($2>>>0)<($3>>>0);
      if ($cmp$i) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2,$ref$tmp);
       $4 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($4)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp|0));
       $5 = __THREW__; __THREW__ = 0;
       $6 = $5&1;
       if ($6) {
        $7 = ___cxa_find_matching_catch_2()|0;
        $8 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        $ehselector$slot$0 = $8;$exn$slot$0 = $7;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      $retval$1 = $add$ptr;
      break L1;
      break;
     }
     case 98:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($ref$tmp6,7308);
      $__end_$i59 = ((($db)) + 4|0);
      $9 = HEAP32[$__end_$i59>>2]|0;
      $__first_$i$i$i$i60 = ((($db)) + 8|0);
      $10 = HEAP32[$__first_$i$i$i$i60>>2]|0;
      $cmp$i61 = ($9>>>0)<($10>>>0);
      if ($cmp$i61) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($9,$ref$tmp6);
       $11 = HEAP32[$__end_$i59>>2]|0;
       $incdec$ptr$i62 = ((($11)) + 24|0);
       HEAP32[$__end_$i59>>2] = $incdec$ptr$i62;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp6|0));
       $12 = __THREW__; __THREW__ = 0;
       $13 = $12&1;
       if ($13) {
        $14 = ___cxa_find_matching_catch_2()|0;
        $15 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp6);
        $ehselector$slot$0 = $15;$exn$slot$0 = $14;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp6);
      $retval$1 = $add$ptr;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($ref$tmp12,6658);
      $__end_$i67 = ((($db)) + 4|0);
      $16 = HEAP32[$__end_$i67>>2]|0;
      $__first_$i$i$i$i68 = ((($db)) + 8|0);
      $17 = HEAP32[$__first_$i$i$i$i68>>2]|0;
      $cmp$i69 = ($16>>>0)<($17>>>0);
      if ($cmp$i69) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($16,$ref$tmp12);
       $18 = HEAP32[$__end_$i67>>2]|0;
       $incdec$ptr$i70 = ((($18)) + 24|0);
       HEAP32[$__end_$i67>>2] = $incdec$ptr$i70;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp12|0));
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        $21 = ___cxa_find_matching_catch_2()|0;
        $22 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp12);
        $ehselector$slot$0 = $22;$exn$slot$0 = $21;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp12);
      $retval$1 = $add$ptr;
      break L1;
      break;
     }
     case 105:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($ref$tmp18,6754);
      $__end_$i75 = ((($db)) + 4|0);
      $23 = HEAP32[$__end_$i75>>2]|0;
      $__first_$i$i$i$i76 = ((($db)) + 8|0);
      $24 = HEAP32[$__first_$i$i$i$i76>>2]|0;
      $cmp$i77 = ($23>>>0)<($24>>>0);
      if ($cmp$i77) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($23,$ref$tmp18);
       $25 = HEAP32[$__end_$i75>>2]|0;
       $incdec$ptr$i78 = ((($25)) + 24|0);
       HEAP32[$__end_$i75>>2] = $incdec$ptr$i78;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp18|0));
       $26 = __THREW__; __THREW__ = 0;
       $27 = $26&1;
       if ($27) {
        $28 = ___cxa_find_matching_catch_2()|0;
        $29 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp18);
        $ehselector$slot$0 = $29;$exn$slot$0 = $28;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp18);
      $retval$1 = $add$ptr;
      break L1;
      break;
     }
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($ref$tmp24,6831);
      $__end_$i83 = ((($db)) + 4|0);
      $30 = HEAP32[$__end_$i83>>2]|0;
      $__first_$i$i$i$i84 = ((($db)) + 8|0);
      $31 = HEAP32[$__first_$i$i$i$i84>>2]|0;
      $cmp$i85 = ($30>>>0)<($31>>>0);
      if ($cmp$i85) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($30,$ref$tmp24);
       $32 = HEAP32[$__end_$i83>>2]|0;
       $incdec$ptr$i86 = ((($32)) + 24|0);
       HEAP32[$__end_$i83>>2] = $incdec$ptr$i86;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp24|0));
       $33 = __THREW__; __THREW__ = 0;
       $34 = $33&1;
       if ($34) {
        $35 = ___cxa_find_matching_catch_2()|0;
        $36 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp24);
        $ehselector$slot$0 = $36;$exn$slot$0 = $35;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp24);
      $retval$1 = $add$ptr;
      break L1;
      break;
     }
     case 100:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($ref$tmp30,6908);
      $__end_$i91 = ((($db)) + 4|0);
      $37 = HEAP32[$__end_$i91>>2]|0;
      $__first_$i$i$i$i92 = ((($db)) + 8|0);
      $38 = HEAP32[$__first_$i$i$i$i92>>2]|0;
      $cmp$i93 = ($37>>>0)<($38>>>0);
      if ($cmp$i93) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($37,$ref$tmp30);
       $39 = HEAP32[$__end_$i91>>2]|0;
       $incdec$ptr$i94 = ((($39)) + 24|0);
       HEAP32[$__end_$i91>>2] = $incdec$ptr$i94;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp30|0));
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        $42 = ___cxa_find_matching_catch_2()|0;
        $43 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp30);
        $ehselector$slot$0 = $43;$exn$slot$0 = $42;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp30);
      $retval$1 = $add$ptr;
      break L1;
      break;
     }
     case 95:  {
      $44 = HEAP32[$subs95>>2]|0;
      $__end_$i99 = ((($db)) + 20|0);
      $45 = HEAP32[$__end_$i99>>2]|0;
      $cmp$i100 = ($44|0)==($45|0);
      if ($cmp$i100) {
       $retval$1 = $first;
       break L1;
      }
      $46 = HEAP32[$44>>2]|0;
      $__end_$i103 = ((($44)) + 4|0);
      $47 = HEAP32[$__end_$i103>>2]|0;
      $__end_$i104 = ((($db)) + 4|0);
      $__first_$i$i$i$i105 = ((($db)) + 8|0);
      $__begin$sroa$0$0 = $46;
      while(1) {
       $lnot$i = ($__begin$sroa$0$0|0)==($47|0);
       if ($lnot$i) {
        $retval$1 = $add$ptr;
        break L1;
       }
       $48 = HEAP32[$__end_$i104>>2]|0;
       $49 = HEAP32[$__first_$i$i$i$i105>>2]|0;
       $cmp$i106 = ($48|0)==($49|0);
       if ($cmp$i106) {
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($db,$__begin$sroa$0$0);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($48,$__begin$sroa$0$0);
        $50 = HEAP32[$__end_$i104>>2]|0;
        $incdec$ptr$i107 = ((($50)) + 24|0);
        HEAP32[$__end_$i104>>2] = $incdec$ptr$i107;
       }
       $incdec$ptr$i111 = ((($__begin$sroa$0$0)) + 24|0);
       $__begin$sroa$0$0 = $incdec$ptr$i111;
      }
      break;
     }
     default: {
      $isdigittmp = (($conv3) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if (!($isdigit)) {
       $call51 = (_isupper($conv3)|0);
       $tobool52 = ($call51|0)==(0);
       if ($tobool52) {
        $retval$1 = $first;
        break L1;
       }
      }
      $$sink = $isdigit ? -48 : -55;
      $add = (($$sink) + ($conv3))|0;
      $sub$1 = $add;$t$0 = $add$ptr;
      while(1) {
       $cmp65 = ($t$0|0)==($last|0);
       $incdec$ptr87 = ((($t$0)) + 1|0);
       if ($cmp65) {
        $retval$1 = $first;
        break L1;
       }
       $51 = HEAP8[$t$0>>0]|0;
       $conv66 = $51 << 24 >> 24;
       $isdigittmp54 = (($conv66) + -48)|0;
       $isdigit55 = ($isdigittmp54>>>0)<(10);
       if (!($isdigit55)) {
        $call70 = (_isupper($conv66)|0);
        $tobool71 = ($call70|0)==(0);
        if ($tobool71) {
         break;
        }
       }
       $mul = ($sub$1*36)|0;
       $$sink58 = $isdigit55 ? -48 : -55;
       $sub78 = (($conv66) + ($mul))|0;
       $sub$2 = (($sub78) + ($$sink58))|0;
       $sub$1 = $sub$2;$t$0 = $incdec$ptr87;
      }
      $cmp92 = ($51<<24>>24)==(95);
      if (!($cmp92)) {
       $retval$1 = $first;
       break L1;
      }
      $inc = (($sub$1) + 1)|0;
      $__end_$i112 = ((($db)) + 20|0);
      $52 = HEAP32[$__end_$i112>>2]|0;
      $53 = HEAP32[$subs95>>2]|0;
      $sub$ptr$sub$i = (($52) - ($53))|0;
      $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
      $cmp97 = ($inc>>>0)<($sub$ptr$div$i>>>0);
      $54 = $53;
      if (!($cmp97)) {
       $retval$1 = $first;
       break L1;
      }
      $__begin_$i123 = (($54) + ($inc<<4)|0);
      $55 = HEAP32[$__begin_$i123>>2]|0;
      $__end_$i128 = (((($54) + ($inc<<4)|0)) + 4|0);
      $56 = HEAP32[$__end_$i128>>2]|0;
      $__end_$i115 = ((($db)) + 4|0);
      $__first_$i$i$i$i116 = ((($db)) + 8|0);
      $__begin102$sroa$0$0 = $55;
      while(1) {
       $lnot$i127 = ($__begin102$sroa$0$0|0)==($56|0);
       if ($lnot$i127) {
        $retval$1 = $incdec$ptr87;
        break L1;
       }
       $57 = HEAP32[$__end_$i115>>2]|0;
       $58 = HEAP32[$__first_$i$i$i$i116>>2]|0;
       $cmp$i117 = ($57|0)==($58|0);
       if ($cmp$i117) {
        __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($db,$__begin102$sroa$0$0);
       } else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($57,$__begin102$sroa$0$0);
        $59 = HEAP32[$__end_$i115>>2]|0;
        $incdec$ptr$i118 = ((($59)) + 24|0);
        HEAP32[$__end_$i115>>2] = $incdec$ptr$i118;
       }
       $incdec$ptr$i114 = ((($__begin102$sroa$0$0)) + 24|0);
       $__begin102$sroa$0$0 = $incdec$ptr$i114;
      }
     }
     }
    } while(0);
    ___resumeException($exn$slot$0|0);
    // unreachable;
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i20 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i29 = 0;
 var $add$ptr33 = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i23 = 0, $arrayidx2 = 0, $call = 0, $call$i18 = 0, $call$i27 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp10 = 0, $cmp5 = 0, $cmp7 = 0, $conv3 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i21 = 0, $exn$slot$1 = 0, $inc$i$i$i = 0;
 var $inc$i$i$i24 = 0, $or$cond = 0, $ref$tmp = 0, $ref$tmp14 = 0, $ref$tmp15 = 0, $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp = sp + 40|0;
 $agg$tmp = sp + 24|0;
 $ref$tmp14 = sp + 12|0;
 $ref$tmp15 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(3);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(68);
   if ($cmp1) {
    $arrayidx2 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx2>>0]|0;
    $conv3 = $1 << 24 >> 24;
    switch ($conv3|0) {
    case 84: case 116:  {
     break;
    }
    default: {
     $retval$1 = $first;
     break L1;
    }
    }
    $add$ptr = ((($first)) + 2|0);
    $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
    $cmp5 = ($call|0)==($add$ptr|0);
    $cmp7 = ($call|0)==($last|0);
    $or$cond = $cmp5 | $cmp7;
    if ($or$cond) {
     $retval$1 = $first;
    } else {
     $2 = HEAP8[$call>>0]|0;
     $cmp10 = ($2<<24>>24)==(69);
     if ($cmp10) {
      $3 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $4 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($3|0)==($4|0);
      if ($cmp$i) {
       $retval$1 = $first;
      } else {
       $add$ptr$i = ((($4)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp15,$add$ptr$i);
       __THREW__ = 0;
       $call$i18 = (invoke_iiii(56,($ref$tmp15|0),0,(7283|0))|0);
       $5 = __THREW__; __THREW__ = 0;
       $6 = $5&1;
       do {
        if ($6) {
         $10 = ___cxa_find_matching_catch_2()|0;
         $11 = tempRet0;
         $ehselector$slot$1 = $11;$exn$slot$1 = $10;
        } else {
         ;HEAP32[$ref$tmp14>>2]=HEAP32[$ref$tmp15>>2]|0;HEAP32[$ref$tmp14+4>>2]=HEAP32[$ref$tmp15+4>>2]|0;HEAP32[$ref$tmp14+8>>2]=HEAP32[$ref$tmp15+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp15) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         __THREW__ = 0;
         $call$i27 = (invoke_iii(54,($ref$tmp14|0),(5836|0))|0);
         $7 = __THREW__; __THREW__ = 0;
         $8 = $7&1;
         if ($8) {
          $12 = ___cxa_find_matching_catch_2()|0;
          $13 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp14);
          $ehselector$slot$1 = $13;$exn$slot$1 = $12;
          break;
         }
         ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp14>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp14+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp14+8>>2]|0;
         $__i$0$i$i$i20 = 0;
         while(1) {
          $exitcond$i$i$i21 = ($__i$0$i$i$i20|0)==(3);
          if ($exitcond$i$i$i21) {
           break;
          }
          $arrayidx$i$i$i23 = (($ref$tmp14) + ($__i$0$i$i$i20<<2)|0);
          HEAP32[$arrayidx$i$i$i23>>2] = 0;
          $inc$i$i$i24 = (($__i$0$i$i$i20) + 1)|0;
          $__i$0$i$i$i20 = $inc$i$i$i24;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
         $9 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i29 = ((($9)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i29,$ref$tmp);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp14);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp15);
         $add$ptr33 = ((($call)) + 1|0);
         $retval$1 = $add$ptr33;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp15);
       ___resumeException($exn$slot$1|0);
       // unreachable;
      }
     } else {
      $retval$1 = $first;
     }
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$off = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0;
 var $__end_$i = 0, $__end_$i105 = 0, $__end_$i108 = 0, $__end_$i119 = 0, $__first_$i$i$i$i = 0, $__i$0$i$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i122 = 0, $__i$0$i$i$i75 = 0, $__i$0$i$i$i86 = 0, $__i$0$i$i$i96 = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i134 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i139 = 0, $add$ptr$i111 = 0, $add$ptr$i117 = 0;
 var $agg$tmp = 0, $arrayidx$i$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i125 = 0, $arrayidx$i$i$i78 = 0, $arrayidx$i$i$i89 = 0, $arrayidx$i$i$i99 = 0, $arrayidx3 = 0, $arrayidx6 = 0, $call = 0, $call$i103 = 0, $call$i129 = 0, $call$i73 = 0, $call$i82 = 0, $call$i93 = 0, $call127 = 0, $call27 = 0, $call90 = 0, $cmp = 0;
 var $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i106 = 0, $cmp$i109 = 0, $cmp$i120 = 0, $cmp1 = 0, $cmp117 = 0, $cmp120 = 0, $cmp123 = 0, $cmp128 = 0, $cmp14 = 0, $cmp16 = 0, $cmp22 = 0, $cmp25 = 0, $cmp28 = 0, $cmp5 = 0, $cmp85 = 0, $cmp91 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0;
 var $cond$i$i$i$i138 = 0, $cond$i$i$i141 = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i140 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$5 = 0, $ehselector$slot$6 = 0, $ehselector$slot$7 = 0, $ehselector$slot$8 = 0, $exitcond$i$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i123 = 0, $exitcond$i$i$i76 = 0, $exitcond$i$i$i87 = 0, $exitcond$i$i$i97 = 0, $exn$slot$0 = 0;
 var $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$5 = 0, $exn$slot$6 = 0, $exn$slot$7 = 0, $exn$slot$8 = 0, $first$addr$8$ph = 0, $first144 = 0, $first41 = 0, $inc$i$i = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i100 = 0, $inc$i$i$i126 = 0, $inc$i$i$i79 = 0, $inc$i$i$i90 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0;
 var $incdec$ptr122 = 0, $incdec$ptr50 = 0, $num81 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp134 = 0, $ref$tmp135 = 0, $ref$tmp33 = 0, $ref$tmp34 = 0, $ref$tmp4$i$i$i$i = 0, $ref$tmp52 = 0, $ref$tmp53 = 0, $ref$tmp54 = 0, $ref$tmp97 = 0, $retval$9 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast19 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast20 = 0, $sub$ptr$sub = 0;
 var $sub$ptr$sub21 = 0, $t182$2 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i113 = 0, $tobool$i$i$i$i$i135 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $ref$tmp$i$i$i$i = sp + 149|0;
 $ref$tmp4$i$i$i$i = sp + 148|0;
 $ref$tmp = sp + 136|0;
 $ref$tmp33 = sp + 124|0;
 $ref$tmp34 = sp + 112|0;
 $ref$tmp52 = sp + 88|0;
 $agg$tmp = sp + 72|0;
 $ref$tmp53 = sp + 60|0;
 $ref$tmp54 = sp + 48|0;
 $num81 = sp + 36|0;
 $ref$tmp97 = sp + 24|0;
 $ref$tmp134 = sp + 12|0;
 $ref$tmp135 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(3);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(68);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(118);
    if ($cmp5) {
     $arrayidx6 = ((($first)) + 2|0);
     $2 = HEAP8[$arrayidx6>>0]|0;
     $$off = (($2) + -49)<<24>>24;
     $3 = ($$off&255)<(9);
     do {
      if ($3) {
       $call = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($arrayidx6,$last)|0);
       $cmp14 = ($call|0)==($last|0);
       if ($cmp14) {
        $retval$9 = $first;
        break L1;
       }
       $4 = HEAP8[$call>>0]|0;
       $cmp16 = ($4<<24>>24)==(95);
       if (!($cmp16)) {
        $retval$9 = $first;
        break L1;
       }
       $sub$ptr$lhs$cast19 = $call;
       $sub$ptr$rhs$cast20 = $arrayidx6;
       $sub$ptr$sub21 = (($sub$ptr$lhs$cast19) - ($sub$ptr$rhs$cast20))|0;
       $incdec$ptr = ((($call)) + 1|0);
       $cmp22 = ($incdec$ptr|0)==($last|0);
       if ($cmp22) {
        $retval$9 = $first;
        break L1;
       }
       $5 = HEAP8[$incdec$ptr>>0]|0;
       $cmp25 = ($5<<24>>24)==(112);
       if ($cmp25) {
        $incdec$ptr50 = ((($call)) + 2|0);
        ;HEAP32[$ref$tmp54>>2]=0|0;HEAP32[$ref$tmp54+4>>2]=0|0;HEAP32[$ref$tmp54+8>>2]=0|0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp54,$arrayidx6,$sub$ptr$sub21);
        __THREW__ = 0;
        $call$i93 = (invoke_iiii(56,($ref$tmp54|0),0,(5887|0))|0);
        $24 = __THREW__; __THREW__ = 0;
        $25 = $24&1;
        if ($25) {
         $33 = ___cxa_find_matching_catch_2()|0;
         $34 = tempRet0;
         $ehselector$slot$3 = $34;$exn$slot$3 = $33;
        } else {
         ;HEAP32[$ref$tmp53>>2]=HEAP32[$ref$tmp54>>2]|0;HEAP32[$ref$tmp53+4>>2]=HEAP32[$ref$tmp54+4>>2]|0;HEAP32[$ref$tmp53+8>>2]=HEAP32[$ref$tmp54+8>>2]|0;
         $__i$0$i$i$i86 = 0;
         while(1) {
          $exitcond$i$i$i87 = ($__i$0$i$i$i86|0)==(3);
          if ($exitcond$i$i$i87) {
           break;
          }
          $arrayidx$i$i$i89 = (($ref$tmp54) + ($__i$0$i$i$i86<<2)|0);
          HEAP32[$arrayidx$i$i$i89>>2] = 0;
          $inc$i$i$i90 = (($__i$0$i$i$i86) + 1)|0;
          $__i$0$i$i$i86 = $inc$i$i$i90;
         }
         __THREW__ = 0;
         $call$i103 = (invoke_iii(54,($ref$tmp53|0),(5885|0))|0);
         $26 = __THREW__; __THREW__ = 0;
         $27 = $26&1;
         do {
          if ($27) {
           $35 = ___cxa_find_matching_catch_2()|0;
           $36 = tempRet0;
           $ehselector$slot$2 = $36;$exn$slot$2 = $35;
          } else {
           ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp53>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp53+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp53+8>>2]|0;
           $__i$0$i$i$i96 = 0;
           while(1) {
            $exitcond$i$i$i97 = ($__i$0$i$i$i96|0)==(3);
            if ($exitcond$i$i$i97) {
             break;
            }
            $arrayidx$i$i$i99 = (($ref$tmp53) + ($__i$0$i$i$i96<<2)|0);
            HEAP32[$arrayidx$i$i$i99>>2] = 0;
            $inc$i$i$i100 = (($__i$0$i$i$i96) + 1)|0;
            $__i$0$i$i$i96 = $inc$i$i$i100;
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp52,$agg$tmp);
           $__end_$i105 = ((($db)) + 4|0);
           $28 = HEAP32[$__end_$i105>>2]|0;
           $__first_$i$i$i$i = ((($db)) + 8|0);
           $29 = HEAP32[$__first_$i$i$i$i>>2]|0;
           $cmp$i106 = ($28>>>0)<($29>>>0);
           if ($cmp$i106) {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($28,$ref$tmp52);
            $30 = HEAP32[$__end_$i105>>2]|0;
            $incdec$ptr$i = ((($30)) + 24|0);
            HEAP32[$__end_$i105>>2] = $incdec$ptr$i;
           } else {
            __THREW__ = 0;
            invoke_vii(64,($db|0),($ref$tmp52|0));
            $31 = __THREW__; __THREW__ = 0;
            $32 = $31&1;
            if ($32) {
             $37 = ___cxa_find_matching_catch_2()|0;
             $38 = tempRet0;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp52);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
             $ehselector$slot$2 = $38;$exn$slot$2 = $37;
             break;
            }
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp52);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp53);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp54);
           $retval$9 = $incdec$ptr50;
           break L1;
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp53);
         $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp54);
        $ehselector$slot$8 = $ehselector$slot$3;$exn$slot$8 = $exn$slot$3;
        break;
       } else {
        $call27 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr,$last,$db)|0);
        $cmp28 = ($call27|0)==($incdec$ptr|0);
        if ($cmp28) {
         $retval$9 = $first;
         break L1;
        }
        $6 = HEAP32[$db>>2]|0;
        $__end_$i = ((($db)) + 4|0);
        $7 = HEAP32[$__end_$i>>2]|0;
        $cmp$i = ($6|0)==($7|0);
        if ($cmp$i) {
         $retval$9 = $first;
         break L1;
        }
        ;HEAP32[$ref$tmp34>>2]=0|0;HEAP32[$ref$tmp34+4>>2]=0|0;HEAP32[$ref$tmp34+8>>2]=0|0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp34,$arrayidx6,$sub$ptr$sub21);
        __THREW__ = 0;
        $call$i73 = (invoke_iiii(56,($ref$tmp34|0),0,(5876|0))|0);
        $8 = __THREW__; __THREW__ = 0;
        $9 = $8&1;
        if ($9) {
         $18 = ___cxa_find_matching_catch_2()|0;
         $19 = tempRet0;
         $ehselector$slot$1 = $19;$exn$slot$1 = $18;
        } else {
         ;HEAP32[$ref$tmp33>>2]=HEAP32[$ref$tmp34>>2]|0;HEAP32[$ref$tmp33+4>>2]=HEAP32[$ref$tmp34+4>>2]|0;HEAP32[$ref$tmp33+8>>2]=HEAP32[$ref$tmp34+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp34) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         __THREW__ = 0;
         $call$i82 = (invoke_iii(54,($ref$tmp33|0),(5885|0))|0);
         $10 = __THREW__; __THREW__ = 0;
         $11 = $10&1;
         do {
          if ($11) {
           $20 = ___cxa_find_matching_catch_2()|0;
           $21 = tempRet0;
           $ehselector$slot$0 = $21;$exn$slot$0 = $20;
          } else {
           ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp33>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp33+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp33+8>>2]|0;
           $__i$0$i$i$i75 = 0;
           while(1) {
            $exitcond$i$i$i76 = ($__i$0$i$i$i75|0)==(3);
            if ($exitcond$i$i$i76) {
             break;
            }
            $arrayidx$i$i$i78 = (($ref$tmp33) + ($__i$0$i$i$i75<<2)|0);
            HEAP32[$arrayidx$i$i$i78>>2] = 0;
            $inc$i$i$i79 = (($__i$0$i$i$i75) + 1)|0;
            $__i$0$i$i$i75 = $inc$i$i$i79;
           }
           $12 = HEAP32[$__end_$i>>2]|0;
           $first41 = ((($12)) + -24|0);
           $__size_$i$i$i$i$i = ((($ref$tmp)) + 11|0);
           $13 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($13<<24>>24)<(0);
           $14 = HEAP32[$ref$tmp>>2]|0;
           $cond$i$i$i$i = $tobool$i$i$i$i$i ? $14 : $ref$tmp;
           $__size_$i3$i$i$i = ((($ref$tmp)) + 4|0);
           $15 = HEAP32[$__size_$i3$i$i$i>>2]|0;
           $conv$i$i$i$i = $13&255;
           $cond$i$i$i = $tobool$i$i$i$i$i ? $15 : $conv$i$i$i$i;
           __THREW__ = 0;
           (invoke_iiii(47,($first41|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
           $16 = __THREW__; __THREW__ = 0;
           $17 = $16&1;
           if ($17) {
            $22 = ___cxa_find_matching_catch_2()|0;
            $23 = tempRet0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
            $ehselector$slot$0 = $23;$exn$slot$0 = $22;
            break;
           } else {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp33);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp34);
            $retval$9 = $call27;
            break L1;
           }
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp33);
         $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp34);
        $ehselector$slot$8 = $ehselector$slot$1;$exn$slot$8 = $exn$slot$1;
        break;
       }
      } else {
       ;HEAP32[$num81>>2]=0|0;HEAP32[$num81+4>>2]=0|0;HEAP32[$num81+8>>2]=0|0;
       $__i$0$i$i = 0;
       while(1) {
        $exitcond$i$i = ($__i$0$i$i|0)==(3);
        if ($exitcond$i$i) {
         break;
        }
        $arrayidx$i$i = (($num81) + ($__i$0$i$i<<2)|0);
        HEAP32[$arrayidx$i$i>>2] = 0;
        $inc$i$i = (($__i$0$i$i) + 1)|0;
        $__i$0$i$i = $inc$i$i;
       }
       $cmp85 = ($2<<24>>24)==(95);
       L60: do {
        if ($cmp85) {
         $t182$2 = $arrayidx6;
         label = 64;
        } else {
         __THREW__ = 0;
         $call90 = (invoke_iiii(75,($arrayidx6|0),($last|0),($db|0))|0);
         $39 = __THREW__; __THREW__ = 0;
         $40 = $39&1;
         if ($40) {
          label = 50;
         } else {
          $cmp91 = ($call90|0)==($arrayidx6|0);
          if ($cmp91) {
           $t182$2 = $arrayidx6;
           label = 64;
          } else {
           $41 = HEAP32[$db>>2]|0;
           $__end_$i108 = ((($db)) + 4|0);
           $42 = HEAP32[$__end_$i108>>2]|0;
           $cmp$i109 = ($41|0)==($42|0);
           if ($cmp$i109) {
            label = 83;
           } else {
            $add$ptr$i111 = ((($42)) + -24|0);
            __THREW__ = 0;
            invoke_vii(55,($ref$tmp97|0),($add$ptr$i111|0));
            $45 = __THREW__; __THREW__ = 0;
            $46 = $45&1;
            if ($46) {
             $55 = ___cxa_find_matching_catch_2()|0;
             $56 = tempRet0;
             $ehselector$slot$7 = $56;$exn$slot$7 = $55;
             break;
            }
            $__size_$i1$i$i$i$i = ((($num81)) + 11|0);
            $47 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
            $tobool$i$i$i$i$i113 = ($47<<24>>24)<(0);
            if ($tobool$i$i$i$i$i113) {
             $48 = HEAP32[$num81>>2]|0;
             HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
             __ZNSt3__211char_traitsIcE6assignERcRKc($48,$ref$tmp$i$i$i$i);
             $__size_$i2$i$i$i$i = ((($num81)) + 4|0);
             HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
            } else {
             HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
             __ZNSt3__211char_traitsIcE6assignERcRKc($num81,$ref$tmp4$i$i$i$i);
             HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
            }
            __THREW__ = 0;
            invoke_vi(51,($num81|0));
            $49 = __THREW__; __THREW__ = 0;
            $50 = $49&1;
            if ($50) {
             $51 = ___cxa_find_matching_catch_3(0|0)|0;
             $52 = tempRet0;
             ___clang_call_terminate($51);
             // unreachable;
            }
            ;HEAP32[$num81>>2]=HEAP32[$ref$tmp97>>2]|0;HEAP32[$num81+4>>2]=HEAP32[$ref$tmp97+4>>2]|0;HEAP32[$num81+8>>2]=HEAP32[$ref$tmp97+8>>2]|0;
            $__i$0$i$i$i$i = 0;
            while(1) {
             $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
             if ($exitcond$i$i$i$i) {
              break;
             }
             $arrayidx$i$i$i$i = (($ref$tmp97) + ($__i$0$i$i$i$i<<2)|0);
             HEAP32[$arrayidx$i$i$i$i>>2] = 0;
             $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
             $__i$0$i$i$i$i = $inc$i$i$i$i;
            }
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp97);
            $53 = HEAP32[$__end_$i108>>2]|0;
            $add$ptr$i117 = ((($53)) + -24|0);
            $54 = $53;
            while(1) {
             $cmp$i$i$i = ($54|0)==($add$ptr$i117|0);
             if ($cmp$i$i$i) {
              $t182$2 = $call90;
              label = 64;
              break L60;
             }
             $incdec$ptr$i$i$i = ((($54)) + -24|0);
             HEAP32[$__end_$i108>>2] = $incdec$ptr$i$i$i;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
             $$pre$i = HEAP32[$__end_$i108>>2]|0;
             $54 = $$pre$i;
            }
           }
          }
         }
        }
       } while(0);
       L82: do {
        if ((label|0) == 64) {
         $cmp117 = ($t182$2|0)==($last|0);
         L84: do {
          if ($cmp117) {
           $first$addr$8$ph = $first;
          } else {
           $57 = HEAP8[$t182$2>>0]|0;
           $cmp120 = ($57<<24>>24)==(95);
           if ($cmp120) {
            $incdec$ptr122 = ((($t182$2)) + 1|0);
            $cmp123 = ($incdec$ptr122|0)==($last|0);
            if ($cmp123) {
             $first$addr$8$ph = $first;
            } else {
             __THREW__ = 0;
             $call127 = (invoke_iiii(50,($incdec$ptr122|0),($last|0),($db|0))|0);
             $58 = __THREW__; __THREW__ = 0;
             $59 = $58&1;
             if ($59) {
              label = 50;
              break L82;
             }
             $cmp128 = ($call127|0)==($incdec$ptr122|0);
             if ($cmp128) {
              $first$addr$8$ph = $first;
             } else {
              $60 = HEAP32[$db>>2]|0;
              $__end_$i119 = ((($db)) + 4|0);
              $61 = HEAP32[$__end_$i119>>2]|0;
              $cmp$i120 = ($60|0)==($61|0);
              if ($cmp$i120) {
               label = 83;
               break L82;
              }
              __THREW__ = 0;
              invoke_viii(76,($ref$tmp135|0),(5876|0),($num81|0));
              $62 = __THREW__; __THREW__ = 0;
              $63 = $62&1;
              if ($63) {
               $72 = ___cxa_find_matching_catch_2()|0;
               $73 = tempRet0;
               $ehselector$slot$6 = $73;$exn$slot$6 = $72;
              } else {
               __THREW__ = 0;
               $call$i129 = (invoke_iii(54,($ref$tmp135|0),(5885|0))|0);
               $64 = __THREW__; __THREW__ = 0;
               $65 = $64&1;
               do {
                if ($65) {
                 $74 = ___cxa_find_matching_catch_2()|0;
                 $75 = tempRet0;
                 $ehselector$slot$5 = $75;$exn$slot$5 = $74;
                } else {
                 ;HEAP32[$ref$tmp134>>2]=HEAP32[$ref$tmp135>>2]|0;HEAP32[$ref$tmp134+4>>2]=HEAP32[$ref$tmp135+4>>2]|0;HEAP32[$ref$tmp134+8>>2]=HEAP32[$ref$tmp135+8>>2]|0;
                 $__i$0$i$i$i122 = 0;
                 while(1) {
                  $exitcond$i$i$i123 = ($__i$0$i$i$i122|0)==(3);
                  if ($exitcond$i$i$i123) {
                   break;
                  }
                  $arrayidx$i$i$i125 = (($ref$tmp135) + ($__i$0$i$i$i122<<2)|0);
                  HEAP32[$arrayidx$i$i$i125>>2] = 0;
                  $inc$i$i$i126 = (($__i$0$i$i$i122) + 1)|0;
                  $__i$0$i$i$i122 = $inc$i$i$i126;
                 }
                 $66 = HEAP32[$__end_$i119>>2]|0;
                 $first144 = ((($66)) + -24|0);
                 $__size_$i$i$i$i$i134 = ((($ref$tmp134)) + 11|0);
                 $67 = HEAP8[$__size_$i$i$i$i$i134>>0]|0;
                 $tobool$i$i$i$i$i135 = ($67<<24>>24)<(0);
                 $68 = HEAP32[$ref$tmp134>>2]|0;
                 $cond$i$i$i$i138 = $tobool$i$i$i$i$i135 ? $68 : $ref$tmp134;
                 $__size_$i3$i$i$i139 = ((($ref$tmp134)) + 4|0);
                 $69 = HEAP32[$__size_$i3$i$i$i139>>2]|0;
                 $conv$i$i$i$i140 = $67&255;
                 $cond$i$i$i141 = $tobool$i$i$i$i$i135 ? $69 : $conv$i$i$i$i140;
                 __THREW__ = 0;
                 (invoke_iiii(47,($first144|0),($cond$i$i$i$i138|0),($cond$i$i$i141|0))|0);
                 $70 = __THREW__; __THREW__ = 0;
                 $71 = $70&1;
                 if ($71) {
                  $76 = ___cxa_find_matching_catch_2()|0;
                  $77 = tempRet0;
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp134);
                  $ehselector$slot$5 = $77;$exn$slot$5 = $76;
                  break;
                 } else {
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp134);
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp135);
                  $first$addr$8$ph = $call127;
                  break L84;
                 }
                }
               } while(0);
               __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp135);
               $ehselector$slot$6 = $ehselector$slot$5;$exn$slot$6 = $exn$slot$5;
              }
              $ehselector$slot$7 = $ehselector$slot$6;$exn$slot$7 = $exn$slot$6;
              break L82;
             }
            }
           } else {
            $first$addr$8$ph = $first;
           }
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num81);
         $retval$9 = $first$addr$8$ph;
         break L1;
        }
       } while(0);
       if ((label|0) == 50) {
        $43 = ___cxa_find_matching_catch_2()|0;
        $44 = tempRet0;
        $ehselector$slot$7 = $44;$exn$slot$7 = $43;
       }
       else if ((label|0) == 83) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num81);
        $retval$9 = $first;
        break L1;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num81);
       $ehselector$slot$8 = $ehselector$slot$7;$exn$slot$8 = $exn$slot$7;
      }
     } while(0);
     ___resumeException($exn$slot$8|0);
     // unreachable;
    } else {
     $retval$9 = $first;
    }
   } else {
    $retval$9 = $first;
   }
  } else {
   $retval$9 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$9|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add$ptr = 0, $cmp = 0, $cmp1 = 0, $cmp14 = 0, $cmp3 = 0, $cmp6 = 0, $conv15 = 0, $first$addr$0 = 0, $first$addr$2 = 0, $incdec$ptr = 0, $incdec$ptr$first = 0, $incdec$ptr16 = 0, $isdigit = 0, $isdigittmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $first$addr$2 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(110);
   $incdec$ptr = ((($first)) + 1|0);
   $incdec$ptr$first = $cmp1 ? $incdec$ptr : $first;
   $cmp3 = ($incdec$ptr$first|0)==($last|0);
   if ($cmp3) {
    $first$addr$2 = $first;
   } else {
    $1 = HEAP8[$incdec$ptr$first>>0]|0;
    $cmp6 = ($1<<24>>24)==(48);
    $add$ptr = ((($incdec$ptr$first)) + 1|0);
    if ($cmp6) {
     $first$addr$2 = $add$ptr;
    } else {
     $$off = (($1) + -49)<<24>>24;
     $2 = ($$off&255)<(9);
     if ($2) {
      $first$addr$0 = $add$ptr;
      while(1) {
       $cmp14 = ($first$addr$0|0)==($last|0);
       if ($cmp14) {
        $first$addr$2 = $last;
        break L1;
       }
       $3 = HEAP8[$first$addr$0>>0]|0;
       $conv15 = $3 << 24 >> 24;
       $isdigittmp = (($conv15) + -48)|0;
       $isdigit = ($isdigittmp>>>0)<(10);
       if (!($isdigit)) {
        $first$addr$2 = $first$addr$0;
        break L1;
       }
       $incdec$ptr16 = ((($first$addr$0)) + 1|0);
       $first$addr$0 = $incdec$ptr16;
      }
     } else {
      $first$addr$2 = $first;
     }
    }
   }
  }
 } while(0);
 return ($first$addr$2|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $__cap_$i = 0, $__p$0 = 0, $__size_$i = 0, $__size_$i12 = 0, $add$i$i = 0, $and$i$i = 0, $arrayidx = 0, $call$i = 0, $cmp = 0, $cmp2 = 0, $conv$i = 0, $or$i = 0, $ref$tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $cmp = ($__sz>>>0)>(4294967279);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this);
  label = 5;
 } else {
  $cmp2 = ($__sz>>>0)<(11);
  if ($cmp2) {
   $conv$i = $__sz&255;
   $__size_$i = ((($this)) + 11|0);
   HEAP8[$__size_$i>>0] = $conv$i;
   $__p$0 = $this;
  } else {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $add$i$i = (($__sz) + 16)|0;
  $and$i$i = $add$i$i & -16;
  $call$i = (__ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($and$i$i)|0);
  HEAP32[$this>>2] = $call$i;
  $or$i = $and$i$i | -2147483648;
  $__cap_$i = ((($this)) + 8|0);
  HEAP32[$__cap_$i>>2] = $or$i;
  $__size_$i12 = ((($this)) + 4|0);
  HEAP32[$__size_$i12>>2] = $__sz;
  $__p$0 = $call$i;
 }
 (__ZNSt3__211char_traitsIcE4copyEPcPKcj($__p$0,$__s,$__sz)|0);
 $arrayidx = (($__p$0) + ($__sz)|0);
 HEAP8[$ref$tmp>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i613 = 0, $$pre$i699 = 0, $$pre$i709 = 0, $$pre$i789 = 0, $$pre$i797 = 0, $$pre$i805 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i = 0, $__end_$i489 = 0, $__end_$i608 = 0, $__end_$i626 = 0, $__end_$i662 = 0, $__end_$i784 = 0, $__end_$i800 = 0, $__end_$i812 = 0, $__first_$i$i$i$i = 0, $__i$0$i$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i$i547 = 0, $__i$0$i$i$i474 = 0, $__i$0$i$i$i502 = 0;
 var $__i$0$i$i$i522 = 0, $__i$0$i$i$i570 = 0, $__i$0$i$i$i588 = 0, $__i$0$i$i$i598 = 0, $__i$0$i$i$i632 = 0, $__i$0$i$i$i641 = 0, $__i$0$i$i$i668 = 0, $__i$0$i$i$i678 = 0, $__i$0$i$i$i716 = 0, $__i$0$i$i$i734 = 0, $__i$0$i$i$i745 = 0, $__i$0$i$i$i763 = 0, $__i$0$i$i$i774 = 0, $__i$0$i$i493 = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i513 = 0, $__size_$i$i$i$i$i579 = 0, $__size_$i$i$i$i$i725 = 0, $__size_$i$i$i$i$i754 = 0, $__size_$i1$i$i$i$i = 0;
 var $__size_$i1$i$i$i$i536 = 0, $__size_$i2$i$i$i$i = 0, $__size_$i2$i$i$i$i539 = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i518 = 0, $__size_$i3$i$i$i584 = 0, $__size_$i3$i$i$i730 = 0, $__size_$i3$i$i$i759 = 0, $add$ptr = 0, $add$ptr$first = 0, $add$ptr$i = 0, $add$ptr$i511 = 0, $add$ptr$i563 = 0, $add$ptr$i565 = 0, $add$ptr$i567 = 0, $add$ptr$i607 = 0, $add$ptr$i609 = 0, $add$ptr$i629 = 0, $add$ptr$i650 = 0, $add$ptr$i665 = 0;
 var $add$ptr$i687 = 0, $add$ptr$i693 = 0, $add$ptr$i695 = 0, $add$ptr$i703 = 0, $add$ptr$i705 = 0, $add$ptr$i713 = 0, $add$ptr$i783 = 0, $add$ptr$i785 = 0, $add$ptr$i793 = 0, $add$ptr$i801 = 0, $add$ptr104 = 0, $add$ptr485 = 0, $agg$tmp = 0, $agg$tmp508 = 0, $agg$tmp700 = 0, $agg$tmp787 = 0, $arrayidx$i$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i$i550 = 0;
 var $arrayidx$i$i$i477 = 0, $arrayidx$i$i$i505 = 0, $arrayidx$i$i$i525 = 0, $arrayidx$i$i$i573 = 0, $arrayidx$i$i$i591 = 0, $arrayidx$i$i$i601 = 0, $arrayidx$i$i$i635 = 0, $arrayidx$i$i$i644 = 0, $arrayidx$i$i$i671 = 0, $arrayidx$i$i$i681 = 0, $arrayidx$i$i$i719 = 0, $arrayidx$i$i$i737 = 0, $arrayidx$i$i$i748 = 0, $arrayidx$i$i$i766 = 0, $arrayidx$i$i$i777 = 0, $arrayidx$i$i496 = 0, $arrayidx17 = 0, $arrayidx7 = 0, $call = 0, $call$i = 0;
 var $call$i463 = 0, $call$i464 = 0, $call$i465 = 0, $call$i466 = 0, $call$i467 = 0, $call$i468 = 0, $call$i469 = 0, $call$i470471 = 0, $call$i487 = 0, $call$i491 = 0, $call$i500508 = 0, $call$i554 = 0, $call$i555 = 0, $call$i556 = 0, $call$i557 = 0, $call$i558 = 0, $call$i559 = 0, $call$i560 = 0, $call$i568576 = 0, $call$i596604 = 0;
 var $call$i616 = 0, $call$i617 = 0, $call$i618 = 0, $call$i619 = 0, $call$i620 = 0, $call$i621 = 0, $call$i622 = 0, $call$i623 = 0, $call$i624 = 0, $call$i630638 = 0, $call$i639647 = 0, $call$i651 = 0, $call$i652 = 0, $call$i653 = 0, $call$i654 = 0, $call$i655 = 0, $call$i656 = 0, $call$i657 = 0, $call$i658 = 0, $call$i659 = 0;
 var $call$i660 = 0, $call$i666674 = 0, $call$i676684 = 0, $call$i688 = 0, $call$i714722 = 0, $call$i743751 = 0, $call$i772780 = 0, $call$i808 = 0, $call$i809 = 0, $call$i810 = 0, $call$i811 = 0, $call105 = 0, $call13 = 0, $call141 = 0, $call147 = 0, $call15 = 0, $call157 = 0, $call203 = 0, $call205 = 0, $call207 = 0;
 var $call21 = 0, $call213 = 0, $call225 = 0, $call241 = 0, $call253 = 0, $call265 = 0, $call281 = 0, $call293 = 0, $call3$i$i480 = 0, $call3$i$i529 = 0, $call3$i$i595 = 0, $call3$i$i741 = 0, $call3$i$i770 = 0, $call308 = 0, $call31 = 0, $call312 = 0, $call382 = 0, $call394 = 0, $call406 = 0, $call41 = 0;
 var $call418 = 0, $call434 = 0, $call446 = 0, $call458 = 0, $call470 = 0, $call489 = 0, $call499 = 0, $call51 = 0, $call543 = 0, $call549 = 0, $call561 = 0, $call573 = 0, $call582 = 0, $call592 = 0, $call598 = 0, $call61 = 0, $call610 = 0, $call622 = 0, $call638 = 0, $call650 = 0;
 var $call662 = 0, $call67 = 0, $call681 = 0, $call69 = 0, $call691 = 0, $call735 = 0, $call74 = 0, $call743 = 0, $call752 = 0, $call757 = 0, $call76 = 0, $call760 = 0, $call82 = 0, $call857 = 0, $call863 = 0, $call875 = 0, $call887 = 0, $call899 = 0, $call911 = 0, $call913 = 0;
 var $call915 = 0, $call917 = 0, $call919 = 0, $call92 = 0, $call929 = 0, $call931 = 0, $call939 = 0, $call949 = 0, $call952 = 0, $call98 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i610 = 0, $cmp$i$i$i696 = 0, $cmp$i$i$i706 = 0, $cmp$i$i$i786 = 0, $cmp$i$i$i794 = 0, $cmp$i$i$i802 = 0, $cmp$i490 = 0;
 var $cmp$i627 = 0, $cmp$i663 = 0, $cmp$i813 = 0, $cmp107 = 0, $cmp151 = 0, $cmp159 = 0, $cmp217 = 0, $cmp229 = 0, $cmp23 = 0, $cmp245 = 0, $cmp257 = 0, $cmp269 = 0, $cmp285 = 0, $cmp297 = 0, $cmp304 = 0, $cmp310 = 0, $cmp313 = 0, $cmp317 = 0, $cmp33 = 0, $cmp386 = 0;
 var $cmp398 = 0, $cmp4 = 0, $cmp410 = 0, $cmp422 = 0, $cmp43 = 0, $cmp438 = 0, $cmp450 = 0, $cmp462 = 0, $cmp474 = 0, $cmp479 = 0, $cmp483 = 0, $cmp493 = 0, $cmp5 = 0, $cmp501 = 0, $cmp53 = 0, $cmp553 = 0, $cmp565 = 0, $cmp577 = 0, $cmp584 = 0, $cmp602 = 0;
 var $cmp614 = 0, $cmp626 = 0, $cmp63 = 0, $cmp642 = 0, $cmp654 = 0, $cmp666 = 0, $cmp675 = 0, $cmp685 = 0, $cmp693 = 0, $cmp739 = 0, $cmp748 = 0, $cmp754 = 0, $cmp758 = 0, $cmp761 = 0, $cmp765 = 0, $cmp84 = 0, $cmp867 = 0, $cmp879 = 0, $cmp891 = 0, $cmp9 = 0;
 var $cmp903 = 0, $cmp924 = 0, $cmp94 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i517 = 0, $cond$i$i$i$i583 = 0, $cond$i$i$i$i729 = 0, $cond$i$i$i$i758 = 0, $cond$i$i$i520 = 0, $cond$i$i$i586 = 0, $cond$i$i$i732 = 0, $cond$i$i$i761 = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i519 = 0, $conv$i$i$i$i585 = 0, $conv$i$i$i$i731 = 0, $conv$i$i$i$i760 = 0, $conv102 = 0, $conv11 = 0;
 var $conv18 = 0, $conv235 = 0, $conv275 = 0, $conv376 = 0, $conv428 = 0, $conv541 = 0, $conv590 = 0, $conv632 = 0, $conv72 = 0, $conv855 = 0, $conv909 = 0, $conv927 = 0, $conv937 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$10 = 0, $ehselector$slot$12 = 0, $ehselector$slot$14 = 0, $ehselector$slot$15 = 0, $ehselector$slot$16 = 0;
 var $ehselector$slot$17 = 0, $ehselector$slot$18 = 0, $ehselector$slot$19 = 0, $ehselector$slot$2 = 0, $ehselector$slot$20 = 0, $ehselector$slot$21 = 0, $ehselector$slot$3 = 0, $ehselector$slot$5 = 0, $ehselector$slot$6 = 0, $ehselector$slot$7 = 0, $ehselector$slot$8 = 0, $exitcond$i$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i$i548 = 0, $exitcond$i$i$i475 = 0, $exitcond$i$i$i503 = 0, $exitcond$i$i$i523 = 0, $exitcond$i$i$i571 = 0, $exitcond$i$i$i589 = 0;
 var $exitcond$i$i$i599 = 0, $exitcond$i$i$i633 = 0, $exitcond$i$i$i642 = 0, $exitcond$i$i$i669 = 0, $exitcond$i$i$i679 = 0, $exitcond$i$i$i717 = 0, $exitcond$i$i$i735 = 0, $exitcond$i$i$i746 = 0, $exitcond$i$i$i764 = 0, $exitcond$i$i$i775 = 0, $exitcond$i$i494 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$10 = 0, $exn$slot$12 = 0, $exn$slot$14 = 0, $exn$slot$15 = 0, $exn$slot$16 = 0, $exn$slot$17 = 0, $exn$slot$18 = 0;
 var $exn$slot$19 = 0, $exn$slot$2 = 0, $exn$slot$20 = 0, $exn$slot$21 = 0, $exn$slot$3 = 0, $exn$slot$5 = 0, $exn$slot$6 = 0, $exn$slot$7 = 0, $exn$slot$8 = 0, $first$call147 = 0, $first$call21 = 0, $first$call213 = 0, $first$call225 = 0, $first$call241 = 0, $first$call253 = 0, $first$call265 = 0, $first$call281 = 0, $first$call293 = 0, $first$call31 = 0, $first$call382 = 0;
 var $first$call394 = 0, $first$call406 = 0, $first$call41 = 0, $first$call418 = 0, $first$call434 = 0, $first$call446 = 0, $first$call458 = 0, $first$call470 = 0, $first$call489 = 0, $first$call51 = 0, $first$call549 = 0, $first$call561 = 0, $first$call573 = 0, $first$call582 = 0, $first$call598 = 0, $first$call61 = 0, $first$call610 = 0, $first$call622 = 0, $first$call638 = 0, $first$call650 = 0;
 var $first$call662 = 0, $first$call681 = 0, $first$call735 = 0, $first$call82 = 0, $first$call863 = 0, $first$call875 = 0, $first$call887 = 0, $first$call899 = 0, $first$call92 = 0, $first129 = 0, $first186 = 0, $inc$i$i = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i$i551 = 0, $inc$i$i$i478 = 0, $inc$i$i$i506 = 0, $inc$i$i$i526 = 0, $inc$i$i$i574 = 0, $inc$i$i$i592 = 0;
 var $inc$i$i$i602 = 0, $inc$i$i$i636 = 0, $inc$i$i$i645 = 0, $inc$i$i$i672 = 0, $inc$i$i$i682 = 0, $inc$i$i$i720 = 0, $inc$i$i$i738 = 0, $inc$i$i$i749 = 0, $inc$i$i$i767 = 0, $inc$i$i$i778 = 0, $inc$i$i497 = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i612 = 0, $incdec$ptr$i$i$i698 = 0, $incdec$ptr$i$i$i708 = 0, $incdec$ptr$i$i$i788 = 0, $incdec$ptr$i$i$i796 = 0, $incdec$ptr$i$i$i804 = 0, $op1 = 0;
 var $op1781 = 0, $op2 = 0, $op2773 = 0, $op3 = 0, $parsed_gs$0$off0 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp$i$i$i$i533 = 0, $ref$tmp112 = 0, $ref$tmp113 = 0, $ref$tmp114 = 0, $ref$tmp117 = 0, $ref$tmp144 = 0, $ref$tmp165 = 0, $ref$tmp166 = 0, $ref$tmp167 = 0, $ref$tmp174 = 0, $ref$tmp210 = 0, $ref$tmp222 = 0, $ref$tmp238 = 0;
 var $ref$tmp250 = 0, $ref$tmp262 = 0, $ref$tmp278 = 0, $ref$tmp28 = 0, $ref$tmp290 = 0, $ref$tmp329 = 0, $ref$tmp330 = 0, $ref$tmp331 = 0, $ref$tmp332 = 0, $ref$tmp379 = 0, $ref$tmp38 = 0, $ref$tmp391 = 0, $ref$tmp4$i$i$i$i = 0, $ref$tmp4$i$i$i$i534 = 0, $ref$tmp403 = 0, $ref$tmp415 = 0, $ref$tmp431 = 0, $ref$tmp443 = 0, $ref$tmp455 = 0, $ref$tmp467 = 0;
 var $ref$tmp48 = 0, $ref$tmp486 = 0, $ref$tmp507 = 0, $ref$tmp509 = 0, $ref$tmp510 = 0, $ref$tmp546 = 0, $ref$tmp558 = 0, $ref$tmp570 = 0, $ref$tmp58 = 0, $ref$tmp595 = 0, $ref$tmp607 = 0, $ref$tmp619 = 0, $ref$tmp635 = 0, $ref$tmp647 = 0, $ref$tmp659 = 0, $ref$tmp678 = 0, $ref$tmp699 = 0, $ref$tmp701 = 0, $ref$tmp702 = 0, $ref$tmp732 = 0;
 var $ref$tmp786 = 0, $ref$tmp788 = 0, $ref$tmp789 = 0, $ref$tmp79 = 0, $ref$tmp790 = 0, $ref$tmp791 = 0, $ref$tmp792 = 0, $ref$tmp860 = 0, $ref$tmp872 = 0, $ref$tmp884 = 0, $ref$tmp89 = 0, $ref$tmp896 = 0, $ref$tmp942 = 0, $retval$14 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i691 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast922 = 0, $sub$ptr$sub = 0;
 var $sub$ptr$sub$i = 0, $sub$ptr$sub$i690 = 0, $sub$ptr$sub923 = 0, $t$0 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i484 = 0, $tobool$i$i$i$i$i514 = 0, $tobool$i$i$i$i$i537 = 0, $tobool$i$i$i$i$i580 = 0, $tobool$i$i$i$i$i726 = 0, $tobool$i$i$i$i$i755 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 960|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(960|0);
 $ref$tmp$i$i$i$i533 = sp + 951|0;
 $ref$tmp4$i$i$i$i534 = sp + 950|0;
 $ref$tmp$i$i$i$i = sp + 949|0;
 $ref$tmp4$i$i$i$i = sp + 948|0;
 $ref$tmp = sp + 936|0;
 $ref$tmp28 = sp + 924|0;
 $ref$tmp38 = sp + 912|0;
 $ref$tmp48 = sp + 900|0;
 $ref$tmp58 = sp + 888|0;
 $ref$tmp79 = sp + 876|0;
 $ref$tmp89 = sp + 864|0;
 $ref$tmp112 = sp + 852|0;
 $ref$tmp113 = sp + 840|0;
 $ref$tmp114 = sp + 828|0;
 $ref$tmp117 = sp + 816|0;
 $ref$tmp144 = sp + 804|0;
 $ref$tmp165 = sp + 792|0;
 $ref$tmp166 = sp + 780|0;
 $ref$tmp167 = sp + 768|0;
 $ref$tmp174 = sp + 756|0;
 $ref$tmp210 = sp + 744|0;
 $ref$tmp222 = sp + 732|0;
 $ref$tmp238 = sp + 720|0;
 $ref$tmp250 = sp + 708|0;
 $ref$tmp262 = sp + 696|0;
 $ref$tmp278 = sp + 684|0;
 $ref$tmp290 = sp + 672|0;
 $op2 = sp + 660|0;
 $op1 = sp + 648|0;
 $ref$tmp329 = sp + 624|0;
 $agg$tmp = sp + 608|0;
 $ref$tmp330 = sp + 596|0;
 $ref$tmp331 = sp + 584|0;
 $ref$tmp332 = sp + 572|0;
 $ref$tmp379 = sp + 560|0;
 $ref$tmp391 = sp + 548|0;
 $ref$tmp403 = sp + 536|0;
 $ref$tmp415 = sp + 524|0;
 $ref$tmp431 = sp + 512|0;
 $ref$tmp443 = sp + 500|0;
 $ref$tmp455 = sp + 488|0;
 $ref$tmp467 = sp + 476|0;
 $ref$tmp486 = sp + 464|0;
 $ref$tmp507 = sp + 440|0;
 $agg$tmp508 = sp + 424|0;
 $ref$tmp509 = sp + 412|0;
 $ref$tmp510 = sp + 400|0;
 $ref$tmp546 = sp + 388|0;
 $ref$tmp558 = sp + 376|0;
 $ref$tmp570 = sp + 364|0;
 $ref$tmp595 = sp + 352|0;
 $ref$tmp607 = sp + 340|0;
 $ref$tmp619 = sp + 328|0;
 $ref$tmp635 = sp + 316|0;
 $ref$tmp647 = sp + 304|0;
 $ref$tmp659 = sp + 292|0;
 $ref$tmp678 = sp + 280|0;
 $ref$tmp699 = sp + 256|0;
 $agg$tmp700 = sp + 240|0;
 $ref$tmp701 = sp + 228|0;
 $ref$tmp702 = sp + 216|0;
 $ref$tmp732 = sp + 204|0;
 $op3 = sp + 192|0;
 $op2773 = sp + 180|0;
 $op1781 = sp + 168|0;
 $ref$tmp786 = sp + 144|0;
 $agg$tmp787 = sp + 132|0;
 $ref$tmp788 = sp + 120|0;
 $ref$tmp789 = sp + 108|0;
 $ref$tmp790 = sp + 96|0;
 $ref$tmp791 = sp + 84|0;
 $ref$tmp792 = sp + 72|0;
 $ref$tmp860 = sp + 60|0;
 $ref$tmp872 = sp + 48|0;
 $ref$tmp884 = sp + 36|0;
 $ref$tmp896 = sp + 24|0;
 $ref$tmp942 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $cmp4 = ($sub$ptr$sub|0)>(3);
   $add$ptr = ((($first)) + 2|0);
   if ($cmp4) {
    $0 = HEAP8[$first>>0]|0;
    $cmp5 = ($0<<24>>24)==(103);
    if ($cmp5) {
     $arrayidx7 = ((($first)) + 1|0);
     $1 = HEAP8[$arrayidx7>>0]|0;
     $cmp9 = ($1<<24>>24)==(115);
     $add$ptr$first = $cmp9 ? $add$ptr : $first;
     $parsed_gs$0$off0 = $cmp9;$t$0 = $add$ptr$first;
    } else {
     $parsed_gs$0$off0 = 0;$t$0 = $first;
    }
   } else {
    $parsed_gs$0$off0 = 0;$t$0 = $first;
   }
   $2 = HEAP8[$t$0>>0]|0;
   $conv11 = $2 << 24 >> 24;
   $arrayidx17 = ((($t$0)) + 1|0);
   $add$ptr485 = ((($first)) + 3|0);
   $cmp479 = ($add$ptr|0)!=($last|0);
   $add$ptr104 = ((($t$0)) + 2|0);
   L7: do {
    switch ($conv11|0) {
    case 76:  {
     $call = (__ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $retval$14 = $call;
     break L1;
     break;
    }
    case 84:  {
     $call13 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $retval$14 = $call13;
     break L1;
     break;
    }
    case 102:  {
     $call15 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $retval$14 = $call15;
     break L1;
     break;
    }
    case 97:  {
     $3 = HEAP8[$arrayidx17>>0]|0;
     $conv18 = $3 << 24 >> 24;
     switch ($conv18|0) {
     case 97:  {
      ;HEAP32[$ref$tmp>>2]=0|0;HEAP32[$ref$tmp+4>>2]=0|0;HEAP32[$ref$tmp+8>>2]=0|0;
      $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc(5840)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp,5840,$call$i);
      __THREW__ = 0;
      $call21 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp|0),($db|0))|0);
      $4 = __THREW__; __THREW__ = 0;
      $5 = $4&1;
      if ($5) {
       $6 = ___cxa_find_matching_catch_2()|0;
       $7 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
       $ehselector$slot$21 = $7;$exn$slot$21 = $6;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
       $cmp23 = ($call21|0)==($add$ptr|0);
       $first$call21 = $cmp23 ? $first : $call21;
       $retval$14 = $first$call21;
       break L1;
      }
      break;
     }
     case 100:  {
      ;HEAP32[$ref$tmp28>>2]=0|0;HEAP32[$ref$tmp28+4>>2]=0|0;HEAP32[$ref$tmp28+8>>2]=0|0;
      $call$i463 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5858)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp28,5858,$call$i463);
      __THREW__ = 0;
      $call31 = (invoke_iiiii(78,($add$ptr|0),($last|0),($ref$tmp28|0),($db|0))|0);
      $8 = __THREW__; __THREW__ = 0;
      $9 = $8&1;
      if ($9) {
       $10 = ___cxa_find_matching_catch_2()|0;
       $11 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp28);
       $ehselector$slot$21 = $11;$exn$slot$21 = $10;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp28);
       $cmp33 = ($call31|0)==($add$ptr|0);
       $first$call31 = $cmp33 ? $first : $call31;
       $retval$14 = $first$call31;
       break L1;
      }
      break;
     }
     case 110:  {
      ;HEAP32[$ref$tmp38>>2]=0|0;HEAP32[$ref$tmp38+4>>2]=0|0;HEAP32[$ref$tmp38+8>>2]=0|0;
      $call$i464 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5858)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp38,5858,$call$i464);
      __THREW__ = 0;
      $call41 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp38|0),($db|0))|0);
      $12 = __THREW__; __THREW__ = 0;
      $13 = $12&1;
      if ($13) {
       $14 = ___cxa_find_matching_catch_2()|0;
       $15 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp38);
       $ehselector$slot$21 = $15;$exn$slot$21 = $14;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp38);
       $cmp43 = ($call41|0)==($add$ptr|0);
       $first$call41 = $cmp43 ? $first : $call41;
       $retval$14 = $first$call41;
       break L1;
      }
      break;
     }
     case 78:  {
      ;HEAP32[$ref$tmp48>>2]=0|0;HEAP32[$ref$tmp48+4>>2]=0|0;HEAP32[$ref$tmp48+8>>2]=0|0;
      $call$i465 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5901)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp48,5901,$call$i465);
      __THREW__ = 0;
      $call51 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp48|0),($db|0))|0);
      $16 = __THREW__; __THREW__ = 0;
      $17 = $16&1;
      if ($17) {
       $18 = ___cxa_find_matching_catch_2()|0;
       $19 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp48);
       $ehselector$slot$21 = $19;$exn$slot$21 = $18;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp48);
       $cmp53 = ($call51|0)==($add$ptr|0);
       $first$call51 = $cmp53 ? $first : $call51;
       $retval$14 = $first$call51;
       break L1;
      }
      break;
     }
     case 83:  {
      ;HEAP32[$ref$tmp58>>2]=0|0;HEAP32[$ref$tmp58+4>>2]=0|0;HEAP32[$ref$tmp58+8>>2]=0|0;
      $call$i466 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5904)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp58,5904,$call$i466);
      __THREW__ = 0;
      $call61 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp58|0),($db|0))|0);
      $20 = __THREW__; __THREW__ = 0;
      $21 = $20&1;
      if ($21) {
       $22 = ___cxa_find_matching_catch_2()|0;
       $23 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp58);
       $ehselector$slot$21 = $23;$exn$slot$21 = $22;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp58);
       $cmp63 = ($call61|0)==($add$ptr|0);
       $first$call61 = $cmp63 ? $first : $call61;
       $retval$14 = $first$call61;
       break L1;
      }
      break;
     }
     case 116:  {
      $call67 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call67;
      break L1;
      break;
     }
     case 122:  {
      $call69 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call69;
      break L1;
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 99:  {
     $24 = HEAP8[$arrayidx17>>0]|0;
     $conv72 = $24 << 24 >> 24;
     switch ($conv72|0) {
     case 99:  {
      $call74 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call74;
      break L1;
      break;
     }
     case 108:  {
      $call76 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call76;
      break L1;
      break;
     }
     case 109:  {
      ;HEAP32[$ref$tmp79>>2]=0|0;HEAP32[$ref$tmp79+4>>2]=0|0;HEAP32[$ref$tmp79+8>>2]=0|0;
      $call$i467 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5906)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp79,5906,$call$i467);
      __THREW__ = 0;
      $call82 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp79|0),($db|0))|0);
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if ($26) {
       $27 = ___cxa_find_matching_catch_2()|0;
       $28 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp79);
       $ehselector$slot$21 = $28;$exn$slot$21 = $27;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp79);
       $cmp84 = ($call82|0)==($add$ptr|0);
       $first$call82 = $cmp84 ? $first : $call82;
       $retval$14 = $first$call82;
       break L1;
      }
      break;
     }
     case 111:  {
      ;HEAP32[$ref$tmp89>>2]=0|0;HEAP32[$ref$tmp89+4>>2]=0|0;HEAP32[$ref$tmp89+8>>2]=0|0;
      $call$i468 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5908)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp89,5908,$call$i468);
      __THREW__ = 0;
      $call92 = (invoke_iiiii(78,($add$ptr|0),($last|0),($ref$tmp89|0),($db|0))|0);
      $29 = __THREW__; __THREW__ = 0;
      $30 = $29&1;
      if ($30) {
       $31 = ___cxa_find_matching_catch_2()|0;
       $32 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp89);
       $ehselector$slot$21 = $32;$exn$slot$21 = $31;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp89);
       $cmp94 = ($call92|0)==($add$ptr|0);
       $first$call92 = $cmp94 ? $first : $call92;
       $retval$14 = $first$call92;
       break L1;
      }
      break;
     }
     case 118:  {
      $call98 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call98;
      break L1;
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 100:  {
     $33 = HEAP8[$arrayidx17>>0]|0;
     $conv102 = $33 << 24 >> 24;
     switch ($conv102|0) {
     case 97:  {
      $call105 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr104,$last,$db)|0);
      $cmp107 = ($call105|0)==($add$ptr104|0);
      if ($cmp107) {
       $retval$14 = $first;
       break L1;
      }
      $34 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $35 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($34|0)==($35|0);
      if ($cmp$i) {
       $retval$14 = $first;
       break L1;
      }
      ;HEAP32[$ref$tmp114>>2]=0|0;HEAP32[$ref$tmp114+4>>2]=0|0;HEAP32[$ref$tmp114+8>>2]=0|0;
      L53: do {
       if ($parsed_gs$0$off0) {
        $call$i469 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5910)|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp114,5910,$call$i469);
       } else {
        $__i$0$i$i = 0;
        while(1) {
         $exitcond$i$i = ($__i$0$i$i|0)==(3);
         if ($exitcond$i$i) {
          break L53;
         }
         $arrayidx$i$i = (($ref$tmp114) + ($__i$0$i$i<<2)|0);
         HEAP32[$arrayidx$i$i>>2] = 0;
         $inc$i$i = (($__i$0$i$i) + 1)|0;
         $__i$0$i$i = $inc$i$i;
        }
       }
      } while(0);
      __THREW__ = 0;
      $call$i470471 = (invoke_iii(54,($ref$tmp114|0),(5913|0))|0);
      $36 = __THREW__; __THREW__ = 0;
      $37 = $36&1;
      if ($37) {
       $53 = ___cxa_find_matching_catch_2()|0;
       $54 = tempRet0;
       $ehselector$slot$1 = $54;$exn$slot$1 = $53;
      } else {
       ;HEAP32[$ref$tmp113>>2]=HEAP32[$ref$tmp114>>2]|0;HEAP32[$ref$tmp113+4>>2]=HEAP32[$ref$tmp114+4>>2]|0;HEAP32[$ref$tmp113+8>>2]=HEAP32[$ref$tmp114+8>>2]|0;
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $arrayidx$i$i$i = (($ref$tmp114) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$arrayidx$i$i$i>>2] = 0;
        $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $inc$i$i$i;
       }
       $38 = HEAP32[$__end_$i>>2]|0;
       $add$ptr$i = ((($38)) + -24|0);
       __THREW__ = 0;
       invoke_vii(55,($ref$tmp117|0),($add$ptr$i|0));
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       do {
        if ($40) {
         $55 = ___cxa_find_matching_catch_2()|0;
         $56 = tempRet0;
         $ehselector$slot$0 = $56;$exn$slot$0 = $55;
        } else {
         $__size_$i$i$i$i$i = ((($ref$tmp117)) + 11|0);
         $41 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
         $tobool$i$i$i$i$i = ($41<<24>>24)<(0);
         $42 = HEAP32[$ref$tmp117>>2]|0;
         $cond$i$i$i$i = $tobool$i$i$i$i$i ? $42 : $ref$tmp117;
         $__size_$i3$i$i$i = ((($ref$tmp117)) + 4|0);
         $43 = HEAP32[$__size_$i3$i$i$i>>2]|0;
         $conv$i$i$i$i = $41&255;
         $cond$i$i$i = $tobool$i$i$i$i$i ? $43 : $conv$i$i$i$i;
         __THREW__ = 0;
         $call3$i$i480 = (invoke_iiii(47,($ref$tmp113|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
         $44 = __THREW__; __THREW__ = 0;
         $45 = $44&1;
         if ($45) {
          $57 = ___cxa_find_matching_catch_2()|0;
          $58 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp117);
          $ehselector$slot$0 = $58;$exn$slot$0 = $57;
          break;
         }
         ;HEAP32[$ref$tmp112>>2]=HEAP32[$ref$tmp113>>2]|0;HEAP32[$ref$tmp112+4>>2]=HEAP32[$ref$tmp113+4>>2]|0;HEAP32[$ref$tmp112+8>>2]=HEAP32[$ref$tmp113+8>>2]|0;
         $__i$0$i$i$i474 = 0;
         while(1) {
          $exitcond$i$i$i475 = ($__i$0$i$i$i474|0)==(3);
          if ($exitcond$i$i$i475) {
           break;
          }
          $arrayidx$i$i$i477 = (($ref$tmp113) + ($__i$0$i$i$i474<<2)|0);
          HEAP32[$arrayidx$i$i$i477>>2] = 0;
          $inc$i$i$i478 = (($__i$0$i$i$i474) + 1)|0;
          $__i$0$i$i$i474 = $inc$i$i$i478;
         }
         $46 = HEAP32[$__end_$i>>2]|0;
         $first129 = ((($46)) + -24|0);
         $__size_$i1$i$i$i$i = ((($first129)) + 11|0);
         $47 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
         $tobool$i$i$i$i$i484 = ($47<<24>>24)<(0);
         if ($tobool$i$i$i$i$i484) {
          $48 = HEAP32[$first129>>2]|0;
          HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($48,$ref$tmp$i$i$i$i);
          $__size_$i2$i$i$i$i = ((($46)) + -20|0);
          HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
         } else {
          HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($first129,$ref$tmp4$i$i$i$i);
          HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
         }
         __THREW__ = 0;
         invoke_vi(51,($first129|0));
         $49 = __THREW__; __THREW__ = 0;
         $50 = $49&1;
         if ($50) {
          $51 = ___cxa_find_matching_catch_3(0|0)|0;
          $52 = tempRet0;
          ___clang_call_terminate($51);
          // unreachable;
         }
         ;HEAP32[$first129>>2]=HEAP32[$ref$tmp112>>2]|0;HEAP32[$first129+4>>2]=HEAP32[$ref$tmp112+4>>2]|0;HEAP32[$first129+8>>2]=HEAP32[$ref$tmp112+8>>2]|0;
         $__i$0$i$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
          if ($exitcond$i$i$i$i) {
           break;
          }
          $arrayidx$i$i$i$i = (($ref$tmp112) + ($__i$0$i$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i$i>>2] = 0;
          $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
          $__i$0$i$i$i$i = $inc$i$i$i$i;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp112);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp117);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp113);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp114);
         $retval$14 = $call105;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp113);
       $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp114);
      $ehselector$slot$21 = $ehselector$slot$1;$exn$slot$21 = $exn$slot$1;
      break L7;
      break;
     }
     case 99:  {
      $call141 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call141;
      break L1;
      break;
     }
     case 101:  {
      ;HEAP32[$ref$tmp144>>2]=0|0;HEAP32[$ref$tmp144+4>>2]=0|0;HEAP32[$ref$tmp144+8>>2]=0|0;
      $call$i487 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5856)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp144,5856,$call$i487);
      __THREW__ = 0;
      $call147 = (invoke_iiiii(78,($add$ptr|0),($last|0),($ref$tmp144|0),($db|0))|0);
      $59 = __THREW__; __THREW__ = 0;
      $60 = $59&1;
      if ($60) {
       $61 = ___cxa_find_matching_catch_2()|0;
       $62 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp144);
       $ehselector$slot$21 = $62;$exn$slot$21 = $61;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp144);
       $cmp151 = ($call147|0)==($add$ptr|0);
       $first$call147 = $cmp151 ? $first : $call147;
       $retval$14 = $first$call147;
       break L1;
      }
      break;
     }
     case 108:  {
      $call157 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr104,$last,$db)|0);
      $cmp159 = ($call157|0)==($add$ptr104|0);
      if ($cmp159) {
       $retval$14 = $first;
       break L1;
      }
      $63 = HEAP32[$db>>2]|0;
      $__end_$i489 = ((($db)) + 4|0);
      $64 = HEAP32[$__end_$i489>>2]|0;
      $cmp$i490 = ($63|0)==($64|0);
      if ($cmp$i490) {
       $retval$14 = $first;
       break L1;
      }
      ;HEAP32[$ref$tmp167>>2]=0|0;HEAP32[$ref$tmp167+4>>2]=0|0;HEAP32[$ref$tmp167+8>>2]=0|0;
      L98: do {
       if ($parsed_gs$0$off0) {
        $call$i491 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5910)|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp167,5910,$call$i491);
       } else {
        $__i$0$i$i493 = 0;
        while(1) {
         $exitcond$i$i494 = ($__i$0$i$i493|0)==(3);
         if ($exitcond$i$i494) {
          break L98;
         }
         $arrayidx$i$i496 = (($ref$tmp167) + ($__i$0$i$i493<<2)|0);
         HEAP32[$arrayidx$i$i496>>2] = 0;
         $inc$i$i497 = (($__i$0$i$i493) + 1)|0;
         $__i$0$i$i493 = $inc$i$i497;
        }
       }
      } while(0);
      __THREW__ = 0;
      $call$i500508 = (invoke_iii(54,($ref$tmp167|0),(5923|0))|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       $82 = ___cxa_find_matching_catch_2()|0;
       $83 = tempRet0;
       $ehselector$slot$3 = $83;$exn$slot$3 = $82;
      } else {
       ;HEAP32[$ref$tmp166>>2]=HEAP32[$ref$tmp167>>2]|0;HEAP32[$ref$tmp166+4>>2]=HEAP32[$ref$tmp167+4>>2]|0;HEAP32[$ref$tmp166+8>>2]=HEAP32[$ref$tmp167+8>>2]|0;
       $__i$0$i$i$i502 = 0;
       while(1) {
        $exitcond$i$i$i503 = ($__i$0$i$i$i502|0)==(3);
        if ($exitcond$i$i$i503) {
         break;
        }
        $arrayidx$i$i$i505 = (($ref$tmp167) + ($__i$0$i$i$i502<<2)|0);
        HEAP32[$arrayidx$i$i$i505>>2] = 0;
        $inc$i$i$i506 = (($__i$0$i$i$i502) + 1)|0;
        $__i$0$i$i$i502 = $inc$i$i$i506;
       }
       $67 = HEAP32[$__end_$i489>>2]|0;
       $add$ptr$i511 = ((($67)) + -24|0);
       __THREW__ = 0;
       invoke_vii(55,($ref$tmp174|0),($add$ptr$i511|0));
       $68 = __THREW__; __THREW__ = 0;
       $69 = $68&1;
       do {
        if ($69) {
         $84 = ___cxa_find_matching_catch_2()|0;
         $85 = tempRet0;
         $ehselector$slot$2 = $85;$exn$slot$2 = $84;
        } else {
         $__size_$i$i$i$i$i513 = ((($ref$tmp174)) + 11|0);
         $70 = HEAP8[$__size_$i$i$i$i$i513>>0]|0;
         $tobool$i$i$i$i$i514 = ($70<<24>>24)<(0);
         $71 = HEAP32[$ref$tmp174>>2]|0;
         $cond$i$i$i$i517 = $tobool$i$i$i$i$i514 ? $71 : $ref$tmp174;
         $__size_$i3$i$i$i518 = ((($ref$tmp174)) + 4|0);
         $72 = HEAP32[$__size_$i3$i$i$i518>>2]|0;
         $conv$i$i$i$i519 = $70&255;
         $cond$i$i$i520 = $tobool$i$i$i$i$i514 ? $72 : $conv$i$i$i$i519;
         __THREW__ = 0;
         $call3$i$i529 = (invoke_iiii(47,($ref$tmp166|0),($cond$i$i$i$i517|0),($cond$i$i$i520|0))|0);
         $73 = __THREW__; __THREW__ = 0;
         $74 = $73&1;
         if ($74) {
          $86 = ___cxa_find_matching_catch_2()|0;
          $87 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp174);
          $ehselector$slot$2 = $87;$exn$slot$2 = $86;
          break;
         }
         ;HEAP32[$ref$tmp165>>2]=HEAP32[$ref$tmp166>>2]|0;HEAP32[$ref$tmp165+4>>2]=HEAP32[$ref$tmp166+4>>2]|0;HEAP32[$ref$tmp165+8>>2]=HEAP32[$ref$tmp166+8>>2]|0;
         $__i$0$i$i$i522 = 0;
         while(1) {
          $exitcond$i$i$i523 = ($__i$0$i$i$i522|0)==(3);
          if ($exitcond$i$i$i523) {
           break;
          }
          $arrayidx$i$i$i525 = (($ref$tmp166) + ($__i$0$i$i$i522<<2)|0);
          HEAP32[$arrayidx$i$i$i525>>2] = 0;
          $inc$i$i$i526 = (($__i$0$i$i$i522) + 1)|0;
          $__i$0$i$i$i522 = $inc$i$i$i526;
         }
         $75 = HEAP32[$__end_$i489>>2]|0;
         $first186 = ((($75)) + -24|0);
         $__size_$i1$i$i$i$i536 = ((($first186)) + 11|0);
         $76 = HEAP8[$__size_$i1$i$i$i$i536>>0]|0;
         $tobool$i$i$i$i$i537 = ($76<<24>>24)<(0);
         if ($tobool$i$i$i$i$i537) {
          $77 = HEAP32[$first186>>2]|0;
          HEAP8[$ref$tmp$i$i$i$i533>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($77,$ref$tmp$i$i$i$i533);
          $__size_$i2$i$i$i$i539 = ((($75)) + -20|0);
          HEAP32[$__size_$i2$i$i$i$i539>>2] = 0;
         } else {
          HEAP8[$ref$tmp4$i$i$i$i534>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($first186,$ref$tmp4$i$i$i$i534);
          HEAP8[$__size_$i1$i$i$i$i536>>0] = 0;
         }
         __THREW__ = 0;
         invoke_vi(51,($first186|0));
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          $80 = ___cxa_find_matching_catch_3(0|0)|0;
          $81 = tempRet0;
          ___clang_call_terminate($80);
          // unreachable;
         }
         ;HEAP32[$first186>>2]=HEAP32[$ref$tmp165>>2]|0;HEAP32[$first186+4>>2]=HEAP32[$ref$tmp165+4>>2]|0;HEAP32[$first186+8>>2]=HEAP32[$ref$tmp165+8>>2]|0;
         $__i$0$i$i$i$i547 = 0;
         while(1) {
          $exitcond$i$i$i$i548 = ($__i$0$i$i$i$i547|0)==(3);
          if ($exitcond$i$i$i$i548) {
           break;
          }
          $arrayidx$i$i$i$i550 = (($ref$tmp165) + ($__i$0$i$i$i$i547<<2)|0);
          HEAP32[$arrayidx$i$i$i$i550>>2] = 0;
          $inc$i$i$i$i551 = (($__i$0$i$i$i$i547) + 1)|0;
          $__i$0$i$i$i$i547 = $inc$i$i$i$i551;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp165);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp174);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp166);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp167);
         $retval$14 = $call157;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp166);
       $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp167);
      $ehselector$slot$21 = $ehselector$slot$3;$exn$slot$21 = $exn$slot$3;
      break L7;
      break;
     }
     case 110:  {
      $call203 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call203;
      break L1;
      break;
     }
     case 115:  {
      $call205 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call205;
      break L1;
      break;
     }
     case 116:  {
      $call207 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call207;
      break L1;
      break;
     }
     case 118:  {
      ;HEAP32[$ref$tmp210>>2]=0|0;HEAP32[$ref$tmp210+4>>2]=0|0;HEAP32[$ref$tmp210+8>>2]=0|0;
      $call$i554 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5931)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp210,5931,$call$i554);
      __THREW__ = 0;
      $call213 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp210|0),($db|0))|0);
      $88 = __THREW__; __THREW__ = 0;
      $89 = $88&1;
      if ($89) {
       $90 = ___cxa_find_matching_catch_2()|0;
       $91 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp210);
       $ehselector$slot$21 = $91;$exn$slot$21 = $90;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp210);
       $cmp217 = ($call213|0)==($add$ptr|0);
       $first$call213 = $cmp217 ? $first : $call213;
       $retval$14 = $first$call213;
       break L1;
      }
      break;
     }
     case 86:  {
      ;HEAP32[$ref$tmp222>>2]=0|0;HEAP32[$ref$tmp222+4>>2]=0|0;HEAP32[$ref$tmp222+8>>2]=0|0;
      $call$i555 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5933)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp222,5933,$call$i555);
      __THREW__ = 0;
      $call225 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp222|0),($db|0))|0);
      $92 = __THREW__; __THREW__ = 0;
      $93 = $92&1;
      if ($93) {
       $94 = ___cxa_find_matching_catch_2()|0;
       $95 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp222);
       $ehselector$slot$21 = $95;$exn$slot$21 = $94;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp222);
       $cmp229 = ($call225|0)==($add$ptr|0);
       $first$call225 = $cmp229 ? $first : $call225;
       $retval$14 = $first$call225;
       break L1;
      }
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 101:  {
     $96 = HEAP8[$arrayidx17>>0]|0;
     $conv235 = $96 << 24 >> 24;
     switch ($conv235|0) {
     case 111:  {
      ;HEAP32[$ref$tmp238>>2]=0|0;HEAP32[$ref$tmp238+4>>2]=0|0;HEAP32[$ref$tmp238+8>>2]=0|0;
      $call$i556 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5936)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp238,5936,$call$i556);
      __THREW__ = 0;
      $call241 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp238|0),($db|0))|0);
      $97 = __THREW__; __THREW__ = 0;
      $98 = $97&1;
      if ($98) {
       $99 = ___cxa_find_matching_catch_2()|0;
       $100 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp238);
       $ehselector$slot$21 = $100;$exn$slot$21 = $99;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp238);
       $cmp245 = ($call241|0)==($add$ptr|0);
       $first$call241 = $cmp245 ? $first : $call241;
       $retval$14 = $first$call241;
       break L1;
      }
      break;
     }
     case 79:  {
      ;HEAP32[$ref$tmp250>>2]=0|0;HEAP32[$ref$tmp250+4>>2]=0|0;HEAP32[$ref$tmp250+8>>2]=0|0;
      $call$i557 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5938)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp250,5938,$call$i557);
      __THREW__ = 0;
      $call253 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp250|0),($db|0))|0);
      $101 = __THREW__; __THREW__ = 0;
      $102 = $101&1;
      if ($102) {
       $103 = ___cxa_find_matching_catch_2()|0;
       $104 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp250);
       $ehselector$slot$21 = $104;$exn$slot$21 = $103;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp250);
       $cmp257 = ($call253|0)==($add$ptr|0);
       $first$call253 = $cmp257 ? $first : $call253;
       $retval$14 = $first$call253;
       break L1;
      }
      break;
     }
     case 113:  {
      ;HEAP32[$ref$tmp262>>2]=0|0;HEAP32[$ref$tmp262+4>>2]=0|0;HEAP32[$ref$tmp262+8>>2]=0|0;
      $call$i558 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5941)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp262,5941,$call$i558);
      __THREW__ = 0;
      $call265 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp262|0),($db|0))|0);
      $105 = __THREW__; __THREW__ = 0;
      $106 = $105&1;
      if ($106) {
       $107 = ___cxa_find_matching_catch_2()|0;
       $108 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp262);
       $ehselector$slot$21 = $108;$exn$slot$21 = $107;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp262);
       $cmp269 = ($call265|0)==($add$ptr|0);
       $first$call265 = $cmp269 ? $first : $call265;
       $retval$14 = $first$call265;
       break L1;
      }
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 103:  {
     $109 = HEAP8[$arrayidx17>>0]|0;
     $conv275 = $109 << 24 >> 24;
     switch ($conv275|0) {
     case 101:  {
      ;HEAP32[$ref$tmp278>>2]=0|0;HEAP32[$ref$tmp278+4>>2]=0|0;HEAP32[$ref$tmp278+8>>2]=0|0;
      $call$i559 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5944)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp278,5944,$call$i559);
      __THREW__ = 0;
      $call281 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp278|0),($db|0))|0);
      $110 = __THREW__; __THREW__ = 0;
      $111 = $110&1;
      if ($111) {
       $112 = ___cxa_find_matching_catch_2()|0;
       $113 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp278);
       $ehselector$slot$21 = $113;$exn$slot$21 = $112;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp278);
       $cmp285 = ($call281|0)==($add$ptr|0);
       $first$call281 = $cmp285 ? $first : $call281;
       $retval$14 = $first$call281;
       break L1;
      }
      break;
     }
     case 116:  {
      ;HEAP32[$ref$tmp290>>2]=0|0;HEAP32[$ref$tmp290+4>>2]=0|0;HEAP32[$ref$tmp290+8>>2]=0|0;
      $call$i560 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5874)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp290,5874,$call$i560);
      __THREW__ = 0;
      $call293 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp290|0),($db|0))|0);
      $114 = __THREW__; __THREW__ = 0;
      $115 = $114&1;
      if ($115) {
       $116 = ___cxa_find_matching_catch_2()|0;
       $117 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp290);
       $ehselector$slot$21 = $117;$exn$slot$21 = $116;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp290);
       $cmp297 = ($call293|0)==($add$ptr|0);
       $first$call293 = $cmp297 ? $first : $call293;
       $retval$14 = $first$call293;
       break L1;
      }
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 105:  {
     $118 = HEAP8[$arrayidx17>>0]|0;
     $cmp304 = ($118<<24>>24)==(120);
     if (!($cmp304)) {
      $retval$14 = $first;
      break L1;
     }
     $call308 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp310 = ($call308|0)==($add$ptr|0);
     if ($cmp310) {
      $retval$14 = $first;
      break L1;
     }
     $call312 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call308,$last,$db)|0);
     $cmp313 = ($call312|0)==($call308|0);
     $__end_$i608 = ((($db)) + 4|0);
     if ($cmp313) {
      $148 = HEAP32[$__end_$i608>>2]|0;
      $add$ptr$i609 = ((($148)) + -24|0);
      $149 = $148;
      while(1) {
       $cmp$i$i$i610 = ($149|0)==($add$ptr$i609|0);
       if ($cmp$i$i$i610) {
        $retval$14 = $first;
        break L1;
       }
       $incdec$ptr$i$i$i612 = ((($149)) + -24|0);
       HEAP32[$__end_$i608>>2] = $incdec$ptr$i$i$i612;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i612);
       $$pre$i613 = HEAP32[$__end_$i608>>2]|0;
       $149 = $$pre$i613;
      }
     }
     $119 = HEAP32[$__end_$i608>>2]|0;
     $120 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i = (($119) - ($120))|0;
     $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
     $cmp317 = ($sub$ptr$div$i>>>0)<(2);
     if ($cmp317) {
      $retval$14 = $first;
      break L1;
     }
     $121 = $119;
     $add$ptr$i563 = ((($121)) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2,$add$ptr$i563);
     $122 = HEAP32[$__end_$i608>>2]|0;
     $add$ptr$i565 = ((($122)) + -24|0);
     $123 = $122;
     while(1) {
      $cmp$i$i$i = ($123|0)==($add$ptr$i565|0);
      if ($cmp$i$i$i) {
       break;
      }
      $incdec$ptr$i$i$i = ((($123)) + -24|0);
      HEAP32[$__end_$i608>>2] = $incdec$ptr$i$i$i;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
      $$pre$i = HEAP32[$__end_$i608>>2]|0;
      $123 = $$pre$i;
     }
     $add$ptr$i567 = ((($122)) + -48|0);
     __THREW__ = 0;
     invoke_vii(55,($op1|0),($add$ptr$i567|0));
     $124 = __THREW__; __THREW__ = 0;
     $125 = $124&1;
     if ($125) {
      $138 = ___cxa_find_matching_catch_2()|0;
      $139 = tempRet0;
      $ehselector$slot$8 = $139;$exn$slot$8 = $138;
     } else {
      __THREW__ = 0;
      invoke_viii(76,($ref$tmp332|0),(5838|0),($op1|0));
      $126 = __THREW__; __THREW__ = 0;
      $127 = $126&1;
      if ($127) {
       $140 = ___cxa_find_matching_catch_2()|0;
       $141 = tempRet0;
       $ehselector$slot$7 = $141;$exn$slot$7 = $140;
      } else {
       __THREW__ = 0;
       $call$i568576 = (invoke_iii(54,($ref$tmp332|0),(5947|0))|0);
       $128 = __THREW__; __THREW__ = 0;
       $129 = $128&1;
       if ($129) {
        $142 = ___cxa_find_matching_catch_2()|0;
        $143 = tempRet0;
        $ehselector$slot$6 = $143;$exn$slot$6 = $142;
       } else {
        ;HEAP32[$ref$tmp331>>2]=HEAP32[$ref$tmp332>>2]|0;HEAP32[$ref$tmp331+4>>2]=HEAP32[$ref$tmp332+4>>2]|0;HEAP32[$ref$tmp331+8>>2]=HEAP32[$ref$tmp332+8>>2]|0;
        $__i$0$i$i$i570 = 0;
        while(1) {
         $exitcond$i$i$i571 = ($__i$0$i$i$i570|0)==(3);
         if ($exitcond$i$i$i571) {
          break;
         }
         $arrayidx$i$i$i573 = (($ref$tmp332) + ($__i$0$i$i$i570<<2)|0);
         HEAP32[$arrayidx$i$i$i573>>2] = 0;
         $inc$i$i$i574 = (($__i$0$i$i$i570) + 1)|0;
         $__i$0$i$i$i570 = $inc$i$i$i574;
        }
        $__size_$i$i$i$i$i579 = ((($op2)) + 11|0);
        $130 = HEAP8[$__size_$i$i$i$i$i579>>0]|0;
        $tobool$i$i$i$i$i580 = ($130<<24>>24)<(0);
        $131 = HEAP32[$op2>>2]|0;
        $cond$i$i$i$i583 = $tobool$i$i$i$i$i580 ? $131 : $op2;
        $__size_$i3$i$i$i584 = ((($op2)) + 4|0);
        $132 = HEAP32[$__size_$i3$i$i$i584>>2]|0;
        $conv$i$i$i$i585 = $130&255;
        $cond$i$i$i586 = $tobool$i$i$i$i$i580 ? $132 : $conv$i$i$i$i585;
        __THREW__ = 0;
        $call3$i$i595 = (invoke_iiii(47,($ref$tmp331|0),($cond$i$i$i$i583|0),($cond$i$i$i586|0))|0);
        $133 = __THREW__; __THREW__ = 0;
        $134 = $133&1;
        do {
         if ($134) {
          $144 = ___cxa_find_matching_catch_2()|0;
          $145 = tempRet0;
          $ehselector$slot$5 = $145;$exn$slot$5 = $144;
         } else {
          ;HEAP32[$ref$tmp330>>2]=HEAP32[$ref$tmp331>>2]|0;HEAP32[$ref$tmp330+4>>2]=HEAP32[$ref$tmp331+4>>2]|0;HEAP32[$ref$tmp330+8>>2]=HEAP32[$ref$tmp331+8>>2]|0;
          $__i$0$i$i$i588 = 0;
          while(1) {
           $exitcond$i$i$i589 = ($__i$0$i$i$i588|0)==(3);
           if ($exitcond$i$i$i589) {
            break;
           }
           $arrayidx$i$i$i591 = (($ref$tmp331) + ($__i$0$i$i$i588<<2)|0);
           HEAP32[$arrayidx$i$i$i591>>2] = 0;
           $inc$i$i$i592 = (($__i$0$i$i$i588) + 1)|0;
           $__i$0$i$i$i588 = $inc$i$i$i592;
          }
          __THREW__ = 0;
          $call$i596604 = (invoke_iii(54,($ref$tmp330|0),(5885|0))|0);
          $135 = __THREW__; __THREW__ = 0;
          $136 = $135&1;
          if ($136) {
           $146 = ___cxa_find_matching_catch_2()|0;
           $147 = tempRet0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp330);
           $ehselector$slot$5 = $147;$exn$slot$5 = $146;
           break;
          }
          ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp330>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp330+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp330+8>>2]|0;
          $__i$0$i$i$i598 = 0;
          while(1) {
           $exitcond$i$i$i599 = ($__i$0$i$i$i598|0)==(3);
           if ($exitcond$i$i$i599) {
            break;
           }
           $arrayidx$i$i$i601 = (($ref$tmp330) + ($__i$0$i$i$i598<<2)|0);
           HEAP32[$arrayidx$i$i$i601>>2] = 0;
           $inc$i$i$i602 = (($__i$0$i$i$i598) + 1)|0;
           $__i$0$i$i$i598 = $inc$i$i$i602;
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp329,$agg$tmp);
          $137 = HEAP32[$__end_$i608>>2]|0;
          $add$ptr$i607 = ((($137)) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i607,$ref$tmp329);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp329);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp330);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp331);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp332);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
          $retval$14 = $call312;
          break L1;
         }
        } while(0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp331);
        $ehselector$slot$6 = $ehselector$slot$5;$exn$slot$6 = $exn$slot$5;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp332);
       $ehselector$slot$7 = $ehselector$slot$6;$exn$slot$7 = $exn$slot$6;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
      $ehselector$slot$8 = $ehselector$slot$7;$exn$slot$8 = $exn$slot$7;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
     $ehselector$slot$21 = $ehselector$slot$8;$exn$slot$21 = $exn$slot$8;
     break;
    }
    case 108:  {
     $150 = HEAP8[$arrayidx17>>0]|0;
     $conv376 = $150 << 24 >> 24;
     switch ($conv376|0) {
     case 101:  {
      ;HEAP32[$ref$tmp379>>2]=0|0;HEAP32[$ref$tmp379+4>>2]=0|0;HEAP32[$ref$tmp379+8>>2]=0|0;
      $call$i616 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5950)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp379,5950,$call$i616);
      __THREW__ = 0;
      $call382 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp379|0),($db|0))|0);
      $151 = __THREW__; __THREW__ = 0;
      $152 = $151&1;
      if ($152) {
       $153 = ___cxa_find_matching_catch_2()|0;
       $154 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp379);
       $ehselector$slot$21 = $154;$exn$slot$21 = $153;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp379);
       $cmp386 = ($call382|0)==($add$ptr|0);
       $first$call382 = $cmp386 ? $first : $call382;
       $retval$14 = $first$call382;
       break L1;
      }
      break;
     }
     case 115:  {
      ;HEAP32[$ref$tmp391>>2]=0|0;HEAP32[$ref$tmp391+4>>2]=0|0;HEAP32[$ref$tmp391+8>>2]=0|0;
      $call$i617 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5953)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp391,5953,$call$i617);
      __THREW__ = 0;
      $call394 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp391|0),($db|0))|0);
      $155 = __THREW__; __THREW__ = 0;
      $156 = $155&1;
      if ($156) {
       $157 = ___cxa_find_matching_catch_2()|0;
       $158 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp391);
       $ehselector$slot$21 = $158;$exn$slot$21 = $157;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp391);
       $cmp398 = ($call394|0)==($add$ptr|0);
       $first$call394 = $cmp398 ? $first : $call394;
       $retval$14 = $first$call394;
       break L1;
      }
      break;
     }
     case 83:  {
      ;HEAP32[$ref$tmp403>>2]=0|0;HEAP32[$ref$tmp403+4>>2]=0|0;HEAP32[$ref$tmp403+8>>2]=0|0;
      $call$i618 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5956)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp403,5956,$call$i618);
      __THREW__ = 0;
      $call406 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp403|0),($db|0))|0);
      $159 = __THREW__; __THREW__ = 0;
      $160 = $159&1;
      if ($160) {
       $161 = ___cxa_find_matching_catch_2()|0;
       $162 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp403);
       $ehselector$slot$21 = $162;$exn$slot$21 = $161;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp403);
       $cmp410 = ($call406|0)==($add$ptr|0);
       $first$call406 = $cmp410 ? $first : $call406;
       $retval$14 = $first$call406;
       break L1;
      }
      break;
     }
     case 116:  {
      ;HEAP32[$ref$tmp415>>2]=0|0;HEAP32[$ref$tmp415+4>>2]=0|0;HEAP32[$ref$tmp415+8>>2]=0|0;
      $call$i619 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5872)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp415,5872,$call$i619);
      __THREW__ = 0;
      $call418 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp415|0),($db|0))|0);
      $163 = __THREW__; __THREW__ = 0;
      $164 = $163&1;
      if ($164) {
       $165 = ___cxa_find_matching_catch_2()|0;
       $166 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp415);
       $ehselector$slot$21 = $166;$exn$slot$21 = $165;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp415);
       $cmp422 = ($call418|0)==($add$ptr|0);
       $first$call418 = $cmp422 ? $first : $call418;
       $retval$14 = $first$call418;
       break L1;
      }
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 109:  {
     $167 = HEAP8[$arrayidx17>>0]|0;
     $conv428 = $167 << 24 >> 24;
     switch ($conv428|0) {
     case 105:  {
      ;HEAP32[$ref$tmp431>>2]=0|0;HEAP32[$ref$tmp431+4>>2]=0|0;HEAP32[$ref$tmp431+8>>2]=0|0;
      $call$i620 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5960)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp431,5960,$call$i620);
      __THREW__ = 0;
      $call434 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp431|0),($db|0))|0);
      $168 = __THREW__; __THREW__ = 0;
      $169 = $168&1;
      if ($169) {
       $170 = ___cxa_find_matching_catch_2()|0;
       $171 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp431);
       $ehselector$slot$21 = $171;$exn$slot$21 = $170;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp431);
       $cmp438 = ($call434|0)==($add$ptr|0);
       $first$call434 = $cmp438 ? $first : $call434;
       $retval$14 = $first$call434;
       break L1;
      }
      break;
     }
     case 73:  {
      ;HEAP32[$ref$tmp443>>2]=0|0;HEAP32[$ref$tmp443+4>>2]=0|0;HEAP32[$ref$tmp443+8>>2]=0|0;
      $call$i621 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5962)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp443,5962,$call$i621);
      __THREW__ = 0;
      $call446 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp443|0),($db|0))|0);
      $172 = __THREW__; __THREW__ = 0;
      $173 = $172&1;
      if ($173) {
       $174 = ___cxa_find_matching_catch_2()|0;
       $175 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp443);
       $ehselector$slot$21 = $175;$exn$slot$21 = $174;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp443);
       $cmp450 = ($call446|0)==($add$ptr|0);
       $first$call446 = $cmp450 ? $first : $call446;
       $retval$14 = $first$call446;
       break L1;
      }
      break;
     }
     case 108:  {
      ;HEAP32[$ref$tmp455>>2]=0|0;HEAP32[$ref$tmp455+4>>2]=0|0;HEAP32[$ref$tmp455+8>>2]=0|0;
      $call$i622 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5856)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp455,5856,$call$i622);
      __THREW__ = 0;
      $call458 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp455|0),($db|0))|0);
      $176 = __THREW__; __THREW__ = 0;
      $177 = $176&1;
      if ($177) {
       $178 = ___cxa_find_matching_catch_2()|0;
       $179 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp455);
       $ehselector$slot$21 = $179;$exn$slot$21 = $178;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp455);
       $cmp462 = ($call458|0)==($add$ptr|0);
       $first$call458 = $cmp462 ? $first : $call458;
       $retval$14 = $first$call458;
       break L1;
      }
      break;
     }
     case 76:  {
      ;HEAP32[$ref$tmp467>>2]=0|0;HEAP32[$ref$tmp467+4>>2]=0|0;HEAP32[$ref$tmp467+8>>2]=0|0;
      $call$i623 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5965)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp467,5965,$call$i623);
      __THREW__ = 0;
      $call470 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp467|0),($db|0))|0);
      $180 = __THREW__; __THREW__ = 0;
      $181 = $180&1;
      if ($181) {
       $182 = ___cxa_find_matching_catch_2()|0;
       $183 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp467);
       $ehselector$slot$21 = $183;$exn$slot$21 = $182;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp467);
       $cmp474 = ($call470|0)==($add$ptr|0);
       $first$call470 = $cmp474 ? $first : $call470;
       $retval$14 = $first$call470;
       break L1;
      }
      break;
     }
     case 109:  {
      if ($cmp479) {
       $184 = HEAP8[$add$ptr>>0]|0;
       $cmp483 = ($184<<24>>24)==(95);
       if ($cmp483) {
        ;HEAP32[$ref$tmp486>>2]=0|0;HEAP32[$ref$tmp486+4>>2]=0|0;HEAP32[$ref$tmp486+8>>2]=0|0;
        $call$i624 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5968)|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp486,5968,$call$i624);
        __THREW__ = 0;
        $call489 = (invoke_iiiii(78,($add$ptr485|0),($last|0),($ref$tmp486|0),($db|0))|0);
        $185 = __THREW__; __THREW__ = 0;
        $186 = $185&1;
        if ($186) {
         $187 = ___cxa_find_matching_catch_2()|0;
         $188 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp486);
         $ehselector$slot$21 = $188;$exn$slot$21 = $187;
         break L7;
        } else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp486);
         $cmp493 = ($call489|0)==($add$ptr485|0);
         $first$call489 = $cmp493 ? $first : $call489;
         $retval$14 = $first$call489;
         break L1;
        }
       }
      }
      $call499 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp501 = ($call499|0)==($add$ptr|0);
      if ($cmp501) {
       $retval$14 = $first;
       break L1;
      }
      $189 = HEAP32[$db>>2]|0;
      $__end_$i626 = ((($db)) + 4|0);
      $190 = HEAP32[$__end_$i626>>2]|0;
      $cmp$i627 = ($189|0)==($190|0);
      if ($cmp$i627) {
       $retval$14 = $first;
       break L1;
      }
      $add$ptr$i629 = ((($190)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp510,$add$ptr$i629);
      __THREW__ = 0;
      $call$i630638 = (invoke_iiii(56,($ref$tmp510|0),0,(5838|0))|0);
      $191 = __THREW__; __THREW__ = 0;
      $192 = $191&1;
      do {
       if ($192) {
        $196 = ___cxa_find_matching_catch_2()|0;
        $197 = tempRet0;
        $ehselector$slot$10 = $197;$exn$slot$10 = $196;
       } else {
        ;HEAP32[$ref$tmp509>>2]=HEAP32[$ref$tmp510>>2]|0;HEAP32[$ref$tmp509+4>>2]=HEAP32[$ref$tmp510+4>>2]|0;HEAP32[$ref$tmp509+8>>2]=HEAP32[$ref$tmp510+8>>2]|0;
        $__i$0$i$i$i632 = 0;
        while(1) {
         $exitcond$i$i$i633 = ($__i$0$i$i$i632|0)==(3);
         if ($exitcond$i$i$i633) {
          break;
         }
         $arrayidx$i$i$i635 = (($ref$tmp510) + ($__i$0$i$i$i632<<2)|0);
         HEAP32[$arrayidx$i$i$i635>>2] = 0;
         $inc$i$i$i636 = (($__i$0$i$i$i632) + 1)|0;
         $__i$0$i$i$i632 = $inc$i$i$i636;
        }
        __THREW__ = 0;
        $call$i639647 = (invoke_iii(54,($ref$tmp509|0),(5971|0))|0);
        $193 = __THREW__; __THREW__ = 0;
        $194 = $193&1;
        if ($194) {
         $198 = ___cxa_find_matching_catch_2()|0;
         $199 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp509);
         $ehselector$slot$10 = $199;$exn$slot$10 = $198;
         break;
        }
        ;HEAP32[$agg$tmp508>>2]=HEAP32[$ref$tmp509>>2]|0;HEAP32[$agg$tmp508+4>>2]=HEAP32[$ref$tmp509+4>>2]|0;HEAP32[$agg$tmp508+8>>2]=HEAP32[$ref$tmp509+8>>2]|0;
        $__i$0$i$i$i641 = 0;
        while(1) {
         $exitcond$i$i$i642 = ($__i$0$i$i$i641|0)==(3);
         if ($exitcond$i$i$i642) {
          break;
         }
         $arrayidx$i$i$i644 = (($ref$tmp509) + ($__i$0$i$i$i641<<2)|0);
         HEAP32[$arrayidx$i$i$i644>>2] = 0;
         $inc$i$i$i645 = (($__i$0$i$i$i641) + 1)|0;
         $__i$0$i$i$i641 = $inc$i$i$i645;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp507,$agg$tmp508);
        $195 = HEAP32[$__end_$i626>>2]|0;
        $add$ptr$i650 = ((($195)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i650,$ref$tmp507);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp507);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp508);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp509);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp510);
        $retval$14 = $call499;
        break L1;
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp510);
      $ehselector$slot$21 = $ehselector$slot$10;$exn$slot$21 = $exn$slot$10;
      break L7;
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 110:  {
     $200 = HEAP8[$arrayidx17>>0]|0;
     $conv541 = $200 << 24 >> 24;
     switch ($conv541|0) {
     case 119: case 97:  {
      $call543 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call543;
      break L1;
      break;
     }
     case 101:  {
      ;HEAP32[$ref$tmp546>>2]=0|0;HEAP32[$ref$tmp546+4>>2]=0|0;HEAP32[$ref$tmp546+8>>2]=0|0;
      $call$i651 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5975)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp546,5975,$call$i651);
      __THREW__ = 0;
      $call549 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp546|0),($db|0))|0);
      $201 = __THREW__; __THREW__ = 0;
      $202 = $201&1;
      if ($202) {
       $203 = ___cxa_find_matching_catch_2()|0;
       $204 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp546);
       $ehselector$slot$21 = $204;$exn$slot$21 = $203;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp546);
       $cmp553 = ($call549|0)==($add$ptr|0);
       $first$call549 = $cmp553 ? $first : $call549;
       $retval$14 = $first$call549;
       break L1;
      }
      break;
     }
     case 103:  {
      ;HEAP32[$ref$tmp558>>2]=0|0;HEAP32[$ref$tmp558+4>>2]=0|0;HEAP32[$ref$tmp558+8>>2]=0|0;
      $call$i652 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5960)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp558,5960,$call$i652);
      __THREW__ = 0;
      $call561 = (invoke_iiiii(78,($add$ptr|0),($last|0),($ref$tmp558|0),($db|0))|0);
      $205 = __THREW__; __THREW__ = 0;
      $206 = $205&1;
      if ($206) {
       $207 = ___cxa_find_matching_catch_2()|0;
       $208 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp558);
       $ehselector$slot$21 = $208;$exn$slot$21 = $207;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp558);
       $cmp565 = ($call561|0)==($add$ptr|0);
       $first$call561 = $cmp565 ? $first : $call561;
       $retval$14 = $first$call561;
       break L1;
      }
      break;
     }
     case 116:  {
      ;HEAP32[$ref$tmp570>>2]=0|0;HEAP32[$ref$tmp570+4>>2]=0|0;HEAP32[$ref$tmp570+8>>2]=0|0;
      $call$i653 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5978)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp570,5978,$call$i653);
      __THREW__ = 0;
      $call573 = (invoke_iiiii(78,($add$ptr|0),($last|0),($ref$tmp570|0),($db|0))|0);
      $209 = __THREW__; __THREW__ = 0;
      $210 = $209&1;
      if ($210) {
       $211 = ___cxa_find_matching_catch_2()|0;
       $212 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp570);
       $ehselector$slot$21 = $212;$exn$slot$21 = $211;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp570);
       $cmp577 = ($call573|0)==($add$ptr|0);
       $first$call573 = $cmp577 ? $first : $call573;
       $retval$14 = $first$call573;
       break L1;
      }
      break;
     }
     case 120:  {
      $call582 = (__ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp584 = ($call582|0)==($add$ptr|0);
      $first$call582 = $cmp584 ? $first : $call582;
      $retval$14 = $first$call582;
      break L1;
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 111:  {
     $213 = HEAP8[$arrayidx17>>0]|0;
     $conv590 = $213 << 24 >> 24;
     switch ($conv590|0) {
     case 110:  {
      $call592 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call592;
      break L1;
      break;
     }
     case 111:  {
      ;HEAP32[$ref$tmp595>>2]=0|0;HEAP32[$ref$tmp595+4>>2]=0|0;HEAP32[$ref$tmp595+8>>2]=0|0;
      $call$i654 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5980)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp595,5980,$call$i654);
      __THREW__ = 0;
      $call598 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp595|0),($db|0))|0);
      $214 = __THREW__; __THREW__ = 0;
      $215 = $214&1;
      if ($215) {
       $216 = ___cxa_find_matching_catch_2()|0;
       $217 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp595);
       $ehselector$slot$21 = $217;$exn$slot$21 = $216;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp595);
       $cmp602 = ($call598|0)==($add$ptr|0);
       $first$call598 = $cmp602 ? $first : $call598;
       $retval$14 = $first$call598;
       break L1;
      }
      break;
     }
     case 114:  {
      ;HEAP32[$ref$tmp607>>2]=0|0;HEAP32[$ref$tmp607+4>>2]=0|0;HEAP32[$ref$tmp607+8>>2]=0|0;
      $call$i655 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5983)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp607,5983,$call$i655);
      __THREW__ = 0;
      $call610 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp607|0),($db|0))|0);
      $218 = __THREW__; __THREW__ = 0;
      $219 = $218&1;
      if ($219) {
       $220 = ___cxa_find_matching_catch_2()|0;
       $221 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp607);
       $ehselector$slot$21 = $221;$exn$slot$21 = $220;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp607);
       $cmp614 = ($call610|0)==($add$ptr|0);
       $first$call610 = $cmp614 ? $first : $call610;
       $retval$14 = $first$call610;
       break L1;
      }
      break;
     }
     case 82:  {
      ;HEAP32[$ref$tmp619>>2]=0|0;HEAP32[$ref$tmp619+4>>2]=0|0;HEAP32[$ref$tmp619+8>>2]=0|0;
      $call$i656 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5985)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp619,5985,$call$i656);
      __THREW__ = 0;
      $call622 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp619|0),($db|0))|0);
      $222 = __THREW__; __THREW__ = 0;
      $223 = $222&1;
      if ($223) {
       $224 = ___cxa_find_matching_catch_2()|0;
       $225 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp619);
       $ehselector$slot$21 = $225;$exn$slot$21 = $224;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp619);
       $cmp626 = ($call622|0)==($add$ptr|0);
       $first$call622 = $cmp626 ? $first : $call622;
       $retval$14 = $first$call622;
       break L1;
      }
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 112:  {
     $226 = HEAP8[$arrayidx17>>0]|0;
     $conv632 = $226 << 24 >> 24;
     switch ($conv632|0) {
     case 109:  {
      ;HEAP32[$ref$tmp635>>2]=0|0;HEAP32[$ref$tmp635+4>>2]=0|0;HEAP32[$ref$tmp635+8>>2]=0|0;
      $call$i657 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5988)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp635,5988,$call$i657);
      __THREW__ = 0;
      $call638 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp635|0),($db|0))|0);
      $227 = __THREW__; __THREW__ = 0;
      $228 = $227&1;
      if ($228) {
       $229 = ___cxa_find_matching_catch_2()|0;
       $230 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp635);
       $ehselector$slot$21 = $230;$exn$slot$21 = $229;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp635);
       $cmp642 = ($call638|0)==($add$ptr|0);
       $first$call638 = $cmp642 ? $first : $call638;
       $retval$14 = $first$call638;
       break L1;
      }
      break;
     }
     case 108:  {
      ;HEAP32[$ref$tmp647>>2]=0|0;HEAP32[$ref$tmp647+4>>2]=0|0;HEAP32[$ref$tmp647+8>>2]=0|0;
      $call$i658 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5992)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp647,5992,$call$i658);
      __THREW__ = 0;
      $call650 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp647|0),($db|0))|0);
      $231 = __THREW__; __THREW__ = 0;
      $232 = $231&1;
      if ($232) {
       $233 = ___cxa_find_matching_catch_2()|0;
       $234 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp647);
       $ehselector$slot$21 = $234;$exn$slot$21 = $233;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp647);
       $cmp654 = ($call650|0)==($add$ptr|0);
       $first$call650 = $cmp654 ? $first : $call650;
       $retval$14 = $first$call650;
       break L1;
      }
      break;
     }
     case 76:  {
      ;HEAP32[$ref$tmp659>>2]=0|0;HEAP32[$ref$tmp659+4>>2]=0|0;HEAP32[$ref$tmp659+8>>2]=0|0;
      $call$i659 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5994)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp659,5994,$call$i659);
      __THREW__ = 0;
      $call662 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp659|0),($db|0))|0);
      $235 = __THREW__; __THREW__ = 0;
      $236 = $235&1;
      if ($236) {
       $237 = ___cxa_find_matching_catch_2()|0;
       $238 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp659);
       $ehselector$slot$21 = $238;$exn$slot$21 = $237;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp659);
       $cmp666 = ($call662|0)==($add$ptr|0);
       $first$call662 = $cmp666 ? $first : $call662;
       $retval$14 = $first$call662;
       break L1;
      }
      break;
     }
     case 112:  {
      if ($cmp479) {
       $239 = HEAP8[$add$ptr>>0]|0;
       $cmp675 = ($239<<24>>24)==(95);
       if ($cmp675) {
        ;HEAP32[$ref$tmp678>>2]=0|0;HEAP32[$ref$tmp678+4>>2]=0|0;HEAP32[$ref$tmp678+8>>2]=0|0;
        $call$i660 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5997)|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp678,5997,$call$i660);
        __THREW__ = 0;
        $call681 = (invoke_iiiii(78,($add$ptr485|0),($last|0),($ref$tmp678|0),($db|0))|0);
        $240 = __THREW__; __THREW__ = 0;
        $241 = $240&1;
        if ($241) {
         $242 = ___cxa_find_matching_catch_2()|0;
         $243 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp678);
         $ehselector$slot$21 = $243;$exn$slot$21 = $242;
         break L7;
        } else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp678);
         $cmp685 = ($call681|0)==($add$ptr485|0);
         $first$call681 = $cmp685 ? $first : $call681;
         $retval$14 = $first$call681;
         break L1;
        }
       }
      }
      $call691 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp693 = ($call691|0)==($add$ptr|0);
      if ($cmp693) {
       $retval$14 = $first;
       break L1;
      }
      $244 = HEAP32[$db>>2]|0;
      $__end_$i662 = ((($db)) + 4|0);
      $245 = HEAP32[$__end_$i662>>2]|0;
      $cmp$i663 = ($244|0)==($245|0);
      if ($cmp$i663) {
       $retval$14 = $first;
       break L1;
      }
      $add$ptr$i665 = ((($245)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp702,$add$ptr$i665);
      __THREW__ = 0;
      $call$i666674 = (invoke_iiii(56,($ref$tmp702|0),0,(5838|0))|0);
      $246 = __THREW__; __THREW__ = 0;
      $247 = $246&1;
      do {
       if ($247) {
        $251 = ___cxa_find_matching_catch_2()|0;
        $252 = tempRet0;
        $ehselector$slot$12 = $252;$exn$slot$12 = $251;
       } else {
        ;HEAP32[$ref$tmp701>>2]=HEAP32[$ref$tmp702>>2]|0;HEAP32[$ref$tmp701+4>>2]=HEAP32[$ref$tmp702+4>>2]|0;HEAP32[$ref$tmp701+8>>2]=HEAP32[$ref$tmp702+8>>2]|0;
        $__i$0$i$i$i668 = 0;
        while(1) {
         $exitcond$i$i$i669 = ($__i$0$i$i$i668|0)==(3);
         if ($exitcond$i$i$i669) {
          break;
         }
         $arrayidx$i$i$i671 = (($ref$tmp702) + ($__i$0$i$i$i668<<2)|0);
         HEAP32[$arrayidx$i$i$i671>>2] = 0;
         $inc$i$i$i672 = (($__i$0$i$i$i668) + 1)|0;
         $__i$0$i$i$i668 = $inc$i$i$i672;
        }
        __THREW__ = 0;
        $call$i676684 = (invoke_iii(54,($ref$tmp701|0),(6000|0))|0);
        $248 = __THREW__; __THREW__ = 0;
        $249 = $248&1;
        if ($249) {
         $253 = ___cxa_find_matching_catch_2()|0;
         $254 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp701);
         $ehselector$slot$12 = $254;$exn$slot$12 = $253;
         break;
        }
        ;HEAP32[$agg$tmp700>>2]=HEAP32[$ref$tmp701>>2]|0;HEAP32[$agg$tmp700+4>>2]=HEAP32[$ref$tmp701+4>>2]|0;HEAP32[$agg$tmp700+8>>2]=HEAP32[$ref$tmp701+8>>2]|0;
        $__i$0$i$i$i678 = 0;
        while(1) {
         $exitcond$i$i$i679 = ($__i$0$i$i$i678|0)==(3);
         if ($exitcond$i$i$i679) {
          break;
         }
         $arrayidx$i$i$i681 = (($ref$tmp701) + ($__i$0$i$i$i678<<2)|0);
         HEAP32[$arrayidx$i$i$i681>>2] = 0;
         $inc$i$i$i682 = (($__i$0$i$i$i678) + 1)|0;
         $__i$0$i$i$i678 = $inc$i$i$i682;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp699,$agg$tmp700);
        $250 = HEAP32[$__end_$i662>>2]|0;
        $add$ptr$i687 = ((($250)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i687,$ref$tmp699);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp699);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp700);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp701);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp702);
        $retval$14 = $call691;
        break L1;
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp702);
      $ehselector$slot$21 = $ehselector$slot$12;$exn$slot$21 = $exn$slot$12;
      break L7;
      break;
     }
     case 115:  {
      ;HEAP32[$ref$tmp732>>2]=0|0;HEAP32[$ref$tmp732+4>>2]=0|0;HEAP32[$ref$tmp732+8>>2]=0|0;
      $call$i688 = (__ZNSt3__211char_traitsIcE6lengthEPKc(5992)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp732,5992,$call$i688);
      __THREW__ = 0;
      $call735 = (invoke_iiiii(78,($add$ptr|0),($last|0),($ref$tmp732|0),($db|0))|0);
      $255 = __THREW__; __THREW__ = 0;
      $256 = $255&1;
      if ($256) {
       $257 = ___cxa_find_matching_catch_2()|0;
       $258 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp732);
       $ehselector$slot$21 = $258;$exn$slot$21 = $257;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp732);
       $cmp739 = ($call735|0)==($add$ptr|0);
       $first$call735 = $cmp739 ? $first : $call735;
       $retval$14 = $first$call735;
       break L1;
      }
      break;
     }
     case 116:  {
      $call743 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call743;
      break L1;
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 113:  {
     $259 = HEAP8[$arrayidx17>>0]|0;
     $cmp748 = ($259<<24>>24)==(117);
     if (!($cmp748)) {
      $retval$14 = $first;
      break L1;
     }
     $call752 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp754 = ($call752|0)==($add$ptr|0);
     if ($cmp754) {
      $retval$14 = $first;
      break L1;
     }
     $call757 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call752,$last,$db)|0);
     $cmp758 = ($call757|0)==($call752|0);
     if ($cmp758) {
      $__end_$i800 = ((($db)) + 4|0);
      $309 = HEAP32[$__end_$i800>>2]|0;
      $add$ptr$i801 = ((($309)) + -24|0);
      $310 = $309;
      while(1) {
       $cmp$i$i$i802 = ($310|0)==($add$ptr$i801|0);
       if ($cmp$i$i$i802) {
        $retval$14 = $first;
        break L1;
       }
       $incdec$ptr$i$i$i804 = ((($310)) + -24|0);
       HEAP32[$__end_$i800>>2] = $incdec$ptr$i$i$i804;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i804);
       $$pre$i805 = HEAP32[$__end_$i800>>2]|0;
       $310 = $$pre$i805;
      }
     }
     $call760 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call757,$last,$db)|0);
     $cmp761 = ($call760|0)==($call757|0);
     $__end_$i784 = ((($db)) + 4|0);
     if ($cmp761) {
      $306 = HEAP32[$__end_$i784>>2]|0;
      $add$ptr$i785 = ((($306)) + -24|0);
      $307 = $306;
      while(1) {
       $cmp$i$i$i786 = ($307|0)==($add$ptr$i785|0);
       if ($cmp$i$i$i786) {
        break;
       }
       $incdec$ptr$i$i$i788 = ((($307)) + -24|0);
       HEAP32[$__end_$i784>>2] = $incdec$ptr$i$i$i788;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i788);
       $$pre$i789 = HEAP32[$__end_$i784>>2]|0;
       $307 = $$pre$i789;
      }
      $add$ptr$i793 = ((($306)) + -48|0);
      $308 = $add$ptr$i785;
      while(1) {
       $cmp$i$i$i794 = ($308|0)==($add$ptr$i793|0);
       if ($cmp$i$i$i794) {
        $retval$14 = $first;
        break L1;
       }
       $incdec$ptr$i$i$i796 = ((($308)) + -24|0);
       HEAP32[$__end_$i784>>2] = $incdec$ptr$i$i$i796;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i796);
       $$pre$i797 = HEAP32[$__end_$i784>>2]|0;
       $308 = $$pre$i797;
      }
     }
     $260 = HEAP32[$__end_$i784>>2]|0;
     $261 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i690 = (($260) - ($261))|0;
     $sub$ptr$div$i691 = (($sub$ptr$sub$i690|0) / 24)&-1;
     $cmp765 = ($sub$ptr$div$i691>>>0)<(3);
     if ($cmp765) {
      $retval$14 = $first;
      break L1;
     }
     $262 = $260;
     $add$ptr$i693 = ((($262)) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op3,$add$ptr$i693);
     $263 = HEAP32[$__end_$i784>>2]|0;
     $add$ptr$i695 = ((($263)) + -24|0);
     $264 = $263;
     while(1) {
      $cmp$i$i$i696 = ($264|0)==($add$ptr$i695|0);
      if ($cmp$i$i$i696) {
       break;
      }
      $incdec$ptr$i$i$i698 = ((($264)) + -24|0);
      HEAP32[$__end_$i784>>2] = $incdec$ptr$i$i$i698;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i698);
      $$pre$i699 = HEAP32[$__end_$i784>>2]|0;
      $264 = $$pre$i699;
     }
     $add$ptr$i703 = ((($263)) + -48|0);
     __THREW__ = 0;
     invoke_vii(55,($op2773|0),($add$ptr$i703|0));
     $265 = __THREW__; __THREW__ = 0;
     $266 = $265&1;
     if ($266) {
      $290 = ___cxa_find_matching_catch_2()|0;
      $291 = tempRet0;
      $ehselector$slot$20 = $291;$exn$slot$20 = $290;
     } else {
      $267 = HEAP32[$__end_$i784>>2]|0;
      $add$ptr$i705 = ((($267)) + -24|0);
      $268 = $267;
      while(1) {
       $cmp$i$i$i706 = ($268|0)==($add$ptr$i705|0);
       if ($cmp$i$i$i706) {
        break;
       }
       $incdec$ptr$i$i$i708 = ((($268)) + -24|0);
       HEAP32[$__end_$i784>>2] = $incdec$ptr$i$i$i708;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i708);
       $$pre$i709 = HEAP32[$__end_$i784>>2]|0;
       $268 = $$pre$i709;
      }
      $add$ptr$i713 = ((($267)) + -48|0);
      __THREW__ = 0;
      invoke_vii(55,($op1781|0),($add$ptr$i713|0));
      $269 = __THREW__; __THREW__ = 0;
      $270 = $269&1;
      if ($270) {
       $292 = ___cxa_find_matching_catch_2()|0;
       $293 = tempRet0;
       $ehselector$slot$19 = $293;$exn$slot$19 = $292;
      } else {
       __THREW__ = 0;
       invoke_viii(76,($ref$tmp792|0),(5838|0),($op1781|0));
       $271 = __THREW__; __THREW__ = 0;
       $272 = $271&1;
       if ($272) {
        $294 = ___cxa_find_matching_catch_2()|0;
        $295 = tempRet0;
        $ehselector$slot$18 = $295;$exn$slot$18 = $294;
       } else {
        __THREW__ = 0;
        $call$i714722 = (invoke_iii(54,($ref$tmp792|0),(6004|0))|0);
        $273 = __THREW__; __THREW__ = 0;
        $274 = $273&1;
        if ($274) {
         $296 = ___cxa_find_matching_catch_2()|0;
         $297 = tempRet0;
         $ehselector$slot$17 = $297;$exn$slot$17 = $296;
        } else {
         ;HEAP32[$ref$tmp791>>2]=HEAP32[$ref$tmp792>>2]|0;HEAP32[$ref$tmp791+4>>2]=HEAP32[$ref$tmp792+4>>2]|0;HEAP32[$ref$tmp791+8>>2]=HEAP32[$ref$tmp792+8>>2]|0;
         $__i$0$i$i$i716 = 0;
         while(1) {
          $exitcond$i$i$i717 = ($__i$0$i$i$i716|0)==(3);
          if ($exitcond$i$i$i717) {
           break;
          }
          $arrayidx$i$i$i719 = (($ref$tmp792) + ($__i$0$i$i$i716<<2)|0);
          HEAP32[$arrayidx$i$i$i719>>2] = 0;
          $inc$i$i$i720 = (($__i$0$i$i$i716) + 1)|0;
          $__i$0$i$i$i716 = $inc$i$i$i720;
         }
         $__size_$i$i$i$i$i725 = ((($op2773)) + 11|0);
         $275 = HEAP8[$__size_$i$i$i$i$i725>>0]|0;
         $tobool$i$i$i$i$i726 = ($275<<24>>24)<(0);
         $276 = HEAP32[$op2773>>2]|0;
         $cond$i$i$i$i729 = $tobool$i$i$i$i$i726 ? $276 : $op2773;
         $__size_$i3$i$i$i730 = ((($op2773)) + 4|0);
         $277 = HEAP32[$__size_$i3$i$i$i730>>2]|0;
         $conv$i$i$i$i731 = $275&255;
         $cond$i$i$i732 = $tobool$i$i$i$i$i726 ? $277 : $conv$i$i$i$i731;
         __THREW__ = 0;
         $call3$i$i741 = (invoke_iiii(47,($ref$tmp791|0),($cond$i$i$i$i729|0),($cond$i$i$i732|0))|0);
         $278 = __THREW__; __THREW__ = 0;
         $279 = $278&1;
         if ($279) {
          $298 = ___cxa_find_matching_catch_2()|0;
          $299 = tempRet0;
          $ehselector$slot$16 = $299;$exn$slot$16 = $298;
         } else {
          ;HEAP32[$ref$tmp790>>2]=HEAP32[$ref$tmp791>>2]|0;HEAP32[$ref$tmp790+4>>2]=HEAP32[$ref$tmp791+4>>2]|0;HEAP32[$ref$tmp790+8>>2]=HEAP32[$ref$tmp791+8>>2]|0;
          $__i$0$i$i$i734 = 0;
          while(1) {
           $exitcond$i$i$i735 = ($__i$0$i$i$i734|0)==(3);
           if ($exitcond$i$i$i735) {
            break;
           }
           $arrayidx$i$i$i737 = (($ref$tmp791) + ($__i$0$i$i$i734<<2)|0);
           HEAP32[$arrayidx$i$i$i737>>2] = 0;
           $inc$i$i$i738 = (($__i$0$i$i$i734) + 1)|0;
           $__i$0$i$i$i734 = $inc$i$i$i738;
          }
          __THREW__ = 0;
          $call$i743751 = (invoke_iii(54,($ref$tmp790|0),(6010|0))|0);
          $280 = __THREW__; __THREW__ = 0;
          $281 = $280&1;
          if ($281) {
           $300 = ___cxa_find_matching_catch_2()|0;
           $301 = tempRet0;
           $ehselector$slot$15 = $301;$exn$slot$15 = $300;
          } else {
           ;HEAP32[$ref$tmp789>>2]=HEAP32[$ref$tmp790>>2]|0;HEAP32[$ref$tmp789+4>>2]=HEAP32[$ref$tmp790+4>>2]|0;HEAP32[$ref$tmp789+8>>2]=HEAP32[$ref$tmp790+8>>2]|0;
           $__i$0$i$i$i745 = 0;
           while(1) {
            $exitcond$i$i$i746 = ($__i$0$i$i$i745|0)==(3);
            if ($exitcond$i$i$i746) {
             break;
            }
            $arrayidx$i$i$i748 = (($ref$tmp790) + ($__i$0$i$i$i745<<2)|0);
            HEAP32[$arrayidx$i$i$i748>>2] = 0;
            $inc$i$i$i749 = (($__i$0$i$i$i745) + 1)|0;
            $__i$0$i$i$i745 = $inc$i$i$i749;
           }
           $__size_$i$i$i$i$i754 = ((($op3)) + 11|0);
           $282 = HEAP8[$__size_$i$i$i$i$i754>>0]|0;
           $tobool$i$i$i$i$i755 = ($282<<24>>24)<(0);
           $283 = HEAP32[$op3>>2]|0;
           $cond$i$i$i$i758 = $tobool$i$i$i$i$i755 ? $283 : $op3;
           $__size_$i3$i$i$i759 = ((($op3)) + 4|0);
           $284 = HEAP32[$__size_$i3$i$i$i759>>2]|0;
           $conv$i$i$i$i760 = $282&255;
           $cond$i$i$i761 = $tobool$i$i$i$i$i755 ? $284 : $conv$i$i$i$i760;
           __THREW__ = 0;
           $call3$i$i770 = (invoke_iiii(47,($ref$tmp789|0),($cond$i$i$i$i758|0),($cond$i$i$i761|0))|0);
           $285 = __THREW__; __THREW__ = 0;
           $286 = $285&1;
           do {
            if ($286) {
             $302 = ___cxa_find_matching_catch_2()|0;
             $303 = tempRet0;
             $ehselector$slot$14 = $303;$exn$slot$14 = $302;
            } else {
             ;HEAP32[$ref$tmp788>>2]=HEAP32[$ref$tmp789>>2]|0;HEAP32[$ref$tmp788+4>>2]=HEAP32[$ref$tmp789+4>>2]|0;HEAP32[$ref$tmp788+8>>2]=HEAP32[$ref$tmp789+8>>2]|0;
             $__i$0$i$i$i763 = 0;
             while(1) {
              $exitcond$i$i$i764 = ($__i$0$i$i$i763|0)==(3);
              if ($exitcond$i$i$i764) {
               break;
              }
              $arrayidx$i$i$i766 = (($ref$tmp789) + ($__i$0$i$i$i763<<2)|0);
              HEAP32[$arrayidx$i$i$i766>>2] = 0;
              $inc$i$i$i767 = (($__i$0$i$i$i763) + 1)|0;
              $__i$0$i$i$i763 = $inc$i$i$i767;
             }
             __THREW__ = 0;
             $call$i772780 = (invoke_iii(54,($ref$tmp788|0),(5836|0))|0);
             $287 = __THREW__; __THREW__ = 0;
             $288 = $287&1;
             if ($288) {
              $304 = ___cxa_find_matching_catch_2()|0;
              $305 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp788);
              $ehselector$slot$14 = $305;$exn$slot$14 = $304;
              break;
             }
             ;HEAP32[$agg$tmp787>>2]=HEAP32[$ref$tmp788>>2]|0;HEAP32[$agg$tmp787+4>>2]=HEAP32[$ref$tmp788+4>>2]|0;HEAP32[$agg$tmp787+8>>2]=HEAP32[$ref$tmp788+8>>2]|0;
             $__i$0$i$i$i774 = 0;
             while(1) {
              $exitcond$i$i$i775 = ($__i$0$i$i$i774|0)==(3);
              if ($exitcond$i$i$i775) {
               break;
              }
              $arrayidx$i$i$i777 = (($ref$tmp788) + ($__i$0$i$i$i774<<2)|0);
              HEAP32[$arrayidx$i$i$i777>>2] = 0;
              $inc$i$i$i778 = (($__i$0$i$i$i774) + 1)|0;
              $__i$0$i$i$i774 = $inc$i$i$i778;
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp786,$agg$tmp787);
             $289 = HEAP32[$__end_$i784>>2]|0;
             $add$ptr$i783 = ((($289)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i783,$ref$tmp786);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp786);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp787);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp788);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp789);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp790);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp791);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp792);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1781);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2773);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op3);
             $retval$14 = $call760;
             break L1;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp789);
           $ehselector$slot$15 = $ehselector$slot$14;$exn$slot$15 = $exn$slot$14;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp790);
          $ehselector$slot$16 = $ehselector$slot$15;$exn$slot$16 = $exn$slot$15;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp791);
         $ehselector$slot$17 = $ehselector$slot$16;$exn$slot$17 = $exn$slot$16;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp792);
        $ehselector$slot$18 = $ehselector$slot$17;$exn$slot$18 = $exn$slot$17;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1781);
       $ehselector$slot$19 = $ehselector$slot$18;$exn$slot$19 = $exn$slot$18;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2773);
      $ehselector$slot$20 = $ehselector$slot$19;$exn$slot$20 = $exn$slot$19;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op3);
     $ehselector$slot$21 = $ehselector$slot$20;$exn$slot$21 = $exn$slot$20;
     break;
    }
    case 114:  {
     $311 = HEAP8[$arrayidx17>>0]|0;
     $conv855 = $311 << 24 >> 24;
     switch ($conv855|0) {
     case 99:  {
      $call857 = (__ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call857;
      break L1;
      break;
     }
     case 109:  {
      ;HEAP32[$ref$tmp860>>2]=0|0;HEAP32[$ref$tmp860+4>>2]=0|0;HEAP32[$ref$tmp860+8>>2]=0|0;
      $call$i808 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6016)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp860,6016,$call$i808);
      __THREW__ = 0;
      $call863 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp860|0),($db|0))|0);
      $312 = __THREW__; __THREW__ = 0;
      $313 = $312&1;
      if ($313) {
       $314 = ___cxa_find_matching_catch_2()|0;
       $315 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp860);
       $ehselector$slot$21 = $315;$exn$slot$21 = $314;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp860);
       $cmp867 = ($call863|0)==($add$ptr|0);
       $first$call863 = $cmp867 ? $first : $call863;
       $retval$14 = $first$call863;
       break L1;
      }
      break;
     }
     case 77:  {
      ;HEAP32[$ref$tmp872>>2]=0|0;HEAP32[$ref$tmp872+4>>2]=0|0;HEAP32[$ref$tmp872+8>>2]=0|0;
      $call$i809 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6018)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp872,6018,$call$i809);
      __THREW__ = 0;
      $call875 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp872|0),($db|0))|0);
      $316 = __THREW__; __THREW__ = 0;
      $317 = $316&1;
      if ($317) {
       $318 = ___cxa_find_matching_catch_2()|0;
       $319 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp872);
       $ehselector$slot$21 = $319;$exn$slot$21 = $318;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp872);
       $cmp879 = ($call875|0)==($add$ptr|0);
       $first$call875 = $cmp879 ? $first : $call875;
       $retval$14 = $first$call875;
       break L1;
      }
      break;
     }
     case 115:  {
      ;HEAP32[$ref$tmp884>>2]=0|0;HEAP32[$ref$tmp884+4>>2]=0|0;HEAP32[$ref$tmp884+8>>2]=0|0;
      $call$i810 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6021)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp884,6021,$call$i810);
      __THREW__ = 0;
      $call887 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp884|0),($db|0))|0);
      $320 = __THREW__; __THREW__ = 0;
      $321 = $320&1;
      if ($321) {
       $322 = ___cxa_find_matching_catch_2()|0;
       $323 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp884);
       $ehselector$slot$21 = $323;$exn$slot$21 = $322;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp884);
       $cmp891 = ($call887|0)==($add$ptr|0);
       $first$call887 = $cmp891 ? $first : $call887;
       $retval$14 = $first$call887;
       break L1;
      }
      break;
     }
     case 83:  {
      ;HEAP32[$ref$tmp896>>2]=0|0;HEAP32[$ref$tmp896+4>>2]=0|0;HEAP32[$ref$tmp896+8>>2]=0|0;
      $call$i811 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6024)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp896,6024,$call$i811);
      __THREW__ = 0;
      $call899 = (invoke_iiiii(77,($add$ptr|0),($last|0),($ref$tmp896|0),($db|0))|0);
      $324 = __THREW__; __THREW__ = 0;
      $325 = $324&1;
      if ($325) {
       $326 = ___cxa_find_matching_catch_2()|0;
       $327 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp896);
       $ehselector$slot$21 = $327;$exn$slot$21 = $326;
       break L7;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp896);
       $cmp903 = ($call899|0)==($add$ptr|0);
       $first$call899 = $cmp903 ? $first : $call899;
       $retval$14 = $first$call899;
       break L1;
      }
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 115:  {
     $328 = HEAP8[$arrayidx17>>0]|0;
     $conv909 = $328 << 24 >> 24;
     switch ($conv909|0) {
     case 99:  {
      $call911 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call911;
      break L1;
      break;
     }
     case 112:  {
      $call913 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call913;
      break L1;
      break;
     }
     case 114:  {
      $call915 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call915;
      break L1;
      break;
     }
     case 116:  {
      $call917 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call917;
      break L1;
      break;
     }
     case 122:  {
      $call919 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call919;
      break L1;
      break;
     }
     case 90:  {
      $sub$ptr$rhs$cast922 = $t$0;
      $sub$ptr$sub923 = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast922))|0;
      $cmp924 = ($sub$ptr$sub923|0)>(2);
      if (!($cmp924)) {
       $retval$14 = $first;
       break L1;
      }
      $329 = HEAP8[$add$ptr104>>0]|0;
      $conv927 = $329 << 24 >> 24;
      switch ($conv927|0) {
      case 84:  {
       $call929 = (__ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
       $retval$14 = $call929;
       break L1;
       break;
      }
      case 102:  {
       $call931 = (__ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
       $retval$14 = $call931;
       break L1;
       break;
      }
      default: {
       $retval$14 = $first;
       break L1;
      }
      }
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 116:  {
     $330 = HEAP8[$arrayidx17>>0]|0;
     $conv937 = $330 << 24 >> 24;
     switch ($conv937|0) {
     case 105: case 101:  {
      $call939 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call939;
      break L1;
      break;
     }
     case 114:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($ref$tmp942,6028);
      $__end_$i812 = ((($db)) + 4|0);
      $331 = HEAP32[$__end_$i812>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $332 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i813 = ($331>>>0)<($332>>>0);
      if ($cmp$i813) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($331,$ref$tmp942);
       $333 = HEAP32[$__end_$i812>>2]|0;
       $incdec$ptr$i = ((($333)) + 24|0);
       HEAP32[$__end_$i812>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp942|0));
       $334 = __THREW__; __THREW__ = 0;
       $335 = $334&1;
       if ($335) {
        $336 = ___cxa_find_matching_catch_2()|0;
        $337 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp942);
        $ehselector$slot$21 = $337;$exn$slot$21 = $336;
        break L7;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp942);
      $retval$14 = $add$ptr;
      break L1;
      break;
     }
     case 119:  {
      $call949 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $retval$14 = $call949;
      break L1;
      break;
     }
     default: {
      $retval$14 = $first;
      break L1;
     }
     }
     break;
    }
    case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {
     $call952 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $retval$14 = $call952;
     break L1;
     break;
    }
    default: {
     $retval$14 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($exn$slot$21|0);
   // unreachable;
  } else {
   $retval$14 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$14|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($this) {
 $this = $this|0;
 var $$phitmp$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__cap_$i = 0, $__cap_$i$i = 0, $__new_data$0405965 = 0, $__new_data$041 = 0, $__now_long$0$off047 = 0, $__p$043 = 0, $__size_$i$i = 0, $__size_$i1 = 0, $__size_$i3$i = 0, $__size_$i3$i10 = 0, $add = 0, $add$i$i = 0;
 var $add30 = 0, $add3054 = 0, $add3063 = 0, $add38 = 0, $and$i$i = 0, $and$i$i24 = 0, $call$i = 0, $cmp$i = 0, $cmp12 = 0, $cmp20 = 0, $cmp6 = 0, $cond$i37 = 0, $cond$i6 = 0, $conv$i = 0, $conv$i$i = 0, $conv$i$i12 = 0, $conv$i$i1262 = 0, $or$cond = 0, $or$i = 0, $phitmp$i = 0;
 var $phitmp$i25 = 0, $tobool$i = 0, $tobool$i$i = 0, $tobool$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__cap_$i$i = ((($this)) + 8|0);
  $1 = HEAP32[$__cap_$i$i>>2]|0;
  $and$i$i = $1 & 2147483647;
  $phitmp$i = (($and$i$i) + -1)|0;
  $__size_$i3$i = ((($this)) + 4|0);
  $2 = HEAP32[$__size_$i3$i>>2]|0;
  $cond$i37 = $phitmp$i;$cond$i6 = $2;
 } else {
  $conv$i$i = $0&255;
  $cond$i37 = 10;$cond$i6 = $conv$i$i;
 }
 $cmp$i = ($cond$i6>>>0)<(11);
 $add$i$i = (($cond$i6) + 16)|0;
 $and$i$i24 = $add$i$i & -16;
 $phitmp$i25 = (($and$i$i24) + -1)|0;
 $$phitmp$i = $cmp$i ? 10 : $phitmp$i25;
 $cmp6 = ($$phitmp$i|0)==($cond$i37|0);
 L5: do {
  if (!($cmp6)) {
   do {
    if ($cmp$i) {
     $5 = HEAP32[$this>>2]|0;
     $tobool$i$i9 = ($0<<24>>24)<(0);
     if ($tobool$i$i9) {
      $__new_data$041 = $this;$__now_long$0$off047 = 0;$__p$043 = $5;
      label = 12;
     } else {
      $conv$i$i1262 = $0&255;
      $add3063 = (($conv$i$i1262) + 1)|0;
      (__ZNSt3__211char_traitsIcE4copyEPcPKcj($this,$5,$add3063)|0);
      __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($5);
      label = 14;
     }
    } else {
     $cmp12 = ($$phitmp$i>>>0)<=($cond$i37>>>0);
     $add = (($$phitmp$i) + 1)|0;
     $call$i = (__ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($add)|0);
     $cmp20 = ($call$i|0)==(0|0);
     $or$cond = $cmp12 & $cmp20;
     if ($or$cond) {
      break L5;
     }
     $3 = HEAP8[$__size_$i$i>>0]|0;
     $tobool$i = ($3<<24>>24)<(0);
     if ($tobool$i) {
      $4 = HEAP32[$this>>2]|0;
      $__new_data$041 = $call$i;$__now_long$0$off047 = 1;$__p$043 = $4;
      label = 12;
      break;
     } else {
      $conv$i$i12 = $3&255;
      $add30 = (($conv$i$i12) + 1)|0;
      (__ZNSt3__211char_traitsIcE4copyEPcPKcj($call$i,$this,$add30)|0);
      $__new_data$0405965 = $call$i;
      label = 13;
      break;
     }
    }
   } while(0);
   if ((label|0) == 12) {
    $__size_$i3$i10 = ((($this)) + 4|0);
    $6 = HEAP32[$__size_$i3$i10>>2]|0;
    $add3054 = (($6) + 1)|0;
    (__ZNSt3__211char_traitsIcE4copyEPcPKcj($__new_data$041,$__p$043,$add3054)|0);
    __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($__p$043);
    if ($__now_long$0$off047) {
     $__new_data$0405965 = $__new_data$041;
     label = 13;
    } else {
     label = 14;
    }
   }
   if ((label|0) == 13) {
    $add38 = (($$phitmp$i) + 1)|0;
    $or$i = $add38 | -2147483648;
    $__cap_$i = ((($this)) + 8|0);
    HEAP32[$__cap_$i>>2] = $or$i;
    $__size_$i1 = ((($this)) + 4|0);
    HEAP32[$__size_$i1>>2] = $cond$i6;
    HEAP32[$this>>2] = $__new_data$0405965;
    break;
   }
   else if ((label|0) == 14) {
    $conv$i = $cond$i6&255;
    HEAP8[$__size_$i$i>>0] = $conv$i;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $__size_$i$i = 0, $__size_$i3$i = 0, $add = 0, $arrayidx$i$i = 0, $call = 0, $cond$i = 0, $cond$i$i = 0;
 var $conv$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $tobool$i$i = 0, $tobool$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 __THREW__ = 0;
 $call = (invoke_ii(58,($__lhs|0))|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  $__size_$i$i = ((($__rhs)) + 11|0);
  $2 = HEAP8[$__size_$i$i>>0]|0;
  $tobool$i$i = ($2<<24>>24)<(0);
  $__size_$i3$i = ((($__rhs)) + 4|0);
  $3 = HEAP32[$__size_$i3$i>>2]|0;
  $conv$i$i = $2&255;
  $cond$i = $tobool$i$i ? $3 : $conv$i$i;
  $add = (($cond$i) + ($call))|0;
  __THREW__ = 0;
  invoke_viiii(74,($agg$result|0),($__lhs|0),($call|0),($add|0));
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if (!($5)) {
   $6 = HEAP8[$__size_$i$i>>0]|0;
   $tobool$i$i$i = ($6<<24>>24)<(0);
   $7 = HEAP32[$__rhs>>2]|0;
   $cond$i$i = $tobool$i$i$i ? $7 : $__rhs;
   __THREW__ = 0;
   (invoke_iiii(47,($agg$result|0),($cond$i$i|0),($cond$i|0))|0);
   $8 = __THREW__; __THREW__ = 0;
   $9 = $8&1;
   if (!($9)) {
    return;
   }
  }
 }
 $10 = ___cxa_find_matching_catch_2()|0;
 $11 = tempRet0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$result);
 ___resumeException($10|0);
 // unreachable;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($this,$__s,$__sz,$__reserve) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 $__reserve = $__reserve|0;
 var $__cap_$i = 0, $__p$0 = 0, $__size_$i = 0, $__size_$i11 = 0, $add$i$i = 0, $and$i$i = 0, $arrayidx = 0, $call$i = 0, $cmp = 0, $cmp2 = 0, $conv$i = 0, $or$i = 0, $ref$tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $cmp = ($__reserve>>>0)>(4294967279);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this);
  label = 5;
 } else {
  $cmp2 = ($__reserve>>>0)<(11);
  if ($cmp2) {
   $conv$i = $__sz&255;
   $__size_$i = ((($this)) + 11|0);
   HEAP8[$__size_$i>>0] = $conv$i;
   $__p$0 = $this;
  } else {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $add$i$i = (($__reserve) + 16)|0;
  $and$i$i = $add$i$i & -16;
  $call$i = (__ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($and$i$i)|0);
  HEAP32[$this>>2] = $call$i;
  $or$i = $and$i$i | -2147483648;
  $__cap_$i = ((($this)) + 8|0);
  HEAP32[$__cap_$i>>2] = $or$i;
  $__size_$i11 = ((($this)) + 4|0);
  HEAP32[$__size_$i11>>2] = $__sz;
  $__p$0 = $call$i;
 }
 (__ZNSt3__211char_traitsIcE4copyEPcPKcj($__p$0,$__s,$__sz)|0);
 $arrayidx = (($__p$0) + ($__sz)|0);
 HEAP8[$ref$tmp>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__end_$i = 0, $__end_$i151 = 0, $__end_$i172 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i152 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i179 = 0, $__i$0$i$i$i188 = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i196 = 0, $add$ptr17 = 0, $add$ptr208 = 0, $add$ptr208$first = 0, $add$ptr271 = 0, $agg$tmp = 0, $arrayidx = 0, $arrayidx$i$i$i = 0;
 var $arrayidx$i$i$i182 = 0, $arrayidx$i$i$i191 = 0, $arrayidx7 = 0, $call = 0, $call$i = 0, $call$i159 = 0, $call$i160 = 0, $call$i161 = 0, $call$i162 = 0, $call$i163 = 0, $call$i164 = 0, $call$i165 = 0, $call$i166 = 0, $call$i167 = 0, $call$i168 = 0, $call$i169 = 0, $call$i170 = 0, $call$i171 = 0, $call$i175176 = 0, $call$i177185 = 0;
 var $call108 = 0, $call119 = 0, $call130 = 0, $call141 = 0, $call152 = 0, $call163 = 0, $call171 = 0, $call179 = 0, $call187 = 0, $call199 = 0, $call213 = 0, $call3$i$i194 = 0, $call31 = 0, $call42 = 0, $call53 = 0, $call64 = 0, $call75 = 0, $call86 = 0, $call97 = 0, $cmp = 0;
 var $cmp$i = 0, $cmp$i153 = 0, $cmp$i173 = 0, $cmp1 = 0, $cmp110 = 0, $cmp121 = 0, $cmp132 = 0, $cmp143 = 0, $cmp154 = 0, $cmp165 = 0, $cmp173 = 0, $cmp181 = 0, $cmp189 = 0, $cmp195 = 0, $cmp201 = 0, $cmp203 = 0, $cmp206 = 0, $cmp215 = 0, $cmp217 = 0, $cmp220 = 0;
 var $cmp222 = 0, $cmp225 = 0, $cmp230 = 0, $cmp33 = 0, $cmp4 = 0, $cmp44 = 0, $cmp55 = 0, $cmp66 = 0, $cmp77 = 0, $cmp88 = 0, $cmp9 = 0, $cmp99 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $conv12 = 0, $conv2 = 0, $conv223 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0;
 var $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i180 = 0, $exitcond$i$i$i189 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $first$call = 0, $first$call108 = 0, $first$call119 = 0, $first$call130 = 0, $first$call141 = 0, $first$call152 = 0, $first$call163 = 0, $first$call171 = 0, $first$call179 = 0, $first$call187 = 0, $first$call31 = 0;
 var $first$call42 = 0, $first$call53 = 0, $first$call64 = 0, $first$call75 = 0, $first$call86 = 0, $first$call97 = 0, $inc$i$i$i = 0, $inc$i$i$i183 = 0, $inc$i$i$i192 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i154 = 0, $isdigit = 0, $isdigittmp = 0, $n$0 = 0, $or$cond = 0, $or$cond150 = 0, $or$cond210 = 0, $ref$tmp = 0, $ref$tmp105 = 0;
 var $ref$tmp116 = 0, $ref$tmp127 = 0, $ref$tmp138 = 0, $ref$tmp14 = 0, $ref$tmp149 = 0, $ref$tmp160 = 0, $ref$tmp20 = 0, $ref$tmp236 = 0, $ref$tmp237 = 0, $ref$tmp238 = 0, $ref$tmp239 = 0, $ref$tmp246 = 0, $ref$tmp28 = 0, $ref$tmp39 = 0, $ref$tmp50 = 0, $ref$tmp61 = 0, $ref$tmp72 = 0, $ref$tmp83 = 0, $ref$tmp94 = 0, $retval$3 = 0;
 var $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $ref$tmp = sp + 296|0;
 $ref$tmp14 = sp + 272|0;
 $ref$tmp20 = sp + 248|0;
 $ref$tmp28 = sp + 232|0;
 $ref$tmp39 = sp + 220|0;
 $ref$tmp50 = sp + 208|0;
 $ref$tmp61 = sp + 196|0;
 $ref$tmp72 = sp + 184|0;
 $ref$tmp83 = sp + 172|0;
 $ref$tmp94 = sp + 160|0;
 $ref$tmp105 = sp + 148|0;
 $ref$tmp116 = sp + 136|0;
 $ref$tmp127 = sp + 124|0;
 $ref$tmp138 = sp + 112|0;
 $ref$tmp149 = sp + 100|0;
 $ref$tmp160 = sp + 88|0;
 $ref$tmp236 = sp + 64|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp237 = sp + 36|0;
 $ref$tmp238 = sp + 24|0;
 $ref$tmp239 = sp + 12|0;
 $ref$tmp246 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(3);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(76);
   if ($cmp1) {
    $arrayidx = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx>>0]|0;
    $conv2 = $1 << 24 >> 24;
    $arrayidx7 = ((($first)) + 3|0);
    $add$ptr = ((($first)) + 2|0);
    L4: do {
     switch ($conv2|0) {
     case 84:  {
      $retval$3 = $first;
      break L1;
      break;
     }
     case 119:  {
      ;HEAP32[$ref$tmp>>2]=0|0;HEAP32[$ref$tmp+4>>2]=0|0;HEAP32[$ref$tmp+8>>2]=0|0;
      $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc(7159)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp,7159,$call$i);
      __THREW__ = 0;
      $call = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp|0),($db|0))|0);
      $2 = __THREW__; __THREW__ = 0;
      $3 = $2&1;
      if ($3) {
       $4 = ___cxa_find_matching_catch_2()|0;
       $5 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
       $ehselector$slot$4 = $5;$exn$slot$4 = $4;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
       $cmp4 = ($call|0)==($add$ptr|0);
       $first$call = $cmp4 ? $first : $call;
       $retval$3 = $first$call;
       break L1;
      }
      break;
     }
     case 98:  {
      $6 = HEAP8[$arrayidx7>>0]|0;
      $cmp9 = ($6<<24>>24)==(69);
      if (!($cmp9)) {
       $retval$3 = $first;
       break L1;
      }
      $7 = HEAP8[$add$ptr>>0]|0;
      $conv12 = $7 << 24 >> 24;
      $add$ptr17 = ((($first)) + 4|0);
      switch ($conv12|0) {
      case 48:  {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($ref$tmp14,7167);
       $__end_$i = ((($db)) + 4|0);
       $8 = HEAP32[$__end_$i>>2]|0;
       $__first_$i$i$i$i = ((($db)) + 8|0);
       $9 = HEAP32[$__first_$i$i$i$i>>2]|0;
       $cmp$i = ($8>>>0)<($9>>>0);
       if ($cmp$i) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($8,$ref$tmp14);
        $10 = HEAP32[$__end_$i>>2]|0;
        $incdec$ptr$i = ((($10)) + 24|0);
        HEAP32[$__end_$i>>2] = $incdec$ptr$i;
       } else {
        __THREW__ = 0;
        invoke_vii(64,($db|0),($ref$tmp14|0));
        $11 = __THREW__; __THREW__ = 0;
        $12 = $11&1;
        if ($12) {
         $13 = ___cxa_find_matching_catch_2()|0;
         $14 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp14);
         $ehselector$slot$4 = $14;$exn$slot$4 = $13;
         break L4;
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp14);
       $retval$3 = $add$ptr17;
       break L1;
       break;
      }
      case 49:  {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($ref$tmp20,7173);
       $__end_$i151 = ((($db)) + 4|0);
       $15 = HEAP32[$__end_$i151>>2]|0;
       $__first_$i$i$i$i152 = ((($db)) + 8|0);
       $16 = HEAP32[$__first_$i$i$i$i152>>2]|0;
       $cmp$i153 = ($15>>>0)<($16>>>0);
       if ($cmp$i153) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($15,$ref$tmp20);
        $17 = HEAP32[$__end_$i151>>2]|0;
        $incdec$ptr$i154 = ((($17)) + 24|0);
        HEAP32[$__end_$i151>>2] = $incdec$ptr$i154;
       } else {
        __THREW__ = 0;
        invoke_vii(64,($db|0),($ref$tmp20|0));
        $18 = __THREW__; __THREW__ = 0;
        $19 = $18&1;
        if ($19) {
         $20 = ___cxa_find_matching_catch_2()|0;
         $21 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp20);
         $ehselector$slot$4 = $21;$exn$slot$4 = $20;
         break L4;
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp20);
       $retval$3 = $add$ptr17;
       break L1;
       break;
      }
      default: {
       $retval$3 = $first;
       break L1;
      }
      }
      break;
     }
     case 99:  {
      ;HEAP32[$ref$tmp28>>2]=0|0;HEAP32[$ref$tmp28+4>>2]=0|0;HEAP32[$ref$tmp28+8>>2]=0|0;
      $call$i159 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7178)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp28,7178,$call$i159);
      __THREW__ = 0;
      $call31 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp28|0),($db|0))|0);
      $22 = __THREW__; __THREW__ = 0;
      $23 = $22&1;
      if ($23) {
       $24 = ___cxa_find_matching_catch_2()|0;
       $25 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp28);
       $ehselector$slot$4 = $25;$exn$slot$4 = $24;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp28);
       $cmp33 = ($call31|0)==($add$ptr|0);
       $first$call31 = $cmp33 ? $first : $call31;
       $retval$3 = $first$call31;
       break L1;
      }
      break;
     }
     case 97:  {
      ;HEAP32[$ref$tmp39>>2]=0|0;HEAP32[$ref$tmp39+4>>2]=0|0;HEAP32[$ref$tmp39+8>>2]=0|0;
      $call$i160 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7183)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp39,7183,$call$i160);
      __THREW__ = 0;
      $call42 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp39|0),($db|0))|0);
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if ($27) {
       $28 = ___cxa_find_matching_catch_2()|0;
       $29 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp39);
       $ehselector$slot$4 = $29;$exn$slot$4 = $28;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp39);
       $cmp44 = ($call42|0)==($add$ptr|0);
       $first$call42 = $cmp44 ? $first : $call42;
       $retval$3 = $first$call42;
       break L1;
      }
      break;
     }
     case 104:  {
      ;HEAP32[$ref$tmp50>>2]=0|0;HEAP32[$ref$tmp50+4>>2]=0|0;HEAP32[$ref$tmp50+8>>2]=0|0;
      $call$i161 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7195)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp50,7195,$call$i161);
      __THREW__ = 0;
      $call53 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp50|0),($db|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       $32 = ___cxa_find_matching_catch_2()|0;
       $33 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp50);
       $ehselector$slot$4 = $33;$exn$slot$4 = $32;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp50);
       $cmp55 = ($call53|0)==($add$ptr|0);
       $first$call53 = $cmp55 ? $first : $call53;
       $retval$3 = $first$call53;
       break L1;
      }
      break;
     }
     case 115:  {
      ;HEAP32[$ref$tmp61>>2]=0|0;HEAP32[$ref$tmp61+4>>2]=0|0;HEAP32[$ref$tmp61+8>>2]=0|0;
      $call$i162 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7209)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp61,7209,$call$i162);
      __THREW__ = 0;
      $call64 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp61|0),($db|0))|0);
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $36 = ___cxa_find_matching_catch_2()|0;
       $37 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp61);
       $ehselector$slot$4 = $37;$exn$slot$4 = $36;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp61);
       $cmp66 = ($call64|0)==($add$ptr|0);
       $first$call64 = $cmp66 ? $first : $call64;
       $retval$3 = $first$call64;
       break L1;
      }
      break;
     }
     case 116:  {
      ;HEAP32[$ref$tmp72>>2]=0|0;HEAP32[$ref$tmp72+4>>2]=0|0;HEAP32[$ref$tmp72+8>>2]=0|0;
      $call$i163 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7215)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp72,7215,$call$i163);
      __THREW__ = 0;
      $call75 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp72|0),($db|0))|0);
      $38 = __THREW__; __THREW__ = 0;
      $39 = $38&1;
      if ($39) {
       $40 = ___cxa_find_matching_catch_2()|0;
       $41 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp72);
       $ehselector$slot$4 = $41;$exn$slot$4 = $40;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp72);
       $cmp77 = ($call75|0)==($add$ptr|0);
       $first$call75 = $cmp77 ? $first : $call75;
       $retval$3 = $first$call75;
       break L1;
      }
      break;
     }
     case 105:  {
      ;HEAP32[$ref$tmp83>>2]=0|0;HEAP32[$ref$tmp83+4>>2]=0|0;HEAP32[$ref$tmp83+8>>2]=0|0;
      $call$i164 = (__ZNSt3__211char_traitsIcE6lengthEPKc(9474)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp83,9474,$call$i164);
      __THREW__ = 0;
      $call86 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp83|0),($db|0))|0);
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if ($43) {
       $44 = ___cxa_find_matching_catch_2()|0;
       $45 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp83);
       $ehselector$slot$4 = $45;$exn$slot$4 = $44;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp83);
       $cmp88 = ($call86|0)==($add$ptr|0);
       $first$call86 = $cmp88 ? $first : $call86;
       $retval$3 = $first$call86;
       break L1;
      }
      break;
     }
     case 106:  {
      ;HEAP32[$ref$tmp94>>2]=0|0;HEAP32[$ref$tmp94+4>>2]=0|0;HEAP32[$ref$tmp94+8>>2]=0|0;
      $call$i165 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7230)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp94,7230,$call$i165);
      __THREW__ = 0;
      $call97 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp94|0),($db|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       $48 = ___cxa_find_matching_catch_2()|0;
       $49 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp94);
       $ehselector$slot$4 = $49;$exn$slot$4 = $48;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp94);
       $cmp99 = ($call97|0)==($add$ptr|0);
       $first$call97 = $cmp99 ? $first : $call97;
       $retval$3 = $first$call97;
       break L1;
      }
      break;
     }
     case 108:  {
      ;HEAP32[$ref$tmp105>>2]=0|0;HEAP32[$ref$tmp105+4>>2]=0|0;HEAP32[$ref$tmp105+8>>2]=0|0;
      $call$i166 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7232)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp105,7232,$call$i166);
      __THREW__ = 0;
      $call108 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp105|0),($db|0))|0);
      $50 = __THREW__; __THREW__ = 0;
      $51 = $50&1;
      if ($51) {
       $52 = ___cxa_find_matching_catch_2()|0;
       $53 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp105);
       $ehselector$slot$4 = $53;$exn$slot$4 = $52;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp105);
       $cmp110 = ($call108|0)==($add$ptr|0);
       $first$call108 = $cmp110 ? $first : $call108;
       $retval$3 = $first$call108;
       break L1;
      }
      break;
     }
     case 109:  {
      ;HEAP32[$ref$tmp116>>2]=0|0;HEAP32[$ref$tmp116+4>>2]=0|0;HEAP32[$ref$tmp116+8>>2]=0|0;
      $call$i167 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7234)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp116,7234,$call$i167);
      __THREW__ = 0;
      $call119 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp116|0),($db|0))|0);
      $54 = __THREW__; __THREW__ = 0;
      $55 = $54&1;
      if ($55) {
       $56 = ___cxa_find_matching_catch_2()|0;
       $57 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp116);
       $ehselector$slot$4 = $57;$exn$slot$4 = $56;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp116);
       $cmp121 = ($call119|0)==($add$ptr|0);
       $first$call119 = $cmp121 ? $first : $call119;
       $retval$3 = $first$call119;
       break L1;
      }
      break;
     }
     case 120:  {
      ;HEAP32[$ref$tmp127>>2]=0|0;HEAP32[$ref$tmp127+4>>2]=0|0;HEAP32[$ref$tmp127+8>>2]=0|0;
      $call$i168 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7237)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp127,7237,$call$i168);
      __THREW__ = 0;
      $call130 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp127|0),($db|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       $60 = ___cxa_find_matching_catch_2()|0;
       $61 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp127);
       $ehselector$slot$4 = $61;$exn$slot$4 = $60;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp127);
       $cmp132 = ($call130|0)==($add$ptr|0);
       $first$call130 = $cmp132 ? $first : $call130;
       $retval$3 = $first$call130;
       break L1;
      }
      break;
     }
     case 121:  {
      ;HEAP32[$ref$tmp138>>2]=0|0;HEAP32[$ref$tmp138+4>>2]=0|0;HEAP32[$ref$tmp138+8>>2]=0|0;
      $call$i169 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7240)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp138,7240,$call$i169);
      __THREW__ = 0;
      $call141 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp138|0),($db|0))|0);
      $62 = __THREW__; __THREW__ = 0;
      $63 = $62&1;
      if ($63) {
       $64 = ___cxa_find_matching_catch_2()|0;
       $65 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp138);
       $ehselector$slot$4 = $65;$exn$slot$4 = $64;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp138);
       $cmp143 = ($call141|0)==($add$ptr|0);
       $first$call141 = $cmp143 ? $first : $call141;
       $retval$3 = $first$call141;
       break L1;
      }
      break;
     }
     case 110:  {
      ;HEAP32[$ref$tmp149>>2]=0|0;HEAP32[$ref$tmp149+4>>2]=0|0;HEAP32[$ref$tmp149+8>>2]=0|0;
      $call$i170 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7244)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp149,7244,$call$i170);
      __THREW__ = 0;
      $call152 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp149|0),($db|0))|0);
      $66 = __THREW__; __THREW__ = 0;
      $67 = $66&1;
      if ($67) {
       $68 = ___cxa_find_matching_catch_2()|0;
       $69 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp149);
       $ehselector$slot$4 = $69;$exn$slot$4 = $68;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp149);
       $cmp154 = ($call152|0)==($add$ptr|0);
       $first$call152 = $cmp154 ? $first : $call152;
       $retval$3 = $first$call152;
       break L1;
      }
      break;
     }
     case 111:  {
      ;HEAP32[$ref$tmp160>>2]=0|0;HEAP32[$ref$tmp160+4>>2]=0|0;HEAP32[$ref$tmp160+8>>2]=0|0;
      $call$i171 = (__ZNSt3__211char_traitsIcE6lengthEPKc(7253)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($ref$tmp160,7253,$call$i171);
      __THREW__ = 0;
      $call163 = (invoke_iiiii(79,($add$ptr|0),($last|0),($ref$tmp160|0),($db|0))|0);
      $70 = __THREW__; __THREW__ = 0;
      $71 = $70&1;
      if ($71) {
       $72 = ___cxa_find_matching_catch_2()|0;
       $73 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp160);
       $ehselector$slot$4 = $73;$exn$slot$4 = $72;
       break L4;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp160);
       $cmp165 = ($call163|0)==($add$ptr|0);
       $first$call163 = $cmp165 ? $first : $call163;
       $retval$3 = $first$call163;
       break L1;
      }
      break;
     }
     case 102:  {
      $call171 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_($add$ptr,$last,$db)|0);
      $cmp173 = ($call171|0)==($add$ptr|0);
      $first$call171 = $cmp173 ? $first : $call171;
      $retval$3 = $first$call171;
      break L1;
      break;
     }
     case 100:  {
      $call179 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_($add$ptr,$last,$db)|0);
      $cmp181 = ($call179|0)==($add$ptr|0);
      $first$call179 = $cmp181 ? $first : $call179;
      $retval$3 = $first$call179;
      break L1;
      break;
     }
     case 101:  {
      $call187 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_($add$ptr,$last,$db)|0);
      $cmp189 = ($call187|0)==($add$ptr|0);
      $first$call187 = $cmp189 ? $first : $call187;
      $retval$3 = $first$call187;
      break L1;
      break;
     }
     case 95:  {
      $74 = HEAP8[$add$ptr>>0]|0;
      $cmp195 = ($74<<24>>24)==(90);
      if (!($cmp195)) {
       $retval$3 = $first;
       break L1;
      }
      $call199 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($arrayidx7,$last,$db)|0);
      $cmp201 = ($call199|0)==($arrayidx7|0);
      $cmp203 = ($call199|0)==($last|0);
      $or$cond = $cmp201 | $cmp203;
      if ($or$cond) {
       $retval$3 = $first;
       break L1;
      }
      $75 = HEAP8[$call199>>0]|0;
      $cmp206 = ($75<<24>>24)==(69);
      $add$ptr208 = ((($call199)) + 1|0);
      $add$ptr208$first = $cmp206 ? $add$ptr208 : $first;
      $retval$3 = $add$ptr208$first;
      break L1;
      break;
     }
     default: {
      $call213 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($arrayidx,$last,$db)|0);
      $cmp215 = ($call213|0)==($arrayidx|0);
      $cmp217 = ($call213|0)==($last|0);
      $or$cond150 = $cmp215 | $cmp217;
      if ($or$cond150) {
       $retval$3 = $first;
       break L1;
      }
      $76 = HEAP8[$call213>>0]|0;
      $cmp220 = ($76<<24>>24)==(69);
      if ($cmp220) {
       $add$ptr271 = ((($call213)) + 1|0);
       $retval$3 = $add$ptr271;
       break L1;
      } else {
       $n$0 = $call213;
      }
      while(1) {
       $cmp222 = ($n$0|0)==($last|0);
       $incdec$ptr = ((($n$0)) + 1|0);
       if ($cmp222) {
        $retval$3 = $first;
        break L1;
       }
       $77 = HEAP8[$n$0>>0]|0;
       $conv223 = $77 << 24 >> 24;
       $isdigittmp = (($conv223) + -48)|0;
       $isdigit = ($isdigittmp>>>0)<(10);
       if ($isdigit) {
        $n$0 = $incdec$ptr;
       } else {
        break;
       }
      }
      $cmp225 = ($n$0|0)!=($call213|0);
      $cmp230 = ($77<<24>>24)==(69);
      $or$cond210 = $cmp225 & $cmp230;
      if (!($or$cond210)) {
       $retval$3 = $first;
       break L1;
      }
      $78 = HEAP32[$db>>2]|0;
      $__end_$i172 = ((($db)) + 4|0);
      $79 = HEAP32[$__end_$i172>>2]|0;
      $cmp$i173 = ($78|0)==($79|0);
      if ($cmp$i173) {
       $retval$3 = $first;
       break L1;
      }
      $add$ptr$i = ((($79)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp239,$add$ptr$i);
      __THREW__ = 0;
      $call$i175176 = (invoke_iiii(56,($ref$tmp239|0),0,(5838|0))|0);
      $80 = __THREW__; __THREW__ = 0;
      $81 = $80&1;
      if ($81) {
       $92 = ___cxa_find_matching_catch_2()|0;
       $93 = tempRet0;
       $ehselector$slot$3 = $93;$exn$slot$3 = $92;
      } else {
       ;HEAP32[$ref$tmp238>>2]=HEAP32[$ref$tmp239>>2]|0;HEAP32[$ref$tmp238+4>>2]=HEAP32[$ref$tmp239+4>>2]|0;HEAP32[$ref$tmp238+8>>2]=HEAP32[$ref$tmp239+8>>2]|0;
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $arrayidx$i$i$i = (($ref$tmp239) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$arrayidx$i$i$i>>2] = 0;
        $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $inc$i$i$i;
       }
       __THREW__ = 0;
       $call$i177185 = (invoke_iii(54,($ref$tmp238|0),(5836|0))|0);
       $82 = __THREW__; __THREW__ = 0;
       $83 = $82&1;
       if ($83) {
        $94 = ___cxa_find_matching_catch_2()|0;
        $95 = tempRet0;
        $ehselector$slot$2 = $95;$exn$slot$2 = $94;
       } else {
        ;HEAP32[$ref$tmp237>>2]=HEAP32[$ref$tmp238>>2]|0;HEAP32[$ref$tmp237+4>>2]=HEAP32[$ref$tmp238+4>>2]|0;HEAP32[$ref$tmp237+8>>2]=HEAP32[$ref$tmp238+8>>2]|0;
        $__i$0$i$i$i179 = 0;
        while(1) {
         $exitcond$i$i$i180 = ($__i$0$i$i$i179|0)==(3);
         if ($exitcond$i$i$i180) {
          break;
         }
         $arrayidx$i$i$i182 = (($ref$tmp238) + ($__i$0$i$i$i179<<2)|0);
         HEAP32[$arrayidx$i$i$i182>>2] = 0;
         $inc$i$i$i183 = (($__i$0$i$i$i179) + 1)|0;
         $__i$0$i$i$i179 = $inc$i$i$i183;
        }
        ;HEAP32[$ref$tmp246>>2]=0|0;HEAP32[$ref$tmp246+4>>2]=0|0;HEAP32[$ref$tmp246+8>>2]=0|0;
        __THREW__ = 0;
        invoke_viii(80,($ref$tmp246|0),($call213|0),($n$0|0));
        $84 = __THREW__; __THREW__ = 0;
        $85 = $84&1;
        do {
         if ($85) {
          $96 = ___cxa_find_matching_catch_2()|0;
          $97 = tempRet0;
          $ehselector$slot$1 = $97;$exn$slot$1 = $96;
         } else {
          $__size_$i$i$i$i$i = ((($ref$tmp246)) + 11|0);
          $86 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($86<<24>>24)<(0);
          $87 = HEAP32[$ref$tmp246>>2]|0;
          $cond$i$i$i$i = $tobool$i$i$i$i$i ? $87 : $ref$tmp246;
          $__size_$i3$i$i$i = ((($ref$tmp246)) + 4|0);
          $88 = HEAP32[$__size_$i3$i$i$i>>2]|0;
          $conv$i$i$i$i = $86&255;
          $cond$i$i$i = $tobool$i$i$i$i$i ? $88 : $conv$i$i$i$i;
          __THREW__ = 0;
          $call3$i$i194 = (invoke_iiii(47,($ref$tmp237|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
          $89 = __THREW__; __THREW__ = 0;
          $90 = $89&1;
          if ($90) {
           $98 = ___cxa_find_matching_catch_2()|0;
           $99 = tempRet0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp246);
           $ehselector$slot$1 = $99;$exn$slot$1 = $98;
           break;
          }
          ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp237>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp237+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp237+8>>2]|0;
          $__i$0$i$i$i188 = 0;
          while(1) {
           $exitcond$i$i$i189 = ($__i$0$i$i$i188|0)==(3);
           if ($exitcond$i$i$i189) {
            break;
           }
           $arrayidx$i$i$i191 = (($ref$tmp237) + ($__i$0$i$i$i188<<2)|0);
           HEAP32[$arrayidx$i$i$i191>>2] = 0;
           $inc$i$i$i192 = (($__i$0$i$i$i188) + 1)|0;
           $__i$0$i$i$i188 = $inc$i$i$i192;
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp236,$agg$tmp);
          $91 = HEAP32[$__end_$i172>>2]|0;
          $add$ptr$i196 = ((($91)) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i196,$ref$tmp236);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp236);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp246);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp237);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp238);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp239);
          $retval$3 = $incdec$ptr;
          break L1;
         }
        } while(0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp237);
        $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp238);
       $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp239);
      $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
     }
     }
    } while(0);
    ___resumeException($exn$slot$4|0);
    // unreachable;
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i48 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i49 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i39 = 0, $add$ptr = 0, $add$ptr19 = 0, $add$ptr59 = 0, $agg$tmp = 0, $agg$tmp46 = 0, $arrayidx = 0, $arrayidx$i$i$i = 0;
 var $arrayidx$i$i$i42 = 0, $call = 0, $call$i37 = 0, $call$i46 = 0, $call29 = 0, $call36 = 0, $call38 = 0, $call5 = 0, $cmp = 0, $cmp$i = 0, $cmp$i50 = 0, $cmp1 = 0, $cmp30 = 0, $cmp33 = 0, $cmp39 = 0, $cmp42 = 0, $cmp6 = 0, $cmp9 = 0, $cv = 0, $cv27 = 0;
 var $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i40 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $first$addr$0 = 0, $first$addr$2 = 0, $first$addr$3 = 0, $inc$i$i$i = 0, $inc$i$i$i43 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i51 = 0, $ref$tmp = 0, $ref$tmp11 = 0, $ref$tmp45 = 0, $ref$tmp47 = 0;
 var $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $cv = sp + 104|0;
 $ref$tmp = sp + 80|0;
 $agg$tmp = sp + 64|0;
 $ref$tmp11 = sp + 52|0;
 $cv27 = sp + 48|0;
 $ref$tmp45 = sp + 24|0;
 $agg$tmp46 = sp + 12|0;
 $ref$tmp47 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(102);
   if ($cmp1) {
    $arrayidx = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx>>0]|0;
    $add$ptr = ((($first)) + 2|0);
    L4: do {
     switch ($1<<24>>24) {
     case 112:  {
      $call = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($add$ptr,$last,$cv)|0);
      $call5 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($call,$last)|0);
      $cmp6 = ($call5|0)==($last|0);
      L6: do {
       if ($cmp6) {
        $first$addr$0 = $first;
       } else {
        $2 = HEAP8[$call5>>0]|0;
        $cmp9 = ($2<<24>>24)==(95);
        if ($cmp9) {
         ;HEAP32[$ref$tmp11>>2]=0|0;HEAP32[$ref$tmp11+4>>2]=0|0;HEAP32[$ref$tmp11+8>>2]=0|0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($ref$tmp11,$call,$call5);
         __THREW__ = 0;
         $call$i37 = (invoke_iiii(56,($ref$tmp11|0),0,(7156|0))|0);
         $3 = __THREW__; __THREW__ = 0;
         $4 = $3&1;
         do {
          if ($4) {
           $10 = ___cxa_find_matching_catch_2()|0;
           $11 = tempRet0;
           $ehselector$slot$0 = $11;$exn$slot$0 = $10;
          } else {
           ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp11>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp11+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp11+8>>2]|0;
           $__i$0$i$i$i = 0;
           while(1) {
            $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
            if ($exitcond$i$i$i) {
             break;
            }
            $arrayidx$i$i$i = (($ref$tmp11) + ($__i$0$i$i$i<<2)|0);
            HEAP32[$arrayidx$i$i$i>>2] = 0;
            $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
            $__i$0$i$i$i = $inc$i$i$i;
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
           $__end_$i = ((($db)) + 4|0);
           $5 = HEAP32[$__end_$i>>2]|0;
           $__first_$i$i$i$i = ((($db)) + 8|0);
           $6 = HEAP32[$__first_$i$i$i$i>>2]|0;
           $cmp$i = ($5>>>0)<($6>>>0);
           if ($cmp$i) {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5,$ref$tmp);
            $7 = HEAP32[$__end_$i>>2]|0;
            $incdec$ptr$i = ((($7)) + 24|0);
            HEAP32[$__end_$i>>2] = $incdec$ptr$i;
           } else {
            __THREW__ = 0;
            invoke_vii(64,($db|0),($ref$tmp|0));
            $8 = __THREW__; __THREW__ = 0;
            $9 = $8&1;
            if ($9) {
             $12 = ___cxa_find_matching_catch_2()|0;
             $13 = tempRet0;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
             $ehselector$slot$0 = $13;$exn$slot$0 = $12;
             break;
            }
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
           $add$ptr19 = ((($call5)) + 1|0);
           $first$addr$0 = $add$ptr19;
           break L6;
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
         $ehselector$slot$2 = $ehselector$slot$0;$exn$slot$2 = $exn$slot$0;
         break L4;
        } else {
         $first$addr$0 = $first;
        }
       }
      } while(0);
      $first$addr$3 = $first$addr$0;
      break L1;
      break;
     }
     case 76:  {
      $call29 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($add$ptr,$last)|0);
      $cmp30 = ($call29|0)==($last|0);
      L24: do {
       if ($cmp30) {
        $first$addr$2 = $first;
       } else {
        $14 = HEAP8[$call29>>0]|0;
        $cmp33 = ($14<<24>>24)==(112);
        if ($cmp33) {
         $incdec$ptr = ((($call29)) + 1|0);
         $call36 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($incdec$ptr,$last,$cv27)|0);
         $call38 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($call36,$last)|0);
         $cmp39 = ($call38|0)==($last|0);
         if ($cmp39) {
          $first$addr$2 = $first;
         } else {
          $15 = HEAP8[$call38>>0]|0;
          $cmp42 = ($15<<24>>24)==(95);
          if ($cmp42) {
           ;HEAP32[$ref$tmp47>>2]=0|0;HEAP32[$ref$tmp47+4>>2]=0|0;HEAP32[$ref$tmp47+8>>2]=0|0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($ref$tmp47,$call36,$call38);
           __THREW__ = 0;
           $call$i46 = (invoke_iiii(56,($ref$tmp47|0),0,(7156|0))|0);
           $16 = __THREW__; __THREW__ = 0;
           $17 = $16&1;
           do {
            if ($17) {
             $23 = ___cxa_find_matching_catch_2()|0;
             $24 = tempRet0;
             $ehselector$slot$1 = $24;$exn$slot$1 = $23;
            } else {
             ;HEAP32[$agg$tmp46>>2]=HEAP32[$ref$tmp47>>2]|0;HEAP32[$agg$tmp46+4>>2]=HEAP32[$ref$tmp47+4>>2]|0;HEAP32[$agg$tmp46+8>>2]=HEAP32[$ref$tmp47+8>>2]|0;
             $__i$0$i$i$i39 = 0;
             while(1) {
              $exitcond$i$i$i40 = ($__i$0$i$i$i39|0)==(3);
              if ($exitcond$i$i$i40) {
               break;
              }
              $arrayidx$i$i$i42 = (($ref$tmp47) + ($__i$0$i$i$i39<<2)|0);
              HEAP32[$arrayidx$i$i$i42>>2] = 0;
              $inc$i$i$i43 = (($__i$0$i$i$i39) + 1)|0;
              $__i$0$i$i$i39 = $inc$i$i$i43;
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp45,$agg$tmp46);
             $__end_$i48 = ((($db)) + 4|0);
             $18 = HEAP32[$__end_$i48>>2]|0;
             $__first_$i$i$i$i49 = ((($db)) + 8|0);
             $19 = HEAP32[$__first_$i$i$i$i49>>2]|0;
             $cmp$i50 = ($18>>>0)<($19>>>0);
             if ($cmp$i50) {
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($18,$ref$tmp45);
              $20 = HEAP32[$__end_$i48>>2]|0;
              $incdec$ptr$i51 = ((($20)) + 24|0);
              HEAP32[$__end_$i48>>2] = $incdec$ptr$i51;
             } else {
              __THREW__ = 0;
              invoke_vii(64,($db|0),($ref$tmp45|0));
              $21 = __THREW__; __THREW__ = 0;
              $22 = $21&1;
              if ($22) {
               $25 = ___cxa_find_matching_catch_2()|0;
               $26 = tempRet0;
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp45);
               __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp46);
               $ehselector$slot$1 = $26;$exn$slot$1 = $25;
               break;
              }
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp45);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp46);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp47);
             $add$ptr59 = ((($call38)) + 1|0);
             $first$addr$2 = $add$ptr59;
             break L24;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp47);
           $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
           break L4;
          } else {
           $first$addr$2 = $first;
          }
         }
        } else {
         $first$addr$2 = $first;
        }
       }
      } while(0);
      $first$addr$3 = $first$addr$2;
      break L1;
      break;
     }
     default: {
      $first$addr$3 = $first;
      break L1;
     }
     }
    } while(0);
    ___resumeException($exn$slot$2|0);
    // unreachable;
   } else {
    $first$addr$3 = $first;
   }
  } else {
   $first$addr$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($first$addr$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$op,$db) {
 $first = $first|0;
 $last = $last|0;
 $op = $op|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i115 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $__end_$i110 = 0;
 var $__i$0$i$i$i = 0, $__i$0$i$i$i35 = 0, $__i$0$i$i$i44 = 0, $__i$0$i$i$i62 = 0, $__i$0$i$i$i73 = 0, $__size_$i$i$i = 0, $__size_$i$i$i$i$i53 = 0, $__size_$i$i$i$i$i82 = 0, $__size_$i1$i = 0, $__size_$i2$i = 0, $__size_$i3$i$i = 0, $__size_$i3$i$i$i58 = 0, $__size_$i3$i$i$i87 = 0, $add$ptr$i = 0, $add$ptr$i111 = 0, $add$ptr$i27 = 0, $add$ptr$i29 = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i38 = 0, $arrayidx$i$i$i47 = 0;
 var $arrayidx$i$i$i65 = 0, $arrayidx$i$i$i76 = 0, $call = 0, $call$i = 0, $call$i3233 = 0, $call$i4250 = 0, $call$i7179 = 0, $call$i92 = 0, $call1 = 0, $call3$i = 0, $call3$i$i41 = 0, $call3$i$i69 = 0, $call3$i101 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i112 = 0, $cmp$i99 = 0, $cmp2 = 0, $cmp4$i = 0;
 var $cmp4$i103 = 0, $cmp5 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i57 = 0, $cond$i$i$i$i86 = 0, $cond$i$i$i60 = 0, $cond$i$i$i89 = 0, $cond$i$i98 = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i59 = 0, $conv$i$i$i$i88 = 0, $conv$i$i$i97 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0;
 var $ehselector$slot$5 = 0, $ehselector$slot$6 = 0, $ehselector$slot$7 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i36 = 0, $exitcond$i$i$i45 = 0, $exitcond$i$i$i63 = 0, $exitcond$i$i$i74 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $exn$slot$5 = 0, $exn$slot$6 = 0, $exn$slot$7 = 0, $first18 = 0, $inc$i$i$i = 0, $inc$i$i$i39 = 0, $inc$i$i$i48 = 0;
 var $inc$i$i$i66 = 0, $inc$i$i$i77 = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i114 = 0, $op1 = 0, $op2 = 0, $ref$tmp = 0, $ref$tmp$i = 0, $ref$tmp25 = 0, $ref$tmp26 = 0, $ref$tmp27 = 0, $ref$tmp28 = 0, $ref$tmp29 = 0, $ref$tmp4$i = 0, $retval$1 = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, $tobool$i$i = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i$i = 0;
 var $tobool$i$i$i$i$i54 = 0, $tobool$i$i$i$i$i83 = 0, $tobool$i$i$i95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $ref$tmp$i = sp + 97|0;
 $ref$tmp4$i = sp + 96|0;
 $op2 = sp + 84|0;
 $op1 = sp + 72|0;
 $ref$tmp = sp + 60|0;
 $ref$tmp25 = sp + 48|0;
 $ref$tmp26 = sp + 36|0;
 $ref$tmp27 = sp + 24|0;
 $ref$tmp28 = sp + 12|0;
 $ref$tmp29 = sp;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $cmp = ($call|0)==($first|0);
 L1: do {
  if ($cmp) {
   $retval$1 = $first;
  } else {
   $call1 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
   $cmp2 = ($call1|0)==($call|0);
   $__end_$i110 = ((($db)) + 4|0);
   if ($cmp2) {
    $75 = HEAP32[$__end_$i110>>2]|0;
    $add$ptr$i111 = ((($75)) + -24|0);
    $76 = $75;
    while(1) {
     $cmp$i$i$i112 = ($76|0)==($add$ptr$i111|0);
     if ($cmp$i$i$i112) {
      $retval$1 = $first;
      break L1;
     }
     $incdec$ptr$i$i$i114 = ((($76)) + -24|0);
     HEAP32[$__end_$i110>>2] = $incdec$ptr$i$i$i114;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i114);
     $$pre$i115 = HEAP32[$__end_$i110>>2]|0;
     $76 = $$pre$i115;
    }
   }
   $0 = HEAP32[$__end_$i110>>2]|0;
   $1 = HEAP32[$db>>2]|0;
   $sub$ptr$sub$i = (($0) - ($1))|0;
   $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
   $cmp5 = ($sub$ptr$div$i>>>0)<(2);
   if ($cmp5) {
    $retval$1 = $first;
   } else {
    $2 = $0;
    $add$ptr$i = ((($2)) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2,$add$ptr$i);
    $3 = HEAP32[$__end_$i110>>2]|0;
    $add$ptr$i27 = ((($3)) + -24|0);
    $4 = $3;
    while(1) {
     $cmp$i$i$i = ($4|0)==($add$ptr$i27|0);
     if ($cmp$i$i$i) {
      break;
     }
     $incdec$ptr$i$i$i = ((($4)) + -24|0);
     HEAP32[$__end_$i110>>2] = $incdec$ptr$i$i$i;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
     $$pre$i = HEAP32[$__end_$i110>>2]|0;
     $4 = $$pre$i;
    }
    $add$ptr$i29 = ((($3)) + -48|0);
    __THREW__ = 0;
    invoke_vii(55,($op1|0),($add$ptr$i29|0));
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if ($6) {
     $22 = ___cxa_find_matching_catch_2()|0;
     $23 = tempRet0;
     $ehselector$slot$7 = $23;$exn$slot$7 = $22;
    } else {
     $7 = HEAP32[$__end_$i110>>2]|0;
     $first18 = ((($7)) + -24|0);
     $__size_$i1$i = ((($first18)) + 11|0);
     $8 = HEAP8[$__size_$i1$i>>0]|0;
     $tobool$i$i = ($8<<24>>24)<(0);
     if ($tobool$i$i) {
      $9 = HEAP32[$first18>>2]|0;
      HEAP8[$ref$tmp$i>>0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc($9,$ref$tmp$i);
      $__size_$i2$i = ((($7)) + -20|0);
      HEAP32[$__size_$i2$i>>2] = 0;
     } else {
      HEAP8[$ref$tmp4$i>>0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc($first18,$ref$tmp4$i);
      HEAP8[$__size_$i1$i>>0] = 0;
     }
     __THREW__ = 0;
     $call$i = (invoke_ii(58,(5874|0))|0);
     $10 = __THREW__; __THREW__ = 0;
     $11 = $10&1;
     if ($11) {
      $18 = ___cxa_find_matching_catch_3(0|0)|0;
      $19 = tempRet0;
      ___clang_call_terminate($18);
      // unreachable;
     }
     $__size_$i$i$i = ((($op)) + 11|0);
     $12 = HEAP8[$__size_$i$i$i>>0]|0;
     $tobool$i$i$i = ($12<<24>>24)<(0);
     $__size_$i3$i$i = ((($op)) + 4|0);
     $13 = HEAP32[$__size_$i3$i$i>>2]|0;
     $conv$i$i$i = $12&255;
     $cond$i$i = $tobool$i$i$i ? $13 : $conv$i$i$i;
     $cmp$i = ($call$i|0)==($cond$i$i|0);
     if ($cmp$i) {
      __THREW__ = 0;
      $call3$i = (invoke_iiii(59,($op|0),(5874|0),($call$i|0))|0);
      $14 = __THREW__; __THREW__ = 0;
      $15 = $14&1;
      if ($15) {
       $16 = ___cxa_find_matching_catch_3(0|0)|0;
       $17 = tempRet0;
       ___clang_call_terminate($16);
       // unreachable;
      }
      $cmp4$i = ($call3$i|0)==(0);
      if ($cmp4$i) {
       __THREW__ = 0;
       invoke_vii(52,($first18|0),40);
       $20 = __THREW__; __THREW__ = 0;
       $21 = $20&1;
       if ($21) {
        label = 19;
       } else {
        label = 20;
       }
      } else {
       label = 20;
      }
     } else {
      label = 20;
     }
     L30: do {
      if ((label|0) == 20) {
       __THREW__ = 0;
       invoke_viii(76,($ref$tmp29|0),(5838|0),($op1|0));
       $26 = __THREW__; __THREW__ = 0;
       $27 = $26&1;
       if ($27) {
        $61 = ___cxa_find_matching_catch_2()|0;
        $62 = tempRet0;
        $ehselector$slot$5 = $62;$exn$slot$5 = $61;
       } else {
        __THREW__ = 0;
        $call$i3233 = (invoke_iii(54,($ref$tmp29|0),(6124|0))|0);
        $28 = __THREW__; __THREW__ = 0;
        $29 = $28&1;
        if ($29) {
         $63 = ___cxa_find_matching_catch_2()|0;
         $64 = tempRet0;
         $ehselector$slot$4 = $64;$exn$slot$4 = $63;
        } else {
         ;HEAP32[$ref$tmp28>>2]=HEAP32[$ref$tmp29>>2]|0;HEAP32[$ref$tmp28+4>>2]=HEAP32[$ref$tmp29+4>>2]|0;HEAP32[$ref$tmp28+8>>2]=HEAP32[$ref$tmp29+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp29) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         $30 = HEAP8[$__size_$i$i$i>>0]|0;
         $tobool$i$i$i$i$i = ($30<<24>>24)<(0);
         $31 = HEAP32[$op>>2]|0;
         $cond$i$i$i$i = $tobool$i$i$i$i$i ? $31 : $op;
         $32 = HEAP32[$__size_$i3$i$i>>2]|0;
         $conv$i$i$i$i = $30&255;
         $cond$i$i$i = $tobool$i$i$i$i$i ? $32 : $conv$i$i$i$i;
         __THREW__ = 0;
         $call3$i$i41 = (invoke_iiii(47,($ref$tmp28|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
         $33 = __THREW__; __THREW__ = 0;
         $34 = $33&1;
         if ($34) {
          $65 = ___cxa_find_matching_catch_2()|0;
          $66 = tempRet0;
          $ehselector$slot$3 = $66;$exn$slot$3 = $65;
         } else {
          ;HEAP32[$ref$tmp27>>2]=HEAP32[$ref$tmp28>>2]|0;HEAP32[$ref$tmp27+4>>2]=HEAP32[$ref$tmp28+4>>2]|0;HEAP32[$ref$tmp27+8>>2]=HEAP32[$ref$tmp28+8>>2]|0;
          $__i$0$i$i$i35 = 0;
          while(1) {
           $exitcond$i$i$i36 = ($__i$0$i$i$i35|0)==(3);
           if ($exitcond$i$i$i36) {
            break;
           }
           $arrayidx$i$i$i38 = (($ref$tmp28) + ($__i$0$i$i$i35<<2)|0);
           HEAP32[$arrayidx$i$i$i38>>2] = 0;
           $inc$i$i$i39 = (($__i$0$i$i$i35) + 1)|0;
           $__i$0$i$i$i35 = $inc$i$i$i39;
          }
          __THREW__ = 0;
          $call$i4250 = (invoke_iii(54,($ref$tmp27|0),(5833|0))|0);
          $35 = __THREW__; __THREW__ = 0;
          $36 = $35&1;
          if ($36) {
           $67 = ___cxa_find_matching_catch_2()|0;
           $68 = tempRet0;
           $ehselector$slot$2 = $68;$exn$slot$2 = $67;
          } else {
           ;HEAP32[$ref$tmp26>>2]=HEAP32[$ref$tmp27>>2]|0;HEAP32[$ref$tmp26+4>>2]=HEAP32[$ref$tmp27+4>>2]|0;HEAP32[$ref$tmp26+8>>2]=HEAP32[$ref$tmp27+8>>2]|0;
           $__i$0$i$i$i44 = 0;
           while(1) {
            $exitcond$i$i$i45 = ($__i$0$i$i$i44|0)==(3);
            if ($exitcond$i$i$i45) {
             break;
            }
            $arrayidx$i$i$i47 = (($ref$tmp27) + ($__i$0$i$i$i44<<2)|0);
            HEAP32[$arrayidx$i$i$i47>>2] = 0;
            $inc$i$i$i48 = (($__i$0$i$i$i44) + 1)|0;
            $__i$0$i$i$i44 = $inc$i$i$i48;
           }
           $__size_$i$i$i$i$i53 = ((($op2)) + 11|0);
           $37 = HEAP8[$__size_$i$i$i$i$i53>>0]|0;
           $tobool$i$i$i$i$i54 = ($37<<24>>24)<(0);
           $38 = HEAP32[$op2>>2]|0;
           $cond$i$i$i$i57 = $tobool$i$i$i$i$i54 ? $38 : $op2;
           $__size_$i3$i$i$i58 = ((($op2)) + 4|0);
           $39 = HEAP32[$__size_$i3$i$i$i58>>2]|0;
           $conv$i$i$i$i59 = $37&255;
           $cond$i$i$i60 = $tobool$i$i$i$i$i54 ? $39 : $conv$i$i$i$i59;
           __THREW__ = 0;
           $call3$i$i69 = (invoke_iiii(47,($ref$tmp26|0),($cond$i$i$i$i57|0),($cond$i$i$i60|0))|0);
           $40 = __THREW__; __THREW__ = 0;
           $41 = $40&1;
           if ($41) {
            $69 = ___cxa_find_matching_catch_2()|0;
            $70 = tempRet0;
            $ehselector$slot$1 = $70;$exn$slot$1 = $69;
           } else {
            ;HEAP32[$ref$tmp25>>2]=HEAP32[$ref$tmp26>>2]|0;HEAP32[$ref$tmp25+4>>2]=HEAP32[$ref$tmp26+4>>2]|0;HEAP32[$ref$tmp25+8>>2]=HEAP32[$ref$tmp26+8>>2]|0;
            $__i$0$i$i$i62 = 0;
            while(1) {
             $exitcond$i$i$i63 = ($__i$0$i$i$i62|0)==(3);
             if ($exitcond$i$i$i63) {
              break;
             }
             $arrayidx$i$i$i65 = (($ref$tmp26) + ($__i$0$i$i$i62<<2)|0);
             HEAP32[$arrayidx$i$i$i65>>2] = 0;
             $inc$i$i$i66 = (($__i$0$i$i$i62) + 1)|0;
             $__i$0$i$i$i62 = $inc$i$i$i66;
            }
            __THREW__ = 0;
            $call$i7179 = (invoke_iii(54,($ref$tmp25|0),(5836|0))|0);
            $42 = __THREW__; __THREW__ = 0;
            $43 = $42&1;
            do {
             if ($43) {
              $71 = ___cxa_find_matching_catch_2()|0;
              $72 = tempRet0;
              $ehselector$slot$0 = $72;$exn$slot$0 = $71;
             } else {
              ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp25>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp25+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp25+8>>2]|0;
              $__i$0$i$i$i73 = 0;
              while(1) {
               $exitcond$i$i$i74 = ($__i$0$i$i$i73|0)==(3);
               if ($exitcond$i$i$i74) {
                break;
               }
               $arrayidx$i$i$i76 = (($ref$tmp25) + ($__i$0$i$i$i73<<2)|0);
               HEAP32[$arrayidx$i$i$i76>>2] = 0;
               $inc$i$i$i77 = (($__i$0$i$i$i73) + 1)|0;
               $__i$0$i$i$i73 = $inc$i$i$i77;
              }
              $__size_$i$i$i$i$i82 = ((($ref$tmp)) + 11|0);
              $44 = HEAP8[$__size_$i$i$i$i$i82>>0]|0;
              $tobool$i$i$i$i$i83 = ($44<<24>>24)<(0);
              $45 = HEAP32[$ref$tmp>>2]|0;
              $cond$i$i$i$i86 = $tobool$i$i$i$i$i83 ? $45 : $ref$tmp;
              $__size_$i3$i$i$i87 = ((($ref$tmp)) + 4|0);
              $46 = HEAP32[$__size_$i3$i$i$i87>>2]|0;
              $conv$i$i$i$i88 = $44&255;
              $cond$i$i$i89 = $tobool$i$i$i$i$i83 ? $46 : $conv$i$i$i$i88;
              __THREW__ = 0;
              (invoke_iiii(47,($first18|0),($cond$i$i$i$i86|0),($cond$i$i$i89|0))|0);
              $47 = __THREW__; __THREW__ = 0;
              $48 = $47&1;
              if ($48) {
               $73 = ___cxa_find_matching_catch_2()|0;
               $74 = tempRet0;
               __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
               $ehselector$slot$0 = $74;$exn$slot$0 = $73;
               break;
              }
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp25);
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp26);
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp27);
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp28);
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp29);
              __THREW__ = 0;
              $call$i92 = (invoke_ii(58,(5874|0))|0);
              $49 = __THREW__; __THREW__ = 0;
              $50 = $49&1;
              if ($50) {
               $57 = ___cxa_find_matching_catch_3(0|0)|0;
               $58 = tempRet0;
               ___clang_call_terminate($57);
               // unreachable;
              }
              $51 = HEAP8[$__size_$i$i$i>>0]|0;
              $tobool$i$i$i95 = ($51<<24>>24)<(0);
              $52 = HEAP32[$__size_$i3$i$i>>2]|0;
              $conv$i$i$i97 = $51&255;
              $cond$i$i98 = $tobool$i$i$i95 ? $52 : $conv$i$i$i97;
              $cmp$i99 = ($call$i92|0)==($cond$i$i98|0);
              do {
               if ($cmp$i99) {
                __THREW__ = 0;
                $call3$i101 = (invoke_iiii(59,($op|0),(5874|0),($call$i92|0))|0);
                $53 = __THREW__; __THREW__ = 0;
                $54 = $53&1;
                if ($54) {
                 $55 = ___cxa_find_matching_catch_3(0|0)|0;
                 $56 = tempRet0;
                 ___clang_call_terminate($55);
                 // unreachable;
                }
                $cmp4$i103 = ($call3$i101|0)==(0);
                if (!($cmp4$i103)) {
                 break;
                }
                __THREW__ = 0;
                invoke_vii(52,($first18|0),41);
                $59 = __THREW__; __THREW__ = 0;
                $60 = $59&1;
                if ($60) {
                 label = 19;
                 break L30;
                }
               }
              } while(0);
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
              $retval$1 = $call1;
              break L1;
             }
            } while(0);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp25);
            $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
           }
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp26);
           $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp27);
          $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp28);
         $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp29);
        $ehselector$slot$5 = $ehselector$slot$4;$exn$slot$5 = $exn$slot$4;
       }
       $ehselector$slot$6 = $ehselector$slot$5;$exn$slot$6 = $exn$slot$5;
      }
     } while(0);
     if ((label|0) == 19) {
      $24 = ___cxa_find_matching_catch_2()|0;
      $25 = tempRet0;
      $ehselector$slot$6 = $25;$exn$slot$6 = $24;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
     $ehselector$slot$7 = $ehselector$slot$6;$exn$slot$7 = $exn$slot$6;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
    ___resumeException($exn$slot$7|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$op,$db) {
 $first = $first|0;
 $last = $last|0;
 $op = $op|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i13 = 0, $__size_$i$i$i$i$i = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i16 = 0, $call = 0, $call$i19 = 0, $call3$i$i11 = 0;
 var $cmp = 0, $cmp$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i14 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $first17 = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i17 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp3 = 0, $ref$tmp4 = 0;
 var $ref$tmp4$i$i$i$i = 0, $ref$tmp5 = 0, $retval$0 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp$i$i$i$i = sp + 49|0;
 $ref$tmp4$i$i$i$i = sp + 48|0;
 $ref$tmp = sp + 36|0;
 $ref$tmp3 = sp + 24|0;
 $ref$tmp4 = sp + 12|0;
 $ref$tmp5 = sp;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $cmp = ($call|0)==($first|0);
 L1: do {
  if ($cmp) {
   $retval$0 = $first;
  } else {
   $0 = HEAP32[$db>>2]|0;
   $__end_$i = ((($db)) + 4|0);
   $1 = HEAP32[$__end_$i>>2]|0;
   $cmp$i = ($0|0)==($1|0);
   if ($cmp$i) {
    $retval$0 = $first;
   } else {
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($ref$tmp4,$op,5838);
    $2 = HEAP32[$__end_$i>>2]|0;
    $add$ptr$i = ((($2)) + -24|0);
    __THREW__ = 0;
    invoke_vii(55,($ref$tmp5|0),($add$ptr$i|0));
    $3 = __THREW__; __THREW__ = 0;
    $4 = $3&1;
    if ($4) {
     $19 = ___cxa_find_matching_catch_2()|0;
     $20 = tempRet0;
     $ehselector$slot$1 = $20;$exn$slot$1 = $19;
    } else {
     $__size_$i$i$i$i$i = ((($ref$tmp5)) + 11|0);
     $5 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
     $tobool$i$i$i$i$i = ($5<<24>>24)<(0);
     $6 = HEAP32[$ref$tmp5>>2]|0;
     $cond$i$i$i$i = $tobool$i$i$i$i$i ? $6 : $ref$tmp5;
     $__size_$i3$i$i$i = ((($ref$tmp5)) + 4|0);
     $7 = HEAP32[$__size_$i3$i$i$i>>2]|0;
     $conv$i$i$i$i = $5&255;
     $cond$i$i$i = $tobool$i$i$i$i$i ? $7 : $conv$i$i$i$i;
     __THREW__ = 0;
     $call3$i$i11 = (invoke_iiii(47,($ref$tmp4|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
     $8 = __THREW__; __THREW__ = 0;
     $9 = $8&1;
     do {
      if ($9) {
       $21 = ___cxa_find_matching_catch_2()|0;
       $22 = tempRet0;
       $ehselector$slot$0 = $22;$exn$slot$0 = $21;
      } else {
       ;HEAP32[$ref$tmp3>>2]=HEAP32[$ref$tmp4>>2]|0;HEAP32[$ref$tmp3+4>>2]=HEAP32[$ref$tmp4+4>>2]|0;HEAP32[$ref$tmp3+8>>2]=HEAP32[$ref$tmp4+8>>2]|0;
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $arrayidx$i$i$i = (($ref$tmp4) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$arrayidx$i$i$i>>2] = 0;
        $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $inc$i$i$i;
       }
       __THREW__ = 0;
       $call$i19 = (invoke_iii(54,($ref$tmp3|0),(5836|0))|0);
       $10 = __THREW__; __THREW__ = 0;
       $11 = $10&1;
       if ($11) {
        $23 = ___cxa_find_matching_catch_2()|0;
        $24 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp3);
        $ehselector$slot$0 = $24;$exn$slot$0 = $23;
        break;
       }
       ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp3>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp3+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp3+8>>2]|0;
       $__i$0$i$i$i13 = 0;
       while(1) {
        $exitcond$i$i$i14 = ($__i$0$i$i$i13|0)==(3);
        if ($exitcond$i$i$i14) {
         break;
        }
        $arrayidx$i$i$i16 = (($ref$tmp3) + ($__i$0$i$i$i13<<2)|0);
        HEAP32[$arrayidx$i$i$i16>>2] = 0;
        $inc$i$i$i17 = (($__i$0$i$i$i13) + 1)|0;
        $__i$0$i$i$i13 = $inc$i$i$i17;
       }
       $12 = HEAP32[$__end_$i>>2]|0;
       $first17 = ((($12)) + -24|0);
       $__size_$i1$i$i$i$i = ((($first17)) + 11|0);
       $13 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
       $tobool$i$i$i$i$i23 = ($13<<24>>24)<(0);
       if ($tobool$i$i$i$i$i23) {
        $14 = HEAP32[$first17>>2]|0;
        HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($14,$ref$tmp$i$i$i$i);
        $__size_$i2$i$i$i$i = ((($12)) + -20|0);
        HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
       } else {
        HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($first17,$ref$tmp4$i$i$i$i);
        HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
       }
       __THREW__ = 0;
       invoke_vi(51,($first17|0));
       $15 = __THREW__; __THREW__ = 0;
       $16 = $15&1;
       if ($16) {
        $17 = ___cxa_find_matching_catch_3(0|0)|0;
        $18 = tempRet0;
        ___clang_call_terminate($17);
        // unreachable;
       }
       ;HEAP32[$first17>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$first17+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$first17+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
       $__i$0$i$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
        if ($exitcond$i$i$i$i) {
         break;
        }
        $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
        HEAP32[$arrayidx$i$i$i$i>>2] = 0;
        $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
        $__i$0$i$i$i$i = $inc$i$i$i$i;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp3);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp5);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp4);
       $retval$0 = $call;
       break L1;
      }
     } while(0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp5);
     $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp4);
    ___resumeException($exn$slot$1|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0;
 var $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i17 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i20 = 0, $arrayidx3 = 0, $call = 0, $call$i15 = 0, $call$i24 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp5 = 0, $cmp7 = 0, $ehselector$slot$0 = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i18 = 0, $exn$slot$0 = 0, $first21 = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i21 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp11 = 0, $ref$tmp12 = 0, $ref$tmp4$i$i$i$i = 0, $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $ref$tmp$i$i$i$i = sp + 37|0;
 $ref$tmp4$i$i$i$i = sp + 36|0;
 $ref$tmp = sp + 24|0;
 $ref$tmp11 = sp + 12|0;
 $ref$tmp12 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(97);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(116);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$1 = $first;
     } else {
      $2 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($2|0)==($3|0);
      if ($cmp$i) {
       $retval$1 = $first;
      } else {
       $add$ptr$i = ((($3)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp12,$add$ptr$i);
       __THREW__ = 0;
       $call$i15 = (invoke_iiii(56,($ref$tmp12|0),0,(7146|0))|0);
       $4 = __THREW__; __THREW__ = 0;
       $5 = $4&1;
       do {
        if ($5) {
         $15 = ___cxa_find_matching_catch_2()|0;
         $16 = tempRet0;
         $ehselector$slot$0 = $16;$exn$slot$0 = $15;
        } else {
         ;HEAP32[$ref$tmp11>>2]=HEAP32[$ref$tmp12>>2]|0;HEAP32[$ref$tmp11+4>>2]=HEAP32[$ref$tmp12+4>>2]|0;HEAP32[$ref$tmp11+8>>2]=HEAP32[$ref$tmp12+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp12) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         __THREW__ = 0;
         $call$i24 = (invoke_iii(54,($ref$tmp11|0),(5836|0))|0);
         $6 = __THREW__; __THREW__ = 0;
         $7 = $6&1;
         if ($7) {
          $17 = ___cxa_find_matching_catch_2()|0;
          $18 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
          $ehselector$slot$0 = $18;$exn$slot$0 = $17;
          break;
         }
         ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp11>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp11+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp11+8>>2]|0;
         $__i$0$i$i$i17 = 0;
         while(1) {
          $exitcond$i$i$i18 = ($__i$0$i$i$i17|0)==(3);
          if ($exitcond$i$i$i18) {
           break;
          }
          $arrayidx$i$i$i20 = (($ref$tmp11) + ($__i$0$i$i$i17<<2)|0);
          HEAP32[$arrayidx$i$i$i20>>2] = 0;
          $inc$i$i$i21 = (($__i$0$i$i$i17) + 1)|0;
          $__i$0$i$i$i17 = $inc$i$i$i21;
         }
         $8 = HEAP32[$__end_$i>>2]|0;
         $first21 = ((($8)) + -24|0);
         $__size_$i1$i$i$i$i = ((($first21)) + 11|0);
         $9 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
         $tobool$i$i$i$i$i = ($9<<24>>24)<(0);
         if ($tobool$i$i$i$i$i) {
          $10 = HEAP32[$first21>>2]|0;
          HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($10,$ref$tmp$i$i$i$i);
          $__size_$i2$i$i$i$i = ((($8)) + -20|0);
          HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
         } else {
          HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($first21,$ref$tmp4$i$i$i$i);
          HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
         }
         __THREW__ = 0;
         invoke_vi(51,($first21|0));
         $11 = __THREW__; __THREW__ = 0;
         $12 = $11&1;
         if ($12) {
          $13 = ___cxa_find_matching_catch_3(0|0)|0;
          $14 = tempRet0;
          ___clang_call_terminate($13);
          // unreachable;
         }
         ;HEAP32[$first21>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$first21+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$first21+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
         $__i$0$i$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
          if ($exitcond$i$i$i$i) {
           break;
          }
          $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i$i>>2] = 0;
          $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
          $__i$0$i$i$i$i = $inc$i$i$i$i;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
         $retval$1 = $call;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
       ___resumeException($exn$slot$0|0);
       // unreachable;
      }
     }
    } else {
     $retval$1 = $first;
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0;
 var $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i17 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i20 = 0, $arrayidx3 = 0, $call = 0, $call$i15 = 0, $call$i24 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp5 = 0, $cmp7 = 0, $ehselector$slot$0 = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i18 = 0, $exn$slot$0 = 0, $first21 = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i21 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp11 = 0, $ref$tmp12 = 0, $ref$tmp4$i$i$i$i = 0, $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $ref$tmp$i$i$i$i = sp + 37|0;
 $ref$tmp4$i$i$i$i = sp + 36|0;
 $ref$tmp = sp + 24|0;
 $ref$tmp11 = sp + 12|0;
 $ref$tmp12 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(97);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(122);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$1 = $first;
     } else {
      $2 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($2|0)==($3|0);
      if ($cmp$i) {
       $retval$1 = $first;
      } else {
       $add$ptr$i = ((($3)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp12,$add$ptr$i);
       __THREW__ = 0;
       $call$i15 = (invoke_iiii(56,($ref$tmp12|0),0,(7146|0))|0);
       $4 = __THREW__; __THREW__ = 0;
       $5 = $4&1;
       do {
        if ($5) {
         $15 = ___cxa_find_matching_catch_2()|0;
         $16 = tempRet0;
         $ehselector$slot$0 = $16;$exn$slot$0 = $15;
        } else {
         ;HEAP32[$ref$tmp11>>2]=HEAP32[$ref$tmp12>>2]|0;HEAP32[$ref$tmp11+4>>2]=HEAP32[$ref$tmp12+4>>2]|0;HEAP32[$ref$tmp11+8>>2]=HEAP32[$ref$tmp12+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp12) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         __THREW__ = 0;
         $call$i24 = (invoke_iii(54,($ref$tmp11|0),(5836|0))|0);
         $6 = __THREW__; __THREW__ = 0;
         $7 = $6&1;
         if ($7) {
          $17 = ___cxa_find_matching_catch_2()|0;
          $18 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
          $ehselector$slot$0 = $18;$exn$slot$0 = $17;
          break;
         }
         ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp11>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp11+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp11+8>>2]|0;
         $__i$0$i$i$i17 = 0;
         while(1) {
          $exitcond$i$i$i18 = ($__i$0$i$i$i17|0)==(3);
          if ($exitcond$i$i$i18) {
           break;
          }
          $arrayidx$i$i$i20 = (($ref$tmp11) + ($__i$0$i$i$i17<<2)|0);
          HEAP32[$arrayidx$i$i$i20>>2] = 0;
          $inc$i$i$i21 = (($__i$0$i$i$i17) + 1)|0;
          $__i$0$i$i$i17 = $inc$i$i$i21;
         }
         $8 = HEAP32[$__end_$i>>2]|0;
         $first21 = ((($8)) + -24|0);
         $__size_$i1$i$i$i$i = ((($first21)) + 11|0);
         $9 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
         $tobool$i$i$i$i$i = ($9<<24>>24)<(0);
         if ($tobool$i$i$i$i$i) {
          $10 = HEAP32[$first21>>2]|0;
          HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($10,$ref$tmp$i$i$i$i);
          $__size_$i2$i$i$i$i = ((($8)) + -20|0);
          HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
         } else {
          HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
          __ZNSt3__211char_traitsIcE6assignERcRKc($first21,$ref$tmp4$i$i$i$i);
          HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
         }
         __THREW__ = 0;
         invoke_vi(51,($first21|0));
         $11 = __THREW__; __THREW__ = 0;
         $12 = $11&1;
         if ($12) {
          $13 = ___cxa_find_matching_catch_3(0|0)|0;
          $14 = tempRet0;
          ___clang_call_terminate($13);
          // unreachable;
         }
         ;HEAP32[$first21>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$first21+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$first21+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
         $__i$0$i$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
          if ($exitcond$i$i$i$i) {
           break;
          }
          $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i$i>>2] = 0;
          $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
          $__i$0$i$i$i$i = $inc$i$i$i$i;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
         $retval$1 = $call;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
       ___resumeException($exn$slot$0|0);
       // unreachable;
      }
     }
    } else {
     $retval$1 = $first;
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i30 = 0, $__i$0$i$i$i39 = 0, $__i$0$i$i$i47 = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0;
 var $add$ptr$i = 0, $add$ptr$i25 = 0, $add$ptr$i27 = 0, $add$ptr$i57 = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i33 = 0, $arrayidx$i$i$i42 = 0, $arrayidx$i$i$i50 = 0, $arrayidx3 = 0, $call = 0, $call$i28 = 0, $call$i37 = 0, $call$i54 = 0, $call3$i$i45 = 0, $call9 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp10 = 0;
 var $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i31 = 0, $exitcond$i$i$i40 = 0, $exitcond$i$i$i48 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $expr = 0, $inc$i$i$i = 0;
 var $inc$i$i$i34 = 0, $inc$i$i$i43 = 0, $inc$i$i$i51 = 0, $incdec$ptr$i$i$i = 0, $ref$tmp = 0, $ref$tmp18 = 0, $ref$tmp19 = 0, $ref$tmp20 = 0, $ref$tmp21 = 0, $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $expr = sp + 88|0;
 $ref$tmp = sp + 64|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp18 = sp + 36|0;
 $ref$tmp19 = sp + 24|0;
 $ref$tmp20 = sp + 12|0;
 $ref$tmp21 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(99);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(99);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $call9 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp10 = ($call9|0)==($call|0);
      if ($cmp10) {
       $retval$3 = $first;
      } else {
       $__end_$i = ((($db)) + 4|0);
       $2 = HEAP32[$__end_$i>>2]|0;
       $3 = HEAP32[$db>>2]|0;
       $sub$ptr$sub$i = (($2) - ($3))|0;
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
       $cmp13 = ($sub$ptr$div$i>>>0)<(2);
       if ($cmp13) {
        $retval$3 = $first;
       } else {
        $4 = $2;
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr,$add$ptr$i);
        $5 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i25 = ((($5)) + -24|0);
        $6 = $5;
        while(1) {
         $cmp$i$i$i = ($6|0)==($add$ptr$i25|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($6)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $6 = $$pre$i;
        }
        $add$ptr$i27 = ((($5)) + -48|0);
        __THREW__ = 0;
        invoke_vii(55,($ref$tmp21|0),($add$ptr$i27|0));
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        if ($8) {
         $21 = ___cxa_find_matching_catch_2()|0;
         $22 = tempRet0;
         $ehselector$slot$4 = $22;$exn$slot$4 = $21;
        } else {
         __THREW__ = 0;
         $call$i28 = (invoke_iiii(56,($ref$tmp21|0),0,(7134|0))|0);
         $9 = __THREW__; __THREW__ = 0;
         $10 = $9&1;
         if ($10) {
          $23 = ___cxa_find_matching_catch_2()|0;
          $24 = tempRet0;
          $ehselector$slot$3 = $24;$exn$slot$3 = $23;
         } else {
          ;HEAP32[$ref$tmp20>>2]=HEAP32[$ref$tmp21>>2]|0;HEAP32[$ref$tmp20+4>>2]=HEAP32[$ref$tmp21+4>>2]|0;HEAP32[$ref$tmp20+8>>2]=HEAP32[$ref$tmp21+8>>2]|0;
          $__i$0$i$i$i = 0;
          while(1) {
           $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
           if ($exitcond$i$i$i) {
            break;
           }
           $arrayidx$i$i$i = (($ref$tmp21) + ($__i$0$i$i$i<<2)|0);
           HEAP32[$arrayidx$i$i$i>>2] = 0;
           $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
           $__i$0$i$i$i = $inc$i$i$i;
          }
          __THREW__ = 0;
          $call$i37 = (invoke_iii(54,($ref$tmp20|0),(6085|0))|0);
          $11 = __THREW__; __THREW__ = 0;
          $12 = $11&1;
          if ($12) {
           $25 = ___cxa_find_matching_catch_2()|0;
           $26 = tempRet0;
           $ehselector$slot$2 = $26;$exn$slot$2 = $25;
          } else {
           ;HEAP32[$ref$tmp19>>2]=HEAP32[$ref$tmp20>>2]|0;HEAP32[$ref$tmp19+4>>2]=HEAP32[$ref$tmp20+4>>2]|0;HEAP32[$ref$tmp19+8>>2]=HEAP32[$ref$tmp20+8>>2]|0;
           $__i$0$i$i$i30 = 0;
           while(1) {
            $exitcond$i$i$i31 = ($__i$0$i$i$i30|0)==(3);
            if ($exitcond$i$i$i31) {
             break;
            }
            $arrayidx$i$i$i33 = (($ref$tmp20) + ($__i$0$i$i$i30<<2)|0);
            HEAP32[$arrayidx$i$i$i33>>2] = 0;
            $inc$i$i$i34 = (($__i$0$i$i$i30) + 1)|0;
            $__i$0$i$i$i30 = $inc$i$i$i34;
           }
           $__size_$i$i$i$i$i = ((($expr)) + 11|0);
           $13 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($13<<24>>24)<(0);
           $14 = HEAP32[$expr>>2]|0;
           $cond$i$i$i$i = $tobool$i$i$i$i$i ? $14 : $expr;
           $__size_$i3$i$i$i = ((($expr)) + 4|0);
           $15 = HEAP32[$__size_$i3$i$i$i>>2]|0;
           $conv$i$i$i$i = $13&255;
           $cond$i$i$i = $tobool$i$i$i$i$i ? $15 : $conv$i$i$i$i;
           __THREW__ = 0;
           $call3$i$i45 = (invoke_iiii(47,($ref$tmp19|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
           $16 = __THREW__; __THREW__ = 0;
           $17 = $16&1;
           do {
            if ($17) {
             $27 = ___cxa_find_matching_catch_2()|0;
             $28 = tempRet0;
             $ehselector$slot$1 = $28;$exn$slot$1 = $27;
            } else {
             ;HEAP32[$ref$tmp18>>2]=HEAP32[$ref$tmp19>>2]|0;HEAP32[$ref$tmp18+4>>2]=HEAP32[$ref$tmp19+4>>2]|0;HEAP32[$ref$tmp18+8>>2]=HEAP32[$ref$tmp19+8>>2]|0;
             $__i$0$i$i$i39 = 0;
             while(1) {
              $exitcond$i$i$i40 = ($__i$0$i$i$i39|0)==(3);
              if ($exitcond$i$i$i40) {
               break;
              }
              $arrayidx$i$i$i42 = (($ref$tmp19) + ($__i$0$i$i$i39<<2)|0);
              HEAP32[$arrayidx$i$i$i42>>2] = 0;
              $inc$i$i$i43 = (($__i$0$i$i$i39) + 1)|0;
              $__i$0$i$i$i39 = $inc$i$i$i43;
             }
             __THREW__ = 0;
             $call$i54 = (invoke_iii(54,($ref$tmp18|0),(5836|0))|0);
             $18 = __THREW__; __THREW__ = 0;
             $19 = $18&1;
             if ($19) {
              $29 = ___cxa_find_matching_catch_2()|0;
              $30 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
              $ehselector$slot$1 = $30;$exn$slot$1 = $29;
              break;
             }
             ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp18>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp18+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp18+8>>2]|0;
             $__i$0$i$i$i47 = 0;
             while(1) {
              $exitcond$i$i$i48 = ($__i$0$i$i$i47|0)==(3);
              if ($exitcond$i$i$i48) {
               break;
              }
              $arrayidx$i$i$i50 = (($ref$tmp18) + ($__i$0$i$i$i47<<2)|0);
              HEAP32[$arrayidx$i$i$i50>>2] = 0;
              $inc$i$i$i51 = (($__i$0$i$i$i47) + 1)|0;
              $__i$0$i$i$i47 = $inc$i$i$i51;
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
             $20 = HEAP32[$__end_$i>>2]|0;
             $add$ptr$i57 = ((($20)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i57,$ref$tmp);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
             $retval$3 = $call9;
             break L1;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
           $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
          $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
         $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
        ___resumeException($exn$slot$4|0);
        // unreachable;
       }
      }
     }
    } else {
     $retval$3 = $first;
    }
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i = 0, $__i$0$i$i$i$i = 0, $__size_$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $__size_$i3$i$i = 0, $__size_$i3$i$i$i = 0;
 var $add$ptr = 0, $add$ptr$i60 = 0, $add$ptr$i62 = 0, $arrayidx$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx3 = 0, $call = 0, $call31 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i58 = 0, $cmp$i63 = 0, $cmp$i66 = 0, $cmp$i77 = 0, $cmp1 = 0, $cmp30 = 0, $cmp32 = 0, $cmp33 = 0, $cmp5 = 0;
 var $cmp7 = 0, $cmp9 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i70 = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0, $exitcond$i$i = 0, $exitcond$i$i$i$i = 0, $first18 = 0, $first27 = 0, $first62 = 0, $first74 = 0, $inc$i$i = 0, $inc$i$i$i$i = 0, $incdec$ptr = 0, $incdec$ptr$i$i$i = 0, $or$cond = 0, $or$cond83 = 0;
 var $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp4$i$i$i$i = 0, $retval$6 = 0, $second = 0, $second22 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t$0 = 0, $tmp = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i51 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp$i$i$i$i = sp + 25|0;
 $ref$tmp4$i$i$i$i = sp + 24|0;
 $ref$tmp = sp + 12|0;
 $tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(3);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(99);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(108);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     $cmp9 = ($call|0)==($last|0);
     $or$cond83 = $cmp7 | $cmp9;
     if ($or$cond83) {
      $retval$6 = $first;
     } else {
      $2 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($2|0)==($3|0);
      if ($cmp$i) {
       $retval$6 = $first;
      } else {
       $second = ((($3)) + -12|0);
       $first18 = ((($3)) + -24|0);
       $__size_$i$i$i$i$i = ((($second)) + 11|0);
       $4 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
       $tobool$i$i$i$i$i = ($4<<24>>24)<(0);
       $5 = HEAP32[$second>>2]|0;
       $cond$i$i$i$i = $tobool$i$i$i$i$i ? $5 : $second;
       $__size_$i3$i$i$i = ((($3)) + -8|0);
       $6 = HEAP32[$__size_$i3$i$i$i>>2]|0;
       $conv$i$i$i$i = $4&255;
       $cond$i$i$i = $tobool$i$i$i$i$i ? $6 : $conv$i$i$i$i;
       (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($first18,$cond$i$i$i$i,$cond$i$i$i)|0);
       ;HEAP32[$ref$tmp>>2]=0|0;HEAP32[$ref$tmp+4>>2]=0|0;HEAP32[$ref$tmp+8>>2]=0|0;
       $__i$0$i$i = 0;
       while(1) {
        $exitcond$i$i = ($__i$0$i$i|0)==(3);
        if ($exitcond$i$i) {
         break;
        }
        $arrayidx$i$i = (($ref$tmp) + ($__i$0$i$i<<2)|0);
        HEAP32[$arrayidx$i$i>>2] = 0;
        $inc$i$i = (($__i$0$i$i) + 1)|0;
        $__i$0$i$i = $inc$i$i;
       }
       $7 = HEAP32[$__end_$i>>2]|0;
       $second22 = ((($7)) + -12|0);
       $__size_$i1$i$i$i$i = ((($second22)) + 11|0);
       $8 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
       $tobool$i$i$i$i$i51 = ($8<<24>>24)<(0);
       if ($tobool$i$i$i$i$i51) {
        $9 = HEAP32[$second22>>2]|0;
        HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($9,$ref$tmp$i$i$i$i);
        $__size_$i2$i$i$i$i = ((($7)) + -8|0);
        HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
       } else {
        HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($second22,$ref$tmp4$i$i$i$i);
        HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
       }
       __THREW__ = 0;
       invoke_vi(51,($second22|0));
       $10 = __THREW__; __THREW__ = 0;
       $11 = $10&1;
       if ($11) {
        $12 = ___cxa_find_matching_catch_3(0|0)|0;
        $13 = tempRet0;
        ___clang_call_terminate($12);
        // unreachable;
       }
       ;HEAP32[$second22>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$second22+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$second22+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
       $__i$0$i$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
        if ($exitcond$i$i$i$i) {
         break;
        }
        $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
        HEAP32[$arrayidx$i$i$i$i>>2] = 0;
        $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
        $__i$0$i$i$i$i = $inc$i$i$i$i;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
       $14 = HEAP32[$__end_$i>>2]|0;
       $first27 = ((($14)) + -24|0);
       (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first27,5838)|0);
       $__size_$i$i$i = ((($tmp)) + 11|0);
       $__size_$i3$i$i = ((($tmp)) + 4|0);
       $t$0 = $call;
       while(1) {
        $15 = HEAP8[$t$0>>0]|0;
        $cmp30 = ($15<<24>>24)==(69);
        if ($cmp30) {
         label = 30;
         break;
        }
        $call31 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
        $cmp32 = ($call31|0)==($t$0|0);
        $cmp33 = ($call31|0)==($last|0);
        $or$cond = $cmp32 | $cmp33;
        if ($or$cond) {
         $retval$6 = $first;
         break L1;
        }
        $16 = HEAP32[$db>>2]|0;
        $17 = HEAP32[$__end_$i>>2]|0;
        $cmp$i58 = ($16|0)==($17|0);
        if ($cmp$i58) {
         $retval$6 = $first;
         break L1;
        }
        $add$ptr$i60 = ((($17)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp,$add$ptr$i60);
        $18 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i62 = ((($18)) + -24|0);
        $19 = $18;
        while(1) {
         $cmp$i$i$i = ($19|0)==($add$ptr$i62|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($19)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $19 = $$pre$i;
        }
        $20 = HEAP8[$__size_$i$i$i>>0]|0;
        $tobool$i$i$i = ($20<<24>>24)<(0);
        $21 = HEAP32[$__size_$i3$i$i>>2]|0;
        $conv$i$i$i = $20&255;
        $cond$i$i = $tobool$i$i$i ? $21 : $conv$i$i$i;
        $cmp$i63 = ($cond$i$i|0)==(0);
        if (!($cmp$i63)) {
         $22 = HEAP32[$db>>2]|0;
         $cmp$i66 = ($22|0)==($add$ptr$i62|0);
         if ($cmp$i66) {
          label = 29;
          break;
         }
         $first62 = ((($18)) + -48|0);
         $25 = HEAP32[$tmp>>2]|0;
         $cond$i$i$i70 = $tobool$i$i$i ? $25 : $tmp;
         __THREW__ = 0;
         (invoke_iiii(47,($first62|0),($cond$i$i$i70|0),($cond$i$i|0))|0);
         $26 = __THREW__; __THREW__ = 0;
         $27 = $26&1;
         if ($27) {
          label = 26;
          break;
         }
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        $t$0 = $call31;
       }
       if ((label|0) == 26) {
        $23 = ___cxa_find_matching_catch_2()|0;
        $24 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        ___resumeException($23|0);
        // unreachable;
       }
       else if ((label|0) == 29) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        $retval$6 = $first;
        break;
       }
       else if ((label|0) == 30) {
        $28 = HEAP32[$db>>2]|0;
        $29 = HEAP32[$__end_$i>>2]|0;
        $cmp$i77 = ($28|0)==($29|0);
        if ($cmp$i77) {
         $retval$6 = $first;
         break;
        }
        $incdec$ptr = ((($t$0)) + 1|0);
        $first74 = ((($29)) + -24|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first74,5836)|0);
        $retval$6 = $incdec$ptr;
        break;
       }
      }
     }
    } else {
     $retval$6 = $first;
    }
   } else {
    $retval$6 = $first;
   }
  } else {
   $retval$6 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$6|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__end_$i = 0, $__end_$i63 = 0, $__first_$i$i$i$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i71 = 0, $__i$0$i$i$i80 = 0, $__i$0$i$i$i88 = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i66 = 0, $add$ptr$i68 = 0, $add$ptr$i98 = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i74 = 0, $arrayidx$i$i$i83 = 0, $arrayidx$i$i$i91 = 0, $arrayidx3 = 0;
 var $call = 0, $call$i69 = 0, $call$i78 = 0, $call$i95 = 0, $call19 = 0, $call3$i$i86 = 0, $call32 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp12 = 0, $cmp14 = 0, $cmp17 = 0, $cmp20 = 0, $cmp22 = 0, $cmp26 = 0, $cmp30 = 0, $cmp33 = 0, $cmp34 = 0;
 var $cmp5 = 0, $cmp81 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i72 = 0, $exitcond$i$i$i81 = 0, $exitcond$i$i$i89 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $inc$i$i$i = 0, $inc$i$i$i75 = 0, $inc$i$i$i84 = 0;
 var $inc$i$i$i92 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr77 = 0, $or$cond = 0, $or$cond62 = 0, $ref$tmp = 0, $ref$tmp91 = 0, $ref$tmp92 = 0, $ref$tmp93 = 0, $ref$tmp94 = 0, $retval$10 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $t$1 = 0, $t$2 = 0;
 var $t$4 = 0, $t$5 = 0, $tmp85 = 0, $tobool$i$i$i$i$i = 0, $try_to_parse_template_args6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $tmp85 = sp + 88|0;
 $ref$tmp = sp + 64|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp91 = sp + 36|0;
 $ref$tmp92 = sp + 24|0;
 $ref$tmp93 = sp + 12|0;
 $ref$tmp94 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(99);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(118);
    if ($cmp5) {
     $try_to_parse_template_args6 = ((($db)) + 63|0);
     $2 = HEAP8[$try_to_parse_template_args6>>0]|0;
     HEAP8[$try_to_parse_template_args6>>0] = 0;
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     HEAP8[$try_to_parse_template_args6>>0] = $2;
     $cmp12 = ($call|0)==($add$ptr|0);
     $cmp14 = ($call|0)==($last|0);
     $or$cond = $cmp12 | $cmp14;
     if ($or$cond) {
      $retval$10 = $first;
     } else {
      $3 = HEAP8[$call>>0]|0;
      $cmp17 = ($3<<24>>24)==(95);
      if ($cmp17) {
       $incdec$ptr = ((($call)) + 1|0);
       $cmp22 = ($incdec$ptr|0)==($last|0);
       if ($cmp22) {
        $retval$10 = $first;
        break;
       }
       $4 = HEAP8[$incdec$ptr>>0]|0;
       $cmp26 = ($4<<24>>24)==(69);
       L9: do {
        if ($cmp26) {
         $__end_$i = ((($db)) + 4|0);
         $5 = HEAP32[$__end_$i>>2]|0;
         $__first_$i$i$i$i = ((($db)) + 8|0);
         $6 = HEAP32[$__first_$i$i$i$i>>2]|0;
         $cmp$i = ($5>>>0)<($6>>>0);
         if ($cmp$i) {
          ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP32[$5+16>>2]=0|0;HEAP32[$5+20>>2]=0|0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($5);
          $7 = HEAP32[$__end_$i>>2]|0;
          $incdec$ptr$i = ((($7)) + 24|0);
          HEAP32[$__end_$i>>2] = $incdec$ptr$i;
          $t$4 = $incdec$ptr;
          break;
         } else {
          __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($db);
          $t$4 = $incdec$ptr;
          break;
         }
        } else {
         $8 = $4;$t$1 = $incdec$ptr;
         while(1) {
          $cmp30 = ($8<<24>>24)==(69);
          if ($cmp30) {
           $t$4 = $t$1;
           break L9;
          }
          $call32 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$1,$last,$db)|0);
          $cmp33 = ($call32|0)==($t$1|0);
          $cmp34 = ($call32|0)==($last|0);
          $or$cond62 = $cmp33 | $cmp34;
          if ($or$cond62) {
           $retval$10 = $first;
           break L1;
          }
          $t$2 = $or$cond62 ? $t$1 : $call32;
          $$pre = HEAP8[$t$2>>0]|0;
          $8 = $$pre;$t$1 = $call32;
         }
        }
       } while(0);
       $incdec$ptr77 = ((($t$4)) + 1|0);
       $t$5 = $incdec$ptr77;
      } else {
       $call19 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
       $cmp20 = ($call19|0)==($call|0);
       if ($cmp20) {
        $retval$10 = $first;
        break;
       } else {
        $t$5 = $call19;
       }
      }
      $__end_$i63 = ((($db)) + 4|0);
      $9 = HEAP32[$__end_$i63>>2]|0;
      $10 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i = (($9) - ($10))|0;
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
      $cmp81 = ($sub$ptr$div$i>>>0)<(2);
      if ($cmp81) {
       $retval$10 = $first;
      } else {
       $11 = $9;
       $add$ptr$i = ((($11)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp85,$add$ptr$i);
       $12 = HEAP32[$__end_$i63>>2]|0;
       $add$ptr$i66 = ((($12)) + -24|0);
       $13 = $12;
       while(1) {
        $cmp$i$i$i = ($13|0)==($add$ptr$i66|0);
        if ($cmp$i$i$i) {
         break;
        }
        $incdec$ptr$i$i$i = ((($13)) + -24|0);
        HEAP32[$__end_$i63>>2] = $incdec$ptr$i$i$i;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
        $$pre$i = HEAP32[$__end_$i63>>2]|0;
        $13 = $$pre$i;
       }
       $add$ptr$i68 = ((($12)) + -48|0);
       __THREW__ = 0;
       invoke_vii(55,($ref$tmp94|0),($add$ptr$i68|0));
       $14 = __THREW__; __THREW__ = 0;
       $15 = $14&1;
       if ($15) {
        $28 = ___cxa_find_matching_catch_2()|0;
        $29 = tempRet0;
        $ehselector$slot$4 = $29;$exn$slot$4 = $28;
       } else {
        __THREW__ = 0;
        $call$i69 = (invoke_iiii(56,($ref$tmp94|0),0,(5838|0))|0);
        $16 = __THREW__; __THREW__ = 0;
        $17 = $16&1;
        if ($17) {
         $30 = ___cxa_find_matching_catch_2()|0;
         $31 = tempRet0;
         $ehselector$slot$3 = $31;$exn$slot$3 = $30;
        } else {
         ;HEAP32[$ref$tmp93>>2]=HEAP32[$ref$tmp94>>2]|0;HEAP32[$ref$tmp93+4>>2]=HEAP32[$ref$tmp94+4>>2]|0;HEAP32[$ref$tmp93+8>>2]=HEAP32[$ref$tmp94+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp94) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         __THREW__ = 0;
         $call$i78 = (invoke_iii(54,($ref$tmp93|0),(7002|0))|0);
         $18 = __THREW__; __THREW__ = 0;
         $19 = $18&1;
         if ($19) {
          $32 = ___cxa_find_matching_catch_2()|0;
          $33 = tempRet0;
          $ehselector$slot$2 = $33;$exn$slot$2 = $32;
         } else {
          ;HEAP32[$ref$tmp92>>2]=HEAP32[$ref$tmp93>>2]|0;HEAP32[$ref$tmp92+4>>2]=HEAP32[$ref$tmp93+4>>2]|0;HEAP32[$ref$tmp92+8>>2]=HEAP32[$ref$tmp93+8>>2]|0;
          $__i$0$i$i$i71 = 0;
          while(1) {
           $exitcond$i$i$i72 = ($__i$0$i$i$i71|0)==(3);
           if ($exitcond$i$i$i72) {
            break;
           }
           $arrayidx$i$i$i74 = (($ref$tmp93) + ($__i$0$i$i$i71<<2)|0);
           HEAP32[$arrayidx$i$i$i74>>2] = 0;
           $inc$i$i$i75 = (($__i$0$i$i$i71) + 1)|0;
           $__i$0$i$i$i71 = $inc$i$i$i75;
          }
          $__size_$i$i$i$i$i = ((($tmp85)) + 11|0);
          $20 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($20<<24>>24)<(0);
          $21 = HEAP32[$tmp85>>2]|0;
          $cond$i$i$i$i = $tobool$i$i$i$i$i ? $21 : $tmp85;
          $__size_$i3$i$i$i = ((($tmp85)) + 4|0);
          $22 = HEAP32[$__size_$i3$i$i$i>>2]|0;
          $conv$i$i$i$i = $20&255;
          $cond$i$i$i = $tobool$i$i$i$i$i ? $22 : $conv$i$i$i$i;
          __THREW__ = 0;
          $call3$i$i86 = (invoke_iiii(47,($ref$tmp92|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          do {
           if ($24) {
            $34 = ___cxa_find_matching_catch_2()|0;
            $35 = tempRet0;
            $ehselector$slot$1 = $35;$exn$slot$1 = $34;
           } else {
            ;HEAP32[$ref$tmp91>>2]=HEAP32[$ref$tmp92>>2]|0;HEAP32[$ref$tmp91+4>>2]=HEAP32[$ref$tmp92+4>>2]|0;HEAP32[$ref$tmp91+8>>2]=HEAP32[$ref$tmp92+8>>2]|0;
            $__i$0$i$i$i80 = 0;
            while(1) {
             $exitcond$i$i$i81 = ($__i$0$i$i$i80|0)==(3);
             if ($exitcond$i$i$i81) {
              break;
             }
             $arrayidx$i$i$i83 = (($ref$tmp92) + ($__i$0$i$i$i80<<2)|0);
             HEAP32[$arrayidx$i$i$i83>>2] = 0;
             $inc$i$i$i84 = (($__i$0$i$i$i80) + 1)|0;
             $__i$0$i$i$i80 = $inc$i$i$i84;
            }
            __THREW__ = 0;
            $call$i95 = (invoke_iii(54,($ref$tmp91|0),(5836|0))|0);
            $25 = __THREW__; __THREW__ = 0;
            $26 = $25&1;
            if ($26) {
             $36 = ___cxa_find_matching_catch_2()|0;
             $37 = tempRet0;
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp91);
             $ehselector$slot$1 = $37;$exn$slot$1 = $36;
             break;
            }
            ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp91>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp91+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp91+8>>2]|0;
            $__i$0$i$i$i88 = 0;
            while(1) {
             $exitcond$i$i$i89 = ($__i$0$i$i$i88|0)==(3);
             if ($exitcond$i$i$i89) {
              break;
             }
             $arrayidx$i$i$i91 = (($ref$tmp91) + ($__i$0$i$i$i88<<2)|0);
             HEAP32[$arrayidx$i$i$i91>>2] = 0;
             $inc$i$i$i92 = (($__i$0$i$i$i88) + 1)|0;
             $__i$0$i$i$i88 = $inc$i$i$i92;
            }
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
            $27 = HEAP32[$__end_$i63>>2]|0;
            $add$ptr$i98 = ((($27)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i98,$ref$tmp);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp91);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp92);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp93);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp94);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp85);
            $retval$10 = $t$5;
            break L1;
           }
          } while(0);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp92);
          $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp93);
         $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp94);
        $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp85);
       ___resumeException($exn$slot$4|0);
       // unreachable;
      }
     }
    } else {
     $retval$10 = $first;
    }
   } else {
    $retval$10 = $first;
   }
  } else {
   $retval$10 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$10|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i30 = 0, $__i$0$i$i$i39 = 0, $__i$0$i$i$i47 = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0;
 var $add$ptr$i = 0, $add$ptr$i25 = 0, $add$ptr$i27 = 0, $add$ptr$i57 = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i33 = 0, $arrayidx$i$i$i42 = 0, $arrayidx$i$i$i50 = 0, $arrayidx3 = 0, $call = 0, $call$i28 = 0, $call$i37 = 0, $call$i54 = 0, $call3$i$i45 = 0, $call9 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp10 = 0;
 var $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i31 = 0, $exitcond$i$i$i40 = 0, $exitcond$i$i$i48 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $expr = 0, $inc$i$i$i = 0;
 var $inc$i$i$i34 = 0, $inc$i$i$i43 = 0, $inc$i$i$i51 = 0, $incdec$ptr$i$i$i = 0, $ref$tmp = 0, $ref$tmp18 = 0, $ref$tmp19 = 0, $ref$tmp20 = 0, $ref$tmp21 = 0, $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $expr = sp + 88|0;
 $ref$tmp = sp + 64|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp18 = sp + 36|0;
 $ref$tmp19 = sp + 24|0;
 $ref$tmp20 = sp + 12|0;
 $ref$tmp21 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(100);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(99);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $call9 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp10 = ($call9|0)==($call|0);
      if ($cmp10) {
       $retval$3 = $first;
      } else {
       $__end_$i = ((($db)) + 4|0);
       $2 = HEAP32[$__end_$i>>2]|0;
       $3 = HEAP32[$db>>2]|0;
       $sub$ptr$sub$i = (($2) - ($3))|0;
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
       $cmp13 = ($sub$ptr$div$i>>>0)<(2);
       if ($cmp13) {
        $retval$3 = $first;
       } else {
        $4 = $2;
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr,$add$ptr$i);
        $5 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i25 = ((($5)) + -24|0);
        $6 = $5;
        while(1) {
         $cmp$i$i$i = ($6|0)==($add$ptr$i25|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($6)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $6 = $$pre$i;
        }
        $add$ptr$i27 = ((($5)) + -48|0);
        __THREW__ = 0;
        invoke_vii(55,($ref$tmp21|0),($add$ptr$i27|0));
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        if ($8) {
         $21 = ___cxa_find_matching_catch_2()|0;
         $22 = tempRet0;
         $ehselector$slot$4 = $22;$exn$slot$4 = $21;
        } else {
         __THREW__ = 0;
         $call$i28 = (invoke_iiii(56,($ref$tmp21|0),0,(6988|0))|0);
         $9 = __THREW__; __THREW__ = 0;
         $10 = $9&1;
         if ($10) {
          $23 = ___cxa_find_matching_catch_2()|0;
          $24 = tempRet0;
          $ehselector$slot$3 = $24;$exn$slot$3 = $23;
         } else {
          ;HEAP32[$ref$tmp20>>2]=HEAP32[$ref$tmp21>>2]|0;HEAP32[$ref$tmp20+4>>2]=HEAP32[$ref$tmp21+4>>2]|0;HEAP32[$ref$tmp20+8>>2]=HEAP32[$ref$tmp21+8>>2]|0;
          $__i$0$i$i$i = 0;
          while(1) {
           $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
           if ($exitcond$i$i$i) {
            break;
           }
           $arrayidx$i$i$i = (($ref$tmp21) + ($__i$0$i$i$i<<2)|0);
           HEAP32[$arrayidx$i$i$i>>2] = 0;
           $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
           $__i$0$i$i$i = $inc$i$i$i;
          }
          __THREW__ = 0;
          $call$i37 = (invoke_iii(54,($ref$tmp20|0),(6085|0))|0);
          $11 = __THREW__; __THREW__ = 0;
          $12 = $11&1;
          if ($12) {
           $25 = ___cxa_find_matching_catch_2()|0;
           $26 = tempRet0;
           $ehselector$slot$2 = $26;$exn$slot$2 = $25;
          } else {
           ;HEAP32[$ref$tmp19>>2]=HEAP32[$ref$tmp20>>2]|0;HEAP32[$ref$tmp19+4>>2]=HEAP32[$ref$tmp20+4>>2]|0;HEAP32[$ref$tmp19+8>>2]=HEAP32[$ref$tmp20+8>>2]|0;
           $__i$0$i$i$i30 = 0;
           while(1) {
            $exitcond$i$i$i31 = ($__i$0$i$i$i30|0)==(3);
            if ($exitcond$i$i$i31) {
             break;
            }
            $arrayidx$i$i$i33 = (($ref$tmp20) + ($__i$0$i$i$i30<<2)|0);
            HEAP32[$arrayidx$i$i$i33>>2] = 0;
            $inc$i$i$i34 = (($__i$0$i$i$i30) + 1)|0;
            $__i$0$i$i$i30 = $inc$i$i$i34;
           }
           $__size_$i$i$i$i$i = ((($expr)) + 11|0);
           $13 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($13<<24>>24)<(0);
           $14 = HEAP32[$expr>>2]|0;
           $cond$i$i$i$i = $tobool$i$i$i$i$i ? $14 : $expr;
           $__size_$i3$i$i$i = ((($expr)) + 4|0);
           $15 = HEAP32[$__size_$i3$i$i$i>>2]|0;
           $conv$i$i$i$i = $13&255;
           $cond$i$i$i = $tobool$i$i$i$i$i ? $15 : $conv$i$i$i$i;
           __THREW__ = 0;
           $call3$i$i45 = (invoke_iiii(47,($ref$tmp19|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
           $16 = __THREW__; __THREW__ = 0;
           $17 = $16&1;
           do {
            if ($17) {
             $27 = ___cxa_find_matching_catch_2()|0;
             $28 = tempRet0;
             $ehselector$slot$1 = $28;$exn$slot$1 = $27;
            } else {
             ;HEAP32[$ref$tmp18>>2]=HEAP32[$ref$tmp19>>2]|0;HEAP32[$ref$tmp18+4>>2]=HEAP32[$ref$tmp19+4>>2]|0;HEAP32[$ref$tmp18+8>>2]=HEAP32[$ref$tmp19+8>>2]|0;
             $__i$0$i$i$i39 = 0;
             while(1) {
              $exitcond$i$i$i40 = ($__i$0$i$i$i39|0)==(3);
              if ($exitcond$i$i$i40) {
               break;
              }
              $arrayidx$i$i$i42 = (($ref$tmp19) + ($__i$0$i$i$i39<<2)|0);
              HEAP32[$arrayidx$i$i$i42>>2] = 0;
              $inc$i$i$i43 = (($__i$0$i$i$i39) + 1)|0;
              $__i$0$i$i$i39 = $inc$i$i$i43;
             }
             __THREW__ = 0;
             $call$i54 = (invoke_iii(54,($ref$tmp18|0),(5836|0))|0);
             $18 = __THREW__; __THREW__ = 0;
             $19 = $18&1;
             if ($19) {
              $29 = ___cxa_find_matching_catch_2()|0;
              $30 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
              $ehselector$slot$1 = $30;$exn$slot$1 = $29;
              break;
             }
             ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp18>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp18+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp18+8>>2]|0;
             $__i$0$i$i$i47 = 0;
             while(1) {
              $exitcond$i$i$i48 = ($__i$0$i$i$i47|0)==(3);
              if ($exitcond$i$i$i48) {
               break;
              }
              $arrayidx$i$i$i50 = (($ref$tmp18) + ($__i$0$i$i$i47<<2)|0);
              HEAP32[$arrayidx$i$i$i50>>2] = 0;
              $inc$i$i$i51 = (($__i$0$i$i$i47) + 1)|0;
              $__i$0$i$i$i47 = $inc$i$i$i51;
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
             $20 = HEAP32[$__end_$i>>2]|0;
             $add$ptr$i57 = ((($20)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i57,$ref$tmp);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
             $retval$3 = $call9;
             break L1;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
           $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
          $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
         $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
        ___resumeException($exn$slot$4|0);
        // unreachable;
       }
      }
     }
    } else {
     $retval$3 = $first;
    }
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i167 = 0, $$pre$i180 = 0, $$pre$i205 = 0, $$pre$i218 = 0, $$pre$i254 = 0, $$pre$i278 = 0, $$pre$i291 = 0, $$pre$i332 = 0, $$pre$i366 = 0, $$pre$i379 = 0, $$pre$phi437Z2D = 0, $$pre438 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i = 0, $__end_$i244 = 0, $__end_$i271 = 0, $__end_$i281 = 0, $__end_$i318 = 0, $__end_$i322$pre$phiZZ2D = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i222 = 0, $__i$0$i$i$i295 = 0, $__i$0$i$i$i336 = 0, $__i$0$i$i$i383 = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i187 = 0, $__size_$i$i$i$i$i234 = 0, $__size_$i$i$i$i$i260 = 0;
 var $__size_$i$i$i$i$i307 = 0, $__size_$i$i$i$i$i348 = 0, $__size_$i$i$i$i$i395 = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i192 = 0, $__size_$i3$i$i$i239 = 0, $__size_$i3$i$i$i265 = 0, $__size_$i3$i$i$i312 = 0, $__size_$i3$i$i$i353 = 0, $__size_$i3$i$i$i400 = 0, $add$ptr = 0, $add$ptr$first = 0, $add$ptr$i156 = 0, $add$ptr$i158 = 0, $add$ptr$i163 = 0, $add$ptr$i174 = 0, $add$ptr$i176 = 0, $add$ptr$i201 = 0, $add$ptr$i212 = 0, $add$ptr$i214 = 0;
 var $add$ptr$i248 = 0, $add$ptr$i250 = 0, $add$ptr$i274 = 0, $add$ptr$i285 = 0, $add$ptr$i287 = 0, $add$ptr$i326 = 0, $add$ptr$i328 = 0, $add$ptr$i362 = 0, $add$ptr$i373 = 0, $add$ptr$i375 = 0, $add$ptr34 = 0, $args = 0, $args147 = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i225 = 0, $arrayidx$i$i$i298 = 0, $arrayidx$i$i$i339 = 0, $arrayidx$i$i$i386 = 0, $arrayidx2 = 0, $arrayidx26 = 0;
 var $arrayidx30 = 0, $call = 0, $call$i183 = 0, $call$i229 = 0, $call$i302 = 0, $call$i343 = 0, $call$i390 = 0, $call136 = 0, $call139 = 0, $call163 = 0, $call199 = 0, $call220 = 0, $call253 = 0, $call35 = 0, $call40 = 0, $call67 = 0, $call94 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0;
 var $cmp$i$i$i164 = 0, $cmp$i$i$i177 = 0, $cmp$i$i$i202 = 0, $cmp$i$i$i215 = 0, $cmp$i$i$i251 = 0, $cmp$i$i$i275 = 0, $cmp$i$i$i288 = 0, $cmp$i$i$i329 = 0, $cmp$i$i$i363 = 0, $cmp$i$i$i376 = 0, $cmp$i199 = 0, $cmp$i272 = 0, $cmp$i319 = 0, $cmp$i360 = 0, $cmp1 = 0, $cmp105 = 0, $cmp137 = 0, $cmp140 = 0, $cmp144 = 0, $cmp164 = 0;
 var $cmp174 = 0, $cmp20 = 0, $cmp200 = 0, $cmp202 = 0, $cmp218 = 0, $cmp221 = 0, $cmp223 = 0, $cmp227 = 0, $cmp24 = 0, $cmp254 = 0, $cmp264 = 0, $cmp28 = 0, $cmp32 = 0, $cmp36 = 0, $cmp37 = 0, $cmp4 = 0, $cmp41 = 0, $cmp45 = 0, $cmp58 = 0, $cmp6 = 0;
 var $cmp66 = 0, $cmp68 = 0, $cmp70 = 0, $cmp74 = 0, $cmp95 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i191 = 0, $cond$i$i$i$i238 = 0, $cond$i$i$i$i264 = 0, $cond$i$i$i$i311 = 0, $cond$i$i$i$i352 = 0, $cond$i$i$i$i399 = 0, $cond$i$i$i194 = 0, $cond$i$i$i241 = 0, $cond$i$i$i267 = 0, $cond$i$i$i314 = 0, $cond$i$i$i355 = 0, $cond$i$i$i402 = 0, $conv$i$i$i$i = 0;
 var $conv$i$i$i$i193 = 0, $conv$i$i$i$i240 = 0, $conv$i$i$i$i266 = 0, $conv$i$i$i$i313 = 0, $conv$i$i$i$i354 = 0, $conv$i$i$i$i401 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $ehselector$slot$5 = 0, $ehselector$slot$7 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i223 = 0, $exitcond$i$i$i296 = 0, $exitcond$i$i$i337 = 0, $exitcond$i$i$i384 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$3 = 0;
 var $exn$slot$4 = 0, $exn$slot$5 = 0, $exn$slot$7 = 0, $first122 = 0, $first14 = 0, $first157 = 0, $first191 = 0, $first213 = 0, $first244 = 0, $first281 = 0, $first55 = 0, $first89 = 0, $global$0$off0 = 0, $inc$i$i$i = 0, $inc$i$i$i226 = 0, $inc$i$i$i299 = 0, $inc$i$i$i340 = 0, $inc$i$i$i387 = 0, $incdec$ptr = 0, $incdec$ptr$i$i$i = 0;
 var $incdec$ptr$i$i$i166 = 0, $incdec$ptr$i$i$i179 = 0, $incdec$ptr$i$i$i204 = 0, $incdec$ptr$i$i$i217 = 0, $incdec$ptr$i$i$i253 = 0, $incdec$ptr$i$i$i277 = 0, $incdec$ptr$i$i$i290 = 0, $incdec$ptr$i$i$i331 = 0, $incdec$ptr$i$i$i365 = 0, $incdec$ptr$i$i$i378 = 0, $incdec$ptr252 = 0, $or$cond = 0, $or$cond150 = 0, $or$cond151 = 0, $or$cond152 = 0, $ref$tmp = 0, $ref$tmp114 = 0, $ref$tmp183 = 0, $ref$tmp236 = 0, $ref$tmp273 = 0;
 var $retval$6 = 0, $s = 0, $s108 = 0, $s177 = 0, $s230 = 0, $s267 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i172 = 0, $sub$ptr$div$i210 = 0, $sub$ptr$div$i246 = 0, $sub$ptr$div$i283 = 0, $sub$ptr$div$i324 = 0, $sub$ptr$div$i371 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast18 = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i171 = 0, $sub$ptr$sub$i209 = 0;
 var $sub$ptr$sub$i245 = 0, $sub$ptr$sub$i282 = 0, $sub$ptr$sub$i323 = 0, $sub$ptr$sub$i370 = 0, $sub$ptr$sub19 = 0, $t$0 = 0, $t$1 = 0, $t$1$ph = 0, $t$2 = 0, $t$3 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i188 = 0, $tobool$i$i$i$i$i235 = 0, $tobool$i$i$i$i$i261 = 0, $tobool$i$i$i$i$i308 = 0, $tobool$i$i$i$i$i349 = 0, $tobool$i$i$i$i$i396 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $args = sp + 132|0;
 $s = sp + 120|0;
 $ref$tmp = sp + 108|0;
 $s108 = sp + 96|0;
 $ref$tmp114 = sp + 84|0;
 $args147 = sp + 72|0;
 $s177 = sp + 60|0;
 $ref$tmp183 = sp + 48|0;
 $s230 = sp + 36|0;
 $ref$tmp236 = sp + 24|0;
 $s267 = sp + 12|0;
 $ref$tmp273 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(103);
   if ($cmp1) {
    $arrayidx2 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx2>>0]|0;
    $cmp4 = ($1<<24>>24)==(115);
    $add$ptr = ((($first)) + 2|0);
    $add$ptr$first = $cmp4 ? $add$ptr : $first;
    $global$0$off0 = $cmp4;$t$0 = $add$ptr$first;
   } else {
    $global$0$off0 = 0;$t$0 = $first;
   }
   $call = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
   $cmp6 = ($call|0)==($t$0|0);
   if (!($cmp6)) {
    if (!($global$0$off0)) {
     $retval$6 = $call;
     break;
    }
    $2 = HEAP32[$db>>2]|0;
    $__end_$i = ((($db)) + 4|0);
    $3 = HEAP32[$__end_$i>>2]|0;
    $cmp$i = ($2|0)==($3|0);
    if ($cmp$i) {
     $retval$6 = $first;
     break;
    }
    $first14 = ((($3)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first14,0,5910)|0);
    $retval$6 = $call;
    break;
   }
   $sub$ptr$rhs$cast18 = $t$0;
   $sub$ptr$sub19 = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast18))|0;
   $cmp20 = ($sub$ptr$sub19|0)>(2);
   if ($cmp20) {
    $4 = HEAP8[$t$0>>0]|0;
    $cmp24 = ($4<<24>>24)==(115);
    if ($cmp24) {
     $arrayidx26 = ((($t$0)) + 1|0);
     $5 = HEAP8[$arrayidx26>>0]|0;
     $cmp28 = ($5<<24>>24)==(114);
     if ($cmp28) {
      $arrayidx30 = ((($t$0)) + 2|0);
      $6 = HEAP8[$arrayidx30>>0]|0;
      $cmp32 = ($6<<24>>24)==(78);
      L14: do {
       if ($cmp32) {
        $add$ptr34 = ((($t$0)) + 3|0);
        $call35 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr34,$last,$db)|0);
        $cmp36 = ($call35|0)==($add$ptr34|0);
        $cmp37 = ($call35|0)==($last|0);
        $or$cond = $cmp36 | $cmp37;
        if ($or$cond) {
         $retval$6 = $first;
         break L1;
        }
        $call40 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call35,$last,$db)|0);
        $cmp41 = ($call40|0)==($call35|0);
        $$pre = ((($db)) + 4|0);
        do {
         if ($cmp41) {
          $$pre$phi437Z2D = $db;$t$1$ph = $call35;
         } else {
          $7 = HEAP32[$$pre>>2]|0;
          $8 = HEAP32[$db>>2]|0;
          $sub$ptr$sub$i = (($7) - ($8))|0;
          $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
          $cmp45 = ($sub$ptr$div$i>>>0)<(2);
          if ($cmp45) {
           $retval$6 = $first;
           break L1;
          }
          $9 = $7;
          $add$ptr$i156 = ((($9)) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$add$ptr$i156);
          $10 = HEAP32[$$pre>>2]|0;
          $add$ptr$i158 = ((($10)) + -24|0);
          $11 = $10;
          while(1) {
           $cmp$i$i$i = ($11|0)==($add$ptr$i158|0);
           if ($cmp$i$i$i) {
            break;
           }
           $incdec$ptr$i$i$i = ((($11)) + -24|0);
           HEAP32[$$pre>>2] = $incdec$ptr$i$i$i;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
           $$pre$i = HEAP32[$$pre>>2]|0;
           $11 = $$pre$i;
          }
          $first55 = ((($10)) + -48|0);
          $__size_$i$i$i$i$i = ((($args)) + 11|0);
          $12 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($12<<24>>24)<(0);
          $13 = HEAP32[$args>>2]|0;
          $cond$i$i$i$i = $tobool$i$i$i$i$i ? $13 : $args;
          $__size_$i3$i$i$i = ((($args)) + 4|0);
          $14 = HEAP32[$__size_$i3$i$i$i>>2]|0;
          $conv$i$i$i$i = $12&255;
          $cond$i$i$i = $tobool$i$i$i$i$i ? $14 : $conv$i$i$i$i;
          __THREW__ = 0;
          (invoke_iiii(47,($first55|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
          $15 = __THREW__; __THREW__ = 0;
          $16 = $15&1;
          if ($16) {
           $19 = ___cxa_find_matching_catch_2()|0;
           $20 = tempRet0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
           $ehselector$slot$7 = $20;$exn$slot$7 = $19;
           break L14;
          }
          $cmp58 = ($call40|0)==($last|0);
          if (!($cmp58)) {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
           $$pre$phi437Z2D = $db;$t$1$ph = $call40;
           break;
          }
          $17 = HEAP32[$$pre>>2]|0;
          $add$ptr$i163 = ((($17)) + -24|0);
          $18 = $17;
          while(1) {
           $cmp$i$i$i164 = ($18|0)==($add$ptr$i163|0);
           if ($cmp$i$i$i164) {
            break;
           }
           $incdec$ptr$i$i$i166 = ((($18)) + -24|0);
           HEAP32[$$pre>>2] = $incdec$ptr$i$i$i166;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i166);
           $$pre$i167 = HEAP32[$$pre>>2]|0;
           $18 = $$pre$i167;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
          $retval$6 = $first;
          break L1;
         }
        } while(0);
        $__size_$i$i$i$i$i187 = ((($ref$tmp)) + 11|0);
        $__size_$i3$i$i$i192 = ((($ref$tmp)) + 4|0);
        $t$1 = $t$1$ph;
        while(1) {
         $21 = HEAP8[$t$1>>0]|0;
         $cmp66 = ($21<<24>>24)==(69);
         if ($cmp66) {
          label = 43;
          break;
         }
         $call67 = (__ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($t$1,$last,$db)|0);
         $cmp68 = ($call67|0)==($t$1|0);
         $cmp70 = ($call67|0)==($last|0);
         $or$cond150 = $cmp68 | $cmp70;
         if ($or$cond150) {
          $retval$6 = $first;
          break L1;
         }
         $22 = HEAP32[$$pre>>2]|0;
         $23 = HEAP32[$$pre$phi437Z2D>>2]|0;
         $sub$ptr$sub$i171 = (($22) - ($23))|0;
         $sub$ptr$div$i172 = (($sub$ptr$sub$i171|0) / 24)&-1;
         $cmp74 = ($sub$ptr$div$i172>>>0)<(2);
         if ($cmp74) {
          $retval$6 = $first;
          break L1;
         }
         $24 = $22;
         $add$ptr$i174 = ((($24)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s,$add$ptr$i174);
         $25 = HEAP32[$$pre>>2]|0;
         $add$ptr$i176 = ((($25)) + -24|0);
         $26 = $25;
         while(1) {
          $cmp$i$i$i177 = ($26|0)==($add$ptr$i176|0);
          if ($cmp$i$i$i177) {
           break;
          }
          $incdec$ptr$i$i$i179 = ((($26)) + -24|0);
          HEAP32[$$pre>>2] = $incdec$ptr$i$i$i179;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i179);
          $$pre$i180 = HEAP32[$$pre>>2]|0;
          $26 = $$pre$i180;
         }
         __THREW__ = 0;
         $call$i183 = (invoke_iiii(56,($s|0),0,(5910|0))|0);
         $27 = __THREW__; __THREW__ = 0;
         $28 = $27&1;
         if ($28) {
          label = 40;
          break;
         }
         ;HEAP32[$ref$tmp>>2]=HEAP32[$s>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$s+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$s+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($s) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         $29 = HEAP32[$$pre>>2]|0;
         $first89 = ((($29)) + -24|0);
         $30 = HEAP8[$__size_$i$i$i$i$i187>>0]|0;
         $tobool$i$i$i$i$i188 = ($30<<24>>24)<(0);
         $31 = HEAP32[$ref$tmp>>2]|0;
         $cond$i$i$i$i191 = $tobool$i$i$i$i$i188 ? $31 : $ref$tmp;
         $32 = HEAP32[$__size_$i3$i$i$i192>>2]|0;
         $conv$i$i$i$i193 = $30&255;
         $cond$i$i$i194 = $tobool$i$i$i$i$i188 ? $32 : $conv$i$i$i$i193;
         __THREW__ = 0;
         (invoke_iiii(47,($first89|0),($cond$i$i$i$i191|0),($cond$i$i$i194|0))|0);
         $33 = __THREW__; __THREW__ = 0;
         $34 = $33&1;
         if ($34) {
          label = 41;
          break;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s);
         $t$1 = $call67;
        }
        if ((label|0) == 40) {
         $35 = ___cxa_find_matching_catch_2()|0;
         $36 = tempRet0;
         $ehselector$slot$0 = $36;$exn$slot$0 = $35;
        }
        else if ((label|0) == 41) {
         $37 = ___cxa_find_matching_catch_2()|0;
         $38 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
         $ehselector$slot$0 = $38;$exn$slot$0 = $37;
        }
        else if ((label|0) == 43) {
         $incdec$ptr = ((($t$1)) + 1|0);
         $call94 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr,$last,$db)|0);
         $cmp95 = ($call94|0)==($incdec$ptr|0);
         if ($cmp95) {
          $39 = HEAP32[$db>>2]|0;
          $40 = HEAP32[$$pre>>2]|0;
          $cmp$i199 = ($39|0)==($40|0);
          if ($cmp$i199) {
           $retval$6 = $first;
           break L1;
          }
          $add$ptr$i201 = ((($40)) + -24|0);
          $41 = $40;
          while(1) {
           $cmp$i$i$i202 = ($41|0)==($add$ptr$i201|0);
           if ($cmp$i$i$i202) {
            $retval$6 = $first;
            break L1;
           }
           $incdec$ptr$i$i$i204 = ((($41)) + -24|0);
           HEAP32[$$pre>>2] = $incdec$ptr$i$i$i204;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i204);
           $$pre$i205 = HEAP32[$$pre>>2]|0;
           $41 = $$pre$i205;
          }
         }
         $42 = HEAP32[$$pre>>2]|0;
         $43 = HEAP32[$$pre$phi437Z2D>>2]|0;
         $sub$ptr$sub$i209 = (($42) - ($43))|0;
         $sub$ptr$div$i210 = (($sub$ptr$sub$i209|0) / 24)&-1;
         $cmp105 = ($sub$ptr$div$i210>>>0)<(2);
         if ($cmp105) {
          $retval$6 = $first;
          break L1;
         }
         $44 = $42;
         $add$ptr$i212 = ((($44)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s108,$add$ptr$i212);
         $45 = HEAP32[$$pre>>2]|0;
         $add$ptr$i214 = ((($45)) + -24|0);
         $46 = $45;
         while(1) {
          $cmp$i$i$i215 = ($46|0)==($add$ptr$i214|0);
          if ($cmp$i$i$i215) {
           break;
          }
          $incdec$ptr$i$i$i217 = ((($46)) + -24|0);
          HEAP32[$$pre>>2] = $incdec$ptr$i$i$i217;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i217);
          $$pre$i218 = HEAP32[$$pre>>2]|0;
          $46 = $$pre$i218;
         }
         __THREW__ = 0;
         $call$i229 = (invoke_iiii(56,($s108|0),0,(5910|0))|0);
         $47 = __THREW__; __THREW__ = 0;
         $48 = $47&1;
         do {
          if ($48) {
           $55 = ___cxa_find_matching_catch_2()|0;
           $56 = tempRet0;
           $ehselector$slot$1 = $56;$exn$slot$1 = $55;
          } else {
           ;HEAP32[$ref$tmp114>>2]=HEAP32[$s108>>2]|0;HEAP32[$ref$tmp114+4>>2]=HEAP32[$s108+4>>2]|0;HEAP32[$ref$tmp114+8>>2]=HEAP32[$s108+8>>2]|0;
           $__i$0$i$i$i222 = 0;
           while(1) {
            $exitcond$i$i$i223 = ($__i$0$i$i$i222|0)==(3);
            if ($exitcond$i$i$i223) {
             break;
            }
            $arrayidx$i$i$i225 = (($s108) + ($__i$0$i$i$i222<<2)|0);
            HEAP32[$arrayidx$i$i$i225>>2] = 0;
            $inc$i$i$i226 = (($__i$0$i$i$i222) + 1)|0;
            $__i$0$i$i$i222 = $inc$i$i$i226;
           }
           $49 = HEAP32[$$pre>>2]|0;
           $first122 = ((($49)) + -24|0);
           $__size_$i$i$i$i$i234 = ((($ref$tmp114)) + 11|0);
           $50 = HEAP8[$__size_$i$i$i$i$i234>>0]|0;
           $tobool$i$i$i$i$i235 = ($50<<24>>24)<(0);
           $51 = HEAP32[$ref$tmp114>>2]|0;
           $cond$i$i$i$i238 = $tobool$i$i$i$i$i235 ? $51 : $ref$tmp114;
           $__size_$i3$i$i$i239 = ((($ref$tmp114)) + 4|0);
           $52 = HEAP32[$__size_$i3$i$i$i239>>2]|0;
           $conv$i$i$i$i240 = $50&255;
           $cond$i$i$i241 = $tobool$i$i$i$i$i235 ? $52 : $conv$i$i$i$i240;
           __THREW__ = 0;
           (invoke_iiii(47,($first122|0),($cond$i$i$i$i238|0),($cond$i$i$i241|0))|0);
           $53 = __THREW__; __THREW__ = 0;
           $54 = $53&1;
           if ($54) {
            $57 = ___cxa_find_matching_catch_2()|0;
            $58 = tempRet0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp114);
            $ehselector$slot$1 = $58;$exn$slot$1 = $57;
            break;
           } else {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp114);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s108);
            $retval$6 = $call94;
            break L1;
           }
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s108);
         $ehselector$slot$7 = $ehselector$slot$1;$exn$slot$7 = $exn$slot$1;
         break;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s);
        $ehselector$slot$7 = $ehselector$slot$0;$exn$slot$7 = $exn$slot$0;
       } else {
        $call136 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($arrayidx30,$last,$db)|0);
        $cmp137 = ($call136|0)==($arrayidx30|0);
        if (!($cmp137)) {
         $call139 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call136,$last,$db)|0);
         $cmp140 = ($call139|0)==($call136|0);
         do {
          if ($cmp140) {
           $t$2 = $call136;
          } else {
           $__end_$i244 = ((($db)) + 4|0);
           $59 = HEAP32[$__end_$i244>>2]|0;
           $60 = HEAP32[$db>>2]|0;
           $sub$ptr$sub$i245 = (($59) - ($60))|0;
           $sub$ptr$div$i246 = (($sub$ptr$sub$i245|0) / 24)&-1;
           $cmp144 = ($sub$ptr$div$i246>>>0)<(2);
           if ($cmp144) {
            $retval$6 = $first;
            break L1;
           }
           $61 = $59;
           $add$ptr$i248 = ((($61)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args147,$add$ptr$i248);
           $62 = HEAP32[$__end_$i244>>2]|0;
           $add$ptr$i250 = ((($62)) + -24|0);
           $63 = $62;
           while(1) {
            $cmp$i$i$i251 = ($63|0)==($add$ptr$i250|0);
            if ($cmp$i$i$i251) {
             break;
            }
            $incdec$ptr$i$i$i253 = ((($63)) + -24|0);
            HEAP32[$__end_$i244>>2] = $incdec$ptr$i$i$i253;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i253);
            $$pre$i254 = HEAP32[$__end_$i244>>2]|0;
            $63 = $$pre$i254;
           }
           $first157 = ((($62)) + -48|0);
           $__size_$i$i$i$i$i260 = ((($args147)) + 11|0);
           $64 = HEAP8[$__size_$i$i$i$i$i260>>0]|0;
           $tobool$i$i$i$i$i261 = ($64<<24>>24)<(0);
           $65 = HEAP32[$args147>>2]|0;
           $cond$i$i$i$i264 = $tobool$i$i$i$i$i261 ? $65 : $args147;
           $__size_$i3$i$i$i265 = ((($args147)) + 4|0);
           $66 = HEAP32[$__size_$i3$i$i$i265>>2]|0;
           $conv$i$i$i$i266 = $64&255;
           $cond$i$i$i267 = $tobool$i$i$i$i$i261 ? $66 : $conv$i$i$i$i266;
           __THREW__ = 0;
           (invoke_iiii(47,($first157|0),($cond$i$i$i$i264|0),($cond$i$i$i267|0))|0);
           $67 = __THREW__; __THREW__ = 0;
           $68 = $67&1;
           if ($68) {
            $69 = ___cxa_find_matching_catch_2()|0;
            $70 = tempRet0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args147);
            $ehselector$slot$7 = $70;$exn$slot$7 = $69;
            break L14;
           } else {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args147);
            $t$2 = $call139;
            break;
           }
          }
         } while(0);
         $call163 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$2,$last,$db)|0);
         $cmp164 = ($call163|0)==($t$2|0);
         if ($cmp164) {
          $71 = HEAP32[$db>>2]|0;
          $__end_$i271 = ((($db)) + 4|0);
          $72 = HEAP32[$__end_$i271>>2]|0;
          $cmp$i272 = ($71|0)==($72|0);
          if ($cmp$i272) {
           $retval$6 = $first;
           break L1;
          }
          $add$ptr$i274 = ((($72)) + -24|0);
          $73 = $72;
          while(1) {
           $cmp$i$i$i275 = ($73|0)==($add$ptr$i274|0);
           if ($cmp$i$i$i275) {
            $retval$6 = $first;
            break L1;
           }
           $incdec$ptr$i$i$i277 = ((($73)) + -24|0);
           HEAP32[$__end_$i271>>2] = $incdec$ptr$i$i$i277;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i277);
           $$pre$i278 = HEAP32[$__end_$i271>>2]|0;
           $73 = $$pre$i278;
          }
         }
         $__end_$i281 = ((($db)) + 4|0);
         $74 = HEAP32[$__end_$i281>>2]|0;
         $75 = HEAP32[$db>>2]|0;
         $sub$ptr$sub$i282 = (($74) - ($75))|0;
         $sub$ptr$div$i283 = (($sub$ptr$sub$i282|0) / 24)&-1;
         $cmp174 = ($sub$ptr$div$i283>>>0)<(2);
         if ($cmp174) {
          $retval$6 = $first;
          break L1;
         }
         $76 = $74;
         $add$ptr$i285 = ((($76)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s177,$add$ptr$i285);
         $77 = HEAP32[$__end_$i281>>2]|0;
         $add$ptr$i287 = ((($77)) + -24|0);
         $78 = $77;
         while(1) {
          $cmp$i$i$i288 = ($78|0)==($add$ptr$i287|0);
          if ($cmp$i$i$i288) {
           break;
          }
          $incdec$ptr$i$i$i290 = ((($78)) + -24|0);
          HEAP32[$__end_$i281>>2] = $incdec$ptr$i$i$i290;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i290);
          $$pre$i291 = HEAP32[$__end_$i281>>2]|0;
          $78 = $$pre$i291;
         }
         __THREW__ = 0;
         $call$i302 = (invoke_iiii(56,($s177|0),0,(5910|0))|0);
         $79 = __THREW__; __THREW__ = 0;
         $80 = $79&1;
         do {
          if ($80) {
           $87 = ___cxa_find_matching_catch_2()|0;
           $88 = tempRet0;
           $ehselector$slot$3 = $88;$exn$slot$3 = $87;
          } else {
           ;HEAP32[$ref$tmp183>>2]=HEAP32[$s177>>2]|0;HEAP32[$ref$tmp183+4>>2]=HEAP32[$s177+4>>2]|0;HEAP32[$ref$tmp183+8>>2]=HEAP32[$s177+8>>2]|0;
           $__i$0$i$i$i295 = 0;
           while(1) {
            $exitcond$i$i$i296 = ($__i$0$i$i$i295|0)==(3);
            if ($exitcond$i$i$i296) {
             break;
            }
            $arrayidx$i$i$i298 = (($s177) + ($__i$0$i$i$i295<<2)|0);
            HEAP32[$arrayidx$i$i$i298>>2] = 0;
            $inc$i$i$i299 = (($__i$0$i$i$i295) + 1)|0;
            $__i$0$i$i$i295 = $inc$i$i$i299;
           }
           $81 = HEAP32[$__end_$i281>>2]|0;
           $first191 = ((($81)) + -24|0);
           $__size_$i$i$i$i$i307 = ((($ref$tmp183)) + 11|0);
           $82 = HEAP8[$__size_$i$i$i$i$i307>>0]|0;
           $tobool$i$i$i$i$i308 = ($82<<24>>24)<(0);
           $83 = HEAP32[$ref$tmp183>>2]|0;
           $cond$i$i$i$i311 = $tobool$i$i$i$i$i308 ? $83 : $ref$tmp183;
           $__size_$i3$i$i$i312 = ((($ref$tmp183)) + 4|0);
           $84 = HEAP32[$__size_$i3$i$i$i312>>2]|0;
           $conv$i$i$i$i313 = $82&255;
           $cond$i$i$i314 = $tobool$i$i$i$i$i308 ? $84 : $conv$i$i$i$i313;
           __THREW__ = 0;
           (invoke_iiii(47,($first191|0),($cond$i$i$i$i311|0),($cond$i$i$i314|0))|0);
           $85 = __THREW__; __THREW__ = 0;
           $86 = $85&1;
           if ($86) {
            $89 = ___cxa_find_matching_catch_2()|0;
            $90 = tempRet0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp183);
            $ehselector$slot$3 = $90;$exn$slot$3 = $89;
            break;
           } else {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp183);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s177);
            $retval$6 = $call163;
            break L1;
           }
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s177);
         $ehselector$slot$7 = $ehselector$slot$3;$exn$slot$7 = $exn$slot$3;
         break;
        }
        $call199 = (__ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($arrayidx30,$last,$db)|0);
        $cmp200 = ($call199|0)==($arrayidx30|0);
        $cmp202 = ($call199|0)==($last|0);
        $or$cond151 = $cmp200 | $cmp202;
        if ($or$cond151) {
         $retval$6 = $first;
         break L1;
        }
        if ($global$0$off0) {
         $91 = HEAP32[$db>>2]|0;
         $__end_$i318 = ((($db)) + 4|0);
         $92 = HEAP32[$__end_$i318>>2]|0;
         $cmp$i319 = ($91|0)==($92|0);
         if ($cmp$i319) {
          $retval$6 = $first;
          break L1;
         }
         $first213 = ((($92)) + -24|0);
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first213,0,5910)|0);
         $__end_$i322$pre$phiZZ2D = $__end_$i318;
        } else {
         $$pre438 = ((($db)) + 4|0);
         $__end_$i322$pre$phiZZ2D = $$pre438;
        }
        $__size_$i$i$i$i$i348 = ((($ref$tmp236)) + 11|0);
        $__size_$i3$i$i$i353 = ((($ref$tmp236)) + 4|0);
        $t$3 = $call199;
        while(1) {
         $93 = HEAP8[$t$3>>0]|0;
         $cmp218 = ($93<<24>>24)==(69);
         if ($cmp218) {
          label = 109;
          break;
         }
         $call220 = (__ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($t$3,$last,$db)|0);
         $cmp221 = ($call220|0)==($t$3|0);
         $cmp223 = ($call220|0)==($last|0);
         $or$cond152 = $cmp221 | $cmp223;
         if ($or$cond152) {
          $retval$6 = $first;
          break L1;
         }
         $94 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
         $95 = HEAP32[$db>>2]|0;
         $sub$ptr$sub$i323 = (($94) - ($95))|0;
         $sub$ptr$div$i324 = (($sub$ptr$sub$i323|0) / 24)&-1;
         $cmp227 = ($sub$ptr$div$i324>>>0)<(2);
         if ($cmp227) {
          $retval$6 = $first;
          break L1;
         }
         $96 = $94;
         $add$ptr$i326 = ((($96)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s230,$add$ptr$i326);
         $97 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
         $add$ptr$i328 = ((($97)) + -24|0);
         $98 = $97;
         while(1) {
          $cmp$i$i$i329 = ($98|0)==($add$ptr$i328|0);
          if ($cmp$i$i$i329) {
           break;
          }
          $incdec$ptr$i$i$i331 = ((($98)) + -24|0);
          HEAP32[$__end_$i322$pre$phiZZ2D>>2] = $incdec$ptr$i$i$i331;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i331);
          $$pre$i332 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
          $98 = $$pre$i332;
         }
         __THREW__ = 0;
         $call$i343 = (invoke_iiii(56,($s230|0),0,(5910|0))|0);
         $99 = __THREW__; __THREW__ = 0;
         $100 = $99&1;
         if ($100) {
          label = 106;
          break;
         }
         ;HEAP32[$ref$tmp236>>2]=HEAP32[$s230>>2]|0;HEAP32[$ref$tmp236+4>>2]=HEAP32[$s230+4>>2]|0;HEAP32[$ref$tmp236+8>>2]=HEAP32[$s230+8>>2]|0;
         $__i$0$i$i$i336 = 0;
         while(1) {
          $exitcond$i$i$i337 = ($__i$0$i$i$i336|0)==(3);
          if ($exitcond$i$i$i337) {
           break;
          }
          $arrayidx$i$i$i339 = (($s230) + ($__i$0$i$i$i336<<2)|0);
          HEAP32[$arrayidx$i$i$i339>>2] = 0;
          $inc$i$i$i340 = (($__i$0$i$i$i336) + 1)|0;
          $__i$0$i$i$i336 = $inc$i$i$i340;
         }
         $101 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
         $first244 = ((($101)) + -24|0);
         $102 = HEAP8[$__size_$i$i$i$i$i348>>0]|0;
         $tobool$i$i$i$i$i349 = ($102<<24>>24)<(0);
         $103 = HEAP32[$ref$tmp236>>2]|0;
         $cond$i$i$i$i352 = $tobool$i$i$i$i$i349 ? $103 : $ref$tmp236;
         $104 = HEAP32[$__size_$i3$i$i$i353>>2]|0;
         $conv$i$i$i$i354 = $102&255;
         $cond$i$i$i355 = $tobool$i$i$i$i$i349 ? $104 : $conv$i$i$i$i354;
         __THREW__ = 0;
         (invoke_iiii(47,($first244|0),($cond$i$i$i$i352|0),($cond$i$i$i355|0))|0);
         $105 = __THREW__; __THREW__ = 0;
         $106 = $105&1;
         if ($106) {
          label = 107;
          break;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp236);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s230);
         $t$3 = $call220;
        }
        if ((label|0) == 106) {
         $107 = ___cxa_find_matching_catch_2()|0;
         $108 = tempRet0;
         $ehselector$slot$4 = $108;$exn$slot$4 = $107;
        }
        else if ((label|0) == 107) {
         $109 = ___cxa_find_matching_catch_2()|0;
         $110 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp236);
         $ehselector$slot$4 = $110;$exn$slot$4 = $109;
        }
        else if ((label|0) == 109) {
         $incdec$ptr252 = ((($t$3)) + 1|0);
         $call253 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr252,$last,$db)|0);
         $cmp254 = ($call253|0)==($incdec$ptr252|0);
         if ($cmp254) {
          $111 = HEAP32[$db>>2]|0;
          $112 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
          $cmp$i360 = ($111|0)==($112|0);
          if ($cmp$i360) {
           $retval$6 = $first;
           break L1;
          }
          $add$ptr$i362 = ((($112)) + -24|0);
          $113 = $112;
          while(1) {
           $cmp$i$i$i363 = ($113|0)==($add$ptr$i362|0);
           if ($cmp$i$i$i363) {
            $retval$6 = $first;
            break L1;
           }
           $incdec$ptr$i$i$i365 = ((($113)) + -24|0);
           HEAP32[$__end_$i322$pre$phiZZ2D>>2] = $incdec$ptr$i$i$i365;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i365);
           $$pre$i366 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
           $113 = $$pre$i366;
          }
         }
         $114 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
         $115 = HEAP32[$db>>2]|0;
         $sub$ptr$sub$i370 = (($114) - ($115))|0;
         $sub$ptr$div$i371 = (($sub$ptr$sub$i370|0) / 24)&-1;
         $cmp264 = ($sub$ptr$div$i371>>>0)<(2);
         if ($cmp264) {
          $retval$6 = $first;
          break L1;
         }
         $116 = $114;
         $add$ptr$i373 = ((($116)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s267,$add$ptr$i373);
         $117 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
         $add$ptr$i375 = ((($117)) + -24|0);
         $118 = $117;
         while(1) {
          $cmp$i$i$i376 = ($118|0)==($add$ptr$i375|0);
          if ($cmp$i$i$i376) {
           break;
          }
          $incdec$ptr$i$i$i378 = ((($118)) + -24|0);
          HEAP32[$__end_$i322$pre$phiZZ2D>>2] = $incdec$ptr$i$i$i378;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i378);
          $$pre$i379 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
          $118 = $$pre$i379;
         }
         __THREW__ = 0;
         $call$i390 = (invoke_iiii(56,($s267|0),0,(5910|0))|0);
         $119 = __THREW__; __THREW__ = 0;
         $120 = $119&1;
         do {
          if ($120) {
           $127 = ___cxa_find_matching_catch_2()|0;
           $128 = tempRet0;
           $ehselector$slot$5 = $128;$exn$slot$5 = $127;
          } else {
           ;HEAP32[$ref$tmp273>>2]=HEAP32[$s267>>2]|0;HEAP32[$ref$tmp273+4>>2]=HEAP32[$s267+4>>2]|0;HEAP32[$ref$tmp273+8>>2]=HEAP32[$s267+8>>2]|0;
           $__i$0$i$i$i383 = 0;
           while(1) {
            $exitcond$i$i$i384 = ($__i$0$i$i$i383|0)==(3);
            if ($exitcond$i$i$i384) {
             break;
            }
            $arrayidx$i$i$i386 = (($s267) + ($__i$0$i$i$i383<<2)|0);
            HEAP32[$arrayidx$i$i$i386>>2] = 0;
            $inc$i$i$i387 = (($__i$0$i$i$i383) + 1)|0;
            $__i$0$i$i$i383 = $inc$i$i$i387;
           }
           $121 = HEAP32[$__end_$i322$pre$phiZZ2D>>2]|0;
           $first281 = ((($121)) + -24|0);
           $__size_$i$i$i$i$i395 = ((($ref$tmp273)) + 11|0);
           $122 = HEAP8[$__size_$i$i$i$i$i395>>0]|0;
           $tobool$i$i$i$i$i396 = ($122<<24>>24)<(0);
           $123 = HEAP32[$ref$tmp273>>2]|0;
           $cond$i$i$i$i399 = $tobool$i$i$i$i$i396 ? $123 : $ref$tmp273;
           $__size_$i3$i$i$i400 = ((($ref$tmp273)) + 4|0);
           $124 = HEAP32[$__size_$i3$i$i$i400>>2]|0;
           $conv$i$i$i$i401 = $122&255;
           $cond$i$i$i402 = $tobool$i$i$i$i$i396 ? $124 : $conv$i$i$i$i401;
           __THREW__ = 0;
           (invoke_iiii(47,($first281|0),($cond$i$i$i$i399|0),($cond$i$i$i402|0))|0);
           $125 = __THREW__; __THREW__ = 0;
           $126 = $125&1;
           if ($126) {
            $129 = ___cxa_find_matching_catch_2()|0;
            $130 = tempRet0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp273);
            $ehselector$slot$5 = $130;$exn$slot$5 = $129;
            break;
           } else {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp273);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s267);
            $retval$6 = $call253;
            break L1;
           }
          }
         } while(0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s267);
         $ehselector$slot$7 = $ehselector$slot$5;$exn$slot$7 = $exn$slot$5;
         break;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s230);
        $ehselector$slot$7 = $ehselector$slot$4;$exn$slot$7 = $exn$slot$4;
       }
      } while(0);
      ___resumeException($exn$slot$7|0);
      // unreachable;
     } else {
      $retval$6 = $first;
     }
    } else {
     $retval$6 = $first;
    }
   } else {
    $retval$6 = $first;
   }
  } else {
   $retval$6 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$6|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__end_$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i24 = 0, $arrayidx3 = 0, $call = 0, $call9 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp10 = 0, $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$0 = 0;
 var $exn$slot$0 = 0, $expr = 0, $first24 = 0, $incdec$ptr$i$i$i = 0, $ref$tmp = 0, $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $expr = sp + 12|0;
 $ref$tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(100);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(115);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $call9 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp10 = ($call9|0)==($call|0);
      if ($cmp10) {
       $retval$3 = $first;
      } else {
       $__end_$i = ((($db)) + 4|0);
       $2 = HEAP32[$__end_$i>>2]|0;
       $3 = HEAP32[$db>>2]|0;
       $sub$ptr$sub$i = (($2) - ($3))|0;
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
       $cmp13 = ($sub$ptr$div$i>>>0)<(2);
       if ($cmp13) {
        $retval$3 = $first;
       } else {
        $4 = $2;
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr,$add$ptr$i);
        $5 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i24 = ((($5)) + -24|0);
        $6 = $5;
        while(1) {
         $cmp$i$i$i = ($6|0)==($add$ptr$i24|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($6)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $6 = $$pre$i;
        }
        __THREW__ = 0;
        invoke_viii(76,($ref$tmp|0),(6129|0),($expr|0));
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        do {
         if ($8) {
          $15 = ___cxa_find_matching_catch_2()|0;
          $16 = tempRet0;
          $ehselector$slot$0 = $16;$exn$slot$0 = $15;
         } else {
          $9 = HEAP32[$__end_$i>>2]|0;
          $first24 = ((($9)) + -24|0);
          $__size_$i$i$i$i$i = ((($ref$tmp)) + 11|0);
          $10 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($10<<24>>24)<(0);
          $11 = HEAP32[$ref$tmp>>2]|0;
          $cond$i$i$i$i = $tobool$i$i$i$i$i ? $11 : $ref$tmp;
          $__size_$i3$i$i$i = ((($ref$tmp)) + 4|0);
          $12 = HEAP32[$__size_$i3$i$i$i>>2]|0;
          $conv$i$i$i$i = $10&255;
          $cond$i$i$i = $tobool$i$i$i$i$i ? $12 : $conv$i$i$i$i;
          __THREW__ = 0;
          (invoke_iiii(47,($first24|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
          $13 = __THREW__; __THREW__ = 0;
          $14 = $13&1;
          if ($14) {
           $17 = ___cxa_find_matching_catch_2()|0;
           $18 = tempRet0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
           $ehselector$slot$0 = $18;$exn$slot$0 = $17;
           break;
          } else {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
           $retval$3 = $call9;
           break L1;
          }
         }
        } while(0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
        ___resumeException($exn$slot$0|0);
        // unreachable;
       }
      }
     }
    } else {
     $retval$3 = $first;
    }
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__end_$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i24 = 0, $arrayidx3 = 0, $call = 0, $call9 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp10 = 0, $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$0 = 0;
 var $exn$slot$0 = 0, $first24 = 0, $incdec$ptr$i$i$i = 0, $name = 0, $ref$tmp = 0, $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $name = sp + 12|0;
 $ref$tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(100);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(116);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $call9 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp10 = ($call9|0)==($call|0);
      if ($cmp10) {
       $retval$3 = $first;
      } else {
       $__end_$i = ((($db)) + 4|0);
       $2 = HEAP32[$__end_$i>>2]|0;
       $3 = HEAP32[$db>>2]|0;
       $sub$ptr$sub$i = (($2) - ($3))|0;
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
       $cmp13 = ($sub$ptr$div$i>>>0)<(2);
       if ($cmp13) {
        $retval$3 = $first;
       } else {
        $4 = $2;
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name,$add$ptr$i);
        $5 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i24 = ((($5)) + -24|0);
        $6 = $5;
        while(1) {
         $cmp$i$i$i = ($6|0)==($add$ptr$i24|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($6)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $6 = $$pre$i;
        }
        __THREW__ = 0;
        invoke_viii(76,($ref$tmp|0),(6127|0),($name|0));
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        do {
         if ($8) {
          $15 = ___cxa_find_matching_catch_2()|0;
          $16 = tempRet0;
          $ehselector$slot$0 = $16;$exn$slot$0 = $15;
         } else {
          $9 = HEAP32[$__end_$i>>2]|0;
          $first24 = ((($9)) + -24|0);
          $__size_$i$i$i$i$i = ((($ref$tmp)) + 11|0);
          $10 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($10<<24>>24)<(0);
          $11 = HEAP32[$ref$tmp>>2]|0;
          $cond$i$i$i$i = $tobool$i$i$i$i$i ? $11 : $ref$tmp;
          $__size_$i3$i$i$i = ((($ref$tmp)) + 4|0);
          $12 = HEAP32[$__size_$i3$i$i$i>>2]|0;
          $conv$i$i$i$i = $10&255;
          $cond$i$i$i = $tobool$i$i$i$i$i ? $12 : $conv$i$i$i$i;
          __THREW__ = 0;
          (invoke_iiii(47,($first24|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
          $13 = __THREW__; __THREW__ = 0;
          $14 = $13&1;
          if ($14) {
           $17 = ___cxa_find_matching_catch_2()|0;
           $18 = tempRet0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
           $ehselector$slot$0 = $18;$exn$slot$0 = $17;
           break;
          } else {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name);
           $retval$3 = $call9;
           break L1;
          }
         }
        } while(0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name);
        ___resumeException($exn$slot$0|0);
        // unreachable;
       }
      }
     }
    } else {
     $retval$3 = $first;
    }
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i110 = 0, $$pre$i152 = 0, $$pre227 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $__begin_$i100$pre$phiZZ2D = 0, $__end_$i = 0;
 var $__end_$i101$phi$trans$insert = 0, $__end_$i101$pre$phiZZ2D = 0, $__first_$i$i$i$i = 0, $__i$0$i$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i$i140 = 0, $__i$0$i$i$i184 = 0, $__i$0$i$i114 = 0, $__i$0$i$i156 = 0, $__i$0$i$i205 = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i173 = 0, $__size_$i$i$i$i$i194 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i1$i$i$i$i129 = 0, $__size_$i2$i$i$i$i = 0, $__size_$i2$i$i$i$i132 = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i178 = 0;
 var $__size_$i3$i$i$i199 = 0, $add$ptr = 0, $add$ptr$first = 0, $add$ptr$i = 0, $add$ptr$i104 = 0, $add$ptr$i106 = 0, $add$ptr$i125 = 0, $add$ptr$i148 = 0, $add$ptr$i99 = 0, $add$ptr20 = 0, $add$ptr249 = 0, $add$ptr84 = 0, $agg$tmp = 0, $arrayidx$i$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i$i143 = 0, $arrayidx$i$i$i187 = 0, $arrayidx$i$i117 = 0, $arrayidx$i$i159 = 0;
 var $arrayidx$i$i208 = 0, $arrayidx10 = 0, $arrayidx2 = 0, $arrayidx80 = 0, $call = 0, $call$i166 = 0, $call$i191 = 0, $call64 = 0, $call89 = 0, $cleanup$dest$slot$3 = 0, $cleanup$dest$slot$4 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i107 = 0, $cmp$i$i$i149 = 0, $cmp$i102 = 0, $cmp$i123 = 0, $cmp$i212 = 0, $cmp1 = 0;
 var $cmp135 = 0, $cmp19 = 0, $cmp21 = 0, $cmp25 = 0, $cmp26 = 0, $cmp28 = 0, $cmp4 = 0, $cmp65 = 0, $cmp67 = 0, $cmp74 = 0, $cmp78 = 0, $cmp8 = 0, $cmp82 = 0, $cmp87 = 0, $cmp90 = 0, $cmp92 = 0, $cond = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i177 = 0;
 var $cond$i$i$i$i198 = 0, $cond$i$i$i180 = 0, $cond$i$i$i201 = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i179 = 0, $conv$i$i$i$i200 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $ehselector$slot$5 = 0, $ehselector$slot$6 = 0, $exitcond$i$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i$i141 = 0, $exitcond$i$i$i185 = 0, $exitcond$i$i115 = 0, $exitcond$i$i157 = 0;
 var $exitcond$i$i206 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $exn$slot$5 = 0, $exn$slot$6 = 0, $expr_list = 0, $first$addr$0 = 0, $first$addr$1 = 0, $has_expr_list$0$off0 = 0, $has_expr_list$0$off0$ = 0, $has_init$0$off0231 = 0, $inc$i$i = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i$i144 = 0, $inc$i$i$i188 = 0, $inc$i$i118 = 0;
 var $inc$i$i160 = 0, $inc$i$i209 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i109 = 0, $incdec$ptr$i$i$i151 = 0, $init_list = 0, $not$or$cond = 0, $not$or$cond$demorgan = 0, $or$cond = 0, $or$cond238 = 0, $or$cond94 = 0, $or$cond95 = 0, $parsed_gs$0$off0 = 0, $r = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp$i$i$i$i126 = 0, $ref$tmp176 = 0;
 var $ref$tmp207 = 0, $ref$tmp208 = 0, $ref$tmp225 = 0, $ref$tmp226 = 0, $ref$tmp240 = 0, $ref$tmp4$i$i$i$i = 0, $ref$tmp4$i$i$i$i127 = 0, $retval$16 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast72 = 0, $sub$ptr$sub = 0, $sub$ptr$sub73 = 0, $t$0 = 0, $t$1 = 0, $t$3 = 0, $t$4230 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i130 = 0, $tobool$i$i$i$i$i168 = 0;
 var $tobool$i$i$i$i$i174 = 0, $tobool$i$i$i$i$i195 = 0, $type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $ref$tmp$i$i$i$i126 = sp + 163|0;
 $ref$tmp4$i$i$i$i127 = sp + 162|0;
 $ref$tmp$i$i$i$i = sp + 161|0;
 $ref$tmp4$i$i$i$i = sp + 160|0;
 $init_list = sp + 148|0;
 $ref$tmp = sp + 136|0;
 $type = sp + 124|0;
 $expr_list = sp + 112|0;
 $ref$tmp176 = sp + 100|0;
 $r = sp + 88|0;
 $ref$tmp207 = sp + 76|0;
 $ref$tmp208 = sp + 64|0;
 $ref$tmp225 = sp + 52|0;
 $ref$tmp226 = sp + 40|0;
 $ref$tmp240 = sp + 16|0;
 $agg$tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(3);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(103);
   if ($cmp1) {
    $arrayidx2 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx2>>0]|0;
    $cmp4 = ($1<<24>>24)==(115);
    $add$ptr = ((($first)) + 2|0);
    $add$ptr$first = $cmp4 ? $add$ptr : $first;
    $$pre = HEAP8[$add$ptr$first>>0]|0;
    $2 = $$pre;$parsed_gs$0$off0 = $cmp4;$t$0 = $add$ptr$first;
   } else {
    $2 = $0;$parsed_gs$0$off0 = 0;$t$0 = $first;
   }
   $cmp8 = ($2<<24>>24)==(110);
   if ($cmp8) {
    $arrayidx10 = ((($t$0)) + 1|0);
    $3 = HEAP8[$arrayidx10>>0]|0;
    $cmp19 = ($3<<24>>24)==(97);
    switch ($3<<24>>24) {
    case 97: case 119:  {
     break;
    }
    default: {
     $retval$16 = $first;
     break L1;
    }
    }
    $add$ptr20 = ((($t$0)) + 2|0);
    $cmp21 = ($add$ptr20|0)==($last|0);
    L8: do {
     if (!($cmp21)) {
      $has_expr_list$0$off0 = 0;$t$1 = $add$ptr20;
      while(1) {
       $4 = HEAP8[$t$1>>0]|0;
       $cmp25 = ($4<<24>>24)==(95);
       if ($cmp25) {
        break;
       }
       $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$1,$last,$db)|0);
       $cmp26 = ($call|0)==($t$1|0);
       $cmp28 = ($call|0)==($last|0);
       $or$cond = $cmp26 | $cmp28;
       $not$or$cond$demorgan = $cmp26 | $cmp28;
       $not$or$cond = $not$or$cond$demorgan ^ 1;
       $has_expr_list$0$off0$ = $has_expr_list$0$off0 | $not$or$cond;
       if ($or$cond) {
        break L8;
       } else {
        $has_expr_list$0$off0 = $has_expr_list$0$off0$;$t$1 = $call;
       }
      }
      $incdec$ptr = ((($t$1)) + 1|0);
      $call64 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr,$last,$db)|0);
      $cmp65 = ($call64|0)==($incdec$ptr|0);
      $cmp67 = ($call64|0)==($last|0);
      $or$cond94 = $cmp65 | $cmp67;
      if (!($or$cond94)) {
       $sub$ptr$rhs$cast72 = $call64;
       $sub$ptr$sub73 = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast72))|0;
       $cmp74 = ($sub$ptr$sub73|0)>(2);
       $5 = HEAP8[$call64>>0]|0;
       $cmp78 = ($5<<24>>24)==(112);
       $or$cond238 = $cmp74 & $cmp78;
       L14: do {
        if ($or$cond238) {
         $arrayidx80 = ((($call64)) + 1|0);
         $6 = HEAP8[$arrayidx80>>0]|0;
         $cmp82 = ($6<<24>>24)==(105);
         if (!($cmp82)) {
          break L8;
         }
         $add$ptr84 = ((($call64)) + 2|0);
         $t$3 = $add$ptr84;
         while(1) {
          $7 = HEAP8[$t$3>>0]|0;
          $cmp87 = ($7<<24>>24)==(69);
          if ($cmp87) {
           $has_init$0$off0231 = 1;$t$4230 = $t$3;
           break L14;
          }
          $call89 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$3,$last,$db)|0);
          $cmp90 = ($call89|0)==($t$3|0);
          $cmp92 = ($call89|0)==($last|0);
          $or$cond95 = $cmp90 | $cmp92;
          if ($or$cond95) {
           break L8;
          } else {
           $t$3 = $call89;
          }
         }
        } else {
         $cmp135 = ($5<<24>>24)==(69);
         if ($cmp135) {
          $has_init$0$off0231 = 0;$t$4230 = $call64;
         } else {
          break L8;
         }
        }
       } while(0);
       ;HEAP32[$init_list>>2]=0|0;HEAP32[$init_list+4>>2]=0|0;HEAP32[$init_list+8>>2]=0|0;
       $__i$0$i$i = 0;
       while(1) {
        $exitcond$i$i = ($__i$0$i$i|0)==(3);
        if ($exitcond$i$i) {
         break;
        }
        $arrayidx$i$i = (($init_list) + ($__i$0$i$i<<2)|0);
        HEAP32[$arrayidx$i$i>>2] = 0;
        $inc$i$i = (($__i$0$i$i) + 1)|0;
        $__i$0$i$i = $inc$i$i;
       }
       L26: do {
        if ($has_init$0$off0231) {
         $8 = HEAP32[$db>>2]|0;
         $__end_$i = ((($db)) + 4|0);
         $9 = HEAP32[$__end_$i>>2]|0;
         $cmp$i = ($8|0)==($9|0);
         if ($cmp$i) {
          $cleanup$dest$slot$4 = 1;$first$addr$1 = $first;
          label = 103;
         } else {
          $add$ptr$i = ((($9)) + -24|0);
          __THREW__ = 0;
          invoke_vii(55,($ref$tmp|0),($add$ptr$i|0));
          $10 = __THREW__; __THREW__ = 0;
          $11 = $10&1;
          if ($11) {
           $20 = ___cxa_find_matching_catch_2()|0;
           $21 = tempRet0;
           $ehselector$slot$6 = $21;$exn$slot$6 = $20;
           label = 107;
           break;
          }
          $__size_$i1$i$i$i$i = ((($init_list)) + 11|0);
          $12 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($12<<24>>24)<(0);
          if ($tobool$i$i$i$i$i) {
           $13 = HEAP32[$init_list>>2]|0;
           HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
           __ZNSt3__211char_traitsIcE6assignERcRKc($13,$ref$tmp$i$i$i$i);
           $__size_$i2$i$i$i$i = ((($init_list)) + 4|0);
           HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
          } else {
           HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
           __ZNSt3__211char_traitsIcE6assignERcRKc($init_list,$ref$tmp4$i$i$i$i);
           HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
          }
          __THREW__ = 0;
          invoke_vi(51,($init_list|0));
          $14 = __THREW__; __THREW__ = 0;
          $15 = $14&1;
          if ($15) {
           $16 = ___cxa_find_matching_catch_3(0|0)|0;
           $17 = tempRet0;
           ___clang_call_terminate($16);
           // unreachable;
          }
          ;HEAP32[$init_list>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$init_list+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$init_list+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
          $__i$0$i$i$i$i = 0;
          while(1) {
           $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
           if ($exitcond$i$i$i$i) {
            break;
           }
           $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
           HEAP32[$arrayidx$i$i$i$i>>2] = 0;
           $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
           $__i$0$i$i$i$i = $inc$i$i$i$i;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
          $18 = HEAP32[$__end_$i>>2]|0;
          $add$ptr$i99 = ((($18)) + -24|0);
          $19 = $18;
          while(1) {
           $cmp$i$i$i = ($19|0)==($add$ptr$i99|0);
           if ($cmp$i$i$i) {
            $25 = $add$ptr$i99;$__begin_$i100$pre$phiZZ2D = $db;$__end_$i101$pre$phiZZ2D = $__end_$i;
            label = 36;
            break L26;
           }
           $incdec$ptr$i$i$i = ((($19)) + -24|0);
           HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
           $$pre$i = HEAP32[$__end_$i>>2]|0;
           $19 = $$pre$i;
          }
         }
        } else {
         $__end_$i101$phi$trans$insert = ((($db)) + 4|0);
         $$pre227 = HEAP32[$__end_$i101$phi$trans$insert>>2]|0;
         $25 = $$pre227;$__begin_$i100$pre$phiZZ2D = $db;$__end_$i101$pre$phiZZ2D = $__end_$i101$phi$trans$insert;
         label = 36;
        }
       } while(0);
       do {
        if ((label|0) == 36) {
         $24 = HEAP32[$__begin_$i100$pre$phiZZ2D>>2]|0;
         $cmp$i102 = ($24|0)==($25|0);
         if ($cmp$i102) {
          $cleanup$dest$slot$4 = 1;$first$addr$1 = $first;
          label = 103;
         } else {
          $add$ptr$i104 = ((($25)) + -24|0);
          __THREW__ = 0;
          invoke_vii(55,($type|0),($add$ptr$i104|0));
          $26 = __THREW__; __THREW__ = 0;
          $27 = $26&1;
          if ($27) {
           $22 = ___cxa_find_matching_catch_2()|0;
           $23 = tempRet0;
           $ehselector$slot$6 = $23;$exn$slot$6 = $22;
           label = 107;
           break;
          }
          $28 = HEAP32[$__end_$i101$pre$phiZZ2D>>2]|0;
          $add$ptr$i106 = ((($28)) + -24|0);
          $29 = $28;
          while(1) {
           $cmp$i$i$i107 = ($29|0)==($add$ptr$i106|0);
           if ($cmp$i$i$i107) {
            break;
           }
           $incdec$ptr$i$i$i109 = ((($29)) + -24|0);
           HEAP32[$__end_$i101$pre$phiZZ2D>>2] = $incdec$ptr$i$i$i109;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i109);
           $$pre$i110 = HEAP32[$__end_$i101$pre$phiZZ2D>>2]|0;
           $29 = $$pre$i110;
          }
          ;HEAP32[$expr_list>>2]=0|0;HEAP32[$expr_list+4>>2]=0|0;HEAP32[$expr_list+8>>2]=0|0;
          $__i$0$i$i114 = 0;
          while(1) {
           $exitcond$i$i115 = ($__i$0$i$i114|0)==(3);
           if ($exitcond$i$i115) {
            break;
           }
           $arrayidx$i$i117 = (($expr_list) + ($__i$0$i$i114<<2)|0);
           HEAP32[$arrayidx$i$i117>>2] = 0;
           $inc$i$i118 = (($__i$0$i$i114) + 1)|0;
           $__i$0$i$i114 = $inc$i$i118;
          }
          L61: do {
           if ($has_expr_list$0$off0) {
            $30 = HEAP32[$__begin_$i100$pre$phiZZ2D>>2]|0;
            $cmp$i123 = ($30|0)==($add$ptr$i106|0);
            if ($cmp$i123) {
             $cleanup$dest$slot$3 = 1;$first$addr$0 = $first;
             label = 102;
            } else {
             $add$ptr$i125 = ((($28)) + -48|0);
             __THREW__ = 0;
             invoke_vii(55,($ref$tmp176|0),($add$ptr$i125|0));
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if ($32) {
              $41 = ___cxa_find_matching_catch_2()|0;
              $42 = tempRet0;
              $ehselector$slot$5 = $42;$exn$slot$5 = $41;
              label = 106;
              break;
             }
             $__size_$i1$i$i$i$i129 = ((($expr_list)) + 11|0);
             $33 = HEAP8[$__size_$i1$i$i$i$i129>>0]|0;
             $tobool$i$i$i$i$i130 = ($33<<24>>24)<(0);
             if ($tobool$i$i$i$i$i130) {
              $34 = HEAP32[$expr_list>>2]|0;
              HEAP8[$ref$tmp$i$i$i$i126>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($34,$ref$tmp$i$i$i$i126);
              $__size_$i2$i$i$i$i132 = ((($expr_list)) + 4|0);
              HEAP32[$__size_$i2$i$i$i$i132>>2] = 0;
             } else {
              HEAP8[$ref$tmp4$i$i$i$i127>>0] = 0;
              __ZNSt3__211char_traitsIcE6assignERcRKc($expr_list,$ref$tmp4$i$i$i$i127);
              HEAP8[$__size_$i1$i$i$i$i129>>0] = 0;
             }
             __THREW__ = 0;
             invoke_vi(51,($expr_list|0));
             $35 = __THREW__; __THREW__ = 0;
             $36 = $35&1;
             if ($36) {
              $37 = ___cxa_find_matching_catch_3(0|0)|0;
              $38 = tempRet0;
              ___clang_call_terminate($37);
              // unreachable;
             }
             ;HEAP32[$expr_list>>2]=HEAP32[$ref$tmp176>>2]|0;HEAP32[$expr_list+4>>2]=HEAP32[$ref$tmp176+4>>2]|0;HEAP32[$expr_list+8>>2]=HEAP32[$ref$tmp176+8>>2]|0;
             $__i$0$i$i$i$i140 = 0;
             while(1) {
              $exitcond$i$i$i$i141 = ($__i$0$i$i$i$i140|0)==(3);
              if ($exitcond$i$i$i$i141) {
               break;
              }
              $arrayidx$i$i$i$i143 = (($ref$tmp176) + ($__i$0$i$i$i$i140<<2)|0);
              HEAP32[$arrayidx$i$i$i$i143>>2] = 0;
              $inc$i$i$i$i144 = (($__i$0$i$i$i$i140) + 1)|0;
              $__i$0$i$i$i$i140 = $inc$i$i$i$i144;
             }
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp176);
             $39 = HEAP32[$__end_$i101$pre$phiZZ2D>>2]|0;
             $add$ptr$i148 = ((($39)) + -24|0);
             $40 = $39;
             while(1) {
              $cmp$i$i$i149 = ($40|0)==($add$ptr$i148|0);
              if ($cmp$i$i$i149) {
               label = 59;
               break L61;
              }
              $incdec$ptr$i$i$i151 = ((($40)) + -24|0);
              HEAP32[$__end_$i101$pre$phiZZ2D>>2] = $incdec$ptr$i$i$i151;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i151);
              $$pre$i152 = HEAP32[$__end_$i101$pre$phiZZ2D>>2]|0;
              $40 = $$pre$i152;
             }
            }
           } else {
            label = 59;
           }
          } while(0);
          L81: do {
           if ((label|0) == 59) {
            ;HEAP32[$r>>2]=0|0;HEAP32[$r+4>>2]=0|0;HEAP32[$r+8>>2]=0|0;
            $__i$0$i$i156 = 0;
            while(1) {
             $exitcond$i$i157 = ($__i$0$i$i156|0)==(3);
             if ($exitcond$i$i157) {
              break;
             }
             $arrayidx$i$i159 = (($r) + ($__i$0$i$i156<<2)|0);
             HEAP32[$arrayidx$i$i159>>2] = 0;
             $inc$i$i160 = (($__i$0$i$i156) + 1)|0;
             $__i$0$i$i156 = $inc$i$i160;
            }
            if ($parsed_gs$0$off0) {
             __THREW__ = 0;
             invoke_vii(81,($r|0),(5910|0));
             $43 = __THREW__; __THREW__ = 0;
             $44 = $43&1;
             if ($44) {
              label = 64;
             } else {
              label = 65;
             }
            } else {
             label = 65;
            }
            L89: do {
             if ((label|0) == 65) {
              if ($cmp19) {
               __THREW__ = 0;
               (invoke_iii(54,($r|0),(6120|0))|0);
               $47 = __THREW__; __THREW__ = 0;
               $48 = $47&1;
               if ($48) {
                label = 64;
                break;
               }
              } else {
               __THREW__ = 0;
               (invoke_iii(54,($r|0),(5870|0))|0);
               $49 = __THREW__; __THREW__ = 0;
               $50 = $49&1;
               if ($50) {
                label = 64;
                break;
               }
              }
              L95: do {
               if ($has_expr_list$0$off0) {
                __THREW__ = 0;
                invoke_viii(76,($ref$tmp208|0),(5838|0),($expr_list|0));
                $51 = __THREW__; __THREW__ = 0;
                $52 = $51&1;
                if ($52) {
                 $60 = ___cxa_find_matching_catch_2()|0;
                 $61 = tempRet0;
                 $ehselector$slot$1 = $61;$exn$slot$1 = $60;
                } else {
                 __THREW__ = 0;
                 $call$i166 = (invoke_iii(54,($ref$tmp208|0),(6124|0))|0);
                 $53 = __THREW__; __THREW__ = 0;
                 $54 = $53&1;
                 do {
                  if ($54) {
                   $62 = ___cxa_find_matching_catch_2()|0;
                   $63 = tempRet0;
                   $ehselector$slot$0 = $63;$exn$slot$0 = $62;
                  } else {
                   ;HEAP32[$ref$tmp207>>2]=HEAP32[$ref$tmp208>>2]|0;HEAP32[$ref$tmp207+4>>2]=HEAP32[$ref$tmp208+4>>2]|0;HEAP32[$ref$tmp207+8>>2]=HEAP32[$ref$tmp208+8>>2]|0;
                   $__i$0$i$i$i = 0;
                   while(1) {
                    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
                    if ($exitcond$i$i$i) {
                     break;
                    }
                    $arrayidx$i$i$i = (($ref$tmp208) + ($__i$0$i$i$i<<2)|0);
                    HEAP32[$arrayidx$i$i$i>>2] = 0;
                    $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
                    $__i$0$i$i$i = $inc$i$i$i;
                   }
                   $__size_$i$i$i$i$i = ((($ref$tmp207)) + 11|0);
                   $55 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
                   $tobool$i$i$i$i$i168 = ($55<<24>>24)<(0);
                   $56 = HEAP32[$ref$tmp207>>2]|0;
                   $cond$i$i$i$i = $tobool$i$i$i$i$i168 ? $56 : $ref$tmp207;
                   $__size_$i3$i$i$i = ((($ref$tmp207)) + 4|0);
                   $57 = HEAP32[$__size_$i3$i$i$i>>2]|0;
                   $conv$i$i$i$i = $55&255;
                   $cond$i$i$i = $tobool$i$i$i$i$i168 ? $57 : $conv$i$i$i$i;
                   __THREW__ = 0;
                   (invoke_iiii(47,($r|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
                   $58 = __THREW__; __THREW__ = 0;
                   $59 = $58&1;
                   if ($59) {
                    $64 = ___cxa_find_matching_catch_2()|0;
                    $65 = tempRet0;
                    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp207);
                    $ehselector$slot$0 = $65;$exn$slot$0 = $64;
                    break;
                   } else {
                    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp207);
                    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp208);
                    break L95;
                   }
                  }
                 } while(0);
                 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp208);
                 $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
                }
                $ehselector$slot$4 = $ehselector$slot$1;$exn$slot$4 = $exn$slot$1;
                break L89;
               }
              } while(0);
              $__size_$i$i$i$i$i173 = ((($type)) + 11|0);
              $66 = HEAP8[$__size_$i$i$i$i$i173>>0]|0;
              $tobool$i$i$i$i$i174 = ($66<<24>>24)<(0);
              $67 = HEAP32[$type>>2]|0;
              $cond$i$i$i$i177 = $tobool$i$i$i$i$i174 ? $67 : $type;
              $__size_$i3$i$i$i178 = ((($type)) + 4|0);
              $68 = HEAP32[$__size_$i3$i$i$i178>>2]|0;
              $conv$i$i$i$i179 = $66&255;
              $cond$i$i$i180 = $tobool$i$i$i$i$i174 ? $68 : $conv$i$i$i$i179;
              __THREW__ = 0;
              (invoke_iiii(47,($r|0),($cond$i$i$i$i177|0),($cond$i$i$i180|0))|0);
              $69 = __THREW__; __THREW__ = 0;
              $70 = $69&1;
              if ($70) {
               label = 64;
              } else {
               L114: do {
                if ($has_init$0$off0231) {
                 __THREW__ = 0;
                 invoke_viii(76,($ref$tmp226|0),(5833|0),($init_list|0));
                 $71 = __THREW__; __THREW__ = 0;
                 $72 = $71&1;
                 if ($72) {
                  $80 = ___cxa_find_matching_catch_2()|0;
                  $81 = tempRet0;
                  $ehselector$slot$3 = $81;$exn$slot$3 = $80;
                 } else {
                  __THREW__ = 0;
                  $call$i191 = (invoke_iii(54,($ref$tmp226|0),(5836|0))|0);
                  $73 = __THREW__; __THREW__ = 0;
                  $74 = $73&1;
                  do {
                   if ($74) {
                    $82 = ___cxa_find_matching_catch_2()|0;
                    $83 = tempRet0;
                    $ehselector$slot$2 = $83;$exn$slot$2 = $82;
                   } else {
                    ;HEAP32[$ref$tmp225>>2]=HEAP32[$ref$tmp226>>2]|0;HEAP32[$ref$tmp225+4>>2]=HEAP32[$ref$tmp226+4>>2]|0;HEAP32[$ref$tmp225+8>>2]=HEAP32[$ref$tmp226+8>>2]|0;
                    $__i$0$i$i$i184 = 0;
                    while(1) {
                     $exitcond$i$i$i185 = ($__i$0$i$i$i184|0)==(3);
                     if ($exitcond$i$i$i185) {
                      break;
                     }
                     $arrayidx$i$i$i187 = (($ref$tmp226) + ($__i$0$i$i$i184<<2)|0);
                     HEAP32[$arrayidx$i$i$i187>>2] = 0;
                     $inc$i$i$i188 = (($__i$0$i$i$i184) + 1)|0;
                     $__i$0$i$i$i184 = $inc$i$i$i188;
                    }
                    $__size_$i$i$i$i$i194 = ((($ref$tmp225)) + 11|0);
                    $75 = HEAP8[$__size_$i$i$i$i$i194>>0]|0;
                    $tobool$i$i$i$i$i195 = ($75<<24>>24)<(0);
                    $76 = HEAP32[$ref$tmp225>>2]|0;
                    $cond$i$i$i$i198 = $tobool$i$i$i$i$i195 ? $76 : $ref$tmp225;
                    $__size_$i3$i$i$i199 = ((($ref$tmp225)) + 4|0);
                    $77 = HEAP32[$__size_$i3$i$i$i199>>2]|0;
                    $conv$i$i$i$i200 = $75&255;
                    $cond$i$i$i201 = $tobool$i$i$i$i$i195 ? $77 : $conv$i$i$i$i200;
                    __THREW__ = 0;
                    (invoke_iiii(47,($r|0),($cond$i$i$i$i198|0),($cond$i$i$i201|0))|0);
                    $78 = __THREW__; __THREW__ = 0;
                    $79 = $78&1;
                    if ($79) {
                     $84 = ___cxa_find_matching_catch_2()|0;
                     $85 = tempRet0;
                     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp225);
                     $ehselector$slot$2 = $85;$exn$slot$2 = $84;
                     break;
                    } else {
                     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp225);
                     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp226);
                     break L114;
                    }
                   }
                  } while(0);
                  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp226);
                  $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
                 }
                 $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
                 break L89;
                }
               } while(0);
               ;HEAP32[$agg$tmp>>2]=HEAP32[$r>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$r+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$r+8>>2]|0;
               $__i$0$i$i205 = 0;
               while(1) {
                $exitcond$i$i206 = ($__i$0$i$i205|0)==(3);
                if ($exitcond$i$i206) {
                 break;
                }
                $arrayidx$i$i208 = (($r) + ($__i$0$i$i205<<2)|0);
                HEAP32[$arrayidx$i$i208>>2] = 0;
                $inc$i$i209 = (($__i$0$i$i205) + 1)|0;
                $__i$0$i$i205 = $inc$i$i209;
               }
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp240,$agg$tmp);
               $86 = HEAP32[$__end_$i101$pre$phiZZ2D>>2]|0;
               $__first_$i$i$i$i = ((($db)) + 8|0);
               $87 = HEAP32[$__first_$i$i$i$i>>2]|0;
               $cmp$i212 = ($86>>>0)<($87>>>0);
               do {
                if ($cmp$i212) {
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($86,$ref$tmp240);
                 $88 = HEAP32[$__end_$i101$pre$phiZZ2D>>2]|0;
                 $incdec$ptr$i = ((($88)) + 24|0);
                 HEAP32[$__end_$i101$pre$phiZZ2D>>2] = $incdec$ptr$i;
                } else {
                 __THREW__ = 0;
                 invoke_vii(64,($db|0),($ref$tmp240|0));
                 $89 = __THREW__; __THREW__ = 0;
                 $90 = $89&1;
                 if (!($90)) {
                  break;
                 }
                 $91 = ___cxa_find_matching_catch_2()|0;
                 $92 = tempRet0;
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp240);
                 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
                 $ehselector$slot$4 = $92;$exn$slot$4 = $91;
                 break L89;
                }
               } while(0);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp240);
               __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
               $add$ptr249 = ((($t$4230)) + 1|0);
               __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r);
               $cleanup$dest$slot$3 = 0;$first$addr$0 = $add$ptr249;
               label = 102;
               break L81;
              }
             }
            } while(0);
            if ((label|0) == 64) {
             $45 = ___cxa_find_matching_catch_2()|0;
             $46 = tempRet0;
             $ehselector$slot$4 = $46;$exn$slot$4 = $45;
            }
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r);
            $ehselector$slot$5 = $ehselector$slot$4;$exn$slot$5 = $exn$slot$4;
            label = 106;
           }
          } while(0);
          if ((label|0) == 102) {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr_list);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type);
           $cleanup$dest$slot$4 = $cleanup$dest$slot$3;$first$addr$1 = $first$addr$0;
           label = 103;
           break;
          }
          else if ((label|0) == 106) {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr_list);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type);
           $ehselector$slot$6 = $ehselector$slot$5;$exn$slot$6 = $exn$slot$5;
           label = 107;
           break;
          }
         }
        }
       } while(0);
       if ((label|0) == 103) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($init_list);
        $cond = ($cleanup$dest$slot$4|0)==(0);
        if ($cond) {
         $retval$16 = $first$addr$1;
         break L1;
        } else {
         break;
        }
       }
       else if ((label|0) == 107) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($init_list);
        ___resumeException($exn$slot$6|0);
        // unreachable;
       }
      }
     }
    } while(0);
    $retval$16 = $first;
   } else {
    $retval$16 = $first;
   }
  } else {
   $retval$16 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$16|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0;
 var $__i$0$i$i$i13 = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $add$ptr$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i16 = 0, $call = 0, $call$i11 = 0, $call$i20 = 0, $cmp = 0, $cmp$i = 0, $ehselector$slot$0 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i14 = 0, $exn$slot$0 = 0, $first13 = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0;
 var $inc$i$i$i17 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp3 = 0, $ref$tmp4 = 0, $ref$tmp4$i$i$i$i = 0, $retval$0 = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $ref$tmp$i$i$i$i = sp + 37|0;
 $ref$tmp4$i$i$i$i = sp + 36|0;
 $ref$tmp = sp + 24|0;
 $ref$tmp3 = sp + 12|0;
 $ref$tmp4 = sp;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $cmp = ($call|0)==($first|0);
 L1: do {
  if ($cmp) {
   $retval$0 = $first;
  } else {
   $0 = HEAP32[$db>>2]|0;
   $__end_$i = ((($db)) + 4|0);
   $1 = HEAP32[$__end_$i>>2]|0;
   $cmp$i = ($0|0)==($1|0);
   if ($cmp$i) {
    $retval$0 = $first;
   } else {
    $add$ptr$i = ((($1)) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp4,$add$ptr$i);
    __THREW__ = 0;
    $call$i11 = (invoke_iiii(56,($ref$tmp4|0),0,(6109|0))|0);
    $2 = __THREW__; __THREW__ = 0;
    $3 = $2&1;
    do {
     if ($3) {
      $13 = ___cxa_find_matching_catch_2()|0;
      $14 = tempRet0;
      $ehselector$slot$0 = $14;$exn$slot$0 = $13;
     } else {
      ;HEAP32[$ref$tmp3>>2]=HEAP32[$ref$tmp4>>2]|0;HEAP32[$ref$tmp3+4>>2]=HEAP32[$ref$tmp4+4>>2]|0;HEAP32[$ref$tmp3+8>>2]=HEAP32[$ref$tmp4+8>>2]|0;
      $__i$0$i$i$i = 0;
      while(1) {
       $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
       if ($exitcond$i$i$i) {
        break;
       }
       $arrayidx$i$i$i = (($ref$tmp4) + ($__i$0$i$i$i<<2)|0);
       HEAP32[$arrayidx$i$i$i>>2] = 0;
       $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
       $__i$0$i$i$i = $inc$i$i$i;
      }
      __THREW__ = 0;
      $call$i20 = (invoke_iii(54,($ref$tmp3|0),(5836|0))|0);
      $4 = __THREW__; __THREW__ = 0;
      $5 = $4&1;
      if ($5) {
       $15 = ___cxa_find_matching_catch_2()|0;
       $16 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp3);
       $ehselector$slot$0 = $16;$exn$slot$0 = $15;
       break;
      }
      ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp3>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp3+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp3+8>>2]|0;
      $__i$0$i$i$i13 = 0;
      while(1) {
       $exitcond$i$i$i14 = ($__i$0$i$i$i13|0)==(3);
       if ($exitcond$i$i$i14) {
        break;
       }
       $arrayidx$i$i$i16 = (($ref$tmp3) + ($__i$0$i$i$i13<<2)|0);
       HEAP32[$arrayidx$i$i$i16>>2] = 0;
       $inc$i$i$i17 = (($__i$0$i$i$i13) + 1)|0;
       $__i$0$i$i$i13 = $inc$i$i$i17;
      }
      $6 = HEAP32[$__end_$i>>2]|0;
      $first13 = ((($6)) + -24|0);
      $__size_$i1$i$i$i$i = ((($first13)) + 11|0);
      $7 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
      $tobool$i$i$i$i$i = ($7<<24>>24)<(0);
      if ($tobool$i$i$i$i$i) {
       $8 = HEAP32[$first13>>2]|0;
       HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($8,$ref$tmp$i$i$i$i);
       $__size_$i2$i$i$i$i = ((($6)) + -20|0);
       HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
      } else {
       HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($first13,$ref$tmp4$i$i$i$i);
       HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
      }
      __THREW__ = 0;
      invoke_vi(51,($first13|0));
      $9 = __THREW__; __THREW__ = 0;
      $10 = $9&1;
      if ($10) {
       $11 = ___cxa_find_matching_catch_3(0|0)|0;
       $12 = tempRet0;
       ___clang_call_terminate($11);
       // unreachable;
      }
      ;HEAP32[$first13>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$first13+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$first13+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
      $__i$0$i$i$i$i = 0;
      while(1) {
       $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
       if ($exitcond$i$i$i$i) {
        break;
       }
       $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
       HEAP32[$arrayidx$i$i$i$i>>2] = 0;
       $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
       $__i$0$i$i$i$i = $inc$i$i$i$i;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp4);
      $retval$0 = $call;
      break L1;
     }
    } while(0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp4);
    ___resumeException($exn$slot$0|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__size_$i$i$i$i$i = 0;
 var $__size_$i3$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i25 = 0, $arrayidx3 = 0, $call = 0, $call9 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp10 = 0, $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $first21 = 0, $first27 = 0, $incdec$ptr$i$i$i = 0;
 var $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $tmp = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(112);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(116);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $call9 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp10 = ($call9|0)==($call|0);
      if ($cmp10) {
       $retval$3 = $first;
      } else {
       $__end_$i = ((($db)) + 4|0);
       $2 = HEAP32[$__end_$i>>2]|0;
       $3 = HEAP32[$db>>2]|0;
       $sub$ptr$sub$i = (($2) - ($3))|0;
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
       $cmp13 = ($sub$ptr$div$i>>>0)<(2);
       if ($cmp13) {
        $retval$3 = $first;
       } else {
        $4 = $2;
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp,$add$ptr$i);
        $5 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i25 = ((($5)) + -24|0);
        $6 = $5;
        while(1) {
         $cmp$i$i$i = ($6|0)==($add$ptr$i25|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($6)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $6 = $$pre$i;
        }
        $first21 = ((($5)) + -48|0);
        __THREW__ = 0;
        (invoke_iii(54,($first21|0),(6106|0))|0);
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        if (!($8)) {
         $9 = HEAP32[$__end_$i>>2]|0;
         $first27 = ((($9)) + -24|0);
         $__size_$i$i$i$i$i = ((($tmp)) + 11|0);
         $10 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
         $tobool$i$i$i$i$i = ($10<<24>>24)<(0);
         $11 = HEAP32[$tmp>>2]|0;
         $cond$i$i$i$i = $tobool$i$i$i$i$i ? $11 : $tmp;
         $__size_$i3$i$i$i = ((($tmp)) + 4|0);
         $12 = HEAP32[$__size_$i3$i$i$i>>2]|0;
         $conv$i$i$i$i = $10&255;
         $cond$i$i$i = $tobool$i$i$i$i$i ? $12 : $conv$i$i$i$i;
         __THREW__ = 0;
         (invoke_iiii(47,($first27|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
         $13 = __THREW__; __THREW__ = 0;
         $14 = $13&1;
         if (!($14)) {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
          $retval$3 = $call9;
          break;
         }
        }
        $15 = ___cxa_find_matching_catch_2()|0;
        $16 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        ___resumeException($15|0);
        // unreachable;
       }
      }
     }
    } else {
     $retval$3 = $first;
    }
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i30 = 0, $__i$0$i$i$i39 = 0, $__i$0$i$i$i47 = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0;
 var $add$ptr$i = 0, $add$ptr$i25 = 0, $add$ptr$i27 = 0, $add$ptr$i57 = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i33 = 0, $arrayidx$i$i$i42 = 0, $arrayidx$i$i$i50 = 0, $arrayidx3 = 0, $call = 0, $call$i28 = 0, $call$i37 = 0, $call$i54 = 0, $call3$i$i45 = 0, $call9 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp10 = 0;
 var $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i31 = 0, $exitcond$i$i$i40 = 0, $exitcond$i$i$i48 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $expr = 0, $inc$i$i$i = 0;
 var $inc$i$i$i34 = 0, $inc$i$i$i43 = 0, $inc$i$i$i51 = 0, $incdec$ptr$i$i$i = 0, $ref$tmp = 0, $ref$tmp18 = 0, $ref$tmp19 = 0, $ref$tmp20 = 0, $ref$tmp21 = 0, $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $expr = sp + 88|0;
 $ref$tmp = sp + 64|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp18 = sp + 36|0;
 $ref$tmp19 = sp + 24|0;
 $ref$tmp20 = sp + 12|0;
 $ref$tmp21 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(114);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(99);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $call9 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp10 = ($call9|0)==($call|0);
      if ($cmp10) {
       $retval$3 = $first;
      } else {
       $__end_$i = ((($db)) + 4|0);
       $2 = HEAP32[$__end_$i>>2]|0;
       $3 = HEAP32[$db>>2]|0;
       $sub$ptr$sub$i = (($2) - ($3))|0;
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
       $cmp13 = ($sub$ptr$div$i>>>0)<(2);
       if ($cmp13) {
        $retval$3 = $first;
       } else {
        $4 = $2;
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr,$add$ptr$i);
        $5 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i25 = ((($5)) + -24|0);
        $6 = $5;
        while(1) {
         $cmp$i$i$i = ($6|0)==($add$ptr$i25|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($6)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $6 = $$pre$i;
        }
        $add$ptr$i27 = ((($5)) + -48|0);
        __THREW__ = 0;
        invoke_vii(55,($ref$tmp21|0),($add$ptr$i27|0));
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        if ($8) {
         $21 = ___cxa_find_matching_catch_2()|0;
         $22 = tempRet0;
         $ehselector$slot$4 = $22;$exn$slot$4 = $21;
        } else {
         __THREW__ = 0;
         $call$i28 = (invoke_iiii(56,($ref$tmp21|0),0,(6088|0))|0);
         $9 = __THREW__; __THREW__ = 0;
         $10 = $9&1;
         if ($10) {
          $23 = ___cxa_find_matching_catch_2()|0;
          $24 = tempRet0;
          $ehselector$slot$3 = $24;$exn$slot$3 = $23;
         } else {
          ;HEAP32[$ref$tmp20>>2]=HEAP32[$ref$tmp21>>2]|0;HEAP32[$ref$tmp20+4>>2]=HEAP32[$ref$tmp21+4>>2]|0;HEAP32[$ref$tmp20+8>>2]=HEAP32[$ref$tmp21+8>>2]|0;
          $__i$0$i$i$i = 0;
          while(1) {
           $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
           if ($exitcond$i$i$i) {
            break;
           }
           $arrayidx$i$i$i = (($ref$tmp21) + ($__i$0$i$i$i<<2)|0);
           HEAP32[$arrayidx$i$i$i>>2] = 0;
           $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
           $__i$0$i$i$i = $inc$i$i$i;
          }
          __THREW__ = 0;
          $call$i37 = (invoke_iii(54,($ref$tmp20|0),(6085|0))|0);
          $11 = __THREW__; __THREW__ = 0;
          $12 = $11&1;
          if ($12) {
           $25 = ___cxa_find_matching_catch_2()|0;
           $26 = tempRet0;
           $ehselector$slot$2 = $26;$exn$slot$2 = $25;
          } else {
           ;HEAP32[$ref$tmp19>>2]=HEAP32[$ref$tmp20>>2]|0;HEAP32[$ref$tmp19+4>>2]=HEAP32[$ref$tmp20+4>>2]|0;HEAP32[$ref$tmp19+8>>2]=HEAP32[$ref$tmp20+8>>2]|0;
           $__i$0$i$i$i30 = 0;
           while(1) {
            $exitcond$i$i$i31 = ($__i$0$i$i$i30|0)==(3);
            if ($exitcond$i$i$i31) {
             break;
            }
            $arrayidx$i$i$i33 = (($ref$tmp20) + ($__i$0$i$i$i30<<2)|0);
            HEAP32[$arrayidx$i$i$i33>>2] = 0;
            $inc$i$i$i34 = (($__i$0$i$i$i30) + 1)|0;
            $__i$0$i$i$i30 = $inc$i$i$i34;
           }
           $__size_$i$i$i$i$i = ((($expr)) + 11|0);
           $13 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($13<<24>>24)<(0);
           $14 = HEAP32[$expr>>2]|0;
           $cond$i$i$i$i = $tobool$i$i$i$i$i ? $14 : $expr;
           $__size_$i3$i$i$i = ((($expr)) + 4|0);
           $15 = HEAP32[$__size_$i3$i$i$i>>2]|0;
           $conv$i$i$i$i = $13&255;
           $cond$i$i$i = $tobool$i$i$i$i$i ? $15 : $conv$i$i$i$i;
           __THREW__ = 0;
           $call3$i$i45 = (invoke_iiii(47,($ref$tmp19|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
           $16 = __THREW__; __THREW__ = 0;
           $17 = $16&1;
           do {
            if ($17) {
             $27 = ___cxa_find_matching_catch_2()|0;
             $28 = tempRet0;
             $ehselector$slot$1 = $28;$exn$slot$1 = $27;
            } else {
             ;HEAP32[$ref$tmp18>>2]=HEAP32[$ref$tmp19>>2]|0;HEAP32[$ref$tmp18+4>>2]=HEAP32[$ref$tmp19+4>>2]|0;HEAP32[$ref$tmp18+8>>2]=HEAP32[$ref$tmp19+8>>2]|0;
             $__i$0$i$i$i39 = 0;
             while(1) {
              $exitcond$i$i$i40 = ($__i$0$i$i$i39|0)==(3);
              if ($exitcond$i$i$i40) {
               break;
              }
              $arrayidx$i$i$i42 = (($ref$tmp19) + ($__i$0$i$i$i39<<2)|0);
              HEAP32[$arrayidx$i$i$i42>>2] = 0;
              $inc$i$i$i43 = (($__i$0$i$i$i39) + 1)|0;
              $__i$0$i$i$i39 = $inc$i$i$i43;
             }
             __THREW__ = 0;
             $call$i54 = (invoke_iii(54,($ref$tmp18|0),(5836|0))|0);
             $18 = __THREW__; __THREW__ = 0;
             $19 = $18&1;
             if ($19) {
              $29 = ___cxa_find_matching_catch_2()|0;
              $30 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
              $ehselector$slot$1 = $30;$exn$slot$1 = $29;
              break;
             }
             ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp18>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp18+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp18+8>>2]|0;
             $__i$0$i$i$i47 = 0;
             while(1) {
              $exitcond$i$i$i48 = ($__i$0$i$i$i47|0)==(3);
              if ($exitcond$i$i$i48) {
               break;
              }
              $arrayidx$i$i$i50 = (($ref$tmp18) + ($__i$0$i$i$i47<<2)|0);
              HEAP32[$arrayidx$i$i$i50>>2] = 0;
              $inc$i$i$i51 = (($__i$0$i$i$i47) + 1)|0;
              $__i$0$i$i$i47 = $inc$i$i$i51;
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
             $20 = HEAP32[$__end_$i>>2]|0;
             $add$ptr$i57 = ((($20)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i57,$ref$tmp);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
             $retval$3 = $call9;
             break L1;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
           $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
          $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
         $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
        ___resumeException($exn$slot$4|0);
        // unreachable;
       }
      }
     }
    } else {
     $retval$3 = $first;
    }
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i30 = 0, $__i$0$i$i$i39 = 0, $__i$0$i$i$i47 = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr = 0;
 var $add$ptr$i = 0, $add$ptr$i25 = 0, $add$ptr$i27 = 0, $add$ptr$i57 = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i33 = 0, $arrayidx$i$i$i42 = 0, $arrayidx$i$i$i50 = 0, $arrayidx3 = 0, $call = 0, $call$i28 = 0, $call$i37 = 0, $call$i54 = 0, $call3$i$i45 = 0, $call9 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp10 = 0;
 var $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i31 = 0, $exitcond$i$i$i40 = 0, $exitcond$i$i$i48 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $expr = 0, $inc$i$i$i = 0;
 var $inc$i$i$i34 = 0, $inc$i$i$i43 = 0, $inc$i$i$i51 = 0, $incdec$ptr$i$i$i = 0, $ref$tmp = 0, $ref$tmp18 = 0, $ref$tmp19 = 0, $ref$tmp20 = 0, $ref$tmp21 = 0, $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $expr = sp + 88|0;
 $ref$tmp = sp + 64|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp18 = sp + 36|0;
 $ref$tmp19 = sp + 24|0;
 $ref$tmp20 = sp + 12|0;
 $ref$tmp21 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(115);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(99);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $call9 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp10 = ($call9|0)==($call|0);
      if ($cmp10) {
       $retval$3 = $first;
      } else {
       $__end_$i = ((($db)) + 4|0);
       $2 = HEAP32[$__end_$i>>2]|0;
       $3 = HEAP32[$db>>2]|0;
       $sub$ptr$sub$i = (($2) - ($3))|0;
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
       $cmp13 = ($sub$ptr$div$i>>>0)<(2);
       if ($cmp13) {
        $retval$3 = $first;
       } else {
        $4 = $2;
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr,$add$ptr$i);
        $5 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i25 = ((($5)) + -24|0);
        $6 = $5;
        while(1) {
         $cmp$i$i$i = ($6|0)==($add$ptr$i25|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($6)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i>>2]|0;
         $6 = $$pre$i;
        }
        $add$ptr$i27 = ((($5)) + -48|0);
        __THREW__ = 0;
        invoke_vii(55,($ref$tmp21|0),($add$ptr$i27|0));
        $7 = __THREW__; __THREW__ = 0;
        $8 = $7&1;
        if ($8) {
         $21 = ___cxa_find_matching_catch_2()|0;
         $22 = tempRet0;
         $ehselector$slot$4 = $22;$exn$slot$4 = $21;
        } else {
         __THREW__ = 0;
         $call$i28 = (invoke_iiii(56,($ref$tmp21|0),0,(6072|0))|0);
         $9 = __THREW__; __THREW__ = 0;
         $10 = $9&1;
         if ($10) {
          $23 = ___cxa_find_matching_catch_2()|0;
          $24 = tempRet0;
          $ehselector$slot$3 = $24;$exn$slot$3 = $23;
         } else {
          ;HEAP32[$ref$tmp20>>2]=HEAP32[$ref$tmp21>>2]|0;HEAP32[$ref$tmp20+4>>2]=HEAP32[$ref$tmp21+4>>2]|0;HEAP32[$ref$tmp20+8>>2]=HEAP32[$ref$tmp21+8>>2]|0;
          $__i$0$i$i$i = 0;
          while(1) {
           $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
           if ($exitcond$i$i$i) {
            break;
           }
           $arrayidx$i$i$i = (($ref$tmp21) + ($__i$0$i$i$i<<2)|0);
           HEAP32[$arrayidx$i$i$i>>2] = 0;
           $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
           $__i$0$i$i$i = $inc$i$i$i;
          }
          __THREW__ = 0;
          $call$i37 = (invoke_iii(54,($ref$tmp20|0),(6085|0))|0);
          $11 = __THREW__; __THREW__ = 0;
          $12 = $11&1;
          if ($12) {
           $25 = ___cxa_find_matching_catch_2()|0;
           $26 = tempRet0;
           $ehselector$slot$2 = $26;$exn$slot$2 = $25;
          } else {
           ;HEAP32[$ref$tmp19>>2]=HEAP32[$ref$tmp20>>2]|0;HEAP32[$ref$tmp19+4>>2]=HEAP32[$ref$tmp20+4>>2]|0;HEAP32[$ref$tmp19+8>>2]=HEAP32[$ref$tmp20+8>>2]|0;
           $__i$0$i$i$i30 = 0;
           while(1) {
            $exitcond$i$i$i31 = ($__i$0$i$i$i30|0)==(3);
            if ($exitcond$i$i$i31) {
             break;
            }
            $arrayidx$i$i$i33 = (($ref$tmp20) + ($__i$0$i$i$i30<<2)|0);
            HEAP32[$arrayidx$i$i$i33>>2] = 0;
            $inc$i$i$i34 = (($__i$0$i$i$i30) + 1)|0;
            $__i$0$i$i$i30 = $inc$i$i$i34;
           }
           $__size_$i$i$i$i$i = ((($expr)) + 11|0);
           $13 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($13<<24>>24)<(0);
           $14 = HEAP32[$expr>>2]|0;
           $cond$i$i$i$i = $tobool$i$i$i$i$i ? $14 : $expr;
           $__size_$i3$i$i$i = ((($expr)) + 4|0);
           $15 = HEAP32[$__size_$i3$i$i$i>>2]|0;
           $conv$i$i$i$i = $13&255;
           $cond$i$i$i = $tobool$i$i$i$i$i ? $15 : $conv$i$i$i$i;
           __THREW__ = 0;
           $call3$i$i45 = (invoke_iiii(47,($ref$tmp19|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
           $16 = __THREW__; __THREW__ = 0;
           $17 = $16&1;
           do {
            if ($17) {
             $27 = ___cxa_find_matching_catch_2()|0;
             $28 = tempRet0;
             $ehselector$slot$1 = $28;$exn$slot$1 = $27;
            } else {
             ;HEAP32[$ref$tmp18>>2]=HEAP32[$ref$tmp19>>2]|0;HEAP32[$ref$tmp18+4>>2]=HEAP32[$ref$tmp19+4>>2]|0;HEAP32[$ref$tmp18+8>>2]=HEAP32[$ref$tmp19+8>>2]|0;
             $__i$0$i$i$i39 = 0;
             while(1) {
              $exitcond$i$i$i40 = ($__i$0$i$i$i39|0)==(3);
              if ($exitcond$i$i$i40) {
               break;
              }
              $arrayidx$i$i$i42 = (($ref$tmp19) + ($__i$0$i$i$i39<<2)|0);
              HEAP32[$arrayidx$i$i$i42>>2] = 0;
              $inc$i$i$i43 = (($__i$0$i$i$i39) + 1)|0;
              $__i$0$i$i$i39 = $inc$i$i$i43;
             }
             __THREW__ = 0;
             $call$i54 = (invoke_iii(54,($ref$tmp18|0),(5836|0))|0);
             $18 = __THREW__; __THREW__ = 0;
             $19 = $18&1;
             if ($19) {
              $29 = ___cxa_find_matching_catch_2()|0;
              $30 = tempRet0;
              __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
              $ehselector$slot$1 = $30;$exn$slot$1 = $29;
              break;
             }
             ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp18>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp18+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp18+8>>2]|0;
             $__i$0$i$i$i47 = 0;
             while(1) {
              $exitcond$i$i$i48 = ($__i$0$i$i$i47|0)==(3);
              if ($exitcond$i$i$i48) {
               break;
              }
              $arrayidx$i$i$i50 = (($ref$tmp18) + ($__i$0$i$i$i47<<2)|0);
              HEAP32[$arrayidx$i$i$i50>>2] = 0;
              $inc$i$i$i51 = (($__i$0$i$i$i47) + 1)|0;
              $__i$0$i$i$i47 = $inc$i$i$i51;
             }
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
             $20 = HEAP32[$__end_$i>>2]|0;
             $add$ptr$i57 = ((($20)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i57,$ref$tmp);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp18);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
             $retval$3 = $call9;
             break L1;
            }
           } while(0);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp19);
           $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp20);
          $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
         $ehselector$slot$4 = $ehselector$slot$3;$exn$slot$4 = $exn$slot$3;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr);
        ___resumeException($exn$slot$4|0);
        // unreachable;
       }
      }
     }
    } else {
     $retval$3 = $first;
    }
   } else {
    $retval$3 = $first;
   }
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $add$ptr = 0, $arrayidx3 = 0, $call = 0, $cmp = 0, $cmp1 = 0, $cmp5 = 0, $cmp7 = 0, $first$addr$1 = 0, $first$call = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 if ($cmp) {
  $0 = HEAP8[$first>>0]|0;
  $cmp1 = ($0<<24>>24)==(115);
  if ($cmp1) {
   $arrayidx3 = ((($first)) + 1|0);
   $1 = HEAP8[$arrayidx3>>0]|0;
   $cmp5 = ($1<<24>>24)==(112);
   if ($cmp5) {
    $add$ptr = ((($first)) + 2|0);
    $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
    $cmp7 = ($call|0)==($add$ptr|0);
    $first$call = $cmp7 ? $first : $call;
    $first$addr$1 = $first$call;
   } else {
    $first$addr$1 = $first;
   }
  } else {
   $first$addr$1 = $first;
  }
 } else {
  $first$addr$1 = $first;
 }
 return ($first$addr$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i17 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i26 = 0, $agg$tmp = 0;
 var $arrayidx$i$i$i = 0, $arrayidx$i$i$i20 = 0, $arrayidx3 = 0, $call = 0, $call$i15 = 0, $call$i24 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp5 = 0, $cmp7 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i18 = 0, $exn$slot$1 = 0, $inc$i$i$i = 0, $inc$i$i$i21 = 0, $ref$tmp = 0, $ref$tmp11 = 0, $ref$tmp12 = 0;
 var $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp = sp + 40|0;
 $agg$tmp = sp + 24|0;
 $ref$tmp11 = sp + 12|0;
 $ref$tmp12 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(115);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(116);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$1 = $first;
     } else {
      $2 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($2|0)==($3|0);
      if ($cmp$i) {
       $retval$1 = $first;
      } else {
       $add$ptr$i = ((($3)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp12,$add$ptr$i);
       __THREW__ = 0;
       $call$i15 = (invoke_iiii(56,($ref$tmp12|0),0,(6063|0))|0);
       $4 = __THREW__; __THREW__ = 0;
       $5 = $4&1;
       do {
        if ($5) {
         $9 = ___cxa_find_matching_catch_2()|0;
         $10 = tempRet0;
         $ehselector$slot$1 = $10;$exn$slot$1 = $9;
        } else {
         ;HEAP32[$ref$tmp11>>2]=HEAP32[$ref$tmp12>>2]|0;HEAP32[$ref$tmp11+4>>2]=HEAP32[$ref$tmp12+4>>2]|0;HEAP32[$ref$tmp11+8>>2]=HEAP32[$ref$tmp12+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp12) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         __THREW__ = 0;
         $call$i24 = (invoke_iii(54,($ref$tmp11|0),(5836|0))|0);
         $6 = __THREW__; __THREW__ = 0;
         $7 = $6&1;
         if ($7) {
          $11 = ___cxa_find_matching_catch_2()|0;
          $12 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
          $ehselector$slot$1 = $12;$exn$slot$1 = $11;
          break;
         }
         ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp11>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp11+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp11+8>>2]|0;
         $__i$0$i$i$i17 = 0;
         while(1) {
          $exitcond$i$i$i18 = ($__i$0$i$i$i17|0)==(3);
          if ($exitcond$i$i$i18) {
           break;
          }
          $arrayidx$i$i$i20 = (($ref$tmp11) + ($__i$0$i$i$i17<<2)|0);
          HEAP32[$arrayidx$i$i$i20>>2] = 0;
          $inc$i$i$i21 = (($__i$0$i$i$i17) + 1)|0;
          $__i$0$i$i$i17 = $inc$i$i$i21;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
         $8 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i26 = ((($8)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i26,$ref$tmp);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
         $retval$1 = $call;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
       ___resumeException($exn$slot$1|0);
       // unreachable;
      }
     }
    } else {
     $retval$1 = $first;
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i17 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i26 = 0, $agg$tmp = 0;
 var $arrayidx$i$i$i = 0, $arrayidx$i$i$i20 = 0, $arrayidx3 = 0, $call = 0, $call$i15 = 0, $call$i24 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp5 = 0, $cmp7 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i18 = 0, $exn$slot$1 = 0, $inc$i$i$i = 0, $inc$i$i$i21 = 0, $ref$tmp = 0, $ref$tmp11 = 0, $ref$tmp12 = 0;
 var $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp = sp + 40|0;
 $agg$tmp = sp + 24|0;
 $ref$tmp11 = sp + 12|0;
 $ref$tmp12 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(115);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(122);
    if ($cmp5) {
     $add$ptr = ((($first)) + 2|0);
     $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp7 = ($call|0)==($add$ptr|0);
     if ($cmp7) {
      $retval$1 = $first;
     } else {
      $2 = HEAP32[$db>>2]|0;
      $__end_$i = ((($db)) + 4|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $cmp$i = ($2|0)==($3|0);
      if ($cmp$i) {
       $retval$1 = $first;
      } else {
       $add$ptr$i = ((($3)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp12,$add$ptr$i);
       __THREW__ = 0;
       $call$i15 = (invoke_iiii(56,($ref$tmp12|0),0,(6063|0))|0);
       $4 = __THREW__; __THREW__ = 0;
       $5 = $4&1;
       do {
        if ($5) {
         $9 = ___cxa_find_matching_catch_2()|0;
         $10 = tempRet0;
         $ehselector$slot$1 = $10;$exn$slot$1 = $9;
        } else {
         ;HEAP32[$ref$tmp11>>2]=HEAP32[$ref$tmp12>>2]|0;HEAP32[$ref$tmp11+4>>2]=HEAP32[$ref$tmp12+4>>2]|0;HEAP32[$ref$tmp11+8>>2]=HEAP32[$ref$tmp12+8>>2]|0;
         $__i$0$i$i$i = 0;
         while(1) {
          $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
          if ($exitcond$i$i$i) {
           break;
          }
          $arrayidx$i$i$i = (($ref$tmp12) + ($__i$0$i$i$i<<2)|0);
          HEAP32[$arrayidx$i$i$i>>2] = 0;
          $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
          $__i$0$i$i$i = $inc$i$i$i;
         }
         __THREW__ = 0;
         $call$i24 = (invoke_iii(54,($ref$tmp11|0),(5836|0))|0);
         $6 = __THREW__; __THREW__ = 0;
         $7 = $6&1;
         if ($7) {
          $11 = ___cxa_find_matching_catch_2()|0;
          $12 = tempRet0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
          $ehselector$slot$1 = $12;$exn$slot$1 = $11;
          break;
         }
         ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp11>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp11+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp11+8>>2]|0;
         $__i$0$i$i$i17 = 0;
         while(1) {
          $exitcond$i$i$i18 = ($__i$0$i$i$i17|0)==(3);
          if ($exitcond$i$i$i18) {
           break;
          }
          $arrayidx$i$i$i20 = (($ref$tmp11) + ($__i$0$i$i$i17<<2)|0);
          HEAP32[$arrayidx$i$i$i20>>2] = 0;
          $inc$i$i$i21 = (($__i$0$i$i$i17) + 1)|0;
          $__i$0$i$i$i17 = $inc$i$i$i21;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
         $8 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i26 = ((($8)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i26,$ref$tmp);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
         $retval$1 = $call;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp12);
       ___resumeException($exn$slot$1|0);
       // unreachable;
      }
     }
    } else {
     $retval$1 = $first;
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__first_$i$i$i$i = 0, $__i$0$i$i = 0, $__i$0$i$i$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i40 = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i45 = 0, $add$ptr$i = 0, $agg$tmp = 0, $arrayidx$i = 0;
 var $arrayidx$i$i = 0, $arrayidx$i$i$i = 0, $arrayidx$i36 = 0, $arrayidx3 = 0, $arrayidx7 = 0, $call$i = 0, $call$i3738 = 0, $call10 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp14 = 0, $cmp17 = 0, $cmp25 = 0, $cmp47 = 0, $cmp5 = 0, $cmp9 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0;
 var $cond$i$i$i$i44 = 0, $cond$i$i$i47 = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i46 = 0, $dec = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $exitcond$i$i = 0, $exitcond$i$i$i = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $first$addr$1 = 0, $inc$i$i = 0, $inc$i$i$i = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0;
 var $k$0 = 0, $k$0$in = 0, $k1$0 = 0, $ref$tmp = 0, $ref$tmp26 = 0, $ref$tmp27 = 0, $ref$tmp54 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i33 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i32 = 0, $tmp = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i41 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $tmp = sp + 76|0;
 $ref$tmp = sp + 64|0;
 $ref$tmp26 = sp + 52|0;
 $ref$tmp27 = sp + 40|0;
 $ref$tmp54 = sp + 16|0;
 $agg$tmp = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(115);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(90);
    if ($cmp5) {
     $arrayidx7 = ((($first)) + 2|0);
     $2 = HEAP8[$arrayidx7>>0]|0;
     $cmp9 = ($2<<24>>24)==(84);
     if ($cmp9) {
      $__end_$i = ((($db)) + 4|0);
      $3 = HEAP32[$__end_$i>>2]|0;
      $4 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i = (($3) - ($4))|0;
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
      $call10 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($arrayidx7,$last,$db)|0);
      $5 = HEAP32[$__end_$i>>2]|0;
      $6 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i32 = (($5) - ($6))|0;
      $sub$ptr$div$i33 = (($sub$ptr$sub$i32|0) / 24)&-1;
      $cmp14 = ($call10|0)==($arrayidx7|0);
      if ($cmp14) {
       $first$addr$1 = $first;
      } else {
       ;HEAP32[$tmp>>2]=0|0;HEAP32[$tmp+4>>2]=0|0;HEAP32[$tmp+8>>2]=0|0;
       $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc(6049)|0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($tmp,6049,$call$i);
       $cmp17 = ($sub$ptr$div$i|0)==($sub$ptr$div$i33|0);
       L7: do {
        if ($cmp17) {
         label = 26;
        } else {
         $7 = HEAP32[$db>>2]|0;
         $arrayidx$i = (($7) + (($sub$ptr$div$i*24)|0)|0);
         __THREW__ = 0;
         invoke_vii(55,($ref$tmp|0),($arrayidx$i|0));
         $8 = __THREW__; __THREW__ = 0;
         $9 = $8&1;
         do {
          if ($9) {
           $25 = ___cxa_find_matching_catch_2()|0;
           $26 = tempRet0;
           $ehselector$slot$0 = $26;$exn$slot$0 = $25;
          } else {
           $__size_$i$i$i$i$i = ((($ref$tmp)) + 11|0);
           $10 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($10<<24>>24)<(0);
           $11 = HEAP32[$ref$tmp>>2]|0;
           $cond$i$i$i$i = $tobool$i$i$i$i$i ? $11 : $ref$tmp;
           $__size_$i3$i$i$i = ((($ref$tmp)) + 4|0);
           $12 = HEAP32[$__size_$i3$i$i$i>>2]|0;
           $conv$i$i$i$i = $10&255;
           $cond$i$i$i = $tobool$i$i$i$i$i ? $12 : $conv$i$i$i$i;
           __THREW__ = 0;
           (invoke_iiii(47,($tmp|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
           $13 = __THREW__; __THREW__ = 0;
           $14 = $13&1;
           if ($14) {
            $27 = ___cxa_find_matching_catch_2()|0;
            $28 = tempRet0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
            $ehselector$slot$0 = $28;$exn$slot$0 = $27;
            break;
           }
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
           $__size_$i$i$i$i$i40 = ((($ref$tmp26)) + 11|0);
           $__size_$i3$i$i$i45 = ((($ref$tmp26)) + 4|0);
           $k$0$in = $sub$ptr$div$i;
           while(1) {
            $k$0 = (($k$0$in) + 1)|0;
            $cmp25 = ($k$0|0)==($sub$ptr$div$i33|0);
            if ($cmp25) {
             label = 26;
             break L7;
            }
            $15 = HEAP32[$db>>2]|0;
            $arrayidx$i36 = (($15) + (($k$0*24)|0)|0);
            __THREW__ = 0;
            invoke_vii(55,($ref$tmp27|0),($arrayidx$i36|0));
            $16 = __THREW__; __THREW__ = 0;
            $17 = $16&1;
            if ($17) {
             label = 21;
             break;
            }
            __THREW__ = 0;
            $call$i3738 = (invoke_iiii(56,($ref$tmp27|0),0,(6060|0))|0);
            $18 = __THREW__; __THREW__ = 0;
            $19 = $18&1;
            if ($19) {
             label = 22;
             break;
            }
            ;HEAP32[$ref$tmp26>>2]=HEAP32[$ref$tmp27>>2]|0;HEAP32[$ref$tmp26+4>>2]=HEAP32[$ref$tmp27+4>>2]|0;HEAP32[$ref$tmp26+8>>2]=HEAP32[$ref$tmp27+8>>2]|0;
            $__i$0$i$i$i = 0;
            while(1) {
             $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
             if ($exitcond$i$i$i) {
              break;
             }
             $arrayidx$i$i$i = (($ref$tmp27) + ($__i$0$i$i$i<<2)|0);
             HEAP32[$arrayidx$i$i$i>>2] = 0;
             $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
             $__i$0$i$i$i = $inc$i$i$i;
            }
            $20 = HEAP8[$__size_$i$i$i$i$i40>>0]|0;
            $tobool$i$i$i$i$i41 = ($20<<24>>24)<(0);
            $21 = HEAP32[$ref$tmp26>>2]|0;
            $cond$i$i$i$i44 = $tobool$i$i$i$i$i41 ? $21 : $ref$tmp26;
            $22 = HEAP32[$__size_$i3$i$i$i45>>2]|0;
            $conv$i$i$i$i46 = $20&255;
            $cond$i$i$i47 = $tobool$i$i$i$i$i41 ? $22 : $conv$i$i$i$i46;
            __THREW__ = 0;
            (invoke_iiii(47,($tmp|0),($cond$i$i$i$i44|0),($cond$i$i$i47|0))|0);
            $23 = __THREW__; __THREW__ = 0;
            $24 = $23&1;
            if ($24) {
             label = 23;
             break;
            }
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp26);
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp27);
            $k$0$in = $k$0;
           }
           if ((label|0) == 21) {
            $29 = ___cxa_find_matching_catch_2()|0;
            $30 = tempRet0;
            $ehselector$slot$2 = $30;$exn$slot$2 = $29;
           }
           else if ((label|0) == 22) {
            $31 = ___cxa_find_matching_catch_2()|0;
            $32 = tempRet0;
            $ehselector$slot$1 = $32;$exn$slot$1 = $31;
            label = 24;
           }
           else if ((label|0) == 23) {
            $33 = ___cxa_find_matching_catch_2()|0;
            $34 = tempRet0;
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp26);
            $ehselector$slot$1 = $34;$exn$slot$1 = $33;
            label = 24;
           }
           if ((label|0) == 24) {
            __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp27);
            $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
           }
           $ehselector$slot$3 = $ehselector$slot$2;$exn$slot$3 = $exn$slot$2;
           break L7;
          }
         } while(0);
         $ehselector$slot$3 = $ehselector$slot$0;$exn$slot$3 = $exn$slot$0;
        }
       } while(0);
       do {
        if ((label|0) == 26) {
         __THREW__ = 0;
         (invoke_iii(54,($tmp|0),(5836|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          $39 = ___cxa_find_matching_catch_2()|0;
          $40 = tempRet0;
          $ehselector$slot$3 = $40;$exn$slot$3 = $39;
          break;
         } else {
          $k1$0 = $sub$ptr$div$i33;
         }
         while(1) {
          $cmp47 = ($k1$0|0)==($sub$ptr$div$i|0);
          if ($cmp47) {
           break;
          }
          $37 = HEAP32[$__end_$i>>2]|0;
          $add$ptr$i = ((($37)) + -24|0);
          $38 = $37;
          while(1) {
           $cmp$i$i$i = ($38|0)==($add$ptr$i|0);
           if ($cmp$i$i$i) {
            break;
           }
           $incdec$ptr$i$i$i = ((($38)) + -24|0);
           HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
           $$pre$i = HEAP32[$__end_$i>>2]|0;
           $38 = $$pre$i;
          }
          $dec = (($k1$0) + -1)|0;
          $k1$0 = $dec;
         }
         ;HEAP32[$agg$tmp>>2]=HEAP32[$tmp>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$tmp+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$tmp+8>>2]|0;
         $__i$0$i$i = 0;
         while(1) {
          $exitcond$i$i = ($__i$0$i$i|0)==(3);
          if ($exitcond$i$i) {
           break;
          }
          $arrayidx$i$i = (($tmp) + ($__i$0$i$i<<2)|0);
          HEAP32[$arrayidx$i$i>>2] = 0;
          $inc$i$i = (($__i$0$i$i) + 1)|0;
          $__i$0$i$i = $inc$i$i;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp54,$agg$tmp);
         $41 = HEAP32[$__end_$i>>2]|0;
         $__first_$i$i$i$i = ((($db)) + 8|0);
         $42 = HEAP32[$__first_$i$i$i$i>>2]|0;
         $cmp$i = ($41>>>0)<($42>>>0);
         if ($cmp$i) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($41,$ref$tmp54);
          $43 = HEAP32[$__end_$i>>2]|0;
          $incdec$ptr$i = ((($43)) + 24|0);
          HEAP32[$__end_$i>>2] = $incdec$ptr$i;
         } else {
          __THREW__ = 0;
          invoke_vii(64,($db|0),($ref$tmp54|0));
          $44 = __THREW__; __THREW__ = 0;
          $45 = $44&1;
          if ($45) {
           $46 = ___cxa_find_matching_catch_2()|0;
           $47 = tempRet0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp54);
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
           $ehselector$slot$3 = $47;$exn$slot$3 = $46;
           break;
          }
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp54);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
         $first$addr$1 = $call10;
         break L1;
        }
       } while(0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
       ___resumeException($exn$slot$3|0);
       // unreachable;
      }
     } else {
      $first$addr$1 = $first;
     }
    } else {
     $first$addr$1 = $first;
    }
   } else {
    $first$addr$1 = $first;
   }
  } else {
   $first$addr$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($first$addr$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i18 = 0, $add$ptr$i = 0, $add$ptr$i27 = 0, $agg$tmp = 0;
 var $arrayidx$i$i$i = 0, $arrayidx$i$i$i21 = 0, $arrayidx3 = 0, $arrayidx7 = 0, $call = 0, $call$i16 = 0, $call$i25 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp11 = 0, $cmp5 = 0, $cmp9 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i19 = 0, $exn$slot$1 = 0, $inc$i$i$i = 0, $inc$i$i$i22 = 0, $ref$tmp = 0;
 var $ref$tmp15 = 0, $ref$tmp16 = 0, $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp = sp + 40|0;
 $agg$tmp = sp + 24|0;
 $ref$tmp15 = sp + 12|0;
 $ref$tmp16 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(115);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    $cmp5 = ($1<<24>>24)==(90);
    if ($cmp5) {
     $arrayidx7 = ((($first)) + 2|0);
     $2 = HEAP8[$arrayidx7>>0]|0;
     $cmp9 = ($2<<24>>24)==(102);
     if ($cmp9) {
      $call = (__ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($arrayidx7,$last,$db)|0);
      $cmp11 = ($call|0)==($arrayidx7|0);
      if ($cmp11) {
       $retval$1 = $first;
      } else {
       $3 = HEAP32[$db>>2]|0;
       $__end_$i = ((($db)) + 4|0);
       $4 = HEAP32[$__end_$i>>2]|0;
       $cmp$i = ($3|0)==($4|0);
       if ($cmp$i) {
        $retval$1 = $first;
       } else {
        $add$ptr$i = ((($4)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp16,$add$ptr$i);
        __THREW__ = 0;
        $call$i16 = (invoke_iiii(56,($ref$tmp16|0),0,(6049|0))|0);
        $5 = __THREW__; __THREW__ = 0;
        $6 = $5&1;
        do {
         if ($6) {
          $10 = ___cxa_find_matching_catch_2()|0;
          $11 = tempRet0;
          $ehselector$slot$1 = $11;$exn$slot$1 = $10;
         } else {
          ;HEAP32[$ref$tmp15>>2]=HEAP32[$ref$tmp16>>2]|0;HEAP32[$ref$tmp15+4>>2]=HEAP32[$ref$tmp16+4>>2]|0;HEAP32[$ref$tmp15+8>>2]=HEAP32[$ref$tmp16+8>>2]|0;
          $__i$0$i$i$i = 0;
          while(1) {
           $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
           if ($exitcond$i$i$i) {
            break;
           }
           $arrayidx$i$i$i = (($ref$tmp16) + ($__i$0$i$i$i<<2)|0);
           HEAP32[$arrayidx$i$i$i>>2] = 0;
           $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
           $__i$0$i$i$i = $inc$i$i$i;
          }
          __THREW__ = 0;
          $call$i25 = (invoke_iii(54,($ref$tmp15|0),(5836|0))|0);
          $7 = __THREW__; __THREW__ = 0;
          $8 = $7&1;
          if ($8) {
           $12 = ___cxa_find_matching_catch_2()|0;
           $13 = tempRet0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp15);
           $ehselector$slot$1 = $13;$exn$slot$1 = $12;
           break;
          }
          ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp15>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp15+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp15+8>>2]|0;
          $__i$0$i$i$i18 = 0;
          while(1) {
           $exitcond$i$i$i19 = ($__i$0$i$i$i18|0)==(3);
           if ($exitcond$i$i$i19) {
            break;
           }
           $arrayidx$i$i$i21 = (($ref$tmp15) + ($__i$0$i$i$i18<<2)|0);
           HEAP32[$arrayidx$i$i$i21>>2] = 0;
           $inc$i$i$i22 = (($__i$0$i$i$i18) + 1)|0;
           $__i$0$i$i$i18 = $inc$i$i$i22;
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
          $9 = HEAP32[$__end_$i>>2]|0;
          $add$ptr$i27 = ((($9)) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i27,$ref$tmp);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp15);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp16);
          $retval$1 = $call;
          break L1;
         }
        } while(0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp16);
        ___resumeException($exn$slot$1|0);
        // unreachable;
       }
      }
     } else {
      $retval$1 = $first;
     }
    } else {
     $retval$1 = $first;
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i19 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i28 = 0, $agg$tmp = 0;
 var $arrayidx$i$i$i = 0, $arrayidx$i$i$i22 = 0, $arrayidx3 = 0, $call = 0, $call$i17 = 0, $call$i26 = 0, $call14 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp16 = 0, $cmp5 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i20 = 0, $exn$slot$1 = 0, $inc$i$i$i = 0, $inc$i$i$i23 = 0, $ref$tmp = 0, $ref$tmp21 = 0;
 var $ref$tmp22 = 0, $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp = sp + 40|0;
 $agg$tmp = sp + 24|0;
 $ref$tmp21 = sp + 12|0;
 $ref$tmp22 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(116);
   if ($cmp1) {
    $arrayidx3 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx3>>0]|0;
    switch ($1<<24>>24) {
    case 101: case 105:  {
     break;
    }
    default: {
     $retval$1 = $first;
     break L1;
    }
    }
    $cmp5 = ($1<<24>>24)==(101);
    $add$ptr = ((($first)) + 2|0);
    if ($cmp5) {
     $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $t$0 = $call;
    } else {
     $call14 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $t$0 = $call14;
    }
    $cmp16 = ($t$0|0)==($add$ptr|0);
    if ($cmp16) {
     $retval$1 = $first;
    } else {
     $2 = HEAP32[$db>>2]|0;
     $__end_$i = ((($db)) + 4|0);
     $3 = HEAP32[$__end_$i>>2]|0;
     $cmp$i = ($2|0)==($3|0);
     if ($cmp$i) {
      $retval$1 = $first;
     } else {
      $add$ptr$i = ((($3)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp22,$add$ptr$i);
      __THREW__ = 0;
      $call$i17 = (invoke_iiii(56,($ref$tmp22|0),0,(6041|0))|0);
      $4 = __THREW__; __THREW__ = 0;
      $5 = $4&1;
      do {
       if ($5) {
        $9 = ___cxa_find_matching_catch_2()|0;
        $10 = tempRet0;
        $ehselector$slot$1 = $10;$exn$slot$1 = $9;
       } else {
        ;HEAP32[$ref$tmp21>>2]=HEAP32[$ref$tmp22>>2]|0;HEAP32[$ref$tmp21+4>>2]=HEAP32[$ref$tmp22+4>>2]|0;HEAP32[$ref$tmp21+8>>2]=HEAP32[$ref$tmp22+8>>2]|0;
        $__i$0$i$i$i = 0;
        while(1) {
         $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
         if ($exitcond$i$i$i) {
          break;
         }
         $arrayidx$i$i$i = (($ref$tmp22) + ($__i$0$i$i$i<<2)|0);
         HEAP32[$arrayidx$i$i$i>>2] = 0;
         $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
         $__i$0$i$i$i = $inc$i$i$i;
        }
        __THREW__ = 0;
        $call$i26 = (invoke_iii(54,($ref$tmp21|0),(5836|0))|0);
        $6 = __THREW__; __THREW__ = 0;
        $7 = $6&1;
        if ($7) {
         $11 = ___cxa_find_matching_catch_2()|0;
         $12 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
         $ehselector$slot$1 = $12;$exn$slot$1 = $11;
         break;
        }
        ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp21>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp21+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp21+8>>2]|0;
        $__i$0$i$i$i19 = 0;
        while(1) {
         $exitcond$i$i$i20 = ($__i$0$i$i$i19|0)==(3);
         if ($exitcond$i$i$i20) {
          break;
         }
         $arrayidx$i$i$i22 = (($ref$tmp21) + ($__i$0$i$i$i19<<2)|0);
         HEAP32[$arrayidx$i$i$i22>>2] = 0;
         $inc$i$i$i23 = (($__i$0$i$i$i19) + 1)|0;
         $__i$0$i$i$i19 = $inc$i$i$i23;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
        $8 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i28 = ((($8)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i28,$ref$tmp);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp21);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp22);
        $retval$1 = $t$0;
        break L1;
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp22);
      ___resumeException($exn$slot$1|0);
      // unreachable;
     }
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,5);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__end_$i = 0, $__i$0$i$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i17 = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $arrayidx3 = 0, $call = 0, $call$i15 = 0, $cmp = 0;
 var $cmp$i = 0, $cmp1 = 0, $cmp5 = 0, $cmp7 = 0, $exitcond$i$i$i = 0, $inc$i$i$i = 0, $ref$tmp = 0, $ref$tmp11 = 0, $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $ref$tmp = sp + 24|0;
 $agg$tmp = sp + 12|0;
 $ref$tmp11 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 if ($cmp) {
  $0 = HEAP8[$first>>0]|0;
  $cmp1 = ($0<<24>>24)==(116);
  if ($cmp1) {
   $arrayidx3 = ((($first)) + 1|0);
   $1 = HEAP8[$arrayidx3>>0]|0;
   $cmp5 = ($1<<24>>24)==(119);
   if ($cmp5) {
    $add$ptr = ((($first)) + 2|0);
    $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
    $cmp7 = ($call|0)==($add$ptr|0);
    if ($cmp7) {
     $retval$1 = $first;
    } else {
     $2 = HEAP32[$db>>2]|0;
     $__end_$i = ((($db)) + 4|0);
     $3 = HEAP32[$__end_$i>>2]|0;
     $cmp$i = ($2|0)==($3|0);
     if ($cmp$i) {
      $retval$1 = $first;
     } else {
      $add$ptr$i = ((($3)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($ref$tmp11,$add$ptr$i);
      __THREW__ = 0;
      $call$i15 = (invoke_iiii(56,($ref$tmp11|0),0,(6034|0))|0);
      $4 = __THREW__; __THREW__ = 0;
      $5 = $4&1;
      if ($5) {
       $7 = ___cxa_find_matching_catch_2()|0;
       $8 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
       ___resumeException($7|0);
       // unreachable;
      }
      ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp11>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp11+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp11+8>>2]|0;
      $__i$0$i$i$i = 0;
      while(1) {
       $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
       if ($exitcond$i$i$i) {
        break;
       }
       $arrayidx$i$i$i = (($ref$tmp11) + ($__i$0$i$i$i<<2)|0);
       HEAP32[$arrayidx$i$i$i>>2] = 0;
       $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
       $__i$0$i$i$i = $inc$i$i$i;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
      $6 = HEAP32[$__end_$i>>2]|0;
      $add$ptr$i17 = ((($6)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($add$ptr$i17,$ref$tmp);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp11);
      $retval$1 = $call;
     }
    }
   } else {
    $retval$1 = $first;
   }
  } else {
   $retval$1 = $first;
  }
 } else {
  $retval$1 = $first;
 }
 STACKTOP = sp;return ($retval$1|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZNSt3__211char_traitsIcE6lengthEPKc($__s)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this,$__s,$call);
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__cap_$i$i = 0, $__size_$i$i = 0, $__size_$i2$i = 0, $__size_$i3$i = 0, $and$i$i = 0, $arrayidx = 0, $cmp = 0, $cond$i = 0, $cond$i11 = 0, $cond$i5 = 0, $conv$i$i = 0, $conv$i$i15 = 0, $phitmp$i = 0, $ref$tmp = 0, $sub = 0;
 var $tobool$i$i = 0, $tobool$i$i14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__cap_$i$i = ((($this)) + 8|0);
  $1 = HEAP32[$__cap_$i$i>>2]|0;
  $and$i$i = $1 & 2147483647;
  $phitmp$i = (($and$i$i) + -1)|0;
  $cond$i = $phitmp$i;
 } else {
  $cond$i = 10;
 }
 $cmp = ($cond$i>>>0)<($__n>>>0);
 do {
  if ($cmp) {
   if ($tobool$i$i) {
    $__size_$i3$i = ((($this)) + 4|0);
    $4 = HEAP32[$__size_$i3$i>>2]|0;
    $cond$i11 = $4;
   } else {
    $conv$i$i = $0&255;
    $cond$i11 = $conv$i$i;
   }
   $sub = (($__n) - ($cond$i))|0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$cond$i,$sub,$cond$i11,0,$cond$i11,$__n,$__s);
  } else {
   if ($tobool$i$i) {
    $2 = HEAP32[$this>>2]|0;
    $cond$i5 = $2;
   } else {
    $cond$i5 = $this;
   }
   (__ZNSt3__211char_traitsIcE4moveEPcPKcj($cond$i5,$__s,$__n)|0);
   $arrayidx = (($cond$i5) + ($__n)|0);
   HEAP8[$ref$tmp>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp);
   $3 = HEAP8[$__size_$i$i>>0]|0;
   $tobool$i$i14 = ($3<<24>>24)<(0);
   if ($tobool$i$i14) {
    $__size_$i2$i = ((($this)) + 4|0);
    HEAP32[$__size_$i2$i>>2] = $__n;
    break;
   } else {
    $conv$i$i15 = $__n&255;
    HEAP8[$__size_$i$i>>0] = $conv$i$i15;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i67 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i57 = 0, $__size_$i$i$i$i$i = 0, $__size_$i$i$i$i$i73 = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i78 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i53 = 0, $add$ptr$i61 = 0, $add$ptr$i63 = 0, $args = 0;
 var $args58 = 0, $arrayidx5 = 0, $call = 0, $call16 = 0, $call36 = 0, $call44 = 0, $call47 = 0, $call50 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp$i$i$i64 = 0, $cmp1 = 0, $cmp14 = 0, $cmp17 = 0, $cmp20 = 0, $cmp38 = 0, $cmp45 = 0, $cmp48 = 0, $cmp51 = 0, $cmp55 = 0;
 var $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i77 = 0, $cond$i$i$i80 = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i79 = 0, $ehselector$slot$0 = 0, $exn$slot$0 = 0, $first$call36 = 0, $first29 = 0, $first68 = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i66 = 0, $retval$2 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i59 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0;
 var $sub$ptr$sub$i = 0, $sub$ptr$sub$i58 = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i74 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $args = sp + 12|0;
 $args58 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(111);
   L3: do {
    switch ($0<<24>>24) {
    case 100: case 111:  {
     $arrayidx5 = ((($first)) + 1|0);
     $1 = HEAP8[$arrayidx5>>0]|0;
     $cmp7 = ($1<<24>>24)==(110);
     if ($cmp7) {
      $add$ptr = ((($first)) + 2|0);
      if (!($cmp1)) {
       $call36 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
       $cmp38 = ($call36|0)==($add$ptr|0);
       $first$call36 = $cmp38 ? $first : $call36;
       $retval$2 = $first$call36;
       break L1;
      }
      $call = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp14 = ($call|0)==($add$ptr|0);
      if ($cmp14) {
       $retval$2 = $first;
       break L1;
      }
      $call16 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
      $cmp17 = ($call16|0)==($call|0);
      if ($cmp17) {
       $retval$2 = $call;
       break L1;
      }
      $__end_$i = ((($db)) + 4|0);
      $2 = HEAP32[$__end_$i>>2]|0;
      $3 = HEAP32[$db>>2]|0;
      $sub$ptr$sub$i = (($2) - ($3))|0;
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
      $cmp20 = ($sub$ptr$div$i>>>0)<(2);
      if ($cmp20) {
       $retval$2 = $call16;
       break L1;
      }
      $4 = $2;
      $add$ptr$i = ((($4)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$add$ptr$i);
      $5 = HEAP32[$__end_$i>>2]|0;
      $add$ptr$i53 = ((($5)) + -24|0);
      $6 = $5;
      while(1) {
       $cmp$i$i$i = ($6|0)==($add$ptr$i53|0);
       if ($cmp$i$i$i) {
        break;
       }
       $incdec$ptr$i$i$i = ((($6)) + -24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
       $$pre$i = HEAP32[$__end_$i>>2]|0;
       $6 = $$pre$i;
      }
      $first29 = ((($5)) + -48|0);
      $__size_$i$i$i$i$i = ((($args)) + 11|0);
      $7 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
      $tobool$i$i$i$i$i = ($7<<24>>24)<(0);
      $8 = HEAP32[$args>>2]|0;
      $cond$i$i$i$i = $tobool$i$i$i$i$i ? $8 : $args;
      $__size_$i3$i$i$i = ((($args)) + 4|0);
      $9 = HEAP32[$__size_$i3$i$i$i>>2]|0;
      $conv$i$i$i$i = $7&255;
      $cond$i$i$i = $tobool$i$i$i$i$i ? $9 : $conv$i$i$i$i;
      __THREW__ = 0;
      (invoke_iiii(47,($first29|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
      $10 = __THREW__; __THREW__ = 0;
      $11 = $10&1;
      if ($11) {
       $12 = ___cxa_find_matching_catch_2()|0;
       $13 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       $ehselector$slot$0 = $13;$exn$slot$0 = $12;
       break L3;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       $retval$2 = $call16;
       break L1;
      }
     } else {
      label = 15;
     }
     break;
    }
    default: {
     label = 15;
    }
    }
   } while(0);
   do {
    if ((label|0) == 15) {
     $call44 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $cmp45 = ($call44|0)==($first|0);
     if (!($cmp45)) {
      $retval$2 = $call44;
      break L1;
     }
     $call47 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $cmp48 = ($call47|0)==($first|0);
     if ($cmp48) {
      $retval$2 = $first;
      break L1;
     }
     $call50 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call47,$last,$db)|0);
     $cmp51 = ($call50|0)==($call47|0);
     if ($cmp51) {
      $retval$2 = $call47;
      break L1;
     }
     $__end_$i57 = ((($db)) + 4|0);
     $14 = HEAP32[$__end_$i57>>2]|0;
     $15 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i58 = (($14) - ($15))|0;
     $sub$ptr$div$i59 = (($sub$ptr$sub$i58|0) / 24)&-1;
     $cmp55 = ($sub$ptr$div$i59>>>0)<(2);
     if ($cmp55) {
      $retval$2 = $call50;
      break L1;
     }
     $16 = $14;
     $add$ptr$i61 = ((($16)) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args58,$add$ptr$i61);
     $17 = HEAP32[$__end_$i57>>2]|0;
     $add$ptr$i63 = ((($17)) + -24|0);
     $18 = $17;
     while(1) {
      $cmp$i$i$i64 = ($18|0)==($add$ptr$i63|0);
      if ($cmp$i$i$i64) {
       break;
      }
      $incdec$ptr$i$i$i66 = ((($18)) + -24|0);
      HEAP32[$__end_$i57>>2] = $incdec$ptr$i$i$i66;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i66);
      $$pre$i67 = HEAP32[$__end_$i57>>2]|0;
      $18 = $$pre$i67;
     }
     $first68 = ((($17)) + -48|0);
     $__size_$i$i$i$i$i73 = ((($args58)) + 11|0);
     $19 = HEAP8[$__size_$i$i$i$i$i73>>0]|0;
     $tobool$i$i$i$i$i74 = ($19<<24>>24)<(0);
     $20 = HEAP32[$args58>>2]|0;
     $cond$i$i$i$i77 = $tobool$i$i$i$i$i74 ? $20 : $args58;
     $__size_$i3$i$i$i78 = ((($args58)) + 4|0);
     $21 = HEAP32[$__size_$i3$i$i$i78>>2]|0;
     $conv$i$i$i$i79 = $19&255;
     $cond$i$i$i80 = $tobool$i$i$i$i$i74 ? $21 : $conv$i$i$i$i79;
     __THREW__ = 0;
     (invoke_iiii(47,($first68|0),($cond$i$i$i$i77|0),($cond$i$i$i80|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $24 = ___cxa_find_matching_catch_2()|0;
      $25 = tempRet0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args58);
      $ehselector$slot$0 = $25;$exn$slot$0 = $24;
      break;
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args58);
      $retval$2 = $call50;
      break L1;
     }
    }
   } while(0);
   ___resumeException($exn$slot$0|0);
   // unreachable;
  } else {
   $retval$2 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$2|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i$i$i$i = 0, $__end_$i$i$i$i$i = 0, $__end_$i$i$i$i$i73 = 0, $__end_$i$i$i$i$i99 = 0, $__end_$i$i$i$i103 = 0, $__end_$i$i$i$i77 = 0, $__end_$i59 = 0, $__end_$i62 = 0, $__end_$i68 = 0, $__end_$i86 = 0, $__end_$i94 = 0;
 var $__end_cap_$i$i$i$i$i = 0, $__end_cap_$i$i$i$i$i100 = 0, $__end_cap_$i$i$i$i$i74 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i69 = 0, $__first_$i$i$i$i95 = 0, $__first_$i$i$i7$i$i$i$i = 0, $__first_$i$i$i7$i$i$i$i105 = 0, $__first_$i$i$i7$i$i$i$i79 = 0, $__first_$i$i$i8$i$i$i$i = 0, $__first_$i$i$i8$i$i$i$i104 = 0, $__first_$i$i$i8$i$i$i$i78 = 0, $__second_$i$i$i$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i71 = 0, $__second_$i$i$i$i$i$i$i97 = 0, $__second_$i$i$i9$i$i$i$i = 0, $__second_$i$i$i9$i$i$i$i101 = 0, $__second_$i$i$i9$i$i$i$i75 = 0, $add = 0, $add$ptr = 0;
 var $add$ptr$i = 0, $add$ptr$i61 = 0, $add$ptr$i65 = 0, $add$ptr$i91 = 0, $arrayidx = 0, $call1 = 0, $call15 = 0, $call34 = 0, $call43 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i63 = 0, $cmp$i70 = 0, $cmp$i87 = 0, $cmp$i96 = 0, $cmp12 = 0, $cmp16 = 0, $cmp35 = 0, $cmp38 = 0;
 var $cmp4 = 0, $cmp41 = 0, $cmp45 = 0, $cmp5 = 0, $conv = 0, $dec = 0, $ehselector$slot$0 = 0, $exn$slot$0 = 0, $first53 = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i106 = 0, $incdec$ptr$i80 = 0, $k1$0 = 0, $or$cond = 0, $ref$tmp = 0, $ref$tmp23 = 0, $ref$tmp26 = 0, $ref$tmp56 = 0, $ref$tmp59 = 0;
 var $ref$tmp9 = 0, $retval$1 = 0, $retval$sroa$0$0$$sroa_idx$i = 0, $retval$sroa$0$0$$sroa_idx$i66 = 0, $retval$sroa$0$0$$sroa_idx$i92 = 0, $retval$sroa$0$0$copyload$i113 = 0, $retval$sroa$0$0$copyload$i67112 = 0, $retval$sroa$0$0$copyload$i93111 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i57 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i56 = 0, $subs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $ref$tmp = sp + 56|0;
 $ref$tmp9 = sp + 48|0;
 $ref$tmp23 = sp + 32|0;
 $ref$tmp26 = sp + 24|0;
 $ref$tmp56 = sp + 8|0;
 $ref$tmp59 = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$1 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $subs = ((($db)) + 16|0);
   L3: do {
    switch ($conv|0) {
    case 84:  {
     $__end_$i = ((($db)) + 4|0);
     $1 = HEAP32[$__end_$i>>2]|0;
     $2 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i = (($1) - ($2))|0;
     $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
     $call1 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $3 = HEAP32[$__end_$i>>2]|0;
     $4 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i56 = (($3) - ($4))|0;
     $sub$ptr$div$i57 = (($sub$ptr$sub$i56|0) / 24)&-1;
     $cmp4 = ($call1|0)!=($first|0);
     $add = (($sub$ptr$div$i) + 1)|0;
     $cmp5 = ($sub$ptr$div$i57|0)==($add|0);
     $or$cond = $cmp4 & $cmp5;
     $5 = $3;
     if ($or$cond) {
      $add$ptr$i = ((($5)) + -24|0);
      $retval$sroa$0$0$$sroa_idx$i = ((($db)) + 12|0);
      $retval$sroa$0$0$copyload$i113 = HEAP32[$retval$sroa$0$0$$sroa_idx$i>>2]|0;
      HEAP32[$ref$tmp9>>2] = $retval$sroa$0$0$copyload$i113;
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp,$add$ptr$i,$ref$tmp9);
      $__end_$i59 = ((($db)) + 20|0);
      $6 = HEAP32[$__end_$i59>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 24|0);
      $7 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($6>>>0)<($7>>>0);
      if ($cmp$i) {
       $__second_$i$i$i$i$i$i$i = ((($ref$tmp)) + 12|0);
       HEAP32[$6>>2] = 0;
       $__end_$i$i$i$i$i = ((($6)) + 4|0);
       HEAP32[$__end_$i$i$i$i$i>>2] = 0;
       $__end_cap_$i$i$i$i$i = ((($6)) + 8|0);
       $8 = HEAP32[$__second_$i$i$i$i$i$i$i>>2]|0;
       HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
       $__second_$i$i$i9$i$i$i$i = ((($6)) + 12|0);
       HEAP32[$__second_$i$i$i9$i$i$i$i>>2] = $8;
       $9 = HEAP32[$ref$tmp>>2]|0;
       HEAP32[$6>>2] = $9;
       $__end_$i$i$i$i = ((($ref$tmp)) + 4|0);
       $10 = HEAP32[$__end_$i$i$i$i>>2]|0;
       HEAP32[$__end_$i$i$i$i$i>>2] = $10;
       $__first_$i$i$i8$i$i$i$i = ((($ref$tmp)) + 8|0);
       $11 = HEAP32[$__first_$i$i$i8$i$i$i$i>>2]|0;
       $__first_$i$i$i7$i$i$i$i = ((($6)) + 8|0);
       HEAP32[$__first_$i$i$i7$i$i$i$i>>2] = $11;
       HEAP32[$__first_$i$i$i8$i$i$i$i>>2] = 0;
       HEAP32[$__end_$i$i$i$i>>2] = 0;
       HEAP32[$ref$tmp>>2] = 0;
       $12 = HEAP32[$__end_$i59>>2]|0;
       $incdec$ptr$i = ((($12)) + 16|0);
       HEAP32[$__end_$i59>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(57,($subs|0),($ref$tmp|0));
       $13 = __THREW__; __THREW__ = 0;
       $14 = $13&1;
       if ($14) {
        $15 = ___cxa_find_matching_catch_2()|0;
        $16 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp);
        $ehselector$slot$0 = $16;$exn$slot$0 = $15;
        break L3;
       }
      }
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp);
      $retval$1 = $call1;
      break L1;
     } else {
      $17 = $5;$k1$0 = $sub$ptr$div$i57;
      while(1) {
       $cmp12 = ($k1$0|0)==($sub$ptr$div$i|0);
       if ($cmp12) {
        $retval$1 = $first;
        break L1;
       }
       $add$ptr$i61 = ((($17)) + -24|0);
       $18 = $17;
       while(1) {
        $cmp$i$i$i = ($18|0)==($add$ptr$i61|0);
        if ($cmp$i$i$i) {
         break;
        }
        $incdec$ptr$i$i$i = ((($18)) + -24|0);
        HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
        $$pre$i = HEAP32[$__end_$i>>2]|0;
        $18 = $$pre$i;
       }
       $dec = (($k1$0) + -1)|0;
       $17 = $add$ptr$i61;$k1$0 = $dec;
      }
     }
     break;
    }
    case 68:  {
     $call15 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $cmp16 = ($call15|0)==($first|0);
     if ($cmp16) {
      $retval$1 = $first;
      break L1;
     }
     $19 = HEAP32[$db>>2]|0;
     $__end_$i62 = ((($db)) + 4|0);
     $20 = HEAP32[$__end_$i62>>2]|0;
     $cmp$i63 = ($19|0)==($20|0);
     if ($cmp$i63) {
      $retval$1 = $first;
      break L1;
     }
     $add$ptr$i65 = ((($20)) + -24|0);
     $retval$sroa$0$0$$sroa_idx$i66 = ((($db)) + 12|0);
     $retval$sroa$0$0$copyload$i67112 = HEAP32[$retval$sroa$0$0$$sroa_idx$i66>>2]|0;
     HEAP32[$ref$tmp26>>2] = $retval$sroa$0$0$copyload$i67112;
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp23,$add$ptr$i65,$ref$tmp26);
     $__end_$i68 = ((($db)) + 20|0);
     $21 = HEAP32[$__end_$i68>>2]|0;
     $__first_$i$i$i$i69 = ((($db)) + 24|0);
     $22 = HEAP32[$__first_$i$i$i$i69>>2]|0;
     $cmp$i70 = ($21>>>0)<($22>>>0);
     if ($cmp$i70) {
      $__second_$i$i$i$i$i$i$i71 = ((($ref$tmp23)) + 12|0);
      HEAP32[$21>>2] = 0;
      $__end_$i$i$i$i$i73 = ((($21)) + 4|0);
      HEAP32[$__end_$i$i$i$i$i73>>2] = 0;
      $__end_cap_$i$i$i$i$i74 = ((($21)) + 8|0);
      $23 = HEAP32[$__second_$i$i$i$i$i$i$i71>>2]|0;
      HEAP32[$__end_cap_$i$i$i$i$i74>>2] = 0;
      $__second_$i$i$i9$i$i$i$i75 = ((($21)) + 12|0);
      HEAP32[$__second_$i$i$i9$i$i$i$i75>>2] = $23;
      $24 = HEAP32[$ref$tmp23>>2]|0;
      HEAP32[$21>>2] = $24;
      $__end_$i$i$i$i77 = ((($ref$tmp23)) + 4|0);
      $25 = HEAP32[$__end_$i$i$i$i77>>2]|0;
      HEAP32[$__end_$i$i$i$i$i73>>2] = $25;
      $__first_$i$i$i8$i$i$i$i78 = ((($ref$tmp23)) + 8|0);
      $26 = HEAP32[$__first_$i$i$i8$i$i$i$i78>>2]|0;
      $__first_$i$i$i7$i$i$i$i79 = ((($21)) + 8|0);
      HEAP32[$__first_$i$i$i7$i$i$i$i79>>2] = $26;
      HEAP32[$__first_$i$i$i8$i$i$i$i78>>2] = 0;
      HEAP32[$__end_$i$i$i$i77>>2] = 0;
      HEAP32[$ref$tmp23>>2] = 0;
      $27 = HEAP32[$__end_$i68>>2]|0;
      $incdec$ptr$i80 = ((($27)) + 16|0);
      HEAP32[$__end_$i68>>2] = $incdec$ptr$i80;
     } else {
      __THREW__ = 0;
      invoke_vii(57,($subs|0),($ref$tmp23|0));
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if ($29) {
       $30 = ___cxa_find_matching_catch_2()|0;
       $31 = tempRet0;
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp23);
       $ehselector$slot$0 = $31;$exn$slot$0 = $30;
       break L3;
      }
     }
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp23);
     $retval$1 = $call15;
     break L1;
     break;
    }
    case 83:  {
     $call34 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $cmp35 = ($call34|0)==($first|0);
     if (!($cmp35)) {
      $retval$1 = $call34;
      break L1;
     }
     $sub$ptr$lhs$cast = $last;
     $sub$ptr$rhs$cast = $first;
     $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
     $cmp38 = ($sub$ptr$sub|0)>(2);
     if (!($cmp38)) {
      $retval$1 = $first;
      break L1;
     }
     $arrayidx = ((($first)) + 1|0);
     $32 = HEAP8[$arrayidx>>0]|0;
     $cmp41 = ($32<<24>>24)==(116);
     if (!($cmp41)) {
      $retval$1 = $first;
      break L1;
     }
     $add$ptr = ((($first)) + 2|0);
     $call43 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp45 = ($call43|0)==($add$ptr|0);
     if ($cmp45) {
      $retval$1 = $first;
      break L1;
     }
     $33 = HEAP32[$db>>2]|0;
     $__end_$i86 = ((($db)) + 4|0);
     $34 = HEAP32[$__end_$i86>>2]|0;
     $cmp$i87 = ($33|0)==($34|0);
     if ($cmp$i87) {
      $retval$1 = $first;
      break L1;
     }
     $first53 = ((($34)) + -24|0);
     (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first53,0,6132)|0);
     $35 = HEAP32[$__end_$i86>>2]|0;
     $add$ptr$i91 = ((($35)) + -24|0);
     $retval$sroa$0$0$$sroa_idx$i92 = ((($db)) + 12|0);
     $retval$sroa$0$0$copyload$i93111 = HEAP32[$retval$sroa$0$0$$sroa_idx$i92>>2]|0;
     HEAP32[$ref$tmp59>>2] = $retval$sroa$0$0$copyload$i93111;
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($ref$tmp56,$add$ptr$i91,$ref$tmp59);
     $__end_$i94 = ((($db)) + 20|0);
     $36 = HEAP32[$__end_$i94>>2]|0;
     $__first_$i$i$i$i95 = ((($db)) + 24|0);
     $37 = HEAP32[$__first_$i$i$i$i95>>2]|0;
     $cmp$i96 = ($36>>>0)<($37>>>0);
     if ($cmp$i96) {
      $__second_$i$i$i$i$i$i$i97 = ((($ref$tmp56)) + 12|0);
      HEAP32[$36>>2] = 0;
      $__end_$i$i$i$i$i99 = ((($36)) + 4|0);
      HEAP32[$__end_$i$i$i$i$i99>>2] = 0;
      $__end_cap_$i$i$i$i$i100 = ((($36)) + 8|0);
      $38 = HEAP32[$__second_$i$i$i$i$i$i$i97>>2]|0;
      HEAP32[$__end_cap_$i$i$i$i$i100>>2] = 0;
      $__second_$i$i$i9$i$i$i$i101 = ((($36)) + 12|0);
      HEAP32[$__second_$i$i$i9$i$i$i$i101>>2] = $38;
      $39 = HEAP32[$ref$tmp56>>2]|0;
      HEAP32[$36>>2] = $39;
      $__end_$i$i$i$i103 = ((($ref$tmp56)) + 4|0);
      $40 = HEAP32[$__end_$i$i$i$i103>>2]|0;
      HEAP32[$__end_$i$i$i$i$i99>>2] = $40;
      $__first_$i$i$i8$i$i$i$i104 = ((($ref$tmp56)) + 8|0);
      $41 = HEAP32[$__first_$i$i$i8$i$i$i$i104>>2]|0;
      $__first_$i$i$i7$i$i$i$i105 = ((($36)) + 8|0);
      HEAP32[$__first_$i$i$i7$i$i$i$i105>>2] = $41;
      HEAP32[$__first_$i$i$i8$i$i$i$i104>>2] = 0;
      HEAP32[$__end_$i$i$i$i103>>2] = 0;
      HEAP32[$ref$tmp56>>2] = 0;
      $42 = HEAP32[$__end_$i94>>2]|0;
      $incdec$ptr$i106 = ((($42)) + 16|0);
      HEAP32[$__end_$i94>>2] = $incdec$ptr$i106;
     } else {
      __THREW__ = 0;
      invoke_vii(57,($subs|0),($ref$tmp56|0));
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       $45 = ___cxa_find_matching_catch_2()|0;
       $46 = tempRet0;
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp56);
       $ehselector$slot$0 = $46;$exn$slot$0 = $45;
       break L3;
      }
     }
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp56);
     $retval$1 = $call43;
     break L1;
     break;
    }
    default: {
     $retval$1 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($exn$slot$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 return ($call|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__size_$i$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr$i = 0, $add$ptr$i23 = 0, $args = 0, $call = 0;
 var $call3 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp1 = 0, $cmp4 = 0, $cmp7 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv$i$i$i$i = 0, $first16 = 0, $incdec$ptr$i$i$i = 0, $retval$3 = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, $tobool$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $args = sp;
 $cmp = ($first|0)==($last|0);
 do {
  if ($cmp) {
   $retval$3 = $first;
  } else {
   $call = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $cmp1 = ($call|0)==($first|0);
   if ($cmp1) {
    $retval$3 = $first;
   } else {
    $call3 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($call,$last,$db)|0);
    $cmp4 = ($call3|0)==($call|0);
    if ($cmp4) {
     $retval$3 = $call;
    } else {
     $__end_$i = ((($db)) + 4|0);
     $0 = HEAP32[$__end_$i>>2]|0;
     $1 = HEAP32[$db>>2]|0;
     $sub$ptr$sub$i = (($0) - ($1))|0;
     $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
     $cmp7 = ($sub$ptr$div$i>>>0)<(2);
     if ($cmp7) {
      $retval$3 = $first;
     } else {
      $2 = $0;
      $add$ptr$i = ((($2)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$add$ptr$i);
      $3 = HEAP32[$__end_$i>>2]|0;
      $add$ptr$i23 = ((($3)) + -24|0);
      $4 = $3;
      while(1) {
       $cmp$i$i$i = ($4|0)==($add$ptr$i23|0);
       if ($cmp$i$i$i) {
        break;
       }
       $incdec$ptr$i$i$i = ((($4)) + -24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
       $$pre$i = HEAP32[$__end_$i>>2]|0;
       $4 = $$pre$i;
      }
      $first16 = ((($3)) + -48|0);
      $__size_$i$i$i$i$i = ((($args)) + 11|0);
      $5 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
      $tobool$i$i$i$i$i = ($5<<24>>24)<(0);
      $6 = HEAP32[$args>>2]|0;
      $cond$i$i$i$i = $tobool$i$i$i$i$i ? $6 : $args;
      $__size_$i3$i$i$i = ((($args)) + 4|0);
      $7 = HEAP32[$__size_$i3$i$i$i>>2]|0;
      $conv$i$i$i$i = $5&255;
      $cond$i$i$i = $tobool$i$i$i$i$i ? $7 : $conv$i$i$i$i;
      __THREW__ = 0;
      (invoke_iiii(47,($first16|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
      $8 = __THREW__; __THREW__ = 0;
      $9 = $8&1;
      if ($9) {
       $10 = ___cxa_find_matching_catch_2()|0;
       $11 = tempRet0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       ___resumeException($10|0);
       // unreachable;
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       $retval$3 = $call3;
       break;
      }
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $call = 0, $call13 = 0, $call4 = 0, $call9 = 0, $cmp = 0, $conv = 0, $first$addr$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $first$addr$1 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   switch ($conv|0) {
   case 68: case 67:  {
    $call = (__ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $first$addr$1 = $call;
    break L1;
    break;
   }
   case 85:  {
    $call4 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $first$addr$1 = $call4;
    break L1;
    break;
   }
   case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {
    $call9 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $first$addr$1 = $call9;
    break L1;
    break;
   }
   default: {
    $call13 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    return ($call13|0);
   }
   }
  }
 } while(0);
 return ($first$addr$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i30 = 0, $__i$0$i$i$i = 0, $add$ptr = 0, $agg$tmp = 0, $agg$tmp24 = 0, $arrayidx$i$i$i = 0, $arrayidx1 = 0, $call$i28 = 0, $cmp = 0, $cmp$i = 0, $cmp$i22 = 0, $cmp$i31 = 0, $conv = 0, $conv16 = 0, $conv2 = 0;
 var $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $first10 = 0, $first28 = 0, $inc$i$i$i = 0, $incdec$ptr$i = 0, $incdec$ptr$i32 = 0, $parsed_ctor_dtor_cv = 0, $ref$tmp = 0, $ref$tmp23 = 0, $ref$tmp25 = 0, $retval$0 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $ref$tmp = sp + 64|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp23 = sp + 24|0;
 $agg$tmp24 = sp + 12|0;
 $ref$tmp25 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $0 = HEAP32[$db>>2]|0;
   $__end_$i = ((($db)) + 4|0);
   $1 = HEAP32[$__end_$i>>2]|0;
   $cmp$i = ($0|0)==($1|0);
   if ($cmp$i) {
    $retval$0 = $first;
   } else {
    $2 = HEAP8[$first>>0]|0;
    $conv = $2 << 24 >> 24;
    $add$ptr = ((($first)) + 2|0);
    $parsed_ctor_dtor_cv = ((($db)) + 60|0);
    $arrayidx1 = ((($first)) + 1|0);
    L4: do {
     switch ($conv|0) {
     case 67:  {
      $3 = HEAP8[$arrayidx1>>0]|0;
      $conv2 = $3 << 24 >> 24;
      switch ($conv2|0) {
      case 53: case 51: case 50: case 49:  {
       break;
      }
      default: {
       $retval$0 = $first;
       break L1;
      }
      }
      $first10 = ((($1)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($agg$tmp,$first10);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
      $4 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $5 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i22 = ($4>>>0)<($5>>>0);
      if ($cmp$i22) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($4,$ref$tmp);
       $6 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($6)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp|0));
       $7 = __THREW__; __THREW__ = 0;
       $8 = $7&1;
       if ($8) {
        $9 = ___cxa_find_matching_catch_2()|0;
        $10 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
        $ehselector$slot$1 = $10;$exn$slot$1 = $9;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
      HEAP8[$parsed_ctor_dtor_cv>>0] = 1;
      $retval$0 = $add$ptr;
      break L1;
      break;
     }
     case 68:  {
      $11 = HEAP8[$arrayidx1>>0]|0;
      $conv16 = $11 << 24 >> 24;
      switch ($conv16|0) {
      case 53: case 50: case 49: case 48:  {
       break;
      }
      default: {
       $retval$0 = $first;
       break L1;
      }
      }
      $first28 = ((($1)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($ref$tmp25,$first28);
      __THREW__ = 0;
      $call$i28 = (invoke_iiii(56,($ref$tmp25|0),0,(5908|0))|0);
      $12 = __THREW__; __THREW__ = 0;
      $13 = $12&1;
      do {
       if ($13) {
        $19 = ___cxa_find_matching_catch_2()|0;
        $20 = tempRet0;
        $ehselector$slot$0 = $20;$exn$slot$0 = $19;
       } else {
        ;HEAP32[$agg$tmp24>>2]=HEAP32[$ref$tmp25>>2]|0;HEAP32[$agg$tmp24+4>>2]=HEAP32[$ref$tmp25+4>>2]|0;HEAP32[$agg$tmp24+8>>2]=HEAP32[$ref$tmp25+8>>2]|0;
        $__i$0$i$i$i = 0;
        while(1) {
         $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
         if ($exitcond$i$i$i) {
          break;
         }
         $arrayidx$i$i$i = (($ref$tmp25) + ($__i$0$i$i$i<<2)|0);
         HEAP32[$arrayidx$i$i$i>>2] = 0;
         $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
         $__i$0$i$i$i = $inc$i$i$i;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp23,$agg$tmp24);
        $14 = HEAP32[$__end_$i>>2]|0;
        $__first_$i$i$i$i30 = ((($db)) + 8|0);
        $15 = HEAP32[$__first_$i$i$i$i30>>2]|0;
        $cmp$i31 = ($14>>>0)<($15>>>0);
        if ($cmp$i31) {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($14,$ref$tmp23);
         $16 = HEAP32[$__end_$i>>2]|0;
         $incdec$ptr$i32 = ((($16)) + 24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i32;
        } else {
         __THREW__ = 0;
         invoke_vii(64,($db|0),($ref$tmp23|0));
         $17 = __THREW__; __THREW__ = 0;
         $18 = $17&1;
         if ($18) {
          $21 = ___cxa_find_matching_catch_2()|0;
          $22 = tempRet0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp23);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp24);
          $ehselector$slot$0 = $22;$exn$slot$0 = $21;
          break;
         }
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp23);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp24);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp25);
        HEAP8[$parsed_ctor_dtor_cv>>0] = 1;
        $retval$0 = $add$ptr;
        break L1;
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp25);
      $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
      break;
     }
     default: {
      $retval$0 = $first;
      break L1;
     }
     }
    } while(0);
    ___resumeException($exn$slot$1|0);
    // unreachable;
   }
  } else {
   $retval$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i105 = 0, $$pre$i124 = 0, $$pre$i135 = 0, $$pre$i152 = 0, $$pre$i181 = 0, $$pre$i189 = 0, $$pre$i207 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $__end_$i = 0, $__end_$i109 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i110 = 0, $__i$0$i$i$i$i = 0, $__size_$i$i$i$i = 0, $__size_$i$i$i197 = 0;
 var $__size_$i3$i$i = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i$i = 0, $add$ptr$i101 = 0, $add$ptr$i120 = 0, $add$ptr$i129 = 0, $add$ptr$i131 = 0, $add$ptr$i145 = 0, $add$ptr$i148 = 0, $add$ptr$i177 = 0, $add$ptr$i185 = 0, $add$ptr$i203 = 0, $add$ptr12 = 0, $add$ptr150 = 0, $add$ptr183 = 0, $add$ptr31 = 0, $agg$tmp = 0, $agg$tmp164 = 0, $agg$tmp164$byval_copy = 0;
 var $agg$tmp35 = 0, $arrayidx$i$i$i$i146 = 0, $arrayidx2 = 0, $call$i = 0, $call$i108 = 0, $call55 = 0, $call79 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i102 = 0, $cmp$i$i$i121 = 0, $cmp$i$i$i132 = 0, $cmp$i$i$i149 = 0, $cmp$i$i$i178 = 0, $cmp$i$i$i186 = 0, $cmp$i$i$i204 = 0, $cmp$i111 = 0, $cmp$i158 = 0, $cmp1 = 0;
 var $cmp13 = 0, $cmp132 = 0, $cmp135 = 0, $cmp140 = 0, $cmp152 = 0, $cmp176 = 0, $cmp179 = 0, $cmp25 = 0, $cmp27 = 0, $cmp47 = 0, $cmp56 = 0, $cmp62 = 0, $cmp7 = 0, $cmp80 = 0, $cmp85 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i168 = 0, $cond$i$i157 = 0, $cond$i$i171 = 0;
 var $cond$i$i201 = 0, $conv$i$i$i = 0, $conv$i$i$i156 = 0, $conv$i$i$i170 = 0, $conv10 = 0, $conv14 = 0, $conv144 = 0, $conv154 = 0, $conv3 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $exitcond$i$i$i$i = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $first106 = 0, $first112 = 0, $first120 = 0, $first163 = 0, $first19 = 0, $first24 = 0;
 var $first51 = 0, $first73 = 0, $inc$i$i$i$i = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i104 = 0, $incdec$ptr$i$i$i123 = 0, $incdec$ptr$i$i$i134 = 0, $incdec$ptr$i$i$i151 = 0, $incdec$ptr$i$i$i180 = 0, $incdec$ptr$i$i$i188 = 0, $incdec$ptr$i$i$i206 = 0, $incdec$ptr$i112 = 0, $incdec$ptr139 = 0, $incdec$ptr159 = 0, $incdec$ptr53 = 0, $isdigit = 0, $isdigit90 = 0, $isdigit92 = 0;
 var $isdigit94 = 0, $isdigittmp = 0, $isdigittmp89 = 0, $isdigittmp91 = 0, $isdigittmp93 = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp34 = 0, $ref$tmp4$i$i$i$i = 0, $ref$tmp88 = 0, $retval$7 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i143 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i142 = 0, $t0$0 = 0, $t043$0 = 0;
 var $t043$2 = 0, $t043$3 = 0, $t1$0 = 0, $t1$0$lcssa = 0, $t1149$0 = 0, $t1149$0$lcssa = 0, $tmp = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i165 = 0, $tobool$i$i$i198 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $agg$tmp164$byval_copy = sp + 104|0;
 $ref$tmp$i$i$i$i = sp + 109|0;
 $ref$tmp4$i$i$i$i = sp + 108|0;
 $ref$tmp = sp + 80|0;
 $agg$tmp = sp + 64|0;
 $ref$tmp34 = sp + 40|0;
 $agg$tmp35 = sp + 28|0;
 $tmp = sp + 16|0;
 $ref$tmp88 = sp + 4|0;
 $agg$tmp164 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(85);
   if ($cmp1) {
    $arrayidx2 = ((($first)) + 1|0);
    $1 = HEAP8[$arrayidx2>>0]|0;
    $conv3 = $1 << 24 >> 24;
    $add$ptr = ((($first)) + 2|0);
    L4: do {
     switch ($conv3|0) {
     case 116:  {
      ;HEAP32[$agg$tmp>>2]=0|0;HEAP32[$agg$tmp+4>>2]=0|0;HEAP32[$agg$tmp+8>>2]=0|0;
      $call$i = (__ZNSt3__211char_traitsIcE6lengthEPKc(6639)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$tmp,6639,$call$i);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
      $__end_$i = ((($db)) + 4|0);
      $2 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $3 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($2>>>0)<($3>>>0);
      if ($cmp$i) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2,$ref$tmp);
       $4 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($4)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp|0));
       $5 = __THREW__; __THREW__ = 0;
       $6 = $5&1;
       if ($6) {
        $9 = ___cxa_find_matching_catch_2()|0;
        $10 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
        $ehselector$slot$1 = $10;$exn$slot$1 = $9;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
      $cmp7 = ($add$ptr|0)==($last|0);
      if ($cmp7) {
       $7 = HEAP32[$__end_$i>>2]|0;
       $add$ptr$i = ((($7)) + -24|0);
       $8 = $7;
       while(1) {
        $cmp$i$i$i = ($8|0)==($add$ptr$i|0);
        if ($cmp$i$i$i) {
         $retval$7 = $first;
         break L1;
        }
        $incdec$ptr$i$i$i = ((($8)) + -24|0);
        HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
        $$pre$i = HEAP32[$__end_$i>>2]|0;
        $8 = $$pre$i;
       }
      }
      $11 = HEAP8[$add$ptr>>0]|0;
      $conv10 = $11 << 24 >> 24;
      $isdigittmp91 = (($conv10) + -48)|0;
      $isdigit92 = ($isdigittmp91>>>0)<(10);
      if ($isdigit92) {
       $add$ptr12 = ((($first)) + 3|0);
       $t1$0 = $add$ptr12;
       while(1) {
        $cmp13 = ($t1$0|0)==($last|0);
        if ($cmp13) {
         $t1$0$lcssa = $last;
         break;
        }
        $12 = HEAP8[$t1$0>>0]|0;
        $conv14 = $12 << 24 >> 24;
        $isdigittmp93 = (($conv14) + -48)|0;
        $isdigit94 = ($isdigittmp93>>>0)<(10);
        if (!($isdigit94)) {
         $t1$0$lcssa = $t1$0;
         break;
        }
        $incdec$ptr = ((($t1$0)) + 1|0);
        $t1$0 = $incdec$ptr;
       }
       $13 = HEAP32[$__end_$i>>2]|0;
       $first19 = ((($13)) + -24|0);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueERS7_E4typeESC_SC_($first19,$add$ptr,$t1$0$lcssa);
       $t0$0 = $t1$0$lcssa;
      } else {
       $t0$0 = $add$ptr;
      }
      $14 = HEAP32[$__end_$i>>2]|0;
      $first24 = ((($14)) + -24|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($first24,39);
      $cmp25 = ($t0$0|0)==($last|0);
      if (!($cmp25)) {
       $15 = HEAP8[$t0$0>>0]|0;
       $cmp27 = ($15<<24>>24)==(95);
       if ($cmp27) {
        $add$ptr31 = ((($t0$0)) + 1|0);
        $retval$7 = $add$ptr31;
        break L1;
       }
      }
      $16 = HEAP32[$__end_$i>>2]|0;
      $add$ptr$i101 = ((($16)) + -24|0);
      $17 = $16;
      while(1) {
       $cmp$i$i$i102 = ($17|0)==($add$ptr$i101|0);
       if ($cmp$i$i$i102) {
        $retval$7 = $first;
        break L1;
       }
       $incdec$ptr$i$i$i104 = ((($17)) + -24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i104;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i104);
       $$pre$i105 = HEAP32[$__end_$i>>2]|0;
       $17 = $$pre$i105;
      }
      break;
     }
     case 108:  {
      ;HEAP32[$agg$tmp35>>2]=0|0;HEAP32[$agg$tmp35+4>>2]=0|0;HEAP32[$agg$tmp35+8>>2]=0|0;
      $call$i108 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6648)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$tmp35,6648,$call$i108);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp34,$agg$tmp35);
      $__end_$i109 = ((($db)) + 4|0);
      $18 = HEAP32[$__end_$i109>>2]|0;
      $__first_$i$i$i$i110 = ((($db)) + 8|0);
      $19 = HEAP32[$__first_$i$i$i$i110>>2]|0;
      $cmp$i111 = ($18>>>0)<($19>>>0);
      if ($cmp$i111) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($18,$ref$tmp34);
       $20 = HEAP32[$__end_$i109>>2]|0;
       $incdec$ptr$i112 = ((($20)) + 24|0);
       HEAP32[$__end_$i109>>2] = $incdec$ptr$i112;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp34|0));
       $21 = __THREW__; __THREW__ = 0;
       $22 = $21&1;
       if ($22) {
        $25 = ___cxa_find_matching_catch_2()|0;
        $26 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp34);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp35);
        $ehselector$slot$1 = $26;$exn$slot$1 = $25;
        break L4;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp34);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp35);
      $23 = HEAP8[$add$ptr>>0]|0;
      $cmp47 = ($23<<24>>24)==(118);
      L38: do {
       if ($cmp47) {
        $24 = HEAP32[$__end_$i109>>2]|0;
        $first51 = ((($24)) + -24|0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($first51,41);
        $incdec$ptr53 = ((($first)) + 3|0);
        $t043$2 = $incdec$ptr53;
       } else {
        $call55 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
        $cmp56 = ($call55|0)==($add$ptr|0);
        if ($cmp56) {
         $27 = HEAP32[$__end_$i109>>2]|0;
         $add$ptr$i120 = ((($27)) + -24|0);
         $28 = $27;
         while(1) {
          $cmp$i$i$i121 = ($28|0)==($add$ptr$i120|0);
          if ($cmp$i$i$i121) {
           $retval$7 = $first;
           break L1;
          }
          $incdec$ptr$i$i$i123 = ((($28)) + -24|0);
          HEAP32[$__end_$i109>>2] = $incdec$ptr$i$i$i123;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i123);
          $$pre$i124 = HEAP32[$__end_$i109>>2]|0;
          $28 = $$pre$i124;
         }
        }
        $29 = HEAP32[$__end_$i109>>2]|0;
        $30 = HEAP32[$db>>2]|0;
        $sub$ptr$sub$i = (($29) - ($30))|0;
        $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
        $cmp62 = ($sub$ptr$div$i>>>0)<(2);
        if ($cmp62) {
         $retval$7 = $first;
         break L1;
        }
        $31 = $29;
        $add$ptr$i129 = ((($31)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp,$add$ptr$i129);
        $32 = HEAP32[$__end_$i109>>2]|0;
        $add$ptr$i131 = ((($32)) + -24|0);
        $33 = $32;
        while(1) {
         $cmp$i$i$i132 = ($33|0)==($add$ptr$i131|0);
         if ($cmp$i$i$i132) {
          break;
         }
         $incdec$ptr$i$i$i134 = ((($33)) + -24|0);
         HEAP32[$__end_$i109>>2] = $incdec$ptr$i$i$i134;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i134);
         $$pre$i135 = HEAP32[$__end_$i109>>2]|0;
         $33 = $$pre$i135;
        }
        $first73 = ((($32)) + -48|0);
        $__size_$i$i$i$i = ((($tmp)) + 11|0);
        $34 = HEAP8[$__size_$i$i$i$i>>0]|0;
        $tobool$i$i$i$i = ($34<<24>>24)<(0);
        $35 = HEAP32[$tmp>>2]|0;
        $cond$i$i$i = $tobool$i$i$i$i ? $35 : $tmp;
        $__size_$i3$i$i = ((($tmp)) + 4|0);
        $36 = HEAP32[$__size_$i3$i$i>>2]|0;
        $conv$i$i$i = $34&255;
        $cond$i$i = $tobool$i$i$i$i ? $36 : $conv$i$i$i;
        __THREW__ = 0;
        (invoke_iiii(47,($first73|0),($cond$i$i$i|0),($cond$i$i|0))|0);
        $37 = __THREW__; __THREW__ = 0;
        $38 = $37&1;
        L52: do {
         if ($38) {
          label = 42;
         } else {
          $t043$0 = $call55;
          while(1) {
           __THREW__ = 0;
           $call79 = (invoke_iiii(50,($t043$0|0),($last|0),($db|0))|0);
           $39 = __THREW__; __THREW__ = 0;
           $40 = $39&1;
           if ($40) {
            label = 42;
            break L52;
           }
           $cmp80 = ($call79|0)==($t043$0|0);
           if ($cmp80) {
            label = 60;
            break;
           }
           $43 = HEAP32[$__end_$i109>>2]|0;
           $44 = HEAP32[$db>>2]|0;
           $sub$ptr$sub$i142 = (($43) - ($44))|0;
           $sub$ptr$div$i143 = (($sub$ptr$sub$i142|0) / 24)&-1;
           $cmp85 = ($sub$ptr$div$i143>>>0)<(2);
           if ($cmp85) {
            label = 88;
            break;
           }
           $45 = $43;
           $add$ptr$i145 = ((($45)) + -24|0);
           __THREW__ = 0;
           invoke_vii(55,($ref$tmp88|0),($add$ptr$i145|0));
           $46 = __THREW__; __THREW__ = 0;
           $47 = $46&1;
           if ($47) {
            label = 59;
            break;
           }
           $48 = HEAP8[$__size_$i$i$i$i>>0]|0;
           $tobool$i$i$i$i$i = ($48<<24>>24)<(0);
           if ($tobool$i$i$i$i$i) {
            $49 = HEAP32[$tmp>>2]|0;
            HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc($49,$ref$tmp$i$i$i$i);
            HEAP32[$__size_$i3$i$i>>2] = 0;
           } else {
            HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc($tmp,$ref$tmp4$i$i$i$i);
            HEAP8[$__size_$i$i$i$i>>0] = 0;
           }
           __THREW__ = 0;
           invoke_vi(51,($tmp|0));
           $50 = __THREW__; __THREW__ = 0;
           $51 = $50&1;
           if ($51) {
            label = 49;
            break;
           }
           ;HEAP32[$tmp>>2]=HEAP32[$ref$tmp88>>2]|0;HEAP32[$tmp+4>>2]=HEAP32[$ref$tmp88+4>>2]|0;HEAP32[$tmp+8>>2]=HEAP32[$ref$tmp88+8>>2]|0;
           $__i$0$i$i$i$i = 0;
           while(1) {
            $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
            if ($exitcond$i$i$i$i) {
             break;
            }
            $arrayidx$i$i$i$i146 = (($ref$tmp88) + ($__i$0$i$i$i$i<<2)|0);
            HEAP32[$arrayidx$i$i$i$i146>>2] = 0;
            $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
            $__i$0$i$i$i$i = $inc$i$i$i$i;
           }
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp88);
           $54 = HEAP32[$__end_$i109>>2]|0;
           $add$ptr$i148 = ((($54)) + -24|0);
           $55 = $54;
           while(1) {
            $cmp$i$i$i149 = ($55|0)==($add$ptr$i148|0);
            if ($cmp$i$i$i149) {
             break;
            }
            $incdec$ptr$i$i$i151 = ((($55)) + -24|0);
            HEAP32[$__end_$i109>>2] = $incdec$ptr$i$i$i151;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i151);
            $$pre$i152 = HEAP32[$__end_$i109>>2]|0;
            $55 = $$pre$i152;
           }
           $56 = HEAP8[$__size_$i$i$i$i>>0]|0;
           $tobool$i$i$i = ($56<<24>>24)<(0);
           $57 = HEAP32[$__size_$i3$i$i>>2]|0;
           $conv$i$i$i156 = $56&255;
           $cond$i$i157 = $tobool$i$i$i ? $57 : $conv$i$i$i156;
           $cmp$i158 = ($cond$i$i157|0)==(0);
           if ($cmp$i158) {
            $t043$0 = $call79;
            continue;
           }
           $first106 = ((($54)) + -48|0);
           __THREW__ = 0;
           (invoke_iii(54,($first106|0),(6060|0))|0);
           $58 = __THREW__; __THREW__ = 0;
           $59 = $58&1;
           if ($59) {
            label = 42;
            break L52;
           }
           $60 = HEAP32[$__end_$i109>>2]|0;
           $first112 = ((($60)) + -24|0);
           $61 = HEAP8[$__size_$i$i$i$i>>0]|0;
           $tobool$i$i$i$i165 = ($61<<24>>24)<(0);
           $62 = HEAP32[$tmp>>2]|0;
           $cond$i$i$i168 = $tobool$i$i$i$i165 ? $62 : $tmp;
           $63 = HEAP32[$__size_$i3$i$i>>2]|0;
           $conv$i$i$i170 = $61&255;
           $cond$i$i171 = $tobool$i$i$i$i165 ? $63 : $conv$i$i$i170;
           __THREW__ = 0;
           (invoke_iiii(47,($first112|0),($cond$i$i$i168|0),($cond$i$i171|0))|0);
           $64 = __THREW__; __THREW__ = 0;
           $65 = $64&1;
           if ($65) {
            label = 42;
            break L52;
           } else {
            $t043$0 = $call79;
           }
          }
          if ((label|0) == 49) {
           $52 = ___cxa_find_matching_catch_3(0|0)|0;
           $53 = tempRet0;
           ___clang_call_terminate($52);
           // unreachable;
          }
          else if ((label|0) == 59) {
           $66 = ___cxa_find_matching_catch_2()|0;
           $67 = tempRet0;
           $ehselector$slot$0 = $67;$exn$slot$0 = $66;
           break;
          }
          else if ((label|0) == 60) {
           $68 = HEAP32[$__end_$i109>>2]|0;
           $first120 = ((($68)) + -24|0);
           __THREW__ = 0;
           (invoke_iii(54,($first120|0),(5836|0))|0);
           $69 = __THREW__; __THREW__ = 0;
           $70 = $69&1;
           if ($70) {
            label = 42;
            break;
           }
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
           $t043$2 = $t043$0;
           break L38;
          }
          else if ((label|0) == 88) {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
           $retval$7 = $first;
           break L1;
          }
         }
        } while(0);
        if ((label|0) == 42) {
         $41 = ___cxa_find_matching_catch_2()|0;
         $42 = tempRet0;
         $ehselector$slot$0 = $42;$exn$slot$0 = $41;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
        break L4;
       }
      } while(0);
      $cmp132 = ($t043$2|0)==($last|0);
      if (!($cmp132)) {
       $71 = HEAP8[$t043$2>>0]|0;
       $cmp135 = ($71<<24>>24)==(69);
       if ($cmp135) {
        $incdec$ptr139 = ((($t043$2)) + 1|0);
        $cmp140 = ($incdec$ptr139|0)==($last|0);
        if ($cmp140) {
         $74 = HEAP32[$__end_$i109>>2]|0;
         $add$ptr$i185 = ((($74)) + -24|0);
         $75 = $74;
         while(1) {
          $cmp$i$i$i186 = ($75|0)==($add$ptr$i185|0);
          if ($cmp$i$i$i186) {
           $retval$7 = $first;
           break L1;
          }
          $incdec$ptr$i$i$i188 = ((($75)) + -24|0);
          HEAP32[$__end_$i109>>2] = $incdec$ptr$i$i$i188;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i188);
          $$pre$i189 = HEAP32[$__end_$i109>>2]|0;
          $75 = $$pre$i189;
         }
        }
        $76 = HEAP8[$incdec$ptr139>>0]|0;
        $conv144 = $76 << 24 >> 24;
        $isdigittmp = (($conv144) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $add$ptr150 = ((($t043$2)) + 2|0);
         $t1149$0 = $add$ptr150;
         while(1) {
          $cmp152 = ($t1149$0|0)==($last|0);
          if ($cmp152) {
           $t1149$0$lcssa = $last;
           break;
          }
          $77 = HEAP8[$t1149$0>>0]|0;
          $conv154 = $77 << 24 >> 24;
          $isdigittmp89 = (($conv154) + -48)|0;
          $isdigit90 = ($isdigittmp89>>>0)<(10);
          if (!($isdigit90)) {
           $t1149$0$lcssa = $t1149$0;
           break;
          }
          $incdec$ptr159 = ((($t1149$0)) + 1|0);
          $t1149$0 = $incdec$ptr159;
         }
         $78 = HEAP32[$__end_$i109>>2]|0;
         $first163 = ((($78)) + -24|0);
         $__size_$i$i$i197 = ((($first163)) + 11|0);
         $79 = HEAP8[$__size_$i$i$i197>>0]|0;
         $tobool$i$i$i198 = ($79<<24>>24)<(0);
         if ($tobool$i$i$i198) {
          $80 = HEAP32[$first163>>2]|0;
          $cond$i$i201 = $80;
         } else {
          $cond$i$i201 = $first163;
         }
         $add$ptr$i$i = ((($cond$i$i201)) + 7|0);
         $81 = $add$ptr$i$i;
         HEAP32[$agg$tmp164>>2] = $81;
         ;HEAP32[$agg$tmp164$byval_copy>>2]=HEAP32[$agg$tmp164>>2]|0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($first163,$agg$tmp164$byval_copy,$incdec$ptr139,$t1149$0$lcssa);
         $t043$3 = $t1149$0$lcssa;
        } else {
         $t043$3 = $incdec$ptr139;
        }
        $cmp176 = ($t043$3|0)==($last|0);
        if (!($cmp176)) {
         $82 = HEAP8[$t043$3>>0]|0;
         $cmp179 = ($82<<24>>24)==(95);
         if ($cmp179) {
          $add$ptr183 = ((($t043$3)) + 1|0);
          $retval$7 = $add$ptr183;
          break L1;
         }
        }
        $83 = HEAP32[$__end_$i109>>2]|0;
        $add$ptr$i203 = ((($83)) + -24|0);
        $84 = $83;
        while(1) {
         $cmp$i$i$i204 = ($84|0)==($add$ptr$i203|0);
         if ($cmp$i$i$i204) {
          $retval$7 = $first;
          break L1;
         }
         $incdec$ptr$i$i$i206 = ((($84)) + -24|0);
         HEAP32[$__end_$i109>>2] = $incdec$ptr$i$i$i206;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i206);
         $$pre$i207 = HEAP32[$__end_$i109>>2]|0;
         $84 = $$pre$i207;
        }
       }
      }
      $72 = HEAP32[$__end_$i109>>2]|0;
      $add$ptr$i177 = ((($72)) + -24|0);
      $73 = $72;
      while(1) {
       $cmp$i$i$i178 = ($73|0)==($add$ptr$i177|0);
       if ($cmp$i$i$i178) {
        $retval$7 = $first;
        break L1;
       }
       $incdec$ptr$i$i$i180 = ((($73)) + -24|0);
       HEAP32[$__end_$i109>>2] = $incdec$ptr$i$i$i180;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i180);
       $$pre$i181 = HEAP32[$__end_$i109>>2]|0;
       $73 = $$pre$i181;
      }
      break;
     }
     default: {
      $retval$7 = $first;
      break L1;
     }
     }
    } while(0);
    ___resumeException($exn$slot$1|0);
    // unreachable;
   } else {
    $retval$7 = $first;
   }
  } else {
   $retval$7 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$7|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i = 0, $__end_$i143 = 0, $__end_$i151 = 0, $__end_$i159 = 0, $__end_$i167 = 0, $__end_$i175 = 0, $__end_$i183 = 0, $__end_$i191 = 0, $__end_$i194 = 0, $__end_$i202 = 0, $__end_$i210 = 0, $__end_$i218 = 0, $__end_$i226 = 0, $__end_$i234 = 0, $__end_$i242 = 0, $__end_$i250 = 0;
 var $__end_$i258 = 0, $__end_$i266 = 0, $__end_$i274 = 0, $__end_$i282 = 0, $__end_$i291 = 0, $__end_$i295 = 0, $__end_$i303 = 0, $__end_$i311 = 0, $__end_$i319 = 0, $__end_$i327 = 0, $__end_$i335 = 0, $__end_$i343 = 0, $__end_$i351 = 0, $__end_$i359 = 0, $__end_$i367 = 0, $__end_$i375 = 0, $__end_$i383 = 0, $__end_$i391 = 0, $__end_$i399 = 0, $__end_$i407 = 0;
 var $__end_$i415 = 0, $__end_$i423 = 0, $__end_$i431 = 0, $__end_$i439 = 0, $__end_$i447 = 0, $__end_$i455 = 0, $__end_$i463 = 0, $__end_$i471 = 0, $__end_$i479 = 0, $__end_$i487 = 0, $__end_$i495 = 0, $__end_$i503 = 0, $__end_$i512 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i144 = 0, $__first_$i$i$i$i152 = 0, $__first_$i$i$i$i160 = 0, $__first_$i$i$i$i168 = 0, $__first_$i$i$i$i176 = 0, $__first_$i$i$i$i184 = 0;
 var $__first_$i$i$i$i195 = 0, $__first_$i$i$i$i203 = 0, $__first_$i$i$i$i211 = 0, $__first_$i$i$i$i219 = 0, $__first_$i$i$i$i227 = 0, $__first_$i$i$i$i235 = 0, $__first_$i$i$i$i243 = 0, $__first_$i$i$i$i251 = 0, $__first_$i$i$i$i259 = 0, $__first_$i$i$i$i267 = 0, $__first_$i$i$i$i275 = 0, $__first_$i$i$i$i283 = 0, $__first_$i$i$i$i296 = 0, $__first_$i$i$i$i304 = 0, $__first_$i$i$i$i312 = 0, $__first_$i$i$i$i320 = 0, $__first_$i$i$i$i328 = 0, $__first_$i$i$i$i336 = 0, $__first_$i$i$i$i344 = 0, $__first_$i$i$i$i352 = 0;
 var $__first_$i$i$i$i360 = 0, $__first_$i$i$i$i368 = 0, $__first_$i$i$i$i376 = 0, $__first_$i$i$i$i384 = 0, $__first_$i$i$i$i392 = 0, $__first_$i$i$i$i400 = 0, $__first_$i$i$i$i408 = 0, $__first_$i$i$i$i416 = 0, $__first_$i$i$i$i424 = 0, $__first_$i$i$i$i432 = 0, $__first_$i$i$i$i440 = 0, $__first_$i$i$i$i448 = 0, $__first_$i$i$i$i456 = 0, $__first_$i$i$i$i464 = 0, $__first_$i$i$i$i472 = 0, $__first_$i$i$i$i480 = 0, $__first_$i$i$i$i488 = 0, $__first_$i$i$i$i496 = 0, $__first_$i$i$i$i504 = 0, $add$ptr = 0;
 var $arrayidx1 = 0, $call = 0, $call158 = 0, $call370 = 0, $cmp = 0, $cmp$i = 0, $cmp$i145 = 0, $cmp$i153 = 0, $cmp$i161 = 0, $cmp$i169 = 0, $cmp$i177 = 0, $cmp$i185 = 0, $cmp$i192 = 0, $cmp$i196 = 0, $cmp$i204 = 0, $cmp$i212 = 0, $cmp$i220 = 0, $cmp$i228 = 0, $cmp$i236 = 0, $cmp$i244 = 0;
 var $cmp$i252 = 0, $cmp$i260 = 0, $cmp$i268 = 0, $cmp$i276 = 0, $cmp$i284 = 0, $cmp$i292 = 0, $cmp$i297 = 0, $cmp$i305 = 0, $cmp$i313 = 0, $cmp$i321 = 0, $cmp$i329 = 0, $cmp$i337 = 0, $cmp$i345 = 0, $cmp$i353 = 0, $cmp$i361 = 0, $cmp$i369 = 0, $cmp$i377 = 0, $cmp$i385 = 0, $cmp$i393 = 0, $cmp$i401 = 0;
 var $cmp$i409 = 0, $cmp$i417 = 0, $cmp$i425 = 0, $cmp$i433 = 0, $cmp$i441 = 0, $cmp$i449 = 0, $cmp$i457 = 0, $cmp$i465 = 0, $cmp$i473 = 0, $cmp$i481 = 0, $cmp$i489 = 0, $cmp$i497 = 0, $cmp$i505 = 0, $cmp$i513 = 0, $cmp138 = 0, $cmp160 = 0, $cmp326 = 0, $cmp372 = 0, $cmp51 = 0, $conv = 0;
 var $conv121 = 0, $conv148 = 0, $conv195 = 0, $conv2 = 0, $conv229 = 0, $conv24 = 0, $conv263 = 0, $conv285 = 0, $conv336 = 0, $conv364 = 0, $conv65 = 0, $conv99 = 0, $ehselector$slot$0 = 0, $exn$slot$0 = 0, $first168 = 0, $first380 = 0, $first58 = 0, $incdec$ptr$i = 0, $incdec$ptr$i146 = 0, $incdec$ptr$i154 = 0;
 var $incdec$ptr$i162 = 0, $incdec$ptr$i170 = 0, $incdec$ptr$i178 = 0, $incdec$ptr$i186 = 0, $incdec$ptr$i197 = 0, $incdec$ptr$i205 = 0, $incdec$ptr$i213 = 0, $incdec$ptr$i221 = 0, $incdec$ptr$i229 = 0, $incdec$ptr$i237 = 0, $incdec$ptr$i245 = 0, $incdec$ptr$i253 = 0, $incdec$ptr$i261 = 0, $incdec$ptr$i269 = 0, $incdec$ptr$i277 = 0, $incdec$ptr$i285 = 0, $incdec$ptr$i298 = 0, $incdec$ptr$i306 = 0, $incdec$ptr$i314 = 0, $incdec$ptr$i322 = 0;
 var $incdec$ptr$i330 = 0, $incdec$ptr$i338 = 0, $incdec$ptr$i346 = 0, $incdec$ptr$i354 = 0, $incdec$ptr$i362 = 0, $incdec$ptr$i370 = 0, $incdec$ptr$i378 = 0, $incdec$ptr$i386 = 0, $incdec$ptr$i394 = 0, $incdec$ptr$i402 = 0, $incdec$ptr$i410 = 0, $incdec$ptr$i418 = 0, $incdec$ptr$i426 = 0, $incdec$ptr$i434 = 0, $incdec$ptr$i442 = 0, $incdec$ptr$i450 = 0, $incdec$ptr$i458 = 0, $incdec$ptr$i466 = 0, $incdec$ptr$i474 = 0, $incdec$ptr$i482 = 0;
 var $incdec$ptr$i490 = 0, $incdec$ptr$i498 = 0, $incdec$ptr$i506 = 0, $isdigit = 0, $isdigittmp = 0, $parsed_ctor_dtor_cv = 0, $ref$tmp = 0, $ref$tmp102 = 0, $ref$tmp108 = 0, $ref$tmp114 = 0, $ref$tmp12 = 0, $ref$tmp124 = 0, $ref$tmp130 = 0, $ref$tmp141 = 0, $ref$tmp151 = 0, $ref$tmp176 = 0, $ref$tmp18 = 0, $ref$tmp182 = 0, $ref$tmp188 = 0, $ref$tmp198 = 0;
 var $ref$tmp204 = 0, $ref$tmp210 = 0, $ref$tmp216 = 0, $ref$tmp222 = 0, $ref$tmp232 = 0, $ref$tmp238 = 0, $ref$tmp244 = 0, $ref$tmp250 = 0, $ref$tmp256 = 0, $ref$tmp266 = 0, $ref$tmp27 = 0, $ref$tmp272 = 0, $ref$tmp278 = 0, $ref$tmp288 = 0, $ref$tmp294 = 0, $ref$tmp300 = 0, $ref$tmp306 = 0, $ref$tmp312 = 0, $ref$tmp318 = 0, $ref$tmp329 = 0;
 var $ref$tmp33 = 0, $ref$tmp339 = 0, $ref$tmp345 = 0, $ref$tmp351 = 0, $ref$tmp357 = 0, $ref$tmp39 = 0, $ref$tmp6 = 0, $ref$tmp68 = 0, $ref$tmp74 = 0, $ref$tmp80 = 0, $ref$tmp86 = 0, $ref$tmp92 = 0, $retval$3 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $try_to_parse_template_args44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1104|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1104|0);
 $ref$tmp = sp + 1080|0;
 $ref$tmp6 = sp + 1056|0;
 $ref$tmp12 = sp + 1032|0;
 $ref$tmp18 = sp + 1008|0;
 $ref$tmp27 = sp + 984|0;
 $ref$tmp33 = sp + 960|0;
 $ref$tmp39 = sp + 936|0;
 $ref$tmp68 = sp + 912|0;
 $ref$tmp74 = sp + 888|0;
 $ref$tmp80 = sp + 864|0;
 $ref$tmp86 = sp + 840|0;
 $ref$tmp92 = sp + 816|0;
 $ref$tmp102 = sp + 792|0;
 $ref$tmp108 = sp + 768|0;
 $ref$tmp114 = sp + 744|0;
 $ref$tmp124 = sp + 720|0;
 $ref$tmp130 = sp + 696|0;
 $ref$tmp141 = sp + 672|0;
 $ref$tmp151 = sp + 648|0;
 $ref$tmp176 = sp + 624|0;
 $ref$tmp182 = sp + 600|0;
 $ref$tmp188 = sp + 576|0;
 $ref$tmp198 = sp + 552|0;
 $ref$tmp204 = sp + 528|0;
 $ref$tmp210 = sp + 504|0;
 $ref$tmp216 = sp + 480|0;
 $ref$tmp222 = sp + 456|0;
 $ref$tmp232 = sp + 432|0;
 $ref$tmp238 = sp + 408|0;
 $ref$tmp244 = sp + 384|0;
 $ref$tmp250 = sp + 360|0;
 $ref$tmp256 = sp + 336|0;
 $ref$tmp266 = sp + 312|0;
 $ref$tmp272 = sp + 288|0;
 $ref$tmp278 = sp + 264|0;
 $ref$tmp288 = sp + 240|0;
 $ref$tmp294 = sp + 216|0;
 $ref$tmp300 = sp + 192|0;
 $ref$tmp306 = sp + 168|0;
 $ref$tmp312 = sp + 144|0;
 $ref$tmp318 = sp + 120|0;
 $ref$tmp329 = sp + 96|0;
 $ref$tmp339 = sp + 72|0;
 $ref$tmp345 = sp + 48|0;
 $ref$tmp351 = sp + 24|0;
 $ref$tmp357 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $add$ptr = ((($first)) + 2|0);
   $arrayidx1 = ((($first)) + 1|0);
   L3: do {
    switch ($conv|0) {
    case 97:  {
     $1 = HEAP8[$arrayidx1>>0]|0;
     $conv2 = $1 << 24 >> 24;
     switch ($conv2|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp,6138);
      $__end_$i = ((($db)) + 4|0);
      $2 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $3 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($2>>>0)<($3>>>0);
      if ($cmp$i) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2,$ref$tmp);
       $4 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($4)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp|0));
       $5 = __THREW__; __THREW__ = 0;
       $6 = $5&1;
       if ($6) {
        $7 = ___cxa_find_matching_catch_2()|0;
        $8 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        $ehselector$slot$0 = $8;$exn$slot$0 = $7;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 110: case 100:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp6,6149);
      $__end_$i143 = ((($db)) + 4|0);
      $9 = HEAP32[$__end_$i143>>2]|0;
      $__first_$i$i$i$i144 = ((($db)) + 8|0);
      $10 = HEAP32[$__first_$i$i$i$i144>>2]|0;
      $cmp$i145 = ($9>>>0)<($10>>>0);
      if ($cmp$i145) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($9,$ref$tmp6);
       $11 = HEAP32[$__end_$i143>>2]|0;
       $incdec$ptr$i146 = ((($11)) + 24|0);
       HEAP32[$__end_$i143>>2] = $incdec$ptr$i146;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp6|0));
       $12 = __THREW__; __THREW__ = 0;
       $13 = $12&1;
       if ($13) {
        $14 = ___cxa_find_matching_catch_2()|0;
        $15 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp6);
        $ehselector$slot$0 = $15;$exn$slot$0 = $14;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp6);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 78:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp12,6159);
      $__end_$i151 = ((($db)) + 4|0);
      $16 = HEAP32[$__end_$i151>>2]|0;
      $__first_$i$i$i$i152 = ((($db)) + 8|0);
      $17 = HEAP32[$__first_$i$i$i$i152>>2]|0;
      $cmp$i153 = ($16>>>0)<($17>>>0);
      if ($cmp$i153) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($16,$ref$tmp12);
       $18 = HEAP32[$__end_$i151>>2]|0;
       $incdec$ptr$i154 = ((($18)) + 24|0);
       HEAP32[$__end_$i151>>2] = $incdec$ptr$i154;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp12|0));
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        $21 = ___cxa_find_matching_catch_2()|0;
        $22 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp12);
        $ehselector$slot$0 = $22;$exn$slot$0 = $21;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp12);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 83:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp18,6170);
      $__end_$i159 = ((($db)) + 4|0);
      $23 = HEAP32[$__end_$i159>>2]|0;
      $__first_$i$i$i$i160 = ((($db)) + 8|0);
      $24 = HEAP32[$__first_$i$i$i$i160>>2]|0;
      $cmp$i161 = ($23>>>0)<($24>>>0);
      if ($cmp$i161) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($23,$ref$tmp18);
       $25 = HEAP32[$__end_$i159>>2]|0;
       $incdec$ptr$i162 = ((($25)) + 24|0);
       HEAP32[$__end_$i159>>2] = $incdec$ptr$i162;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp18|0));
       $26 = __THREW__; __THREW__ = 0;
       $27 = $26&1;
       if ($27) {
        $28 = ___cxa_find_matching_catch_2()|0;
        $29 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp18);
        $ehselector$slot$0 = $29;$exn$slot$0 = $28;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp18);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 99:  {
     $30 = HEAP8[$arrayidx1>>0]|0;
     $conv24 = $30 << 24 >> 24;
     switch ($conv24|0) {
     case 108:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp27,6180);
      $__end_$i167 = ((($db)) + 4|0);
      $31 = HEAP32[$__end_$i167>>2]|0;
      $__first_$i$i$i$i168 = ((($db)) + 8|0);
      $32 = HEAP32[$__first_$i$i$i$i168>>2]|0;
      $cmp$i169 = ($31>>>0)<($32>>>0);
      if ($cmp$i169) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($31,$ref$tmp27);
       $33 = HEAP32[$__end_$i167>>2]|0;
       $incdec$ptr$i170 = ((($33)) + 24|0);
       HEAP32[$__end_$i167>>2] = $incdec$ptr$i170;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp27|0));
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       if ($35) {
        $36 = ___cxa_find_matching_catch_2()|0;
        $37 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp27);
        $ehselector$slot$0 = $37;$exn$slot$0 = $36;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp27);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp33,6191);
      $__end_$i175 = ((($db)) + 4|0);
      $38 = HEAP32[$__end_$i175>>2]|0;
      $__first_$i$i$i$i176 = ((($db)) + 8|0);
      $39 = HEAP32[$__first_$i$i$i$i176>>2]|0;
      $cmp$i177 = ($38>>>0)<($39>>>0);
      if ($cmp$i177) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38,$ref$tmp33);
       $40 = HEAP32[$__end_$i175>>2]|0;
       $incdec$ptr$i178 = ((($40)) + 24|0);
       HEAP32[$__end_$i175>>2] = $incdec$ptr$i178;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp33|0));
       $41 = __THREW__; __THREW__ = 0;
       $42 = $41&1;
       if ($42) {
        $43 = ___cxa_find_matching_catch_2()|0;
        $44 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp33);
        $ehselector$slot$0 = $44;$exn$slot$0 = $43;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp33);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp39,6201);
      $__end_$i183 = ((($db)) + 4|0);
      $45 = HEAP32[$__end_$i183>>2]|0;
      $__first_$i$i$i$i184 = ((($db)) + 8|0);
      $46 = HEAP32[$__first_$i$i$i$i184>>2]|0;
      $cmp$i185 = ($45>>>0)<($46>>>0);
      if ($cmp$i185) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($45,$ref$tmp39);
       $47 = HEAP32[$__end_$i183>>2]|0;
       $incdec$ptr$i186 = ((($47)) + 24|0);
       HEAP32[$__end_$i183>>2] = $incdec$ptr$i186;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp39|0));
       $48 = __THREW__; __THREW__ = 0;
       $49 = $48&1;
       if ($49) {
        $50 = ___cxa_find_matching_catch_2()|0;
        $51 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp39);
        $ehselector$slot$0 = $51;$exn$slot$0 = $50;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp39);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 118:  {
      $try_to_parse_template_args44 = ((($db)) + 63|0);
      $52 = HEAP8[$try_to_parse_template_args44>>0]|0;
      HEAP8[$try_to_parse_template_args44>>0] = 0;
      $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      HEAP8[$try_to_parse_template_args44>>0] = $52;
      $cmp51 = ($call|0)==($add$ptr|0);
      if ($cmp51) {
       $retval$3 = $first;
       break L1;
      }
      $53 = HEAP32[$db>>2]|0;
      $__end_$i191 = ((($db)) + 4|0);
      $54 = HEAP32[$__end_$i191>>2]|0;
      $cmp$i192 = ($53|0)==($54|0);
      if ($cmp$i192) {
       $retval$3 = $first;
       break L1;
      }
      $first58 = ((($54)) + -24|0);
      (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first58,0,6211)|0);
      $parsed_ctor_dtor_cv = ((($db)) + 60|0);
      HEAP8[$parsed_ctor_dtor_cv>>0] = 1;
      $retval$3 = $call;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 100:  {
     $55 = HEAP8[$arrayidx1>>0]|0;
     $conv65 = $55 << 24 >> 24;
     switch ($conv65|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($ref$tmp68,6221);
      $__end_$i194 = ((($db)) + 4|0);
      $56 = HEAP32[$__end_$i194>>2]|0;
      $__first_$i$i$i$i195 = ((($db)) + 8|0);
      $57 = HEAP32[$__first_$i$i$i$i195>>2]|0;
      $cmp$i196 = ($56>>>0)<($57>>>0);
      if ($cmp$i196) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($56,$ref$tmp68);
       $58 = HEAP32[$__end_$i194>>2]|0;
       $incdec$ptr$i197 = ((($58)) + 24|0);
       HEAP32[$__end_$i194>>2] = $incdec$ptr$i197;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp68|0));
       $59 = __THREW__; __THREW__ = 0;
       $60 = $59&1;
       if ($60) {
        $61 = ___cxa_find_matching_catch_2()|0;
        $62 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp68);
        $ehselector$slot$0 = $62;$exn$slot$0 = $61;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp68);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp74,6239);
      $__end_$i202 = ((($db)) + 4|0);
      $63 = HEAP32[$__end_$i202>>2]|0;
      $__first_$i$i$i$i203 = ((($db)) + 8|0);
      $64 = HEAP32[$__first_$i$i$i$i203>>2]|0;
      $cmp$i204 = ($63>>>0)<($64>>>0);
      if ($cmp$i204) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($63,$ref$tmp74);
       $65 = HEAP32[$__end_$i202>>2]|0;
       $incdec$ptr$i205 = ((($65)) + 24|0);
       HEAP32[$__end_$i202>>2] = $incdec$ptr$i205;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp74|0));
       $66 = __THREW__; __THREW__ = 0;
       $67 = $66&1;
       if ($67) {
        $68 = ___cxa_find_matching_catch_2()|0;
        $69 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp74);
        $ehselector$slot$0 = $69;$exn$slot$0 = $68;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp74);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 108:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj16EEERAT__Kc($ref$tmp80);
      $__end_$i210 = ((($db)) + 4|0);
      $70 = HEAP32[$__end_$i210>>2]|0;
      $__first_$i$i$i$i211 = ((($db)) + 8|0);
      $71 = HEAP32[$__first_$i$i$i$i211>>2]|0;
      $cmp$i212 = ($70>>>0)<($71>>>0);
      if ($cmp$i212) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($70,$ref$tmp80);
       $72 = HEAP32[$__end_$i210>>2]|0;
       $incdec$ptr$i213 = ((($72)) + 24|0);
       HEAP32[$__end_$i210>>2] = $incdec$ptr$i213;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp80|0));
       $73 = __THREW__; __THREW__ = 0;
       $74 = $73&1;
       if ($74) {
        $75 = ___cxa_find_matching_catch_2()|0;
        $76 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp80);
        $ehselector$slot$0 = $76;$exn$slot$0 = $75;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp80);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 118:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp86,6249);
      $__end_$i218 = ((($db)) + 4|0);
      $77 = HEAP32[$__end_$i218>>2]|0;
      $__first_$i$i$i$i219 = ((($db)) + 8|0);
      $78 = HEAP32[$__first_$i$i$i$i219>>2]|0;
      $cmp$i220 = ($77>>>0)<($78>>>0);
      if ($cmp$i220) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($77,$ref$tmp86);
       $79 = HEAP32[$__end_$i218>>2]|0;
       $incdec$ptr$i221 = ((($79)) + 24|0);
       HEAP32[$__end_$i218>>2] = $incdec$ptr$i221;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp86|0));
       $80 = __THREW__; __THREW__ = 0;
       $81 = $80&1;
       if ($81) {
        $82 = ___cxa_find_matching_catch_2()|0;
        $83 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp86);
        $ehselector$slot$0 = $83;$exn$slot$0 = $82;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp86);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 86:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp92,6259);
      $__end_$i226 = ((($db)) + 4|0);
      $84 = HEAP32[$__end_$i226>>2]|0;
      $__first_$i$i$i$i227 = ((($db)) + 8|0);
      $85 = HEAP32[$__first_$i$i$i$i227>>2]|0;
      $cmp$i228 = ($84>>>0)<($85>>>0);
      if ($cmp$i228) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($84,$ref$tmp92);
       $86 = HEAP32[$__end_$i226>>2]|0;
       $incdec$ptr$i229 = ((($86)) + 24|0);
       HEAP32[$__end_$i226>>2] = $incdec$ptr$i229;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp92|0));
       $87 = __THREW__; __THREW__ = 0;
       $88 = $87&1;
       if ($88) {
        $89 = ___cxa_find_matching_catch_2()|0;
        $90 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp92);
        $ehselector$slot$0 = $90;$exn$slot$0 = $89;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp92);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 101:  {
     $91 = HEAP8[$arrayidx1>>0]|0;
     $conv99 = $91 << 24 >> 24;
     switch ($conv99|0) {
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp102,6270);
      $__end_$i234 = ((($db)) + 4|0);
      $92 = HEAP32[$__end_$i234>>2]|0;
      $__first_$i$i$i$i235 = ((($db)) + 8|0);
      $93 = HEAP32[$__first_$i$i$i$i235>>2]|0;
      $cmp$i236 = ($92>>>0)<($93>>>0);
      if ($cmp$i236) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($92,$ref$tmp102);
       $94 = HEAP32[$__end_$i234>>2]|0;
       $incdec$ptr$i237 = ((($94)) + 24|0);
       HEAP32[$__end_$i234>>2] = $incdec$ptr$i237;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp102|0));
       $95 = __THREW__; __THREW__ = 0;
       $96 = $95&1;
       if ($96) {
        $97 = ___cxa_find_matching_catch_2()|0;
        $98 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp102);
        $ehselector$slot$0 = $98;$exn$slot$0 = $97;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp102);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 79:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp108,6280);
      $__end_$i242 = ((($db)) + 4|0);
      $99 = HEAP32[$__end_$i242>>2]|0;
      $__first_$i$i$i$i243 = ((($db)) + 8|0);
      $100 = HEAP32[$__first_$i$i$i$i243>>2]|0;
      $cmp$i244 = ($99>>>0)<($100>>>0);
      if ($cmp$i244) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($99,$ref$tmp108);
       $101 = HEAP32[$__end_$i242>>2]|0;
       $incdec$ptr$i245 = ((($101)) + 24|0);
       HEAP32[$__end_$i242>>2] = $incdec$ptr$i245;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp108|0));
       $102 = __THREW__; __THREW__ = 0;
       $103 = $102&1;
       if ($103) {
        $104 = ___cxa_find_matching_catch_2()|0;
        $105 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp108);
        $ehselector$slot$0 = $105;$exn$slot$0 = $104;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp108);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 113:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp114,6291);
      $__end_$i250 = ((($db)) + 4|0);
      $106 = HEAP32[$__end_$i250>>2]|0;
      $__first_$i$i$i$i251 = ((($db)) + 8|0);
      $107 = HEAP32[$__first_$i$i$i$i251>>2]|0;
      $cmp$i252 = ($106>>>0)<($107>>>0);
      if ($cmp$i252) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($106,$ref$tmp114);
       $108 = HEAP32[$__end_$i250>>2]|0;
       $incdec$ptr$i253 = ((($108)) + 24|0);
       HEAP32[$__end_$i250>>2] = $incdec$ptr$i253;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp114|0));
       $109 = __THREW__; __THREW__ = 0;
       $110 = $109&1;
       if ($110) {
        $111 = ___cxa_find_matching_catch_2()|0;
        $112 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp114);
        $ehselector$slot$0 = $112;$exn$slot$0 = $111;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp114);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 103:  {
     $113 = HEAP8[$arrayidx1>>0]|0;
     $conv121 = $113 << 24 >> 24;
     switch ($conv121|0) {
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp124,6302);
      $__end_$i258 = ((($db)) + 4|0);
      $114 = HEAP32[$__end_$i258>>2]|0;
      $__first_$i$i$i$i259 = ((($db)) + 8|0);
      $115 = HEAP32[$__first_$i$i$i$i259>>2]|0;
      $cmp$i260 = ($114>>>0)<($115>>>0);
      if ($cmp$i260) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($114,$ref$tmp124);
       $116 = HEAP32[$__end_$i258>>2]|0;
       $incdec$ptr$i261 = ((($116)) + 24|0);
       HEAP32[$__end_$i258>>2] = $incdec$ptr$i261;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp124|0));
       $117 = __THREW__; __THREW__ = 0;
       $118 = $117&1;
       if ($118) {
        $119 = ___cxa_find_matching_catch_2()|0;
        $120 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp124);
        $ehselector$slot$0 = $120;$exn$slot$0 = $119;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp124);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp130,6313);
      $__end_$i266 = ((($db)) + 4|0);
      $121 = HEAP32[$__end_$i266>>2]|0;
      $__first_$i$i$i$i267 = ((($db)) + 8|0);
      $122 = HEAP32[$__first_$i$i$i$i267>>2]|0;
      $cmp$i268 = ($121>>>0)<($122>>>0);
      if ($cmp$i268) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($121,$ref$tmp130);
       $123 = HEAP32[$__end_$i266>>2]|0;
       $incdec$ptr$i269 = ((($123)) + 24|0);
       HEAP32[$__end_$i266>>2] = $incdec$ptr$i269;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp130|0));
       $124 = __THREW__; __THREW__ = 0;
       $125 = $124&1;
       if ($125) {
        $126 = ___cxa_find_matching_catch_2()|0;
        $127 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp130);
        $ehselector$slot$0 = $127;$exn$slot$0 = $126;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp130);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 105:  {
     $128 = HEAP8[$arrayidx1>>0]|0;
     $cmp138 = ($128<<24>>24)==(120);
     if (!($cmp138)) {
      $retval$3 = $first;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp141,6323);
     $__end_$i274 = ((($db)) + 4|0);
     $129 = HEAP32[$__end_$i274>>2]|0;
     $__first_$i$i$i$i275 = ((($db)) + 8|0);
     $130 = HEAP32[$__first_$i$i$i$i275>>2]|0;
     $cmp$i276 = ($129>>>0)<($130>>>0);
     if ($cmp$i276) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($129,$ref$tmp141);
      $131 = HEAP32[$__end_$i274>>2]|0;
      $incdec$ptr$i277 = ((($131)) + 24|0);
      HEAP32[$__end_$i274>>2] = $incdec$ptr$i277;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp141|0));
      $132 = __THREW__; __THREW__ = 0;
      $133 = $132&1;
      if ($133) {
       $134 = ___cxa_find_matching_catch_2()|0;
       $135 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp141);
       $ehselector$slot$0 = $135;$exn$slot$0 = $134;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp141);
     $retval$3 = $add$ptr;
     break L1;
     break;
    }
    case 108:  {
     $136 = HEAP8[$arrayidx1>>0]|0;
     $conv148 = $136 << 24 >> 24;
     switch ($conv148|0) {
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp151,6334);
      $__end_$i282 = ((($db)) + 4|0);
      $137 = HEAP32[$__end_$i282>>2]|0;
      $__first_$i$i$i$i283 = ((($db)) + 8|0);
      $138 = HEAP32[$__first_$i$i$i$i283>>2]|0;
      $cmp$i284 = ($137>>>0)<($138>>>0);
      if ($cmp$i284) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($137,$ref$tmp151);
       $139 = HEAP32[$__end_$i282>>2]|0;
       $incdec$ptr$i285 = ((($139)) + 24|0);
       HEAP32[$__end_$i282>>2] = $incdec$ptr$i285;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp151|0));
       $140 = __THREW__; __THREW__ = 0;
       $141 = $140&1;
       if ($141) {
        $142 = ___cxa_find_matching_catch_2()|0;
        $143 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp151);
        $ehselector$slot$0 = $143;$exn$slot$0 = $142;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp151);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 105:  {
      $call158 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
      $cmp160 = ($call158|0)==($add$ptr|0);
      if ($cmp160) {
       $retval$3 = $first;
       break L1;
      }
      $144 = HEAP32[$db>>2]|0;
      $__end_$i291 = ((($db)) + 4|0);
      $145 = HEAP32[$__end_$i291>>2]|0;
      $cmp$i292 = ($144|0)==($145|0);
      if ($cmp$i292) {
       $retval$3 = $first;
       break L1;
      }
      $first168 = ((($145)) + -24|0);
      (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first168,0,6345)|0);
      $retval$3 = $call158;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp176,6357);
      $__end_$i295 = ((($db)) + 4|0);
      $146 = HEAP32[$__end_$i295>>2]|0;
      $__first_$i$i$i$i296 = ((($db)) + 8|0);
      $147 = HEAP32[$__first_$i$i$i$i296>>2]|0;
      $cmp$i297 = ($146>>>0)<($147>>>0);
      if ($cmp$i297) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($146,$ref$tmp176);
       $148 = HEAP32[$__end_$i295>>2]|0;
       $incdec$ptr$i298 = ((($148)) + 24|0);
       HEAP32[$__end_$i295>>2] = $incdec$ptr$i298;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp176|0));
       $149 = __THREW__; __THREW__ = 0;
       $150 = $149&1;
       if ($150) {
        $151 = ___cxa_find_matching_catch_2()|0;
        $152 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp176);
        $ehselector$slot$0 = $152;$exn$slot$0 = $151;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp176);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 83:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($ref$tmp182,6368);
      $__end_$i303 = ((($db)) + 4|0);
      $153 = HEAP32[$__end_$i303>>2]|0;
      $__first_$i$i$i$i304 = ((($db)) + 8|0);
      $154 = HEAP32[$__first_$i$i$i$i304>>2]|0;
      $cmp$i305 = ($153>>>0)<($154>>>0);
      if ($cmp$i305) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($153,$ref$tmp182);
       $155 = HEAP32[$__end_$i303>>2]|0;
       $incdec$ptr$i306 = ((($155)) + 24|0);
       HEAP32[$__end_$i303>>2] = $incdec$ptr$i306;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp182|0));
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        $158 = ___cxa_find_matching_catch_2()|0;
        $159 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp182);
        $ehselector$slot$0 = $159;$exn$slot$0 = $158;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp182);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp188,6380);
      $__end_$i311 = ((($db)) + 4|0);
      $160 = HEAP32[$__end_$i311>>2]|0;
      $__first_$i$i$i$i312 = ((($db)) + 8|0);
      $161 = HEAP32[$__first_$i$i$i$i312>>2]|0;
      $cmp$i313 = ($160>>>0)<($161>>>0);
      if ($cmp$i313) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($160,$ref$tmp188);
       $162 = HEAP32[$__end_$i311>>2]|0;
       $incdec$ptr$i314 = ((($162)) + 24|0);
       HEAP32[$__end_$i311>>2] = $incdec$ptr$i314;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp188|0));
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        $165 = ___cxa_find_matching_catch_2()|0;
        $166 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp188);
        $ehselector$slot$0 = $166;$exn$slot$0 = $165;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp188);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 109:  {
     $167 = HEAP8[$arrayidx1>>0]|0;
     $conv195 = $167 << 24 >> 24;
     switch ($conv195|0) {
     case 105:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp198,6390);
      $__end_$i319 = ((($db)) + 4|0);
      $168 = HEAP32[$__end_$i319>>2]|0;
      $__first_$i$i$i$i320 = ((($db)) + 8|0);
      $169 = HEAP32[$__first_$i$i$i$i320>>2]|0;
      $cmp$i321 = ($168>>>0)<($169>>>0);
      if ($cmp$i321) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($168,$ref$tmp198);
       $170 = HEAP32[$__end_$i319>>2]|0;
       $incdec$ptr$i322 = ((($170)) + 24|0);
       HEAP32[$__end_$i319>>2] = $incdec$ptr$i322;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp198|0));
       $171 = __THREW__; __THREW__ = 0;
       $172 = $171&1;
       if ($172) {
        $173 = ___cxa_find_matching_catch_2()|0;
        $174 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp198);
        $ehselector$slot$0 = $174;$exn$slot$0 = $173;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp198);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 73:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp204,6400);
      $__end_$i327 = ((($db)) + 4|0);
      $175 = HEAP32[$__end_$i327>>2]|0;
      $__first_$i$i$i$i328 = ((($db)) + 8|0);
      $176 = HEAP32[$__first_$i$i$i$i328>>2]|0;
      $cmp$i329 = ($175>>>0)<($176>>>0);
      if ($cmp$i329) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($175,$ref$tmp204);
       $177 = HEAP32[$__end_$i327>>2]|0;
       $incdec$ptr$i330 = ((($177)) + 24|0);
       HEAP32[$__end_$i327>>2] = $incdec$ptr$i330;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp204|0));
       $178 = __THREW__; __THREW__ = 0;
       $179 = $178&1;
       if ($179) {
        $180 = ___cxa_find_matching_catch_2()|0;
        $181 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp204);
        $ehselector$slot$0 = $181;$exn$slot$0 = $180;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp204);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 108:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp210,6239);
      $__end_$i335 = ((($db)) + 4|0);
      $182 = HEAP32[$__end_$i335>>2]|0;
      $__first_$i$i$i$i336 = ((($db)) + 8|0);
      $183 = HEAP32[$__first_$i$i$i$i336>>2]|0;
      $cmp$i337 = ($182>>>0)<($183>>>0);
      if ($cmp$i337) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($182,$ref$tmp210);
       $184 = HEAP32[$__end_$i335>>2]|0;
       $incdec$ptr$i338 = ((($184)) + 24|0);
       HEAP32[$__end_$i335>>2] = $incdec$ptr$i338;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp210|0));
       $185 = __THREW__; __THREW__ = 0;
       $186 = $185&1;
       if ($186) {
        $187 = ___cxa_find_matching_catch_2()|0;
        $188 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp210);
        $ehselector$slot$0 = $188;$exn$slot$0 = $187;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp210);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 76:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp216,6411);
      $__end_$i343 = ((($db)) + 4|0);
      $189 = HEAP32[$__end_$i343>>2]|0;
      $__first_$i$i$i$i344 = ((($db)) + 8|0);
      $190 = HEAP32[$__first_$i$i$i$i344>>2]|0;
      $cmp$i345 = ($189>>>0)<($190>>>0);
      if ($cmp$i345) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($189,$ref$tmp216);
       $191 = HEAP32[$__end_$i343>>2]|0;
       $incdec$ptr$i346 = ((($191)) + 24|0);
       HEAP32[$__end_$i343>>2] = $incdec$ptr$i346;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp216|0));
       $192 = __THREW__; __THREW__ = 0;
       $193 = $192&1;
       if ($193) {
        $194 = ___cxa_find_matching_catch_2()|0;
        $195 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp216);
        $ehselector$slot$0 = $195;$exn$slot$0 = $194;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp216);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp222,6422);
      $__end_$i351 = ((($db)) + 4|0);
      $196 = HEAP32[$__end_$i351>>2]|0;
      $__first_$i$i$i$i352 = ((($db)) + 8|0);
      $197 = HEAP32[$__first_$i$i$i$i352>>2]|0;
      $cmp$i353 = ($196>>>0)<($197>>>0);
      if ($cmp$i353) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($196,$ref$tmp222);
       $198 = HEAP32[$__end_$i351>>2]|0;
       $incdec$ptr$i354 = ((($198)) + 24|0);
       HEAP32[$__end_$i351>>2] = $incdec$ptr$i354;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp222|0));
       $199 = __THREW__; __THREW__ = 0;
       $200 = $199&1;
       if ($200) {
        $201 = ___cxa_find_matching_catch_2()|0;
        $202 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp222);
        $ehselector$slot$0 = $202;$exn$slot$0 = $201;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp222);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 110:  {
     $203 = HEAP8[$arrayidx1>>0]|0;
     $conv229 = $203 << 24 >> 24;
     switch ($conv229|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($ref$tmp232,6433);
      $__end_$i359 = ((($db)) + 4|0);
      $204 = HEAP32[$__end_$i359>>2]|0;
      $__first_$i$i$i$i360 = ((($db)) + 8|0);
      $205 = HEAP32[$__first_$i$i$i$i360>>2]|0;
      $cmp$i361 = ($204>>>0)<($205>>>0);
      if ($cmp$i361) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($204,$ref$tmp232);
       $206 = HEAP32[$__end_$i359>>2]|0;
       $incdec$ptr$i362 = ((($206)) + 24|0);
       HEAP32[$__end_$i359>>2] = $incdec$ptr$i362;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp232|0));
       $207 = __THREW__; __THREW__ = 0;
       $208 = $207&1;
       if ($208) {
        $209 = ___cxa_find_matching_catch_2()|0;
        $210 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp232);
        $ehselector$slot$0 = $210;$exn$slot$0 = $209;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp232);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp238,6448);
      $__end_$i367 = ((($db)) + 4|0);
      $211 = HEAP32[$__end_$i367>>2]|0;
      $__first_$i$i$i$i368 = ((($db)) + 8|0);
      $212 = HEAP32[$__first_$i$i$i$i368>>2]|0;
      $cmp$i369 = ($211>>>0)<($212>>>0);
      if ($cmp$i369) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($211,$ref$tmp238);
       $213 = HEAP32[$__end_$i367>>2]|0;
       $incdec$ptr$i370 = ((($213)) + 24|0);
       HEAP32[$__end_$i367>>2] = $incdec$ptr$i370;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp238|0));
       $214 = __THREW__; __THREW__ = 0;
       $215 = $214&1;
       if ($215) {
        $216 = ___cxa_find_matching_catch_2()|0;
        $217 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp238);
        $ehselector$slot$0 = $217;$exn$slot$0 = $216;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp238);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 103:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp244,6390);
      $__end_$i375 = ((($db)) + 4|0);
      $218 = HEAP32[$__end_$i375>>2]|0;
      $__first_$i$i$i$i376 = ((($db)) + 8|0);
      $219 = HEAP32[$__first_$i$i$i$i376>>2]|0;
      $cmp$i377 = ($218>>>0)<($219>>>0);
      if ($cmp$i377) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($218,$ref$tmp244);
       $220 = HEAP32[$__end_$i375>>2]|0;
       $incdec$ptr$i378 = ((($220)) + 24|0);
       HEAP32[$__end_$i375>>2] = $incdec$ptr$i378;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp244|0));
       $221 = __THREW__; __THREW__ = 0;
       $222 = $221&1;
       if ($222) {
        $223 = ___cxa_find_matching_catch_2()|0;
        $224 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp244);
        $ehselector$slot$0 = $224;$exn$slot$0 = $223;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp244);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp250,6459);
      $__end_$i383 = ((($db)) + 4|0);
      $225 = HEAP32[$__end_$i383>>2]|0;
      $__first_$i$i$i$i384 = ((($db)) + 8|0);
      $226 = HEAP32[$__first_$i$i$i$i384>>2]|0;
      $cmp$i385 = ($225>>>0)<($226>>>0);
      if ($cmp$i385) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($225,$ref$tmp250);
       $227 = HEAP32[$__end_$i383>>2]|0;
       $incdec$ptr$i386 = ((($227)) + 24|0);
       HEAP32[$__end_$i383>>2] = $incdec$ptr$i386;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp250|0));
       $228 = __THREW__; __THREW__ = 0;
       $229 = $228&1;
       if ($229) {
        $230 = ___cxa_find_matching_catch_2()|0;
        $231 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp250);
        $ehselector$slot$0 = $231;$exn$slot$0 = $230;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp250);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 119:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($ref$tmp256,6469);
      $__end_$i391 = ((($db)) + 4|0);
      $232 = HEAP32[$__end_$i391>>2]|0;
      $__first_$i$i$i$i392 = ((($db)) + 8|0);
      $233 = HEAP32[$__first_$i$i$i$i392>>2]|0;
      $cmp$i393 = ($232>>>0)<($233>>>0);
      if ($cmp$i393) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($232,$ref$tmp256);
       $234 = HEAP32[$__end_$i391>>2]|0;
       $incdec$ptr$i394 = ((($234)) + 24|0);
       HEAP32[$__end_$i391>>2] = $incdec$ptr$i394;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp256|0));
       $235 = __THREW__; __THREW__ = 0;
       $236 = $235&1;
       if ($236) {
        $237 = ___cxa_find_matching_catch_2()|0;
        $238 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp256);
        $ehselector$slot$0 = $238;$exn$slot$0 = $237;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp256);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 111:  {
     $239 = HEAP8[$arrayidx1>>0]|0;
     $conv263 = $239 << 24 >> 24;
     switch ($conv263|0) {
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp266,6482);
      $__end_$i399 = ((($db)) + 4|0);
      $240 = HEAP32[$__end_$i399>>2]|0;
      $__first_$i$i$i$i400 = ((($db)) + 8|0);
      $241 = HEAP32[$__first_$i$i$i$i400>>2]|0;
      $cmp$i401 = ($240>>>0)<($241>>>0);
      if ($cmp$i401) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($240,$ref$tmp266);
       $242 = HEAP32[$__end_$i399>>2]|0;
       $incdec$ptr$i402 = ((($242)) + 24|0);
       HEAP32[$__end_$i399>>2] = $incdec$ptr$i402;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp266|0));
       $243 = __THREW__; __THREW__ = 0;
       $244 = $243&1;
       if ($244) {
        $245 = ___cxa_find_matching_catch_2()|0;
        $246 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp266);
        $ehselector$slot$0 = $246;$exn$slot$0 = $245;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp266);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 114:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp272,6493);
      $__end_$i407 = ((($db)) + 4|0);
      $247 = HEAP32[$__end_$i407>>2]|0;
      $__first_$i$i$i$i408 = ((($db)) + 8|0);
      $248 = HEAP32[$__first_$i$i$i$i408>>2]|0;
      $cmp$i409 = ($247>>>0)<($248>>>0);
      if ($cmp$i409) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($247,$ref$tmp272);
       $249 = HEAP32[$__end_$i407>>2]|0;
       $incdec$ptr$i410 = ((($249)) + 24|0);
       HEAP32[$__end_$i407>>2] = $incdec$ptr$i410;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp272|0));
       $250 = __THREW__; __THREW__ = 0;
       $251 = $250&1;
       if ($251) {
        $252 = ___cxa_find_matching_catch_2()|0;
        $253 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp272);
        $ehselector$slot$0 = $253;$exn$slot$0 = $252;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp272);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 82:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp278,6503);
      $__end_$i415 = ((($db)) + 4|0);
      $254 = HEAP32[$__end_$i415>>2]|0;
      $__first_$i$i$i$i416 = ((($db)) + 8|0);
      $255 = HEAP32[$__first_$i$i$i$i416>>2]|0;
      $cmp$i417 = ($254>>>0)<($255>>>0);
      if ($cmp$i417) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($254,$ref$tmp278);
       $256 = HEAP32[$__end_$i415>>2]|0;
       $incdec$ptr$i418 = ((($256)) + 24|0);
       HEAP32[$__end_$i415>>2] = $incdec$ptr$i418;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp278|0));
       $257 = __THREW__; __THREW__ = 0;
       $258 = $257&1;
       if ($258) {
        $259 = ___cxa_find_matching_catch_2()|0;
        $260 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp278);
        $ehselector$slot$0 = $260;$exn$slot$0 = $259;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp278);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 112:  {
     $261 = HEAP8[$arrayidx1>>0]|0;
     $conv285 = $261 << 24 >> 24;
     switch ($conv285|0) {
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($ref$tmp288,6514);
      $__end_$i423 = ((($db)) + 4|0);
      $262 = HEAP32[$__end_$i423>>2]|0;
      $__first_$i$i$i$i424 = ((($db)) + 8|0);
      $263 = HEAP32[$__first_$i$i$i$i424>>2]|0;
      $cmp$i425 = ($262>>>0)<($263>>>0);
      if ($cmp$i425) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($262,$ref$tmp288);
       $264 = HEAP32[$__end_$i423>>2]|0;
       $incdec$ptr$i426 = ((($264)) + 24|0);
       HEAP32[$__end_$i423>>2] = $incdec$ptr$i426;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp288|0));
       $265 = __THREW__; __THREW__ = 0;
       $266 = $265&1;
       if ($266) {
        $267 = ___cxa_find_matching_catch_2()|0;
        $268 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp288);
        $ehselector$slot$0 = $268;$exn$slot$0 = $267;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp288);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 108:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp294,6526);
      $__end_$i431 = ((($db)) + 4|0);
      $269 = HEAP32[$__end_$i431>>2]|0;
      $__first_$i$i$i$i432 = ((($db)) + 8|0);
      $270 = HEAP32[$__first_$i$i$i$i432>>2]|0;
      $cmp$i433 = ($269>>>0)<($270>>>0);
      if ($cmp$i433) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($269,$ref$tmp294);
       $271 = HEAP32[$__end_$i431>>2]|0;
       $incdec$ptr$i434 = ((($271)) + 24|0);
       HEAP32[$__end_$i431>>2] = $incdec$ptr$i434;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp294|0));
       $272 = __THREW__; __THREW__ = 0;
       $273 = $272&1;
       if ($273) {
        $274 = ___cxa_find_matching_catch_2()|0;
        $275 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp294);
        $ehselector$slot$0 = $275;$exn$slot$0 = $274;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp294);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 76:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp300,6536);
      $__end_$i439 = ((($db)) + 4|0);
      $276 = HEAP32[$__end_$i439>>2]|0;
      $__first_$i$i$i$i440 = ((($db)) + 8|0);
      $277 = HEAP32[$__first_$i$i$i$i440>>2]|0;
      $cmp$i441 = ($276>>>0)<($277>>>0);
      if ($cmp$i441) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($276,$ref$tmp300);
       $278 = HEAP32[$__end_$i439>>2]|0;
       $incdec$ptr$i442 = ((($278)) + 24|0);
       HEAP32[$__end_$i439>>2] = $incdec$ptr$i442;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp300|0));
       $279 = __THREW__; __THREW__ = 0;
       $280 = $279&1;
       if ($280) {
        $281 = ___cxa_find_matching_catch_2()|0;
        $282 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp300);
        $ehselector$slot$0 = $282;$exn$slot$0 = $281;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp300);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 112:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp306,6547);
      $__end_$i447 = ((($db)) + 4|0);
      $283 = HEAP32[$__end_$i447>>2]|0;
      $__first_$i$i$i$i448 = ((($db)) + 8|0);
      $284 = HEAP32[$__first_$i$i$i$i448>>2]|0;
      $cmp$i449 = ($283>>>0)<($284>>>0);
      if ($cmp$i449) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($283,$ref$tmp306);
       $285 = HEAP32[$__end_$i447>>2]|0;
       $incdec$ptr$i450 = ((($285)) + 24|0);
       HEAP32[$__end_$i447>>2] = $incdec$ptr$i450;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp306|0));
       $286 = __THREW__; __THREW__ = 0;
       $287 = $286&1;
       if ($287) {
        $288 = ___cxa_find_matching_catch_2()|0;
        $289 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp306);
        $ehselector$slot$0 = $289;$exn$slot$0 = $288;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp306);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp312,6526);
      $__end_$i455 = ((($db)) + 4|0);
      $290 = HEAP32[$__end_$i455>>2]|0;
      $__first_$i$i$i$i456 = ((($db)) + 8|0);
      $291 = HEAP32[$__first_$i$i$i$i456>>2]|0;
      $cmp$i457 = ($290>>>0)<($291>>>0);
      if ($cmp$i457) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($290,$ref$tmp312);
       $292 = HEAP32[$__end_$i455>>2]|0;
       $incdec$ptr$i458 = ((($292)) + 24|0);
       HEAP32[$__end_$i455>>2] = $incdec$ptr$i458;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp312|0));
       $293 = __THREW__; __THREW__ = 0;
       $294 = $293&1;
       if ($294) {
        $295 = ___cxa_find_matching_catch_2()|0;
        $296 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp312);
        $ehselector$slot$0 = $296;$exn$slot$0 = $295;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp312);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp318,6558);
      $__end_$i463 = ((($db)) + 4|0);
      $297 = HEAP32[$__end_$i463>>2]|0;
      $__first_$i$i$i$i464 = ((($db)) + 8|0);
      $298 = HEAP32[$__first_$i$i$i$i464>>2]|0;
      $cmp$i465 = ($297>>>0)<($298>>>0);
      if ($cmp$i465) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($297,$ref$tmp318);
       $299 = HEAP32[$__end_$i463>>2]|0;
       $incdec$ptr$i466 = ((($299)) + 24|0);
       HEAP32[$__end_$i463>>2] = $incdec$ptr$i466;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp318|0));
       $300 = __THREW__; __THREW__ = 0;
       $301 = $300&1;
       if ($301) {
        $302 = ___cxa_find_matching_catch_2()|0;
        $303 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp318);
        $ehselector$slot$0 = $303;$exn$slot$0 = $302;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp318);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 113:  {
     $304 = HEAP8[$arrayidx1>>0]|0;
     $cmp326 = ($304<<24>>24)==(117);
     if (!($cmp326)) {
      $retval$3 = $first;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp329,6569);
     $__end_$i471 = ((($db)) + 4|0);
     $305 = HEAP32[$__end_$i471>>2]|0;
     $__first_$i$i$i$i472 = ((($db)) + 8|0);
     $306 = HEAP32[$__first_$i$i$i$i472>>2]|0;
     $cmp$i473 = ($305>>>0)<($306>>>0);
     if ($cmp$i473) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($305,$ref$tmp329);
      $307 = HEAP32[$__end_$i471>>2]|0;
      $incdec$ptr$i474 = ((($307)) + 24|0);
      HEAP32[$__end_$i471>>2] = $incdec$ptr$i474;
     } else {
      __THREW__ = 0;
      invoke_vii(64,($db|0),($ref$tmp329|0));
      $308 = __THREW__; __THREW__ = 0;
      $309 = $308&1;
      if ($309) {
       $310 = ___cxa_find_matching_catch_2()|0;
       $311 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp329);
       $ehselector$slot$0 = $311;$exn$slot$0 = $310;
       break L3;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp329);
     $retval$3 = $add$ptr;
     break L1;
     break;
    }
    case 114:  {
     $312 = HEAP8[$arrayidx1>>0]|0;
     $conv336 = $312 << 24 >> 24;
     switch ($conv336|0) {
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($ref$tmp339,6579);
      $__end_$i479 = ((($db)) + 4|0);
      $313 = HEAP32[$__end_$i479>>2]|0;
      $__first_$i$i$i$i480 = ((($db)) + 8|0);
      $314 = HEAP32[$__first_$i$i$i$i480>>2]|0;
      $cmp$i481 = ($313>>>0)<($314>>>0);
      if ($cmp$i481) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($313,$ref$tmp339);
       $315 = HEAP32[$__end_$i479>>2]|0;
       $incdec$ptr$i482 = ((($315)) + 24|0);
       HEAP32[$__end_$i479>>2] = $incdec$ptr$i482;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp339|0));
       $316 = __THREW__; __THREW__ = 0;
       $317 = $316&1;
       if ($317) {
        $318 = ___cxa_find_matching_catch_2()|0;
        $319 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp339);
        $ehselector$slot$0 = $319;$exn$slot$0 = $318;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp339);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 77:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp345,6589);
      $__end_$i487 = ((($db)) + 4|0);
      $320 = HEAP32[$__end_$i487>>2]|0;
      $__first_$i$i$i$i488 = ((($db)) + 8|0);
      $321 = HEAP32[$__first_$i$i$i$i488>>2]|0;
      $cmp$i489 = ($320>>>0)<($321>>>0);
      if ($cmp$i489) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($320,$ref$tmp345);
       $322 = HEAP32[$__end_$i487>>2]|0;
       $incdec$ptr$i490 = ((($322)) + 24|0);
       HEAP32[$__end_$i487>>2] = $incdec$ptr$i490;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp345|0));
       $323 = __THREW__; __THREW__ = 0;
       $324 = $323&1;
       if ($324) {
        $325 = ___cxa_find_matching_catch_2()|0;
        $326 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp345);
        $ehselector$slot$0 = $326;$exn$slot$0 = $325;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp345);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($ref$tmp351,6600);
      $__end_$i495 = ((($db)) + 4|0);
      $327 = HEAP32[$__end_$i495>>2]|0;
      $__first_$i$i$i$i496 = ((($db)) + 8|0);
      $328 = HEAP32[$__first_$i$i$i$i496>>2]|0;
      $cmp$i497 = ($327>>>0)<($328>>>0);
      if ($cmp$i497) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($327,$ref$tmp351);
       $329 = HEAP32[$__end_$i495>>2]|0;
       $incdec$ptr$i498 = ((($329)) + 24|0);
       HEAP32[$__end_$i495>>2] = $incdec$ptr$i498;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp351|0));
       $330 = __THREW__; __THREW__ = 0;
       $331 = $330&1;
       if ($331) {
        $332 = ___cxa_find_matching_catch_2()|0;
        $333 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp351);
        $ehselector$slot$0 = $333;$exn$slot$0 = $332;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp351);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     case 83:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($ref$tmp357,6611);
      $__end_$i503 = ((($db)) + 4|0);
      $334 = HEAP32[$__end_$i503>>2]|0;
      $__first_$i$i$i$i504 = ((($db)) + 8|0);
      $335 = HEAP32[$__first_$i$i$i$i504>>2]|0;
      $cmp$i505 = ($334>>>0)<($335>>>0);
      if ($cmp$i505) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($334,$ref$tmp357);
       $336 = HEAP32[$__end_$i503>>2]|0;
       $incdec$ptr$i506 = ((($336)) + 24|0);
       HEAP32[$__end_$i503>>2] = $incdec$ptr$i506;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp357|0));
       $337 = __THREW__; __THREW__ = 0;
       $338 = $337&1;
       if ($338) {
        $339 = ___cxa_find_matching_catch_2()|0;
        $340 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp357);
        $ehselector$slot$0 = $340;$exn$slot$0 = $339;
        break L3;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp357);
      $retval$3 = $add$ptr;
      break L1;
      break;
     }
     default: {
      $retval$3 = $first;
      break L1;
     }
     }
     break;
    }
    case 118:  {
     $341 = HEAP8[$arrayidx1>>0]|0;
     $conv364 = $341 << 24 >> 24;
     $isdigittmp = (($conv364) + -48)|0;
     $isdigit = ($isdigittmp>>>0)<(10);
     if (!($isdigit)) {
      $retval$3 = $first;
      break L1;
     }
     $call370 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
     $cmp372 = ($call370|0)==($add$ptr|0);
     if ($cmp372) {
      $retval$3 = $first;
      break L1;
     }
     $342 = HEAP32[$db>>2]|0;
     $__end_$i512 = ((($db)) + 4|0);
     $343 = HEAP32[$__end_$i512>>2]|0;
     $cmp$i513 = ($342|0)==($343|0);
     if ($cmp$i513) {
      $retval$3 = $first;
      break L1;
     }
     $first380 = ((($343)) + -24|0);
     (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first380,0,6211)|0);
     $retval$3 = $call370;
     break L1;
     break;
    }
    default: {
     $retval$3 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($exn$slot$0|0);
   // unreachable;
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,10);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,9);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,17);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj16EEERAT__Kc($this) {
 $this = $this|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,6623,15);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,11);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,14);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,12);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueERS7_E4typeESC_SC_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__cap_$i$i = 0, $__first$addr$0 = 0, $__p$0 = 0, $__size_$i$i = 0, $__size_$i2$i = 0, $__size_$i3$i = 0, $add = 0, $add$ptr = 0, $and$i$i = 0, $cmp = 0, $cmp7 = 0, $cond$i15 = 0;
 var $cond$i18 = 0, $cond$i9 = 0, $conv$i$i = 0, $conv$i$i4 = 0, $incdec$ptr = 0, $incdec$ptr8 = 0, $phitmp$i = 0, $ref$tmp = 0, $scevgep = 0, $scevgep16 = 0, $scevgep17 = 0, $sub = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$sub$i$i = 0, $sub5 = 0, $tobool = 0, $tobool$i$i = 0, $tobool$i$i12 = 0, $tobool$i$i3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $sub$ptr$rhs$cast$i$i = $__first;
 $ref$tmp = sp;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__size_$i3$i = ((($this)) + 4|0);
  $1 = HEAP32[$__size_$i3$i>>2]|0;
  $__cap_$i$i = ((($this)) + 8|0);
  $2 = HEAP32[$__cap_$i$i>>2]|0;
  $and$i$i = $2 & 2147483647;
  $phitmp$i = (($and$i$i) + -1)|0;
  $cond$i18 = $1;$cond$i9 = $phitmp$i;
 } else {
  $conv$i$i = $0&255;
  $cond$i18 = $conv$i$i;$cond$i9 = 10;
 }
 $sub$ptr$lhs$cast$i$i = $__last;
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0;
 $tobool = ($sub$ptr$sub$i$i|0)==(0);
 do {
  if (!($tobool)) {
   $sub = (($cond$i9) - ($cond$i18))|0;
   $cmp = ($sub>>>0)<($sub$ptr$sub$i$i>>>0);
   $add = (($cond$i18) + ($sub$ptr$sub$i$i))|0;
   if ($cmp) {
    $sub5 = (($add) - ($cond$i9))|0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$cond$i9,$sub5,$cond$i18,$cond$i18,0);
    $$pre = HEAP8[$__size_$i$i>>0]|0;
    $3 = $$pre;
   } else {
    $3 = $0;
   }
   $tobool$i$i12 = ($3<<24>>24)<(0);
   if ($tobool$i$i12) {
    $4 = HEAP32[$this>>2]|0;
    $cond$i15 = $4;
   } else {
    $cond$i15 = $this;
   }
   $add$ptr = (($cond$i15) + ($cond$i18)|0);
   $5 = (($cond$i18) - ($sub$ptr$rhs$cast$i$i))|0;
   $scevgep = (($__last) + ($5)|0);
   $scevgep16 = $scevgep;
   $__first$addr$0 = $__first;$__p$0 = $add$ptr;
   while(1) {
    $cmp7 = ($__first$addr$0|0)==($__last|0);
    if ($cmp7) {
     break;
    }
    __ZNSt3__211char_traitsIcE6assignERcRKc($__p$0,$__first$addr$0);
    $incdec$ptr = ((($__p$0)) + 1|0);
    $incdec$ptr8 = ((($__first$addr$0)) + 1|0);
    $__first$addr$0 = $incdec$ptr8;$__p$0 = $incdec$ptr;
   }
   $scevgep17 = (($cond$i15) + ($scevgep16)|0);
   HEAP8[$ref$tmp>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($scevgep17,$ref$tmp);
   $6 = HEAP8[$__size_$i$i>>0]|0;
   $tobool$i$i3 = ($6<<24>>24)<(0);
   if ($tobool$i$i3) {
    $__size_$i2$i = ((($this)) + 4|0);
    HEAP32[$__size_$i2$i>>2] = $add;
    break;
   } else {
    $conv$i$i4 = $add&255;
    HEAP8[$__size_$i$i>>0] = $conv$i$i4;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__c$addr = 0, $__cap$0 = 0, $__cap_$i = 0, $__p$0 = 0, $__size_$i = 0, $__size_$i15 = 0, $__size_$i21 = 0, $__sz$0 = 0, $add = 0, $add22 = 0, $add23 = 0, $add24 = 0, $and$i = 0, $call12$pn = 0, $cmp = 0;
 var $conv$i = 0, $conv$i16 = 0, $incdec$ptr = 0, $ref$tmp = 0, $sub = 0, $tobool$i = 0, $tobool$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $__c$addr = sp + 1|0;
 $ref$tmp = sp;
 HEAP8[$__c$addr>>0] = $__c;
 $__size_$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i>>0]|0;
 $tobool$i = ($0<<24>>24)<(0);
 if ($tobool$i) {
  $__cap_$i = ((($this)) + 8|0);
  $1 = HEAP32[$__cap_$i>>2]|0;
  $and$i = $1 & 2147483647;
  $sub = (($and$i) + -1)|0;
  $__size_$i21 = ((($this)) + 4|0);
  $2 = HEAP32[$__size_$i21>>2]|0;
  $__cap$0 = $sub;$__sz$0 = $2;
 } else {
  $conv$i = $0&255;
  $__cap$0 = 10;$__sz$0 = $conv$i;
 }
 $cmp = ($__sz$0|0)==($__cap$0|0);
 if ($cmp) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0);
  $3 = HEAP8[$__size_$i>>0]|0;
  $tobool$i20 = ($3<<24>>24)<(0);
  $add22 = (($__cap$0) + 1)|0;
  if ($tobool$i20) {
   $add23 = $add22;
   label = 8;
  } else {
   $add24 = $add22;
   label = 7;
  }
 } else {
  $add = (($__sz$0) + 1)|0;
  if ($tobool$i) {
   $add23 = $add;
   label = 8;
  } else {
   $add24 = $add;
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $conv$i16 = $add24&255;
  HEAP8[$__size_$i>>0] = $conv$i16;
  $call12$pn = $this;
 }
 else if ((label|0) == 8) {
  $4 = HEAP32[$this>>2]|0;
  $__size_$i15 = ((($this)) + 4|0);
  HEAP32[$__size_$i15>>2] = $add23;
  $call12$pn = $4;
 }
 $__p$0 = (($call12$pn) + ($__sz$0)|0);
 __ZNSt3__211char_traitsIcE6assignERcRKc($__p$0,$__c$addr);
 $incdec$ptr = ((($__p$0)) + 1|0);
 HEAP8[$ref$tmp>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($incdec$ptr,$ref$tmp);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($this,$__pos,$__first,$__last) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap_$i$i = 0, $__first$addr$0 = 0, $__p$0 = 0, $__p$1 = 0, $__size_$i$i$i = 0, $__size_$i2$i = 0, $__size_$i3$i = 0, $add$ptr = 0, $add$ptr12 = 0, $add$ptr21 = 0;
 var $add19 = 0, $and$i$i = 0, $arrayidx = 0, $cmp = 0, $cmp10 = 0, $cmp22 = 0, $cond$i18 = 0, $cond$i24 = 0, $cond$i32 = 0, $conv$i$i = 0, $conv$i$i13 = 0, $incdec$ptr = 0, $incdec$ptr23 = 0, $phitmp$i = 0, $ref$tmp20 = 0, $sub = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0;
 var $sub$ptr$sub$i26 = 0, $sub$ptr$sub$i2730 = 0, $sub15 = 0, $sub9 = 0, $tobool = 0, $tobool$i$i$i = 0, $tobool$i$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp20 = sp;
 $__size_$i$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i$i>>0]|0;
 $tobool$i$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i$i) {
  $3 = HEAP32[$this>>2]|0;
  $4 = HEAP32[$__pos>>2]|0;
  $sub$ptr$sub$i26 = (($4) - ($3))|0;
  $__size_$i3$i = ((($this)) + 4|0);
  $5 = HEAP32[$__size_$i3$i>>2]|0;
  $__cap_$i$i = ((($this)) + 8|0);
  $6 = HEAP32[$__cap_$i$i>>2]|0;
  $and$i$i = $6 & 2147483647;
  $phitmp$i = (($and$i$i) + -1)|0;
  $cond$i18 = $phitmp$i;$cond$i32 = $5;$sub$ptr$sub$i2730 = $sub$ptr$sub$i26;
 } else {
  $1 = $this;
  $2 = HEAP32[$__pos>>2]|0;
  $sub$ptr$sub$i = (($2) - ($1))|0;
  $conv$i$i = $0&255;
  $cond$i18 = 10;$cond$i32 = $conv$i$i;$sub$ptr$sub$i2730 = $sub$ptr$sub$i;
 }
 $sub$ptr$lhs$cast$i$i = $__last;
 $sub$ptr$rhs$cast$i$i = $__first;
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0;
 $tobool = ($sub$ptr$sub$i$i|0)==(0);
 L5: do {
  if (!($tobool)) {
   $sub = (($cond$i18) - ($cond$i32))|0;
   $cmp = ($sub>>>0)<($sub$ptr$sub$i$i>>>0);
   $add19 = (($cond$i32) + ($sub$ptr$sub$i$i))|0;
   if ($cmp) {
    $sub15 = (($add19) - ($cond$i18))|0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$cond$i18,$sub15,$cond$i32,$sub$ptr$sub$i2730,$sub$ptr$sub$i$i);
    $8 = HEAP32[$this>>2]|0;
    $__p$0 = $8;
   } else {
    if ($tobool$i$i$i) {
     $7 = HEAP32[$this>>2]|0;
     $cond$i24 = $7;
    } else {
     $cond$i24 = $this;
    }
    $sub9 = (($cond$i32) - ($sub$ptr$sub$i2730))|0;
    $cmp10 = ($sub9|0)==(0);
    if ($cmp10) {
     $__p$0 = $cond$i24;
    } else {
     $add$ptr = (($cond$i24) + ($sub$ptr$sub$i2730)|0);
     $add$ptr12 = (($add$ptr) + ($sub$ptr$sub$i$i)|0);
     (__ZNSt3__211char_traitsIcE4moveEPcPKcj($add$ptr12,$add$ptr,$sub9)|0);
     $__p$0 = $cond$i24;
    }
   }
   $9 = HEAP8[$__size_$i$i$i>>0]|0;
   $tobool$i$i12 = ($9<<24>>24)<(0);
   if ($tobool$i$i12) {
    $__size_$i2$i = ((($this)) + 4|0);
    HEAP32[$__size_$i2$i>>2] = $add19;
   } else {
    $conv$i$i13 = $add19&255;
    HEAP8[$__size_$i$i$i>>0] = $conv$i$i13;
   }
   $arrayidx = (($__p$0) + ($add19)|0);
   HEAP8[$ref$tmp20>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp20);
   $add$ptr21 = (($__p$0) + ($sub$ptr$sub$i2730)|0);
   $__first$addr$0 = $__first;$__p$1 = $add$ptr21;
   while(1) {
    $cmp22 = ($__first$addr$0|0)==($__last|0);
    if ($cmp22) {
     break L5;
    }
    __ZNSt3__211char_traitsIcE6assignERcRKc($__p$1,$__first$addr$0);
    $incdec$ptr = ((($__p$1)) + 1|0);
    $incdec$ptr23 = ((($__first$addr$0)) + 1|0);
    $__first$addr$0 = $incdec$ptr23;$__p$1 = $incdec$ptr;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_add = $__n_add|0;
 var $$sroa$speculated = 0, $0 = 0, $1 = 0, $__cap_$i = 0, $__size_$i$i = 0, $add = 0, $add$i$i = 0, $add$ptr = 0, $add$ptr27 = 0, $add$ptr29 = 0, $and$i$i = 0, $call$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp16 = 0, $cmp24 = 0, $cmp34 = 0, $cmp4 = 0, $cond$i = 0;
 var $cond6 = 0, $mul = 0, $or$i = 0, $phitmp = 0, $sub = 0, $sub23 = 0, $tobool$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub = (-17 - ($__old_cap))|0;
 $cmp = ($sub>>>0)<($__delta_cap>>>0);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this);
 }
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $1 = HEAP32[$this>>2]|0;
  $cond$i = $1;
 } else {
  $cond$i = $this;
 }
 $cmp4 = ($__old_cap>>>0)<(2147483623);
 if ($cmp4) {
  $add = (($__delta_cap) + ($__old_cap))|0;
  $mul = $__old_cap << 1;
  $cmp$i$i$i = ($add>>>0)<($mul>>>0);
  $$sroa$speculated = $cmp$i$i$i ? $mul : $add;
  $cmp$i = ($$sroa$speculated>>>0)<(11);
  $add$i$i = (($$sroa$speculated) + 16)|0;
  $and$i$i = $add$i$i & -16;
  $phitmp = $cmp$i ? 11 : $and$i$i;
  $cond6 = $phitmp;
 } else {
  $cond6 = -17;
 }
 $call$i = (__ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($cond6)|0);
 $cmp16 = ($__n_copy|0)==(0);
 if (!($cmp16)) {
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($call$i,$cond$i,$__n_copy)|0);
 }
 $sub23 = (($__old_sz) - ($__n_copy))|0;
 $cmp24 = ($sub23|0)==(0);
 if (!($cmp24)) {
  $add$ptr = (($call$i) + ($__n_copy)|0);
  $add$ptr27 = (($add$ptr) + ($__n_add)|0);
  $add$ptr29 = (($cond$i) + ($__n_copy)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($add$ptr27,$add$ptr29,$sub23)|0);
 }
 $cmp34 = ($__old_cap|0)==(10);
 if (!($cmp34)) {
  __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($cond$i);
 }
 HEAP32[$this>>2] = $call$i;
 $or$i = $cond6 | -2147483648;
 $__cap_$i = ((($this)) + 8|0);
 HEAP32[$__cap_$i>>2] = $or$i;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($agg$result,$s) {
 $agg$result = $agg$result|0;
 $s = $s|0;
 var $$pre = 0, $$pre101 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $__size_$i$i$i = 0, $__size_$i3$i$i = 0, $add$ptr = 0, $arrayidx = 0, $arrayidx$i$i = 0, $arrayidx23 = 0, $c$0$ph = 0, $call$i = 0, $call$i31 = 0;
 var $call$i32 = 0, $call$i49 = 0, $call$i50 = 0, $call$i67 = 0, $call$i68 = 0, $call$i85 = 0, $call3$i = 0, $call3$i41 = 0, $call3$i59 = 0, $call3$i77 = 0, $cmp = 0, $cmp$i = 0, $cmp$i30 = 0, $cmp$i39 = 0, $cmp$i57 = 0, $cmp$i75 = 0, $cmp20 = 0, $cmp27 = 0, $cmp39 = 0, $cmp4$i = 0;
 var $cmp4$i43 = 0, $cmp4$i61 = 0, $cmp4$i79 = 0, $cmp41 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i29 = 0, $cond$i$i38 = 0, $cond$i$i56 = 0, $cond$i$i74 = 0, $cond$i$i91 = 0, $conv$i$i = 0, $conv$i$i$i = 0, $conv$i$i$i28 = 0, $conv$i$i$i37 = 0, $conv$i$i$i55 = 0, $conv$i$i$i73 = 0, $dec = 0, $exitcond$i$i = 0, $inc = 0;
 var $inc$i$i = 0, $incdec$ptr = 0, $p0$0 = 0, $p0$1 = 0, $pe$0 = 0, $pe$0$ph = 0, $pe$2 = 0, $pe$2$pn = 0, $tobool$i$i$i = 0, $tobool$i$i$i26 = 0, $tobool$i$i$i35 = 0, $tobool$i$i$i53 = 0, $tobool$i$i$i71 = 0, $tobool$i$i$i88 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i$i$i = ((($s)) + 11|0);
 $0 = HEAP8[$__size_$i$i$i>>0]|0;
 $tobool$i$i$i = ($0<<24>>24)<(0);
 $__size_$i3$i$i = ((($s)) + 4|0);
 $1 = HEAP32[$__size_$i3$i$i>>2]|0;
 $conv$i$i$i = $0&255;
 $cond$i$i = $tobool$i$i$i ? $1 : $conv$i$i$i;
 $cmp$i = ($cond$i$i|0)==(0);
 L1: do {
  if ($cmp$i) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($agg$result,$s);
  } else {
   __THREW__ = 0;
   $call$i = (invoke_ii(58,(6658|0))|0);
   $2 = __THREW__; __THREW__ = 0;
   $3 = $2&1;
   if ($3) {
    $10 = ___cxa_find_matching_catch_3(0|0)|0;
    $11 = tempRet0;
    ___clang_call_terminate($10);
    // unreachable;
   }
   $4 = HEAP8[$__size_$i$i$i>>0]|0;
   $tobool$i$i$i26 = ($4<<24>>24)<(0);
   $5 = HEAP32[$__size_$i3$i$i>>2]|0;
   $conv$i$i$i28 = $4&255;
   $cond$i$i29 = $tobool$i$i$i26 ? $5 : $conv$i$i$i28;
   $cmp$i30 = ($call$i|0)==($cond$i$i29|0);
   if ($cmp$i30) {
    __THREW__ = 0;
    $call3$i = (invoke_iiii(59,($s|0),(6658|0),($call$i|0))|0);
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     $8 = ___cxa_find_matching_catch_3(0|0)|0;
     $9 = tempRet0;
     ___clang_call_terminate($8);
     // unreachable;
    }
    $cmp4$i = ($call3$i|0)==(0);
    if ($cmp4$i) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($s,6670);
     ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
     $call$i31 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6741)|0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,6741,$call$i31);
     break;
    }
   }
   __THREW__ = 0;
   $call$i32 = (invoke_ii(58,(6754|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $20 = ___cxa_find_matching_catch_3(0|0)|0;
    $21 = tempRet0;
    ___clang_call_terminate($20);
    // unreachable;
   }
   $14 = HEAP8[$__size_$i$i$i>>0]|0;
   $tobool$i$i$i35 = ($14<<24>>24)<(0);
   $15 = HEAP32[$__size_$i3$i$i>>2]|0;
   $conv$i$i$i37 = $14&255;
   $cond$i$i38 = $tobool$i$i$i35 ? $15 : $conv$i$i$i37;
   $cmp$i39 = ($call$i32|0)==($cond$i$i38|0);
   if ($cmp$i39) {
    __THREW__ = 0;
    $call3$i41 = (invoke_iiii(59,($s|0),(6754|0),($call$i32|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if ($17) {
     $18 = ___cxa_find_matching_catch_3(0|0)|0;
     $19 = tempRet0;
     ___clang_call_terminate($18);
     // unreachable;
    }
    $cmp4$i43 = ($call3$i41|0)==(0);
    if ($cmp4$i43) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($s,6767);
     ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
     $call$i49 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6817)|0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,6817,$call$i49);
     break;
    }
   }
   __THREW__ = 0;
   $call$i50 = (invoke_ii(58,(6831|0))|0);
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    $30 = ___cxa_find_matching_catch_3(0|0)|0;
    $31 = tempRet0;
    ___clang_call_terminate($30);
    // unreachable;
   }
   $24 = HEAP8[$__size_$i$i$i>>0]|0;
   $tobool$i$i$i53 = ($24<<24>>24)<(0);
   $25 = HEAP32[$__size_$i3$i$i>>2]|0;
   $conv$i$i$i55 = $24&255;
   $cond$i$i56 = $tobool$i$i$i53 ? $25 : $conv$i$i$i55;
   $cmp$i57 = ($call$i50|0)==($cond$i$i56|0);
   if ($cmp$i57) {
    __THREW__ = 0;
    $call3$i59 = (invoke_iiii(59,($s|0),(6831|0),($call$i50|0))|0);
    $26 = __THREW__; __THREW__ = 0;
    $27 = $26&1;
    if ($27) {
     $28 = ___cxa_find_matching_catch_3(0|0)|0;
     $29 = tempRet0;
     ___clang_call_terminate($28);
     // unreachable;
    }
    $cmp4$i61 = ($call3$i59|0)==(0);
    if ($cmp4$i61) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($s,6844);
     ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
     $call$i67 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6894)|0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,6894,$call$i67);
     break;
    }
   }
   __THREW__ = 0;
   $call$i68 = (invoke_ii(58,(6908|0))|0);
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    $40 = ___cxa_find_matching_catch_3(0|0)|0;
    $41 = tempRet0;
    ___clang_call_terminate($40);
    // unreachable;
   }
   $34 = HEAP8[$__size_$i$i$i>>0]|0;
   $tobool$i$i$i71 = ($34<<24>>24)<(0);
   $35 = HEAP32[$__size_$i3$i$i>>2]|0;
   $conv$i$i$i73 = $34&255;
   $cond$i$i74 = $tobool$i$i$i71 ? $35 : $conv$i$i$i73;
   $cmp$i75 = ($call$i68|0)==($cond$i$i74|0);
   do {
    if ($cmp$i75) {
     __THREW__ = 0;
     $call3$i77 = (invoke_iiii(59,($s|0),(6908|0),($call$i68|0))|0);
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if ($37) {
      $38 = ___cxa_find_matching_catch_3(0|0)|0;
      $39 = tempRet0;
      ___clang_call_terminate($38);
      // unreachable;
     }
     $cmp4$i79 = ($call3$i77|0)==(0);
     if ($cmp4$i79) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($s,6922);
      ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
      $call$i85 = (__ZNSt3__211char_traitsIcE6lengthEPKc(6973)|0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,6973,$call$i85);
      break L1;
     } else {
      $$pre = HEAP8[$__size_$i$i$i>>0]|0;
      $$pre101 = HEAP32[$__size_$i3$i$i>>2]|0;
      $42 = $$pre;$44 = $$pre101;
      break;
     }
    } else {
     $42 = $34;$44 = $35;
    }
   } while(0);
   $tobool$i$i$i88 = ($42<<24>>24)<(0);
   $43 = HEAP32[$s>>2]|0;
   $cond$i$i91 = $tobool$i$i$i88 ? $43 : $s;
   $conv$i$i = $42&255;
   $cond$i = $tobool$i$i$i88 ? $44 : $conv$i$i;
   $add$ptr = (($cond$i$i91) + ($cond$i)|0);
   $arrayidx = ((($add$ptr)) + -1|0);
   $45 = HEAP8[$arrayidx>>0]|0;
   $cmp = ($45<<24>>24)==(62);
   L46: do {
    if ($cmp) {
     $c$0$ph = 1;$pe$0$ph = $add$ptr;
     L47: while(1) {
      $pe$0 = $pe$0$ph;
      L49: while(1) {
       $incdec$ptr = ((($pe$0)) + -1|0);
       $cmp20 = ($incdec$ptr|0)==($cond$i$i91|0);
       if ($cmp20) {
        break L47;
       }
       $arrayidx23 = ((($pe$0)) + -2|0);
       $46 = HEAP8[$arrayidx23>>0]|0;
       switch ($46<<24>>24) {
       case 60:  {
        label = 39;
        break L49;
        break;
       }
       case 62:  {
        label = 40;
        break L49;
        break;
       }
       default: {
        $pe$0 = $incdec$ptr;
       }
       }
      }
      if ((label|0) == 39) {
       label = 0;
       $dec = (($c$0$ph) + -1)|0;
       $cmp27 = ($dec|0)==(0);
       if ($cmp27) {
        $pe$2 = $arrayidx23;
        break L46;
       } else {
        $c$0$ph = $dec;$pe$0$ph = $incdec$ptr;
        continue;
       }
      }
      else if ((label|0) == 40) {
       label = 0;
       $inc = (($c$0$ph) + 1)|0;
       $c$0$ph = $inc;$pe$0$ph = $incdec$ptr;
       continue;
      }
     }
     ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break L1;
      }
      $arrayidx$i$i = (($agg$result) + ($__i$0$i$i<<2)|0);
      HEAP32[$arrayidx$i$i>>2] = 0;
      $inc$i$i = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $inc$i$i;
     }
    } else {
     $pe$2 = $add$ptr;
    }
   } while(0);
   $pe$2$pn = $pe$2;
   while(1) {
    $p0$0 = ((($pe$2$pn)) + -1|0);
    $cmp39 = ($p0$0|0)==($cond$i$i91|0);
    if ($cmp39) {
     $p0$1 = $cond$i$i91;
     break;
    }
    $47 = HEAP8[$p0$0>>0]|0;
    $cmp41 = ($47<<24>>24)==(58);
    if ($cmp41) {
     $p0$1 = $pe$2$pn;
     break;
    } else {
     $pe$2$pn = $p0$0;
    }
   }
   ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($agg$result,$p0$1,$pe$2);
  }
 } while(0);
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $__size_$i = 0, $__size_$i5 = 0, $tobool$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 $__size_$i5 = ((($__str)) + 11|0);
 $0 = HEAP8[$__size_$i5>>0]|0;
 $tobool$i = ($0<<24>>24)<(0);
 if ($tobool$i) {
  $1 = HEAP32[$__str>>2]|0;
  $__size_$i = ((($__str)) + 4|0);
  $2 = HEAP32[$__size_$i>>2]|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$1,$2);
 } else {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 }
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $__cap_$i = 0, $__first$addr$0 = 0, $__p$0 = 0, $__p$0$ph = 0, $__size_$i = 0, $__size_$i15 = 0, $add$i$i = 0, $and$i$i = 0, $call$i = 0, $cmp = 0, $cmp11 = 0, $cmp3 = 0, $conv$i = 0, $incdec$ptr = 0, $incdec$ptr12 = 0, $or$i = 0, $ref$tmp = 0, $scevgep18 = 0;
 var $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$sub$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $sub$ptr$rhs$cast$i$i = $__first;
 $ref$tmp = sp;
 $sub$ptr$lhs$cast$i$i = $__last;
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0;
 $cmp = ($sub$ptr$sub$i$i>>>0)>(4294967279);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this);
  label = 5;
 } else {
  $cmp3 = ($sub$ptr$sub$i$i>>>0)<(11);
  if ($cmp3) {
   $conv$i = $sub$ptr$sub$i$i&255;
   $__size_$i = ((($this)) + 11|0);
   HEAP8[$__size_$i>>0] = $conv$i;
   $__p$0$ph = $this;
  } else {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $add$i$i = (($sub$ptr$sub$i$i) + 16)|0;
  $and$i$i = $add$i$i & -16;
  $call$i = (__ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($and$i$i)|0);
  HEAP32[$this>>2] = $call$i;
  $or$i = $and$i$i | -2147483648;
  $__cap_$i = ((($this)) + 8|0);
  HEAP32[$__cap_$i>>2] = $or$i;
  $__size_$i15 = ((($this)) + 4|0);
  HEAP32[$__size_$i15>>2] = $sub$ptr$sub$i$i;
  $__p$0$ph = $call$i;
 }
 $0 = $__last;
 $1 = (($0) - ($sub$ptr$rhs$cast$i$i))|0;
 $__first$addr$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $cmp11 = ($__first$addr$0|0)==($__last|0);
  if ($cmp11) {
   break;
  }
  __ZNSt3__211char_traitsIcE6assignERcRKc($__p$0,$__first$addr$0);
  $incdec$ptr = ((($__first$addr$0)) + 1|0);
  $incdec$ptr12 = ((($__p$0)) + 1|0);
  $__first$addr$0 = $incdec$ptr;$__p$0 = $incdec$ptr12;
 }
 $scevgep18 = (($__p$0$ph) + ($1)|0);
 HEAP8[$ref$tmp>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($scevgep18,$ref$tmp);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $__end_$i = 0, $call = 0, $call3 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp4 = 0, $first11 = 0, $retval$1 = 0, $t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($first|0)==($last|0);
 if ($cmp) {
  $retval$1 = $first;
 } else {
  $call = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  $cmp1 = ($call|0)==($first|0);
  if ($cmp1) {
   $call3 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $t$0 = $call3;
  } else {
   $t$0 = $call;
  }
  $cmp4 = ($t$0|0)==($first|0);
  if ($cmp4) {
   $retval$1 = $first;
  } else {
   $0 = HEAP32[$db>>2]|0;
   $__end_$i = ((($db)) + 4|0);
   $1 = HEAP32[$__end_$i>>2]|0;
   $cmp$i = ($0|0)==($1|0);
   if ($cmp$i) {
    $retval$1 = $first;
   } else {
    $first11 = ((($1)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first11,0,5908)|0);
    $retval$1 = $t$0;
   }
  }
 }
 return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($this) {
 $this = $this|0;
 var $__i$0$i$i = 0, $__i$0$i$i2 = 0, $arrayidx$i$i = 0, $arrayidx$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i3 = 0, $inc$i$i = 0, $inc$i$i6 = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($this) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i2 = 0;
 while(1) {
  $exitcond$i$i3 = ($__i$0$i$i2|0)==(3);
  if ($exitcond$i$i3) {
   break;
  }
  $arrayidx$i$i5 = (($second) + ($__i$0$i$i2<<2)|0);
  HEAP32[$arrayidx$i$i5>>2] = 0;
  $inc$i$i6 = (($__i$0$i$i2) + 1)|0;
  $__i$0$i$i2 = $inc$i$i6;
 }
 return;
}
function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($this) {
 $this = $this|0;
 var $$sroa$speculated$call$i = 0, $$sroa$speculated$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__end_ = 0, $__end_$i = 0, $__first_$i$i$i$i$i$i = 0, $__second_$i$i$i = 0, $__v = 0, $add = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $div$i = 0, $incdec$ptr = 0;
 var $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i6 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__v = sp;
 $__second_$i$i$i = ((($this)) + 12|0);
 $__end_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__end_$i>>2]|0;
 $1 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i = (($0) - ($1))|0;
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
 $add = (($sub$ptr$div$i) + 1)|0;
 $call$i = (__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp$i = ($call$i>>>0)<($add>>>0);
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__first_$i$i$i$i$i$i = ((($this)) + 8|0);
 $2 = HEAP32[$__first_$i$i$i$i$i$i>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i$i$i = (($2) - ($3))|0;
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 24)&-1;
 $div$i = $call$i >>> 1;
 $cmp3$i = ($sub$ptr$div$i$i$i>>>0)<($div$i>>>0);
 $mul$i = $sub$ptr$div$i$i$i << 1;
 $cmp$i$i$i$i = ($mul$i>>>0)<($add>>>0);
 $$sroa$speculated$i = $cmp$i$i$i$i ? $add : $mul$i;
 $$sroa$speculated$call$i = $cmp3$i ? $$sroa$speculated$i : $call$i;
 $4 = HEAP32[$__end_$i>>2]|0;
 $sub$ptr$sub$i5 = (($4) - ($3))|0;
 $sub$ptr$div$i6 = (($sub$ptr$sub$i5|0) / 24)&-1;
 __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v,$$sroa$speculated$call$i,$sub$ptr$div$i6,$__second_$i$i$i);
 $__end_ = ((($__v)) + 8|0);
 $5 = HEAP32[$__end_>>2]|0;
 ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP32[$5+16>>2]=0|0;HEAP32[$5+20>>2]=0|0;
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($5);
 $incdec$ptr = ((($5)) + 24|0);
 HEAP32[$__end_>>2] = $incdec$ptr;
 __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
 __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 178956970;
}
function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((7005|0),(7028|0),304,(7113|0));
 // unreachable;
}
function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $__begin_ = 0, $__end_ = 0, $__end_cap_ = 0, $__first_$i$i$i = 0, $__second_$i$i = 0, $add$ptr = 0, $add$ptr5 = 0, $call$i = 0, $cmp = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__end_cap_ = ((($this)) + 12|0);
 HEAP32[$__end_cap_>>2] = 0;
 $__second_$i$i = ((($this)) + 16|0);
 HEAP32[$__second_$i$i>>2] = $__a;
 $cmp = ($__cap|0)==(0);
 if ($cmp) {
  $cond = 0;
 } else {
  $call$i = (__ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE8allocateEj($__a,$__cap)|0);
  $cond = $call$i;
 }
 HEAP32[$this>>2] = $cond;
 $add$ptr = (($cond) + (($__start*24)|0)|0);
 $__end_ = ((($this)) + 8|0);
 HEAP32[$__end_>>2] = $add$ptr;
 $__begin_ = ((($this)) + 4|0);
 HEAP32[$__begin_>>2] = $add$ptr;
 $add$ptr5 = (($cond) + (($__cap*24)|0)|0);
 $__first_$i$i$i = ((($this)) + 12|0);
 HEAP32[$__first_$i$i$i>>2] = $add$ptr5;
 return;
}
function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_2 = 0, $__end1$addr$0$i = 0, $__end_ = 0, $__end_6 = 0, $__first_$i$i$i = 0, $__first_$i$i$i6 = 0, $add$ptr$i = 0, $cmp$i = 0, $incdec$ptr$i = 0;
 var $incdec$ptr2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $__end_ = ((($this)) + 4|0);
 $1 = HEAP32[$__end_>>2]|0;
 $__begin_2 = ((($__v)) + 4|0);
 $__end1$addr$0$i = $1;
 while(1) {
  $cmp$i = ($__end1$addr$0$i|0)==($0|0);
  if ($cmp$i) {
   break;
  }
  $2 = HEAP32[$__begin_2>>2]|0;
  $add$ptr$i = ((($2)) + -24|0);
  $incdec$ptr$i = ((($__end1$addr$0$i)) + -24|0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($add$ptr$i,$incdec$ptr$i);
  $3 = HEAP32[$__begin_2>>2]|0;
  $incdec$ptr2$i = ((($3)) + -24|0);
  HEAP32[$__begin_2>>2] = $incdec$ptr2$i;
  $__end1$addr$0$i = $incdec$ptr$i;
 }
 $4 = HEAP32[$this>>2]|0;
 $5 = HEAP32[$__begin_2>>2]|0;
 HEAP32[$this>>2] = $5;
 HEAP32[$__begin_2>>2] = $4;
 $__end_6 = ((($__v)) + 8|0);
 $6 = HEAP32[$__end_>>2]|0;
 $7 = HEAP32[$__end_6>>2]|0;
 HEAP32[$__end_>>2] = $7;
 HEAP32[$__end_6>>2] = $6;
 $__first_$i$i$i6 = ((($this)) + 8|0);
 $__first_$i$i$i = ((($__v)) + 12|0);
 $8 = HEAP32[$__first_$i$i$i6>>2]|0;
 $9 = HEAP32[$__first_$i$i$i>>2]|0;
 HEAP32[$__first_$i$i$i6>>2] = $9;
 HEAP32[$__first_$i$i$i>>2] = $8;
 $10 = HEAP32[$__begin_2>>2]|0;
 HEAP32[$__v>>2] = $10;
 return;
}
function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__first_$i$i$i$i = 0, $__second_$i$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $ref$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__begin_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__begin_$i>>2]|0;
 $__end_$i$i$i = ((($this)) + 8|0);
 while(1) {
  $1 = HEAP32[$__end_$i$i$i>>2]|0;
  $cmp$i$i$i = ($1|0)==($0|0);
  if ($cmp$i$i$i) {
   break;
  }
  $incdec$ptr$i$i$i = ((($1)) + -24|0);
  HEAP32[$__end_$i$i$i>>2] = $incdec$ptr$i$i$i;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
 }
 $2 = HEAP32[$this>>2]|0;
 $tobool = ($2|0)==(0|0);
 if (!($tobool)) {
  $3 = $2;
  $__second_$i$i$i = ((($this)) + 16|0);
  $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0;
  $__first_$i$i$i$i = ((($this)) + 12|0);
  $4 = HEAP32[$__first_$i$i$i$i>>2]|0;
  $sub$ptr$sub$i = (($4) - ($3))|0;
  $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE10deallocateEPS2_j($ref$i$i$i,$2,$sub$ptr$div$i);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE8allocateEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $call = 0, $mul = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ref = HEAP32[$this>>2]|0;
 $mul = ($n*24)|0;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($ref,$mul)|0);
 return ($call|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $add$ptr = 0, $add$ptr4 = 0, $call = 0, $call5 = 0, $cmp = 0, $ptr_ = 0, $retval$0 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8align_upEj($n)|0);
 $add$ptr = ((($this)) + 4096|0);
 $ptr_ = ((($this)) + 4096|0);
 $0 = HEAP32[$ptr_>>2]|0;
 $sub$ptr$lhs$cast = $add$ptr;
 $sub$ptr$rhs$cast = $0;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub>>>0)<($call>>>0);
 if ($cmp) {
  $call5 = (_malloc($call)|0);
  $retval$0 = $call5;
 } else {
  $add$ptr4 = (($0) + ($call)|0);
  HEAP32[$ptr_>>2] = $add$ptr4;
  $retval$0 = $0;
 }
 return ($retval$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$lit,$db) {
 $first = $first|0;
 $last = $last|0;
 $lit = $lit|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i20 = 0, $__end_$i26 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i21 = 0, $__i$0$i$i$i = 0, $__size_$i$i = 0, $__size_$i3$i = 0, $add$ptr = 0, $agg$tmp = 0, $arrayidx$i$i$i = 0, $call = 0, $call$i19 = 0, $cmp = 0, $cmp$i = 0, $cmp$i22 = 0;
 var $cmp1 = 0, $cmp17 = 0, $cmp29 = 0, $cmp3 = 0, $cmp5 = 0, $cond$i = 0, $cond$i$i$i$i = 0, $cond$i36 = 0, $conv$i$i = 0, $conv$i$i34 = 0, $ehselector$slot$0 = 0, $exitcond$i$i$i = 0, $exn$slot$0 = 0, $first$addr$0 = 0, $first$addr$1 = 0, $first21 = 0, $first26 = 0, $first33 = 0, $inc$i$i$i = 0, $incdec$ptr = 0;
 var $incdec$ptr$i = 0, $incdec$ptr$i23 = 0, $or$cond = 0, $ref$tmp = 0, $ref$tmp7 = 0, $tobool$i$i = 0, $tobool$i$i31 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $ref$tmp = sp + 24|0;
 $agg$tmp = sp + 12|0;
 $ref$tmp7 = sp;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first,$last)|0);
 $cmp = ($call|0)==($first|0);
 $cmp1 = ($call|0)==($last|0);
 $or$cond = $cmp | $cmp1;
 if ($or$cond) {
  $first$addr$1 = $first;
 } else {
  $0 = HEAP8[$call>>0]|0;
  $cmp3 = ($0<<24>>24)==(69);
  if ($cmp3) {
   $__size_$i$i = ((($lit)) + 11|0);
   $1 = HEAP8[$__size_$i$i>>0]|0;
   $tobool$i$i = ($1<<24>>24)<(0);
   $__size_$i3$i = ((($lit)) + 4|0);
   $2 = HEAP32[$__size_$i3$i>>2]|0;
   $conv$i$i = $1&255;
   $cond$i = $tobool$i$i ? $2 : $conv$i$i;
   $cmp5 = ($cond$i>>>0)>(3);
   L4: do {
    if ($cmp5) {
     __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($ref$tmp7,5838,$lit);
     __THREW__ = 0;
     $call$i19 = (invoke_iii(54,($ref$tmp7|0),(5836|0))|0);
     $3 = __THREW__; __THREW__ = 0;
     $4 = $3&1;
     do {
      if ($4) {
       $10 = ___cxa_find_matching_catch_2()|0;
       $11 = tempRet0;
       $ehselector$slot$0 = $11;$exn$slot$0 = $10;
      } else {
       ;HEAP32[$agg$tmp>>2]=HEAP32[$ref$tmp7>>2]|0;HEAP32[$agg$tmp+4>>2]=HEAP32[$ref$tmp7+4>>2]|0;HEAP32[$agg$tmp+8>>2]=HEAP32[$ref$tmp7+8>>2]|0;
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $arrayidx$i$i$i = (($ref$tmp7) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$arrayidx$i$i$i>>2] = 0;
        $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $inc$i$i$i;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
       $__end_$i = ((($db)) + 4|0);
       $5 = HEAP32[$__end_$i>>2]|0;
       $__first_$i$i$i$i = ((($db)) + 8|0);
       $6 = HEAP32[$__first_$i$i$i$i>>2]|0;
       $cmp$i = ($5>>>0)<($6>>>0);
       if ($cmp$i) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5,$ref$tmp);
        $7 = HEAP32[$__end_$i>>2]|0;
        $incdec$ptr$i = ((($7)) + 24|0);
        HEAP32[$__end_$i>>2] = $incdec$ptr$i;
       } else {
        __THREW__ = 0;
        invoke_vii(64,($db|0),($ref$tmp|0));
        $8 = __THREW__; __THREW__ = 0;
        $9 = $8&1;
        if ($9) {
         $12 = ___cxa_find_matching_catch_2()|0;
         $13 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
         $ehselector$slot$0 = $13;$exn$slot$0 = $12;
         break;
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp7);
       break L4;
      }
     } while(0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp7);
     ___resumeException($exn$slot$0|0);
     // unreachable;
    } else {
     $__end_$i20 = ((($db)) + 4|0);
     $14 = HEAP32[$__end_$i20>>2]|0;
     $__first_$i$i$i$i21 = ((($db)) + 8|0);
     $15 = HEAP32[$__first_$i$i$i$i21>>2]|0;
     $cmp$i22 = ($14>>>0)<($15>>>0);
     if ($cmp$i22) {
      ;HEAP32[$14>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;HEAP32[$14+12>>2]=0|0;HEAP32[$14+16>>2]=0|0;HEAP32[$14+20>>2]=0|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($14);
      $16 = HEAP32[$__end_$i20>>2]|0;
      $incdec$ptr$i23 = ((($16)) + 24|0);
      HEAP32[$__end_$i20>>2] = $incdec$ptr$i23;
      break;
     } else {
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($db);
      break;
     }
    }
   } while(0);
   $17 = HEAP8[$first>>0]|0;
   $cmp17 = ($17<<24>>24)==(110);
   $__end_$i26 = ((($db)) + 4|0);
   if ($cmp17) {
    $18 = HEAP32[$__end_$i26>>2]|0;
    $first21 = ((($18)) + -24|0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($first21,45);
    $incdec$ptr = ((($first)) + 1|0);
    $first$addr$0 = $incdec$ptr;
   } else {
    $first$addr$0 = $first;
   }
   $19 = HEAP32[$__end_$i26>>2]|0;
   $first26 = ((($19)) + -24|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueERS7_E4typeESC_SC_($first26,$first$addr$0,$call);
   $20 = HEAP8[$__size_$i$i>>0]|0;
   $tobool$i$i31 = ($20<<24>>24)<(0);
   $21 = HEAP32[$__size_$i3$i>>2]|0;
   $conv$i$i34 = $20&255;
   $cond$i36 = $tobool$i$i31 ? $21 : $conv$i$i34;
   $cmp29 = ($cond$i36>>>0)<(4);
   if ($cmp29) {
    $22 = HEAP32[$__end_$i26>>2]|0;
    $first33 = ((($22)) + -24|0);
    $23 = HEAP32[$lit>>2]|0;
    $cond$i$i$i$i = $tobool$i$i31 ? $23 : $lit;
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($first33,$cond$i$i$i$i,$cond$i36)|0);
   }
   $add$ptr = ((($call)) + 1|0);
   $first$addr$1 = $add$ptr;
  } else {
   $first$addr$1 = $first;
  }
 }
 STACKTOP = sp;return ($first$addr$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,4);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__first$addr$0$i$i = 0, $__first_$i$i$i$i = 0, $__last$addr$0$i$i = 0, $add21 = 0, $agg$tmp = 0, $call = 0;
 var $call32 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp1 = 0, $cmp1$i$i = 0, $cmp26 = 0, $cmp33 = 0, $cond = 0, $cond$v = 0, $cond20 = 0, $cond20$v = 0, $conv = 0, $conv22 = 0, $conv31 = 0.0, $conv9 = 0, $e$0 = 0, $first$addr$2$ph = 0, $incdec$ptr$add = 0, $incdec$ptr$i = 0;
 var $incdec$ptr$i$i = 0, $incdec$ptr$ptr = 0, $incdec$ptr2$i$i = 0, $incdec$ptr24 = 0, $isdigit = 0, $isdigit32 = 0, $isdigittmp = 0, $isdigittmp31 = 0, $num = 0, $ref$tmp = 0, $retval$3 = 0, $shl = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t$0$add = 0, $t$0$idx = 0, $t$0$ptr = 0, $tobool = 0, $vararg_buffer = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer = sp;
 $0 = sp + 48|0;
 $num = sp + 56|0;
 $ref$tmp = sp + 24|0;
 $agg$tmp = sp + 8|0;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub>>>0)>(8);
 L1: do {
  if ($cmp) {
   $e$0 = $0;$t$0$idx = 0;
   while(1) {
    $t$0$ptr = (($first) + ($t$0$idx)|0);
    $cmp1 = ($t$0$idx|0)==(8);
    $1 = HEAP8[$t$0$ptr>>0]|0;
    $conv = $1 << 24 >> 24;
    $t$0$add = $t$0$idx | 1;
    $incdec$ptr$ptr = (($first) + ($t$0$add)|0);
    if ($cmp1) {
     label = 6;
     break;
    }
    $call = (_isxdigit($conv)|0);
    $tobool = ($call|0)==(0);
    if ($tobool) {
     break;
    }
    $isdigittmp = (($conv) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    $cond$v = $isdigit ? 0 : 9;
    $cond = (($cond$v) + ($conv))|0;
    $2 = HEAP8[$incdec$ptr$ptr>>0]|0;
    $conv9 = $2 << 24 >> 24;
    $isdigittmp31 = (($conv9) + -48)|0;
    $isdigit32 = ($isdigittmp31>>>0)<(10);
    $cond20$v = $isdigit32 ? 208 : 169;
    $shl = $cond << 4;
    $cond20 = (($conv9) + ($shl))|0;
    $add21 = (($cond20) + ($cond20$v))|0;
    $conv22 = $add21&255;
    HEAP8[$e$0>>0] = $conv22;
    $incdec$ptr$add = (($t$0$idx) + 2)|0;
    $incdec$ptr24 = ((($e$0)) + 1|0);
    $e$0 = $incdec$ptr24;$t$0$idx = $incdec$ptr$add;
   }
   do {
    if ((label|0) == 6) {
     $cmp26 = ($1<<24>>24)==(69);
     if ($cmp26) {
      $cmp$i$i = ($0|0)==($e$0|0);
      L11: do {
       if (!($cmp$i$i)) {
        $__first$addr$0$i$i = $0;$__last$addr$0$i$i = $e$0;
        while(1) {
         $incdec$ptr$i$i = ((($__last$addr$0$i$i)) + -1|0);
         $cmp1$i$i = ($__first$addr$0$i$i>>>0)<($incdec$ptr$i$i>>>0);
         if (!($cmp1$i$i)) {
          break L11;
         }
         $3 = HEAP8[$__first$addr$0$i$i>>0]|0;
         $4 = HEAP8[$incdec$ptr$i$i>>0]|0;
         HEAP8[$__first$addr$0$i$i>>0] = $4;
         HEAP8[$incdec$ptr$i$i>>0] = $3;
         $incdec$ptr2$i$i = ((($__first$addr$0$i$i)) + 1|0);
         $__first$addr$0$i$i = $incdec$ptr2$i$i;$__last$addr$0$i$i = $incdec$ptr$i$i;
        }
       }
      } while(0);
      dest=$num; stop=dest+24|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $5 = +HEAPF32[$0>>2];
      $conv31 = $5;
      HEAPF64[$vararg_buffer>>3] = $conv31;
      $call32 = (_snprintf($num,24,7279,$vararg_buffer)|0);
      $cmp33 = ($call32>>>0)>(23);
      if ($cmp33) {
       break;
      }
      ;HEAP32[$agg$tmp>>2]=0|0;HEAP32[$agg$tmp+4>>2]=0|0;HEAP32[$agg$tmp+8>>2]=0|0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$tmp,$num,$call32);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
      $__end_$i = ((($db)) + 4|0);
      $6 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $7 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($6>>>0)<($7>>>0);
      if ($cmp$i) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($6,$ref$tmp);
       $8 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($8)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp|0));
       $9 = __THREW__; __THREW__ = 0;
       $10 = $9&1;
       if ($10) {
        $11 = ___cxa_find_matching_catch_2()|0;
        $12 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
        ___resumeException($11|0);
        // unreachable;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
      $first$addr$2$ph = $incdec$ptr$ptr;
     } else {
      $first$addr$2$ph = $first;
     }
     $retval$3 = $first$addr$2$ph;
     break L1;
    }
   } while(0);
   $retval$3 = $first;
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__first$addr$0$i$i = 0, $__first_$i$i$i$i = 0, $__last$addr$0$i$i = 0, $add21 = 0, $agg$tmp = 0, $call = 0;
 var $call31 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp1 = 0, $cmp1$i$i = 0, $cmp26 = 0, $cmp32 = 0, $cond = 0, $cond$v = 0, $cond20 = 0, $cond20$v = 0, $conv = 0, $conv22 = 0, $conv9 = 0, $e$0 = 0, $first$addr$2$ph = 0, $incdec$ptr$add = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i = 0;
 var $incdec$ptr$ptr = 0, $incdec$ptr2$i$i = 0, $incdec$ptr24 = 0, $isdigit = 0, $isdigit32 = 0, $isdigittmp = 0, $isdigittmp31 = 0, $num = 0, $ref$tmp = 0, $retval$3 = 0, $shl = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t$0$add = 0, $t$0$idx = 0, $t$0$ptr = 0, $tobool = 0, $vararg_buffer = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $vararg_buffer = sp + 8|0;
 $0 = sp;
 $num = sp + 56|0;
 $ref$tmp = sp + 32|0;
 $agg$tmp = sp + 16|0;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub>>>0)>(16);
 L1: do {
  if ($cmp) {
   $e$0 = $0;$t$0$idx = 0;
   while(1) {
    $t$0$ptr = (($first) + ($t$0$idx)|0);
    $cmp1 = ($t$0$idx|0)==(16);
    $1 = HEAP8[$t$0$ptr>>0]|0;
    $conv = $1 << 24 >> 24;
    $t$0$add = $t$0$idx | 1;
    $incdec$ptr$ptr = (($first) + ($t$0$add)|0);
    if ($cmp1) {
     label = 6;
     break;
    }
    $call = (_isxdigit($conv)|0);
    $tobool = ($call|0)==(0);
    if ($tobool) {
     break;
    }
    $isdigittmp = (($conv) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    $cond$v = $isdigit ? 0 : 9;
    $cond = (($cond$v) + ($conv))|0;
    $2 = HEAP8[$incdec$ptr$ptr>>0]|0;
    $conv9 = $2 << 24 >> 24;
    $isdigittmp31 = (($conv9) + -48)|0;
    $isdigit32 = ($isdigittmp31>>>0)<(10);
    $cond20$v = $isdigit32 ? 208 : 169;
    $shl = $cond << 4;
    $cond20 = (($conv9) + ($shl))|0;
    $add21 = (($cond20) + ($cond20$v))|0;
    $conv22 = $add21&255;
    HEAP8[$e$0>>0] = $conv22;
    $incdec$ptr$add = (($t$0$idx) + 2)|0;
    $incdec$ptr24 = ((($e$0)) + 1|0);
    $e$0 = $incdec$ptr24;$t$0$idx = $incdec$ptr$add;
   }
   do {
    if ((label|0) == 6) {
     $cmp26 = ($1<<24>>24)==(69);
     if ($cmp26) {
      $cmp$i$i = ($0|0)==($e$0|0);
      L11: do {
       if (!($cmp$i$i)) {
        $__first$addr$0$i$i = $0;$__last$addr$0$i$i = $e$0;
        while(1) {
         $incdec$ptr$i$i = ((($__last$addr$0$i$i)) + -1|0);
         $cmp1$i$i = ($__first$addr$0$i$i>>>0)<($incdec$ptr$i$i>>>0);
         if (!($cmp1$i$i)) {
          break L11;
         }
         $3 = HEAP8[$__first$addr$0$i$i>>0]|0;
         $4 = HEAP8[$incdec$ptr$i$i>>0]|0;
         HEAP8[$__first$addr$0$i$i>>0] = $4;
         HEAP8[$incdec$ptr$i$i>>0] = $3;
         $incdec$ptr2$i$i = ((($__first$addr$0$i$i)) + 1|0);
         $__first$addr$0$i$i = $incdec$ptr2$i$i;$__last$addr$0$i$i = $incdec$ptr$i$i;
        }
       }
      } while(0);
      dest=$num; stop=dest+32|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $5 = +HEAPF64[$0>>3];
      HEAPF64[$vararg_buffer>>3] = $5;
      $call31 = (_snprintf($num,32,7276,$vararg_buffer)|0);
      $cmp32 = ($call31>>>0)>(31);
      if ($cmp32) {
       break;
      }
      ;HEAP32[$agg$tmp>>2]=0|0;HEAP32[$agg$tmp+4>>2]=0|0;HEAP32[$agg$tmp+8>>2]=0|0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$tmp,$num,$call31);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
      $__end_$i = ((($db)) + 4|0);
      $6 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $7 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($6>>>0)<($7>>>0);
      if ($cmp$i) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($6,$ref$tmp);
       $8 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($8)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp|0));
       $9 = __THREW__; __THREW__ = 0;
       $10 = $9&1;
       if ($10) {
        $11 = ___cxa_find_matching_catch_2()|0;
        $12 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
        ___resumeException($11|0);
        // unreachable;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
      $first$addr$2$ph = $incdec$ptr$ptr;
     } else {
      $first$addr$2$ph = $first;
     }
     $retval$3 = $first$addr$2$ph;
     break L1;
    }
   } while(0);
   $retval$3 = $first;
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__first$addr$0$i$i = 0, $__first_$i$i$i$i = 0, $__last$addr$0$i$i = 0, $add21 = 0, $agg$tmp = 0, $call = 0;
 var $call31 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp1 = 0, $cmp1$i$i = 0, $cmp26 = 0, $cmp32 = 0, $cond = 0, $cond$v = 0, $cond20 = 0, $cond20$v = 0, $conv = 0, $conv22 = 0, $conv9 = 0, $e$0 = 0, $first$addr$2$ph = 0, $incdec$ptr$add = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i = 0;
 var $incdec$ptr$ptr = 0, $incdec$ptr2$i$i = 0, $incdec$ptr24 = 0, $isdigit = 0, $isdigit32 = 0, $isdigittmp = 0, $isdigittmp31 = 0, $num = 0, $ref$tmp = 0, $retval$3 = 0, $shl = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t$0$add = 0, $t$0$idx = 0, $t$0$ptr = 0, $tobool = 0, $vararg_buffer = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $vararg_buffer = sp + 8|0;
 $0 = sp;
 $num = sp + 56|0;
 $ref$tmp = sp + 32|0;
 $agg$tmp = sp + 16|0;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub>>>0)>(20);
 L1: do {
  if ($cmp) {
   $e$0 = $0;$t$0$idx = 0;
   while(1) {
    $t$0$ptr = (($first) + ($t$0$idx)|0);
    $cmp1 = ($t$0$idx|0)==(20);
    $1 = HEAP8[$t$0$ptr>>0]|0;
    $conv = $1 << 24 >> 24;
    $t$0$add = $t$0$idx | 1;
    $incdec$ptr$ptr = (($first) + ($t$0$add)|0);
    if ($cmp1) {
     label = 6;
     break;
    }
    $call = (_isxdigit($conv)|0);
    $tobool = ($call|0)==(0);
    if ($tobool) {
     break;
    }
    $isdigittmp = (($conv) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    $cond$v = $isdigit ? 0 : 9;
    $cond = (($cond$v) + ($conv))|0;
    $2 = HEAP8[$incdec$ptr$ptr>>0]|0;
    $conv9 = $2 << 24 >> 24;
    $isdigittmp31 = (($conv9) + -48)|0;
    $isdigit32 = ($isdigittmp31>>>0)<(10);
    $cond20$v = $isdigit32 ? 208 : 169;
    $shl = $cond << 4;
    $cond20 = (($conv9) + ($shl))|0;
    $add21 = (($cond20) + ($cond20$v))|0;
    $conv22 = $add21&255;
    HEAP8[$e$0>>0] = $conv22;
    $incdec$ptr$add = (($t$0$idx) + 2)|0;
    $incdec$ptr24 = ((($e$0)) + 1|0);
    $e$0 = $incdec$ptr24;$t$0$idx = $incdec$ptr$add;
   }
   do {
    if ((label|0) == 6) {
     $cmp26 = ($1<<24>>24)==(69);
     if ($cmp26) {
      $cmp$i$i = ($0|0)==($e$0|0);
      L11: do {
       if (!($cmp$i$i)) {
        $__first$addr$0$i$i = $0;$__last$addr$0$i$i = $e$0;
        while(1) {
         $incdec$ptr$i$i = ((($__last$addr$0$i$i)) + -1|0);
         $cmp1$i$i = ($__first$addr$0$i$i>>>0)<($incdec$ptr$i$i>>>0);
         if (!($cmp1$i$i)) {
          break L11;
         }
         $3 = HEAP8[$__first$addr$0$i$i>>0]|0;
         $4 = HEAP8[$incdec$ptr$i$i>>0]|0;
         HEAP8[$__first$addr$0$i$i>>0] = $4;
         HEAP8[$incdec$ptr$i$i>>0] = $3;
         $incdec$ptr2$i$i = ((($__first$addr$0$i$i)) + 1|0);
         $__first$addr$0$i$i = $incdec$ptr2$i$i;$__last$addr$0$i$i = $incdec$ptr$i$i;
        }
       }
      } while(0);
      dest=$num; stop=dest+40|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $5 = +HEAPF64[$0>>3];
      HEAPF64[$vararg_buffer>>3] = $5;
      $call31 = (_snprintf($num,40,7271,$vararg_buffer)|0);
      $cmp32 = ($call31>>>0)>(39);
      if ($cmp32) {
       break;
      }
      ;HEAP32[$agg$tmp>>2]=0|0;HEAP32[$agg$tmp+4>>2]=0|0;HEAP32[$agg$tmp+8>>2]=0|0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$tmp,$num,$call31);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($ref$tmp,$agg$tmp);
      $__end_$i = ((($db)) + 4|0);
      $6 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $7 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($6>>>0)<($7>>>0);
      if ($cmp$i) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($6,$ref$tmp);
       $8 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($8)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __THREW__ = 0;
       invoke_vii(64,($db|0),($ref$tmp|0));
       $9 = __THREW__; __THREW__ = 0;
       $10 = $9&1;
       if ($10) {
        $11 = ___cxa_find_matching_catch_2()|0;
        $12 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
        ___resumeException($11|0);
        // unreachable;
       }
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($ref$tmp);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$tmp);
      $first$addr$2$ph = $incdec$ptr$ptr;
     } else {
      $first$addr$2$ph = $first;
     }
     $retval$3 = $first$addr$2$ph;
     break L1;
    }
   } while(0);
   $retval$3 = $first;
  } else {
   $retval$3 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($retval$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,13);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i150 = 0, $$pre$i176 = 0, $$pre$i234 = 0, $$pre$i292 = 0, $$pre$i336 = 0, $$pre$i394 = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__end_$i = 0;
 var $__end_$i$i$i$i = 0, $__end_$i$i$i$i$i = 0, $__end_$i$i$i$i$i215 = 0, $__end_$i$i$i$i$i273 = 0, $__end_$i$i$i$i$i317 = 0, $__end_$i$i$i$i$i375 = 0, $__end_$i$i$i$i219 = 0, $__end_$i$i$i$i277 = 0, $__end_$i$i$i$i321 = 0, $__end_$i$i$i$i379 = 0, $__end_$i312 = 0, $__end_cap_$i$i$i$i$i = 0, $__end_cap_$i$i$i$i$i216 = 0, $__end_cap_$i$i$i$i$i274 = 0, $__end_cap_$i$i$i$i$i318 = 0, $__end_cap_$i$i$i$i$i376 = 0, $__first_$i$i$i$i = 0, $__first_$i$i$i$i313 = 0, $__first_$i$i$i7$i$i$i$i = 0, $__first_$i$i$i7$i$i$i$i221 = 0;
 var $__first_$i$i$i7$i$i$i$i279 = 0, $__first_$i$i$i7$i$i$i$i323 = 0, $__first_$i$i$i7$i$i$i$i381 = 0, $__first_$i$i$i8$i$i$i$i = 0, $__first_$i$i$i8$i$i$i$i220 = 0, $__first_$i$i$i8$i$i$i$i278 = 0, $__first_$i$i$i8$i$i$i$i322 = 0, $__first_$i$i$i8$i$i$i$i380 = 0, $__second_$i$i$i$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i213 = 0, $__second_$i$i$i$i$i$i$i271 = 0, $__second_$i$i$i$i$i$i$i315 = 0, $__second_$i$i$i$i$i$i$i373 = 0, $__second_$i$i$i9$i$i$i$i = 0, $__second_$i$i$i9$i$i$i$i217 = 0, $__second_$i$i$i9$i$i$i$i275 = 0, $__second_$i$i$i9$i$i$i$i319 = 0, $__second_$i$i$i9$i$i$i$i377 = 0, $__size_$i$i$i = 0, $__size_$i$i$i$i$i = 0;
 var $__size_$i$i$i$i$i194 = 0, $__size_$i$i$i$i$i252 = 0, $__size_$i$i$i$i$i298 = 0, $__size_$i$i$i$i$i354 = 0, $__size_$i$i$i182 = 0, $__size_$i$i$i240 = 0, $__size_$i$i$i342 = 0, $__size_$i3$i$i = 0, $__size_$i3$i$i$i = 0, $__size_$i3$i$i$i199 = 0, $__size_$i3$i$i$i257 = 0, $__size_$i3$i$i$i303 = 0, $__size_$i3$i$i$i359 = 0, $__size_$i3$i$i184 = 0, $__size_$i3$i$i242 = 0, $__size_$i3$i$i344 = 0, $add$ptr = 0, $add$ptr$i142 = 0, $add$ptr$i144 = 0, $add$ptr$i146 = 0;
 var $add$ptr$i160 = 0, $add$ptr$i170 = 0, $add$ptr$i172 = 0, $add$ptr$i207 = 0, $add$ptr$i228 = 0, $add$ptr$i230 = 0, $add$ptr$i265 = 0, $add$ptr$i286 = 0, $add$ptr$i288 = 0, $add$ptr$i309 = 0, $add$ptr$i330 = 0, $add$ptr$i332 = 0, $add$ptr$i367 = 0, $add$ptr$i390 = 0, $add$ptr24 = 0, $add$ptr37 = 0, $arrayidx20 = 0, $call = 0, $call167 = 0, $call226 = 0;
 var $call269 = 0, $call45 = 0, $call96 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i147 = 0, $cmp$i$i$i173 = 0, $cmp$i$i$i231 = 0, $cmp$i$i$i289 = 0, $cmp$i$i$i333 = 0, $cmp$i$i$i391 = 0, $cmp$i155 = 0, $cmp$i163 = 0, $cmp$i189 = 0, $cmp$i212 = 0, $cmp$i247 = 0, $cmp$i270 = 0, $cmp$i314 = 0, $cmp$i349 = 0;
 var $cmp$i372 = 0, $cmp$i388 = 0, $cmp1 = 0, $cmp15 = 0, $cmp168 = 0, $cmp170 = 0, $cmp18 = 0, $cmp2 = 0, $cmp22 = 0, $cmp227 = 0, $cmp229 = 0, $cmp266 = 0, $cmp270 = 0, $cmp272 = 0, $cmp30 = 0, $cmp35 = 0, $cmp38$le = 0, $cmp38$le516 = 0, $cmp42 = 0, $cmp46 = 0;
 var $cmp48 = 0, $cmp97 = 0, $cmp99 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i198 = 0, $cond$i$i$i$i256 = 0, $cond$i$i$i$i302 = 0, $cond$i$i$i$i358 = 0, $cond$i$i$i201 = 0, $cond$i$i$i259 = 0, $cond$i$i$i305 = 0, $cond$i$i$i361 = 0, $cond$i$i188 = 0, $cond$i$i246 = 0, $cond$i$i348 = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0, $conv$i$i$i$i200 = 0;
 var $conv$i$i$i$i258 = 0, $conv$i$i$i$i304 = 0, $conv$i$i$i$i360 = 0, $conv$i$i$i186 = 0, $conv$i$i$i244 = 0, $conv$i$i$i346 = 0, $conv34 = 0, $cv = 0, $cv329 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$10 = 0, $ehselector$slot$11 = 0, $ehselector$slot$12 = 0, $ehselector$slot$13 = 0, $ehselector$slot$14 = 0, $ehselector$slot$2 = 0, $ehselector$slot$3 = 0, $ehselector$slot$4 = 0, $ehselector$slot$5 = 0;
 var $ehselector$slot$6 = 0, $ehselector$slot$7 = 0, $ehselector$slot$8 = 0, $ehselector$slot$9 = 0, $exn$slot$0 = 0, $exn$slot$1 = 0, $exn$slot$10 = 0, $exn$slot$11 = 0, $exn$slot$12 = 0, $exn$slot$13 = 0, $exn$slot$14 = 0, $exn$slot$2 = 0, $exn$slot$3 = 0, $exn$slot$4 = 0, $exn$slot$5 = 0, $exn$slot$6 = 0, $exn$slot$7 = 0, $exn$slot$8 = 0, $exn$slot$9 = 0, $first110 = 0;
 var $first120 = 0, $first181 = 0, $first191 = 0, $first240 = 0, $first27 = 0, $first283 = 0, $first293 = 0, $first56 = 0, $first65 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i149 = 0, $incdec$ptr$i$i$i175 = 0, $incdec$ptr$i$i$i233 = 0, $incdec$ptr$i$i$i291 = 0, $incdec$ptr$i$i$i335 = 0, $incdec$ptr$i$i$i393 = 0, $incdec$ptr$i164 = 0, $incdec$ptr$i222 = 0;
 var $incdec$ptr$i280 = 0, $incdec$ptr$i324 = 0, $incdec$ptr$i382 = 0, $name = 0, $name101 = 0, $name172 = 0, $name231 = 0, $name274 = 0, $or$cond = 0, $or$cond136 = 0, $or$cond137 = 0, $or$cond138 = 0, $or$cond139 = 0, $pop_subs$0$off0$ph = 0, $ref = 0, $ref$tmp = 0, $ref$tmp113 = 0, $ref$tmp134 = 0, $ref$tmp139 = 0, $ref$tmp184 = 0;
 var $ref$tmp205 = 0, $ref$tmp210 = 0, $ref$tmp244 = 0, $ref$tmp249 = 0, $ref$tmp286 = 0, $ref$tmp307 = 0, $ref$tmp312 = 0, $ref$tmp68 = 0, $ref$tmp73 = 0, $retval$4 = 0, $retval$sroa$0$0$$sroa_idx$i310 = 0, $retval$sroa$0$0$copyload$i209401 = 0, $retval$sroa$0$0$copyload$i267399 = 0, $retval$sroa$0$0$copyload$i311398 = 0, $retval$sroa$0$0$copyload$i369400 = 0, $retval$sroa$0$0$copyload$i402 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $subs306 = 0;
 var $t0$0 = 0, $t0$1 = 0, $t0$2 = 0, $t0$2$ph = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i195 = 0, $tobool$i$i$i$i$i253 = 0, $tobool$i$i$i$i$i299 = 0, $tobool$i$i$i$i$i355 = 0, $tobool$i$i$i183 = 0, $tobool$i$i$i241 = 0, $tobool$i$i$i343 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $cv = sp + 224|0;
 $name = sp + 212|0;
 $ref$tmp = sp + 200|0;
 $ref$tmp68 = sp + 184|0;
 $ref$tmp73 = sp + 176|0;
 $name101 = sp + 164|0;
 $ref$tmp113 = sp + 152|0;
 $ref$tmp134 = sp + 136|0;
 $ref$tmp139 = sp + 128|0;
 $name172 = sp + 116|0;
 $ref$tmp184 = sp + 104|0;
 $ref$tmp205 = sp + 88|0;
 $ref$tmp210 = sp + 84|0;
 $name231 = sp + 72|0;
 $ref$tmp244 = sp + 56|0;
 $ref$tmp249 = sp + 48|0;
 $name274 = sp + 36|0;
 $ref$tmp286 = sp + 24|0;
 $ref$tmp307 = sp + 8|0;
 $ref$tmp312 = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$4 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(78);
   if ($cmp1) {
    $add$ptr = ((($first)) + 1|0);
    $call = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($add$ptr,$last,$cv)|0);
    $cmp2 = ($call|0)==($last|0);
    L4: do {
     if (!($cmp2)) {
      $ref = ((($db)) + 52|0);
      HEAP32[$ref>>2] = 0;
      $1 = HEAP8[$call>>0]|0;
      $incdec$ptr = ((($call)) + 1|0);
      switch ($1<<24>>24) {
      case 82:  {
       $$sink = 1;
       label = 6;
       break;
      }
      case 79:  {
       $$sink = 2;
       label = 6;
       break;
      }
      default: {
       $t0$0 = $call;
      }
      }
      if ((label|0) == 6) {
       HEAP32[$ref>>2] = $$sink;
       $t0$0 = $incdec$ptr;
      }
      $__end_$i = ((($db)) + 4|0);
      $2 = HEAP32[$__end_$i>>2]|0;
      $__first_$i$i$i$i = ((($db)) + 8|0);
      $3 = HEAP32[$__first_$i$i$i$i>>2]|0;
      $cmp$i = ($2>>>0)<($3>>>0);
      if ($cmp$i) {
       ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($2);
       $4 = HEAP32[$__end_$i>>2]|0;
       $incdec$ptr$i = ((($4)) + 24|0);
       HEAP32[$__end_$i>>2] = $incdec$ptr$i;
      } else {
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($db);
      }
      $sub$ptr$lhs$cast = $last;
      $sub$ptr$rhs$cast = $t0$0;
      $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
      $cmp15 = ($sub$ptr$sub|0)>(1);
      if ($cmp15) {
       $5 = HEAP8[$t0$0>>0]|0;
       $cmp18 = ($5<<24>>24)==(83);
       if ($cmp18) {
        $arrayidx20 = ((($t0$0)) + 1|0);
        $6 = HEAP8[$arrayidx20>>0]|0;
        $cmp22 = ($6<<24>>24)==(116);
        if ($cmp22) {
         $add$ptr24 = ((($t0$0)) + 2|0);
         $7 = HEAP32[$__end_$i>>2]|0;
         $first27 = ((($7)) + -24|0);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($first27,7343);
         $t0$1 = $add$ptr24;
        } else {
         $t0$1 = $t0$0;
        }
       } else {
        $t0$1 = $t0$0;
       }
      } else {
       $t0$1 = $t0$0;
      }
      $cmp30 = ($t0$1|0)==($last|0);
      if ($cmp30) {
       $8 = HEAP32[$__end_$i>>2]|0;
       $add$ptr$i142 = ((($8)) + -24|0);
       $9 = $8;
       while(1) {
        $cmp$i$i$i = ($9|0)==($add$ptr$i142|0);
        if ($cmp$i$i$i) {
         break L4;
        }
        $incdec$ptr$i$i$i = ((($9)) + -24|0);
        HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
        $$pre$i = HEAP32[$__end_$i>>2]|0;
        $9 = $$pre$i;
       }
      }
      $subs306 = ((($db)) + 16|0);
      $__size_$i$i$i$i$i298 = ((($name231)) + 11|0);
      $__size_$i3$i$i$i303 = ((($name231)) + 4|0);
      $retval$sroa$0$0$$sroa_idx$i310 = ((($db)) + 12|0);
      $__end_$i312 = ((($db)) + 20|0);
      $__first_$i$i$i$i313 = ((($db)) + 24|0);
      $__second_$i$i$i$i$i$i$i315 = ((($ref$tmp244)) + 12|0);
      $__end_$i$i$i$i321 = ((($ref$tmp244)) + 4|0);
      $__first_$i$i$i8$i$i$i$i322 = ((($ref$tmp244)) + 8|0);
      $__second_$i$i$i$i$i$i$i373 = ((($ref$tmp307)) + 12|0);
      $__end_$i$i$i$i379 = ((($ref$tmp307)) + 4|0);
      $__first_$i$i$i8$i$i$i$i380 = ((($ref$tmp307)) + 8|0);
      $__size_$i$i$i$i$i354 = ((($ref$tmp286)) + 11|0);
      $__size_$i3$i$i$i359 = ((($ref$tmp286)) + 4|0);
      $__size_$i$i$i$i$i = ((($ref$tmp)) + 11|0);
      $__size_$i3$i$i$i = ((($ref$tmp)) + 4|0);
      $__second_$i$i$i$i$i$i$i = ((($ref$tmp68)) + 12|0);
      $__end_$i$i$i$i = ((($ref$tmp68)) + 4|0);
      $__first_$i$i$i8$i$i$i$i = ((($ref$tmp68)) + 8|0);
      $__second_$i$i$i$i$i$i$i213 = ((($ref$tmp134)) + 12|0);
      $__end_$i$i$i$i219 = ((($ref$tmp134)) + 4|0);
      $__first_$i$i$i8$i$i$i$i220 = ((($ref$tmp134)) + 8|0);
      $__size_$i$i$i$i$i194 = ((($ref$tmp113)) + 11|0);
      $__size_$i3$i$i$i199 = ((($ref$tmp113)) + 4|0);
      $__second_$i$i$i$i$i$i$i271 = ((($ref$tmp205)) + 12|0);
      $__end_$i$i$i$i277 = ((($ref$tmp205)) + 4|0);
      $__first_$i$i$i8$i$i$i$i278 = ((($ref$tmp205)) + 8|0);
      $__size_$i$i$i$i$i252 = ((($ref$tmp184)) + 11|0);
      $__size_$i3$i$i$i257 = ((($ref$tmp184)) + 4|0);
      $pop_subs$0$off0$ph = 0;$t0$2$ph = $t0$1;
      L26: while(1) {
       $t0$2 = $t0$2$ph;
       L28: while(1) {
        $10 = HEAP8[$t0$2>>0]|0;
        $cmp35 = ($10<<24>>24)==(69);
        $add$ptr37 = ((($t0$2)) + 1|0);
        if ($cmp35) {
         label = 143;
         break L26;
        }
        $conv34 = $10 << 24 >> 24;
        switch ($conv34|0) {
        case 83:  {
         label = 21;
         break L28;
         break;
        }
        case 84:  {
         label = 48;
         break L28;
         break;
        }
        case 68:  {
         label = 73;
         break L28;
         break;
        }
        case 73:  {
         break;
        }
        case 76:  {
         $cmp266 = ($add$ptr37|0)==($last|0);
         if ($cmp266) {
          break L4;
         } else {
          $t0$2 = $add$ptr37;
          continue L28;
         }
         break;
        }
        default: {
         break L28;
        }
        }
        $call226 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($t0$2,$last,$db)|0);
        $cmp227 = ($call226|0)==($t0$2|0);
        $cmp229 = ($call226|0)==($last|0);
        $or$cond138 = $cmp227 | $cmp229;
        if ($or$cond138) {
         break L4;
        }
        $124 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i286 = ((($124)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name231,$add$ptr$i286);
        $125 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i288 = ((($125)) + -24|0);
        $126 = $125;
        while(1) {
         $cmp$i$i$i289 = ($126|0)==($add$ptr$i288|0);
         if ($cmp$i$i$i289) {
          break;
         }
         $incdec$ptr$i$i$i291 = ((($126)) + -24|0);
         HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i291;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i291);
         $$pre$i292 = HEAP32[$__end_$i>>2]|0;
         $126 = $$pre$i292;
        }
        $first240 = ((($125)) + -48|0);
        $127 = HEAP8[$__size_$i$i$i$i$i298>>0]|0;
        $tobool$i$i$i$i$i299 = ($127<<24>>24)<(0);
        $128 = HEAP32[$name231>>2]|0;
        $cond$i$i$i$i302 = $tobool$i$i$i$i$i299 ? $128 : $name231;
        $129 = HEAP32[$__size_$i3$i$i$i303>>2]|0;
        $conv$i$i$i$i304 = $127&255;
        $cond$i$i$i305 = $tobool$i$i$i$i$i299 ? $129 : $conv$i$i$i$i304;
        __THREW__ = 0;
        (invoke_iiii(47,($first240|0),($cond$i$i$i$i302|0),($cond$i$i$i305|0))|0);
        $130 = __THREW__; __THREW__ = 0;
        $131 = $130&1;
        if ($131) {
         label = 110;
         break L26;
        }
        $132 = HEAP32[$__end_$i>>2]|0;
        $add$ptr$i309 = ((($132)) + -24|0);
        $retval$sroa$0$0$copyload$i311398 = HEAP32[$retval$sroa$0$0$$sroa_idx$i310>>2]|0;
        HEAP32[$ref$tmp249>>2] = $retval$sroa$0$0$copyload$i311398;
        __THREW__ = 0;
        invoke_viii(60,($ref$tmp244|0),($add$ptr$i309|0),($ref$tmp249|0));
        $133 = __THREW__; __THREW__ = 0;
        $134 = $133&1;
        if ($134) {
         label = 111;
         break L26;
        }
        $135 = HEAP32[$__end_$i312>>2]|0;
        $136 = HEAP32[$__first_$i$i$i$i313>>2]|0;
        $cmp$i314 = ($135>>>0)<($136>>>0);
        if ($cmp$i314) {
         HEAP32[$135>>2] = 0;
         $__end_$i$i$i$i$i317 = ((($135)) + 4|0);
         HEAP32[$__end_$i$i$i$i$i317>>2] = 0;
         $__end_cap_$i$i$i$i$i318 = ((($135)) + 8|0);
         $137 = HEAP32[$__second_$i$i$i$i$i$i$i315>>2]|0;
         HEAP32[$__end_cap_$i$i$i$i$i318>>2] = 0;
         $__second_$i$i$i9$i$i$i$i319 = ((($135)) + 12|0);
         HEAP32[$__second_$i$i$i9$i$i$i$i319>>2] = $137;
         $138 = HEAP32[$ref$tmp244>>2]|0;
         HEAP32[$135>>2] = $138;
         $139 = HEAP32[$__end_$i$i$i$i321>>2]|0;
         HEAP32[$__end_$i$i$i$i$i317>>2] = $139;
         $140 = HEAP32[$__first_$i$i$i8$i$i$i$i322>>2]|0;
         $__first_$i$i$i7$i$i$i$i323 = ((($135)) + 8|0);
         HEAP32[$__first_$i$i$i7$i$i$i$i323>>2] = $140;
         HEAP32[$__first_$i$i$i8$i$i$i$i322>>2] = 0;
         HEAP32[$__end_$i$i$i$i321>>2] = 0;
         HEAP32[$ref$tmp244>>2] = 0;
         $141 = HEAP32[$__end_$i312>>2]|0;
         $incdec$ptr$i324 = ((($141)) + 16|0);
         HEAP32[$__end_$i312>>2] = $incdec$ptr$i324;
        } else {
         __THREW__ = 0;
         invoke_vii(57,($subs306|0),($ref$tmp244|0));
         $142 = __THREW__; __THREW__ = 0;
         $143 = $142&1;
         if ($143) {
          label = 112;
          break L26;
         }
        }
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp244);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name231);
        $t0$2 = $call226;
       }
       L45: do {
        if ((label|0) == 21) {
         label = 0;
         $cmp38$le516 = ($add$ptr37|0)==($last|0);
         if (!($cmp38$le516)) {
          $11 = HEAP8[$add$ptr37>>0]|0;
          $cmp42 = ($11<<24>>24)==(116);
          if ($cmp42) {
           break;
          }
         }
         $call45 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($t0$2,$last,$db)|0);
         $cmp46 = ($call45|0)==($t0$2|0);
         $cmp48 = ($call45|0)==($last|0);
         $or$cond = $cmp46 | $cmp48;
         if ($or$cond) {
          break L4;
         }
         $12 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i144 = ((($12)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name,$add$ptr$i144);
         $13 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i146 = ((($13)) + -24|0);
         $14 = $13;
         while(1) {
          $cmp$i$i$i147 = ($14|0)==($add$ptr$i146|0);
          if ($cmp$i$i$i147) {
           break;
          }
          $incdec$ptr$i$i$i149 = ((($14)) + -24|0);
          HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i149;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i149);
          $$pre$i150 = HEAP32[$__end_$i>>2]|0;
          $14 = $$pre$i150;
         }
         $first56 = ((($13)) + -48|0);
         $__size_$i$i$i = ((($first56)) + 11|0);
         $15 = HEAP8[$__size_$i$i$i>>0]|0;
         $tobool$i$i$i = ($15<<24>>24)<(0);
         if ($tobool$i$i$i) {
          $__size_$i3$i$i = ((($13)) + -44|0);
          $16 = HEAP32[$__size_$i3$i$i>>2]|0;
          $cond$i$i = $16;
         } else {
          $conv$i$i$i = $15&255;
          $cond$i$i = $conv$i$i$i;
         }
         $cmp$i155 = ($cond$i$i|0)==(0);
         if ($cmp$i155) {
          __THREW__ = 0;
          invoke_vii(82,($first56|0),($name|0));
          $47 = __THREW__; __THREW__ = 0;
          $48 = $47&1;
          if ($48) {
           label = 38;
           break L26;
          }
         } else {
          __THREW__ = 0;
          invoke_viii(76,($ref$tmp|0),(5910|0),($name|0));
          $17 = __THREW__; __THREW__ = 0;
          $18 = $17&1;
          if ($18) {
           label = 39;
           break L26;
          }
          $19 = HEAP32[$__end_$i>>2]|0;
          $first65 = ((($19)) + -24|0);
          $20 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
          $tobool$i$i$i$i$i = ($20<<24>>24)<(0);
          $21 = HEAP32[$ref$tmp>>2]|0;
          $cond$i$i$i$i = $tobool$i$i$i$i$i ? $21 : $ref$tmp;
          $22 = HEAP32[$__size_$i3$i$i$i>>2]|0;
          $conv$i$i$i$i = $20&255;
          $cond$i$i$i = $tobool$i$i$i$i$i ? $22 : $conv$i$i$i$i;
          __THREW__ = 0;
          (invoke_iiii(47,($first65|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if ($24) {
           label = 40;
           break L26;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
          $25 = HEAP32[$__end_$i>>2]|0;
          $add$ptr$i160 = ((($25)) + -24|0);
          $retval$sroa$0$0$copyload$i402 = HEAP32[$retval$sroa$0$0$$sroa_idx$i310>>2]|0;
          HEAP32[$ref$tmp73>>2] = $retval$sroa$0$0$copyload$i402;
          __THREW__ = 0;
          invoke_viii(60,($ref$tmp68|0),($add$ptr$i160|0),($ref$tmp73|0));
          $26 = __THREW__; __THREW__ = 0;
          $27 = $26&1;
          if ($27) {
           label = 42;
           break L26;
          }
          $28 = HEAP32[$__end_$i312>>2]|0;
          $29 = HEAP32[$__first_$i$i$i$i313>>2]|0;
          $cmp$i163 = ($28>>>0)<($29>>>0);
          if ($cmp$i163) {
           HEAP32[$28>>2] = 0;
           $__end_$i$i$i$i$i = ((($28)) + 4|0);
           HEAP32[$__end_$i$i$i$i$i>>2] = 0;
           $__end_cap_$i$i$i$i$i = ((($28)) + 8|0);
           $30 = HEAP32[$__second_$i$i$i$i$i$i$i>>2]|0;
           HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
           $__second_$i$i$i9$i$i$i$i = ((($28)) + 12|0);
           HEAP32[$__second_$i$i$i9$i$i$i$i>>2] = $30;
           $31 = HEAP32[$ref$tmp68>>2]|0;
           HEAP32[$28>>2] = $31;
           $32 = HEAP32[$__end_$i$i$i$i>>2]|0;
           HEAP32[$__end_$i$i$i$i$i>>2] = $32;
           $33 = HEAP32[$__first_$i$i$i8$i$i$i$i>>2]|0;
           $__first_$i$i$i7$i$i$i$i = ((($28)) + 8|0);
           HEAP32[$__first_$i$i$i7$i$i$i$i>>2] = $33;
           HEAP32[$__first_$i$i$i8$i$i$i$i>>2] = 0;
           HEAP32[$__end_$i$i$i$i>>2] = 0;
           HEAP32[$ref$tmp68>>2] = 0;
           $34 = HEAP32[$__end_$i312>>2]|0;
           $incdec$ptr$i164 = ((($34)) + 16|0);
           HEAP32[$__end_$i312>>2] = $incdec$ptr$i164;
          } else {
           __THREW__ = 0;
           invoke_vii(57,($subs306|0),($ref$tmp68|0));
           $35 = __THREW__; __THREW__ = 0;
           $36 = $35&1;
           if ($36) {
            label = 43;
            break L26;
           }
          }
          __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp68);
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name);
         $pop_subs$0$off0$ph = 1;$t0$2$ph = $call45;
         continue L26;
        }
        else if ((label|0) == 48) {
         label = 0;
         $call96 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($t0$2,$last,$db)|0);
         $cmp97 = ($call96|0)==($t0$2|0);
         $cmp99 = ($call96|0)==($last|0);
         $or$cond136 = $cmp97 | $cmp99;
         if ($or$cond136) {
          break L4;
         }
         $49 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i170 = ((($49)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name101,$add$ptr$i170);
         $50 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i172 = ((($50)) + -24|0);
         $51 = $50;
         while(1) {
          $cmp$i$i$i173 = ($51|0)==($add$ptr$i172|0);
          if ($cmp$i$i$i173) {
           break;
          }
          $incdec$ptr$i$i$i175 = ((($51)) + -24|0);
          HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i175;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i175);
          $$pre$i176 = HEAP32[$__end_$i>>2]|0;
          $51 = $$pre$i176;
         }
         $first110 = ((($50)) + -48|0);
         $__size_$i$i$i182 = ((($first110)) + 11|0);
         $52 = HEAP8[$__size_$i$i$i182>>0]|0;
         $tobool$i$i$i183 = ($52<<24>>24)<(0);
         if ($tobool$i$i$i183) {
          $__size_$i3$i$i184 = ((($50)) + -44|0);
          $53 = HEAP32[$__size_$i3$i$i184>>2]|0;
          $cond$i$i188 = $53;
         } else {
          $conv$i$i$i186 = $52&255;
          $cond$i$i188 = $conv$i$i$i186;
         }
         $cmp$i189 = ($cond$i$i188|0)==(0);
         if ($cmp$i189) {
          __THREW__ = 0;
          invoke_vii(82,($first110|0),($name101|0));
          $68 = __THREW__; __THREW__ = 0;
          $69 = $68&1;
          if ($69) {
           label = 59;
           break L26;
          }
         } else {
          __THREW__ = 0;
          invoke_viii(76,($ref$tmp113|0),(5910|0),($name101|0));
          $54 = __THREW__; __THREW__ = 0;
          $55 = $54&1;
          if ($55) {
           label = 60;
           break L26;
          }
          $56 = HEAP32[$__end_$i>>2]|0;
          $first120 = ((($56)) + -24|0);
          $57 = HEAP8[$__size_$i$i$i$i$i194>>0]|0;
          $tobool$i$i$i$i$i195 = ($57<<24>>24)<(0);
          $58 = HEAP32[$ref$tmp113>>2]|0;
          $cond$i$i$i$i198 = $tobool$i$i$i$i$i195 ? $58 : $ref$tmp113;
          $59 = HEAP32[$__size_$i3$i$i$i199>>2]|0;
          $conv$i$i$i$i200 = $57&255;
          $cond$i$i$i201 = $tobool$i$i$i$i$i195 ? $59 : $conv$i$i$i$i200;
          __THREW__ = 0;
          (invoke_iiii(47,($first120|0),($cond$i$i$i$i198|0),($cond$i$i$i201|0))|0);
          $60 = __THREW__; __THREW__ = 0;
          $61 = $60&1;
          if ($61) {
           label = 61;
           break L26;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp113);
         }
         $70 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i207 = ((($70)) + -24|0);
         $retval$sroa$0$0$copyload$i209401 = HEAP32[$retval$sroa$0$0$$sroa_idx$i310>>2]|0;
         HEAP32[$ref$tmp139>>2] = $retval$sroa$0$0$copyload$i209401;
         __THREW__ = 0;
         invoke_viii(60,($ref$tmp134|0),($add$ptr$i207|0),($ref$tmp139|0));
         $71 = __THREW__; __THREW__ = 0;
         $72 = $71&1;
         if ($72) {
          label = 69;
          break L26;
         }
         $73 = HEAP32[$__end_$i312>>2]|0;
         $74 = HEAP32[$__first_$i$i$i$i313>>2]|0;
         $cmp$i212 = ($73>>>0)<($74>>>0);
         if ($cmp$i212) {
          HEAP32[$73>>2] = 0;
          $__end_$i$i$i$i$i215 = ((($73)) + 4|0);
          HEAP32[$__end_$i$i$i$i$i215>>2] = 0;
          $__end_cap_$i$i$i$i$i216 = ((($73)) + 8|0);
          $75 = HEAP32[$__second_$i$i$i$i$i$i$i213>>2]|0;
          HEAP32[$__end_cap_$i$i$i$i$i216>>2] = 0;
          $__second_$i$i$i9$i$i$i$i217 = ((($73)) + 12|0);
          HEAP32[$__second_$i$i$i9$i$i$i$i217>>2] = $75;
          $76 = HEAP32[$ref$tmp134>>2]|0;
          HEAP32[$73>>2] = $76;
          $77 = HEAP32[$__end_$i$i$i$i219>>2]|0;
          HEAP32[$__end_$i$i$i$i$i215>>2] = $77;
          $78 = HEAP32[$__first_$i$i$i8$i$i$i$i220>>2]|0;
          $__first_$i$i$i7$i$i$i$i221 = ((($73)) + 8|0);
          HEAP32[$__first_$i$i$i7$i$i$i$i221>>2] = $78;
          HEAP32[$__first_$i$i$i8$i$i$i$i220>>2] = 0;
          HEAP32[$__end_$i$i$i$i219>>2] = 0;
          HEAP32[$ref$tmp134>>2] = 0;
          $79 = HEAP32[$__end_$i312>>2]|0;
          $incdec$ptr$i222 = ((($79)) + 16|0);
          HEAP32[$__end_$i312>>2] = $incdec$ptr$i222;
         } else {
          __THREW__ = 0;
          invoke_vii(57,($subs306|0),($ref$tmp134|0));
          $80 = __THREW__; __THREW__ = 0;
          $81 = $80&1;
          if ($81) {
           label = 70;
           break L26;
          }
         }
         __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp134);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name101);
         $pop_subs$0$off0$ph = 1;$t0$2$ph = $call96;
         continue L26;
        }
        else if ((label|0) == 73) {
         label = 0;
         $cmp38$le = ($add$ptr37|0)==($last|0);
         if (!($cmp38$le)) {
          $86 = HEAP8[$add$ptr37>>0]|0;
          switch ($86<<24>>24) {
          case 84: case 116:  {
           break;
          }
          default: {
           break L45;
          }
          }
         }
         $call167 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($t0$2,$last,$db)|0);
         $cmp168 = ($call167|0)==($t0$2|0);
         $cmp170 = ($call167|0)==($last|0);
         $or$cond137 = $cmp168 | $cmp170;
         if ($or$cond137) {
          break L4;
         }
         $87 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i228 = ((($87)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name172,$add$ptr$i228);
         $88 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i230 = ((($88)) + -24|0);
         $89 = $88;
         while(1) {
          $cmp$i$i$i231 = ($89|0)==($add$ptr$i230|0);
          if ($cmp$i$i$i231) {
           break;
          }
          $incdec$ptr$i$i$i233 = ((($89)) + -24|0);
          HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i233;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i233);
          $$pre$i234 = HEAP32[$__end_$i>>2]|0;
          $89 = $$pre$i234;
         }
         $first181 = ((($88)) + -48|0);
         $__size_$i$i$i240 = ((($first181)) + 11|0);
         $90 = HEAP8[$__size_$i$i$i240>>0]|0;
         $tobool$i$i$i241 = ($90<<24>>24)<(0);
         if ($tobool$i$i$i241) {
          $__size_$i3$i$i242 = ((($88)) + -44|0);
          $91 = HEAP32[$__size_$i3$i$i242>>2]|0;
          $cond$i$i246 = $91;
         } else {
          $conv$i$i$i244 = $90&255;
          $cond$i$i246 = $conv$i$i$i244;
         }
         $cmp$i247 = ($cond$i$i246|0)==(0);
         if ($cmp$i247) {
          __THREW__ = 0;
          invoke_vii(82,($first181|0),($name172|0));
          $106 = __THREW__; __THREW__ = 0;
          $107 = $106&1;
          if ($107) {
           label = 86;
           break L26;
          }
         } else {
          __THREW__ = 0;
          invoke_viii(76,($ref$tmp184|0),(5910|0),($name172|0));
          $92 = __THREW__; __THREW__ = 0;
          $93 = $92&1;
          if ($93) {
           label = 87;
           break L26;
          }
          $94 = HEAP32[$__end_$i>>2]|0;
          $first191 = ((($94)) + -24|0);
          $95 = HEAP8[$__size_$i$i$i$i$i252>>0]|0;
          $tobool$i$i$i$i$i253 = ($95<<24>>24)<(0);
          $96 = HEAP32[$ref$tmp184>>2]|0;
          $cond$i$i$i$i256 = $tobool$i$i$i$i$i253 ? $96 : $ref$tmp184;
          $97 = HEAP32[$__size_$i3$i$i$i257>>2]|0;
          $conv$i$i$i$i258 = $95&255;
          $cond$i$i$i259 = $tobool$i$i$i$i$i253 ? $97 : $conv$i$i$i$i258;
          __THREW__ = 0;
          (invoke_iiii(47,($first191|0),($cond$i$i$i$i256|0),($cond$i$i$i259|0))|0);
          $98 = __THREW__; __THREW__ = 0;
          $99 = $98&1;
          if ($99) {
           label = 88;
           break L26;
          }
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp184);
         }
         $108 = HEAP32[$__end_$i>>2]|0;
         $add$ptr$i265 = ((($108)) + -24|0);
         $retval$sroa$0$0$copyload$i267399 = HEAP32[$retval$sroa$0$0$$sroa_idx$i310>>2]|0;
         HEAP32[$ref$tmp210>>2] = $retval$sroa$0$0$copyload$i267399;
         __THREW__ = 0;
         invoke_viii(60,($ref$tmp205|0),($add$ptr$i265|0),($ref$tmp210|0));
         $109 = __THREW__; __THREW__ = 0;
         $110 = $109&1;
         if ($110) {
          label = 96;
          break L26;
         }
         $111 = HEAP32[$__end_$i312>>2]|0;
         $112 = HEAP32[$__first_$i$i$i$i313>>2]|0;
         $cmp$i270 = ($111>>>0)<($112>>>0);
         if ($cmp$i270) {
          HEAP32[$111>>2] = 0;
          $__end_$i$i$i$i$i273 = ((($111)) + 4|0);
          HEAP32[$__end_$i$i$i$i$i273>>2] = 0;
          $__end_cap_$i$i$i$i$i274 = ((($111)) + 8|0);
          $113 = HEAP32[$__second_$i$i$i$i$i$i$i271>>2]|0;
          HEAP32[$__end_cap_$i$i$i$i$i274>>2] = 0;
          $__second_$i$i$i9$i$i$i$i275 = ((($111)) + 12|0);
          HEAP32[$__second_$i$i$i9$i$i$i$i275>>2] = $113;
          $114 = HEAP32[$ref$tmp205>>2]|0;
          HEAP32[$111>>2] = $114;
          $115 = HEAP32[$__end_$i$i$i$i277>>2]|0;
          HEAP32[$__end_$i$i$i$i$i273>>2] = $115;
          $116 = HEAP32[$__first_$i$i$i8$i$i$i$i278>>2]|0;
          $__first_$i$i$i7$i$i$i$i279 = ((($111)) + 8|0);
          HEAP32[$__first_$i$i$i7$i$i$i$i279>>2] = $116;
          HEAP32[$__first_$i$i$i8$i$i$i$i278>>2] = 0;
          HEAP32[$__end_$i$i$i$i277>>2] = 0;
          HEAP32[$ref$tmp205>>2] = 0;
          $117 = HEAP32[$__end_$i312>>2]|0;
          $incdec$ptr$i280 = ((($117)) + 16|0);
          HEAP32[$__end_$i312>>2] = $incdec$ptr$i280;
         } else {
          __THREW__ = 0;
          invoke_vii(57,($subs306|0),($ref$tmp205|0));
          $118 = __THREW__; __THREW__ = 0;
          $119 = $118&1;
          if ($119) {
           label = 97;
           break L26;
          }
         }
         __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp205);
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name172);
         $pop_subs$0$off0$ph = 1;$t0$2$ph = $call167;
         continue L26;
        }
       } while(0);
       $call269 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$2,$last,$db)|0);
       $cmp270 = ($call269|0)==($t0$2|0);
       $cmp272 = ($call269|0)==($last|0);
       $or$cond139 = $cmp270 | $cmp272;
       if ($or$cond139) {
        break L4;
       }
       $150 = HEAP32[$__end_$i>>2]|0;
       $add$ptr$i330 = ((($150)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name274,$add$ptr$i330);
       $151 = HEAP32[$__end_$i>>2]|0;
       $add$ptr$i332 = ((($151)) + -24|0);
       $152 = $151;
       while(1) {
        $cmp$i$i$i333 = ($152|0)==($add$ptr$i332|0);
        if ($cmp$i$i$i333) {
         break;
        }
        $incdec$ptr$i$i$i335 = ((($152)) + -24|0);
        HEAP32[$__end_$i>>2] = $incdec$ptr$i$i$i335;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i335);
        $$pre$i336 = HEAP32[$__end_$i>>2]|0;
        $152 = $$pre$i336;
       }
       $first283 = ((($151)) + -48|0);
       $__size_$i$i$i342 = ((($first283)) + 11|0);
       $153 = HEAP8[$__size_$i$i$i342>>0]|0;
       $tobool$i$i$i343 = ($153<<24>>24)<(0);
       if ($tobool$i$i$i343) {
        $__size_$i3$i$i344 = ((($151)) + -44|0);
        $154 = HEAP32[$__size_$i3$i$i344>>2]|0;
        $cond$i$i348 = $154;
       } else {
        $conv$i$i$i346 = $153&255;
        $cond$i$i348 = $conv$i$i$i346;
       }
       $cmp$i349 = ($cond$i$i348|0)==(0);
       if ($cmp$i349) {
        __THREW__ = 0;
        invoke_vii(82,($first283|0),($name274|0));
        $169 = __THREW__; __THREW__ = 0;
        $170 = $169&1;
        if ($170) {
         label = 127;
         break;
        }
       } else {
        __THREW__ = 0;
        invoke_viii(76,($ref$tmp286|0),(5910|0),($name274|0));
        $155 = __THREW__; __THREW__ = 0;
        $156 = $155&1;
        if ($156) {
         label = 128;
         break;
        }
        $157 = HEAP32[$__end_$i>>2]|0;
        $first293 = ((($157)) + -24|0);
        $158 = HEAP8[$__size_$i$i$i$i$i354>>0]|0;
        $tobool$i$i$i$i$i355 = ($158<<24>>24)<(0);
        $159 = HEAP32[$ref$tmp286>>2]|0;
        $cond$i$i$i$i358 = $tobool$i$i$i$i$i355 ? $159 : $ref$tmp286;
        $160 = HEAP32[$__size_$i3$i$i$i359>>2]|0;
        $conv$i$i$i$i360 = $158&255;
        $cond$i$i$i361 = $tobool$i$i$i$i$i355 ? $160 : $conv$i$i$i$i360;
        __THREW__ = 0;
        (invoke_iiii(47,($first293|0),($cond$i$i$i$i358|0),($cond$i$i$i361|0))|0);
        $161 = __THREW__; __THREW__ = 0;
        $162 = $161&1;
        if ($162) {
         label = 129;
         break;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp286);
       }
       $171 = HEAP32[$__end_$i>>2]|0;
       $add$ptr$i367 = ((($171)) + -24|0);
       $retval$sroa$0$0$copyload$i369400 = HEAP32[$retval$sroa$0$0$$sroa_idx$i310>>2]|0;
       HEAP32[$ref$tmp312>>2] = $retval$sroa$0$0$copyload$i369400;
       __THREW__ = 0;
       invoke_viii(60,($ref$tmp307|0),($add$ptr$i367|0),($ref$tmp312|0));
       $172 = __THREW__; __THREW__ = 0;
       $173 = $172&1;
       if ($173) {
        label = 138;
        break;
       }
       $174 = HEAP32[$__end_$i312>>2]|0;
       $175 = HEAP32[$__first_$i$i$i$i313>>2]|0;
       $cmp$i372 = ($174>>>0)<($175>>>0);
       if ($cmp$i372) {
        HEAP32[$174>>2] = 0;
        $__end_$i$i$i$i$i375 = ((($174)) + 4|0);
        HEAP32[$__end_$i$i$i$i$i375>>2] = 0;
        $__end_cap_$i$i$i$i$i376 = ((($174)) + 8|0);
        $176 = HEAP32[$__second_$i$i$i$i$i$i$i373>>2]|0;
        HEAP32[$__end_cap_$i$i$i$i$i376>>2] = 0;
        $__second_$i$i$i9$i$i$i$i377 = ((($174)) + 12|0);
        HEAP32[$__second_$i$i$i9$i$i$i$i377>>2] = $176;
        $177 = HEAP32[$ref$tmp307>>2]|0;
        HEAP32[$174>>2] = $177;
        $178 = HEAP32[$__end_$i$i$i$i379>>2]|0;
        HEAP32[$__end_$i$i$i$i$i375>>2] = $178;
        $179 = HEAP32[$__first_$i$i$i8$i$i$i$i380>>2]|0;
        $__first_$i$i$i7$i$i$i$i381 = ((($174)) + 8|0);
        HEAP32[$__first_$i$i$i7$i$i$i$i381>>2] = $179;
        HEAP32[$__first_$i$i$i8$i$i$i$i380>>2] = 0;
        HEAP32[$__end_$i$i$i$i379>>2] = 0;
        HEAP32[$ref$tmp307>>2] = 0;
        $180 = HEAP32[$__end_$i312>>2]|0;
        $incdec$ptr$i382 = ((($180)) + 16|0);
        HEAP32[$__end_$i312>>2] = $incdec$ptr$i382;
       } else {
        __THREW__ = 0;
        invoke_vii(57,($subs306|0),($ref$tmp307|0));
        $181 = __THREW__; __THREW__ = 0;
        $182 = $181&1;
        if ($182) {
         label = 139;
         break;
        }
       }
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp307);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name274);
       $pop_subs$0$off0$ph = 1;$t0$2$ph = $call269;
      }
      switch (label|0) {
       case 38: {
        $37 = ___cxa_find_matching_catch_2()|0;
        $38 = tempRet0;
        $ehselector$slot$2 = $38;$exn$slot$2 = $37;
        label = 47;
        break;
       }
       case 39: {
        $39 = ___cxa_find_matching_catch_2()|0;
        $40 = tempRet0;
        $ehselector$slot$0 = $40;$exn$slot$0 = $39;
        label = 41;
        break;
       }
       case 40: {
        $41 = ___cxa_find_matching_catch_2()|0;
        $42 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
        $ehselector$slot$0 = $42;$exn$slot$0 = $41;
        label = 41;
        break;
       }
       case 42: {
        $43 = ___cxa_find_matching_catch_2()|0;
        $44 = tempRet0;
        $ehselector$slot$1 = $44;$exn$slot$1 = $43;
        label = 44;
        break;
       }
       case 43: {
        $45 = ___cxa_find_matching_catch_2()|0;
        $46 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp68);
        $ehselector$slot$1 = $46;$exn$slot$1 = $45;
        label = 44;
        break;
       }
       case 59: {
        $62 = ___cxa_find_matching_catch_2()|0;
        $63 = tempRet0;
        $ehselector$slot$5 = $63;$exn$slot$5 = $62;
        label = 72;
        break;
       }
       case 60: {
        $64 = ___cxa_find_matching_catch_2()|0;
        $65 = tempRet0;
        $ehselector$slot$3 = $65;$exn$slot$3 = $64;
        label = 62;
        break;
       }
       case 61: {
        $66 = ___cxa_find_matching_catch_2()|0;
        $67 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp113);
        $ehselector$slot$3 = $67;$exn$slot$3 = $66;
        label = 62;
        break;
       }
       case 69: {
        $82 = ___cxa_find_matching_catch_2()|0;
        $83 = tempRet0;
        $ehselector$slot$4 = $83;$exn$slot$4 = $82;
        label = 71;
        break;
       }
       case 70: {
        $84 = ___cxa_find_matching_catch_2()|0;
        $85 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp134);
        $ehselector$slot$4 = $85;$exn$slot$4 = $84;
        label = 71;
        break;
       }
       case 86: {
        $100 = ___cxa_find_matching_catch_2()|0;
        $101 = tempRet0;
        $ehselector$slot$8 = $101;$exn$slot$8 = $100;
        label = 99;
        break;
       }
       case 87: {
        $102 = ___cxa_find_matching_catch_2()|0;
        $103 = tempRet0;
        $ehselector$slot$6 = $103;$exn$slot$6 = $102;
        label = 89;
        break;
       }
       case 88: {
        $104 = ___cxa_find_matching_catch_2()|0;
        $105 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp184);
        $ehselector$slot$6 = $105;$exn$slot$6 = $104;
        label = 89;
        break;
       }
       case 96: {
        $120 = ___cxa_find_matching_catch_2()|0;
        $121 = tempRet0;
        $ehselector$slot$7 = $121;$exn$slot$7 = $120;
        label = 98;
        break;
       }
       case 97: {
        $122 = ___cxa_find_matching_catch_2()|0;
        $123 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp205);
        $ehselector$slot$7 = $123;$exn$slot$7 = $122;
        label = 98;
        break;
       }
       case 110: {
        $144 = ___cxa_find_matching_catch_2()|0;
        $145 = tempRet0;
        $ehselector$slot$10 = $145;$exn$slot$10 = $144;
        label = 114;
        break;
       }
       case 111: {
        $146 = ___cxa_find_matching_catch_2()|0;
        $147 = tempRet0;
        $ehselector$slot$9 = $147;$exn$slot$9 = $146;
        label = 113;
        break;
       }
       case 112: {
        $148 = ___cxa_find_matching_catch_2()|0;
        $149 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp244);
        $ehselector$slot$9 = $149;$exn$slot$9 = $148;
        label = 113;
        break;
       }
       case 127: {
        $163 = ___cxa_find_matching_catch_2()|0;
        $164 = tempRet0;
        $ehselector$slot$13 = $164;$exn$slot$13 = $163;
        label = 141;
        break;
       }
       case 128: {
        $165 = ___cxa_find_matching_catch_2()|0;
        $166 = tempRet0;
        $ehselector$slot$11 = $166;$exn$slot$11 = $165;
        label = 130;
        break;
       }
       case 129: {
        $167 = ___cxa_find_matching_catch_2()|0;
        $168 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp286);
        $ehselector$slot$11 = $168;$exn$slot$11 = $167;
        label = 130;
        break;
       }
       case 138: {
        $183 = ___cxa_find_matching_catch_2()|0;
        $184 = tempRet0;
        $ehselector$slot$12 = $184;$exn$slot$12 = $183;
        label = 140;
        break;
       }
       case 139: {
        $185 = ___cxa_find_matching_catch_2()|0;
        $186 = tempRet0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($ref$tmp307);
        $ehselector$slot$12 = $186;$exn$slot$12 = $185;
        label = 140;
        break;
       }
       case 143: {
        $187 = HEAP32[$cv>>2]|0;
        $cv329 = ((($db)) + 48|0);
        HEAP32[$cv329>>2] = $187;
        L158: do {
         if ($pop_subs$0$off0$ph) {
          $188 = HEAP32[$subs306>>2]|0;
          $189 = HEAP32[$__end_$i312>>2]|0;
          $cmp$i388 = ($188|0)==($189|0);
          if (!($cmp$i388)) {
           $add$ptr$i390 = ((($189)) + -16|0);
           $190 = $189;
           while(1) {
            $cmp$i$i$i391 = ($190|0)==($add$ptr$i390|0);
            if ($cmp$i$i$i391) {
             break L158;
            }
            $incdec$ptr$i$i$i393 = ((($190)) + -16|0);
            HEAP32[$__end_$i312>>2] = $incdec$ptr$i$i$i393;
            __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($incdec$ptr$i$i$i393);
            $$pre$i394 = HEAP32[$__end_$i312>>2]|0;
            $190 = $$pre$i394;
           }
          }
         }
        } while(0);
        $retval$4 = $add$ptr37;
        break L1;
        break;
       }
      }
      if ((label|0) == 41) {
       $ehselector$slot$2 = $ehselector$slot$0;$exn$slot$2 = $exn$slot$0;
       label = 47;
      }
      else if ((label|0) == 44) {
       $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
       label = 47;
      }
      else if ((label|0) == 62) {
       $ehselector$slot$5 = $ehselector$slot$3;$exn$slot$5 = $exn$slot$3;
       label = 72;
      }
      else if ((label|0) == 71) {
       $ehselector$slot$5 = $ehselector$slot$4;$exn$slot$5 = $exn$slot$4;
       label = 72;
      }
      else if ((label|0) == 89) {
       $ehselector$slot$8 = $ehselector$slot$6;$exn$slot$8 = $exn$slot$6;
       label = 99;
      }
      else if ((label|0) == 98) {
       $ehselector$slot$8 = $ehselector$slot$7;$exn$slot$8 = $exn$slot$7;
       label = 99;
      }
      else if ((label|0) == 113) {
       $ehselector$slot$10 = $ehselector$slot$9;$exn$slot$10 = $exn$slot$9;
       label = 114;
      }
      else if ((label|0) == 130) {
       $ehselector$slot$13 = $ehselector$slot$11;$exn$slot$13 = $exn$slot$11;
       label = 141;
      }
      else if ((label|0) == 140) {
       $ehselector$slot$13 = $ehselector$slot$12;$exn$slot$13 = $exn$slot$12;
       label = 141;
      }
      if ((label|0) == 47) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name);
       $ehselector$slot$14 = $ehselector$slot$2;$exn$slot$14 = $exn$slot$2;
      }
      else if ((label|0) == 72) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name101);
       $ehselector$slot$14 = $ehselector$slot$5;$exn$slot$14 = $exn$slot$5;
      }
      else if ((label|0) == 99) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name172);
       $ehselector$slot$14 = $ehselector$slot$8;$exn$slot$14 = $exn$slot$8;
      }
      else if ((label|0) == 114) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name231);
       $ehselector$slot$14 = $ehselector$slot$10;$exn$slot$14 = $exn$slot$10;
      }
      else if ((label|0) == 141) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name274);
       $ehselector$slot$14 = $ehselector$slot$13;$exn$slot$14 = $exn$slot$13;
      }
      ___resumeException($exn$slot$14|0);
      // unreachable;
     }
    } while(0);
    $retval$4 = $first;
   } else {
    $retval$4 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$4|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $$pre$i110 = 0, $$pre$i74 = 0, $$pre$i87 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i105 = 0, $__end_$i69 = 0, $__end_$i77 = 0, $__size_$i$i$i$i = 0, $__size_$i$i$i$i95 = 0, $__size_$i3$i$i = 0, $__size_$i3$i$i100 = 0, $add$ptr = 0, $add$ptr$i106 = 0, $add$ptr$i61 = 0, $add$ptr$i63 = 0, $add$ptr$i70 = 0, $add$ptr$i81 = 0, $add$ptr$i83 = 0, $add$ptr13 = 0;
 var $add$ptr31 = 0, $call = 0, $call14 = 0, $call25 = 0, $call32 = 0, $call60 = 0, $call63 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i107 = 0, $cmp$i$i$i71 = 0, $cmp$i$i$i84 = 0, $cmp1 = 0, $cmp10 = 0, $cmp23 = 0, $cmp26 = 0, $cmp29 = 0, $cmp3 = 0, $cmp33 = 0;
 var $cmp37 = 0, $cmp5 = 0, $cmp61 = 0, $cmp66 = 0, $cmp8 = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i99 = 0, $cond$i$i102 = 0, $conv$i$i$i = 0, $conv$i$i$i101 = 0, $conv12 = 0, $ehselector$slot$0 = 0, $exn$slot$0 = 0, $first19 = 0, $first46 = 0, $first52 = 0, $first78 = 0, $first84 = 0, $incdec$ptr = 0;
 var $incdec$ptr$i$i$i = 0, $incdec$ptr$i$i$i109 = 0, $incdec$ptr$i$i$i73 = 0, $incdec$ptr$i$i$i86 = 0, $name = 0, $name69 = 0, $or$cond = 0, $retval$4 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i79 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i78 = 0, $tobool$i$i$i$i = 0, $tobool$i$i$i$i96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $name = sp + 12|0;
 $name69 = sp;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$4 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(90);
   if ($cmp1) {
    $add$ptr = ((($first)) + 1|0);
    $call = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
    $cmp3 = ($call|0)==($add$ptr|0);
    $cmp5 = ($call|0)==($last|0);
    $or$cond = $cmp3 | $cmp5;
    if ($or$cond) {
     $retval$4 = $first;
    } else {
     $1 = HEAP8[$call>>0]|0;
     $cmp8 = ($1<<24>>24)==(69);
     if ($cmp8) {
      $incdec$ptr = ((($call)) + 1|0);
      $cmp10 = ($incdec$ptr|0)==($last|0);
      if ($cmp10) {
       $retval$4 = $first;
      } else {
       $2 = HEAP8[$incdec$ptr>>0]|0;
       $conv12 = $2 << 24 >> 24;
       $add$ptr13 = ((($call)) + 2|0);
       switch ($conv12|0) {
       case 115:  {
        $call14 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($add$ptr13,$last)|0);
        $3 = HEAP32[$db>>2]|0;
        $__end_$i = ((($db)) + 4|0);
        $4 = HEAP32[$__end_$i>>2]|0;
        $cmp$i = ($3|0)==($4|0);
        if ($cmp$i) {
         $retval$4 = $call14;
         break L1;
        }
        $first19 = ((($4)) + -24|0);
        (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($first19,7326)|0);
        $retval$4 = $call14;
        break L1;
        break;
       }
       case 100:  {
        $cmp23 = ($add$ptr13|0)==($last|0);
        if ($cmp23) {
         $retval$4 = $first;
         break L1;
        }
        $call25 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($add$ptr13,$last)|0);
        $cmp26 = ($call25|0)==($last|0);
        if ($cmp26) {
         $retval$4 = $first;
         break L1;
        }
        $5 = HEAP8[$call25>>0]|0;
        $cmp29 = ($5<<24>>24)==(95);
        if (!($cmp29)) {
         $retval$4 = $first;
         break L1;
        }
        $add$ptr31 = ((($call25)) + 1|0);
        $call32 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($add$ptr31,$last,$db)|0);
        $cmp33 = ($call32|0)==($add$ptr31|0);
        $__end_$i69 = ((($db)) + 4|0);
        if ($cmp33) {
         $21 = HEAP32[$__end_$i69>>2]|0;
         $add$ptr$i70 = ((($21)) + -24|0);
         $22 = $21;
         while(1) {
          $cmp$i$i$i71 = ($22|0)==($add$ptr$i70|0);
          if ($cmp$i$i$i71) {
           $retval$4 = $first;
           break L1;
          }
          $incdec$ptr$i$i$i73 = ((($22)) + -24|0);
          HEAP32[$__end_$i69>>2] = $incdec$ptr$i$i$i73;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i73);
          $$pre$i74 = HEAP32[$__end_$i69>>2]|0;
          $22 = $$pre$i74;
         }
        }
        $6 = HEAP32[$__end_$i69>>2]|0;
        $7 = HEAP32[$db>>2]|0;
        $sub$ptr$sub$i = (($6) - ($7))|0;
        $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
        $cmp37 = ($sub$ptr$div$i>>>0)<(2);
        if ($cmp37) {
         $retval$4 = $first;
         break L1;
        }
        $8 = $6;
        $add$ptr$i61 = ((($8)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name,$add$ptr$i61);
        $9 = HEAP32[$__end_$i69>>2]|0;
        $add$ptr$i63 = ((($9)) + -24|0);
        $10 = $9;
        while(1) {
         $cmp$i$i$i = ($10|0)==($add$ptr$i63|0);
         if ($cmp$i$i$i) {
          break;
         }
         $incdec$ptr$i$i$i = ((($10)) + -24|0);
         HEAP32[$__end_$i69>>2] = $incdec$ptr$i$i$i;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
         $$pre$i = HEAP32[$__end_$i69>>2]|0;
         $10 = $$pre$i;
        }
        $first46 = ((($9)) + -48|0);
        __THREW__ = 0;
        (invoke_iii(54,($first46|0),(5910|0))|0);
        $11 = __THREW__; __THREW__ = 0;
        $12 = $11&1;
        if (!($12)) {
         $13 = HEAP32[$__end_$i69>>2]|0;
         $first52 = ((($13)) + -24|0);
         $__size_$i$i$i$i = ((($name)) + 11|0);
         $14 = HEAP8[$__size_$i$i$i$i>>0]|0;
         $tobool$i$i$i$i = ($14<<24>>24)<(0);
         $15 = HEAP32[$name>>2]|0;
         $cond$i$i$i = $tobool$i$i$i$i ? $15 : $name;
         $__size_$i3$i$i = ((($name)) + 4|0);
         $16 = HEAP32[$__size_$i3$i$i>>2]|0;
         $conv$i$i$i = $14&255;
         $cond$i$i = $tobool$i$i$i$i ? $16 : $conv$i$i$i;
         __THREW__ = 0;
         (invoke_iiii(47,($first52|0),($cond$i$i$i|0),($cond$i$i|0))|0);
         $17 = __THREW__; __THREW__ = 0;
         $18 = $17&1;
         if (!($18)) {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name);
          $retval$4 = $call32;
          break L1;
         }
        }
        $19 = ___cxa_find_matching_catch_2()|0;
        $20 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name);
        $ehselector$slot$0 = $20;$exn$slot$0 = $19;
        break;
       }
       default: {
        $call60 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr,$last,$db)|0);
        $cmp61 = ($call60|0)==($incdec$ptr|0);
        if ($cmp61) {
         $__end_$i105 = ((($db)) + 4|0);
         $38 = HEAP32[$__end_$i105>>2]|0;
         $add$ptr$i106 = ((($38)) + -24|0);
         $39 = $38;
         while(1) {
          $cmp$i$i$i107 = ($39|0)==($add$ptr$i106|0);
          if ($cmp$i$i$i107) {
           $retval$4 = $first;
           break L1;
          }
          $incdec$ptr$i$i$i109 = ((($39)) + -24|0);
          HEAP32[$__end_$i105>>2] = $incdec$ptr$i$i$i109;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i109);
          $$pre$i110 = HEAP32[$__end_$i105>>2]|0;
          $39 = $$pre$i110;
         }
        }
        $call63 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($call60,$last)|0);
        $__end_$i77 = ((($db)) + 4|0);
        $23 = HEAP32[$__end_$i77>>2]|0;
        $24 = HEAP32[$db>>2]|0;
        $sub$ptr$sub$i78 = (($23) - ($24))|0;
        $sub$ptr$div$i79 = (($sub$ptr$sub$i78|0) / 24)&-1;
        $cmp66 = ($sub$ptr$div$i79>>>0)<(2);
        if ($cmp66) {
         $retval$4 = $call63;
         break L1;
        }
        $25 = $23;
        $add$ptr$i81 = ((($25)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name69,$add$ptr$i81);
        $26 = HEAP32[$__end_$i77>>2]|0;
        $add$ptr$i83 = ((($26)) + -24|0);
        $27 = $26;
        while(1) {
         $cmp$i$i$i84 = ($27|0)==($add$ptr$i83|0);
         if ($cmp$i$i$i84) {
          break;
         }
         $incdec$ptr$i$i$i86 = ((($27)) + -24|0);
         HEAP32[$__end_$i77>>2] = $incdec$ptr$i$i$i86;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i86);
         $$pre$i87 = HEAP32[$__end_$i77>>2]|0;
         $27 = $$pre$i87;
        }
        $first78 = ((($26)) + -48|0);
        __THREW__ = 0;
        (invoke_iii(54,($first78|0),(5910|0))|0);
        $28 = __THREW__; __THREW__ = 0;
        $29 = $28&1;
        if (!($29)) {
         $30 = HEAP32[$__end_$i77>>2]|0;
         $first84 = ((($30)) + -24|0);
         $__size_$i$i$i$i95 = ((($name69)) + 11|0);
         $31 = HEAP8[$__size_$i$i$i$i95>>0]|0;
         $tobool$i$i$i$i96 = ($31<<24>>24)<(0);
         $32 = HEAP32[$name69>>2]|0;
         $cond$i$i$i99 = $tobool$i$i$i$i96 ? $32 : $name69;
         $__size_$i3$i$i100 = ((($name69)) + 4|0);
         $33 = HEAP32[$__size_$i3$i$i100>>2]|0;
         $conv$i$i$i101 = $31&255;
         $cond$i$i102 = $tobool$i$i$i$i96 ? $33 : $conv$i$i$i101;
         __THREW__ = 0;
         (invoke_iiii(47,($first84|0),($cond$i$i$i99|0),($cond$i$i102|0))|0);
         $34 = __THREW__; __THREW__ = 0;
         $35 = $34&1;
         if (!($35)) {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name69);
          $retval$4 = $call63;
          break L1;
         }
        }
        $36 = ___cxa_find_matching_catch_2()|0;
        $37 = tempRet0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name69);
        $ehselector$slot$0 = $37;$exn$slot$0 = $36;
       }
       }
       ___resumeException($exn$slot$0|0);
       // unreachable;
      }
     } else {
      $retval$4 = $first;
     }
    }
   } else {
    $retval$4 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$4|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $St$0$off0 = 0, $__end_$i = 0, $add$ptr = 0, $arrayidx2 = 0, $brmerge = 0, $call = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp12 = 0, $cmp4 = 0, $cmp6 = 0, $cmp9 = 0, $first$mux = 0, $first20 = 0;
 var $incdec$ptr = 0, $incdec$ptr$add$ptr = 0, $retval$1 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $t0$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(1);
 if ($cmp) {
  $0 = HEAP8[$first>>0]|0;
  $cmp1 = ($0<<24>>24)==(83);
  if ($cmp1) {
   $arrayidx2 = ((($first)) + 1|0);
   $1 = HEAP8[$arrayidx2>>0]|0;
   $cmp4 = ($1<<24>>24)==(116);
   if ($cmp4) {
    $add$ptr = ((($first)) + 2|0);
    $cmp6 = ($add$ptr|0)==($last|0);
    if ($cmp6) {
     $St$0$off0 = 0;$t0$0 = $last;
    } else {
     $2 = HEAP8[$add$ptr>>0]|0;
     $cmp9 = ($2<<24>>24)==(76);
     $incdec$ptr = ((($first)) + 3|0);
     $incdec$ptr$add$ptr = $cmp9 ? $incdec$ptr : $add$ptr;
     $St$0$off0 = 0;$t0$0 = $incdec$ptr$add$ptr;
    }
   } else {
    $St$0$off0 = 1;$t0$0 = $first;
   }
  } else {
   $St$0$off0 = 1;$t0$0 = $first;
  }
  $call = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$0,$last,$db)|0);
  $cmp12 = ($call|0)==($t0$0|0);
  $brmerge = $St$0$off0 | $cmp12;
  $first$mux = $cmp12 ? $first : $call;
  if ($brmerge) {
   $retval$1 = $first$mux;
  } else {
   $3 = HEAP32[$db>>2]|0;
   $__end_$i = ((($db)) + 4|0);
   $4 = HEAP32[$__end_$i>>2]|0;
   $cmp$i = ($3|0)==($4|0);
   if ($cmp$i) {
    $retval$1 = $first;
   } else {
    $first20 = ((($4)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first20,0,6132)|0);
    $retval$1 = $call;
   }
  }
 } else {
  $retval$1 = $first;
 }
 return ($retval$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add$ptr = 0, $add$ptr7 = 0, $cmp = 0, $cmp1 = 0, $cmp11 = 0, $cmp18 = 0, $cmp3 = 0, $cmp32 = 0, $cmp9 = 0, $conv = 0, $conv12 = 0, $conv34 = 0, $conv5 = 0, $first$addr$1 = 0, $incdec$ptr15 = 0, $incdec$ptr15$first = 0;
 var $incdec$ptr40 = 0, $isdigit = 0, $isdigit25 = 0, $isdigit27 = 0, $isdigit29 = 0, $isdigittmp = 0, $isdigittmp24 = 0, $isdigittmp26 = 0, $isdigittmp28 = 0, $t1$0 = 0, $t129$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $first$addr$1 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $cmp1 = ($0<<24>>24)==(95);
   $add$ptr = ((($first)) + 1|0);
   if (!($cmp1)) {
    $conv = $0 << 24 >> 24;
    $isdigittmp = (($conv) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    if ($isdigit) {
     $t129$0 = $add$ptr;
    } else {
     $first$addr$1 = $first;
     break;
    }
    while(1) {
     $cmp32 = ($t129$0|0)==($last|0);
     if ($cmp32) {
      $first$addr$1 = $last;
      break L1;
     }
     $3 = HEAP8[$t129$0>>0]|0;
     $conv34 = $3 << 24 >> 24;
     $isdigittmp24 = (($conv34) + -48)|0;
     $isdigit25 = ($isdigittmp24>>>0)<(10);
     if (!($isdigit25)) {
      $first$addr$1 = $t129$0;
      break L1;
     }
     $incdec$ptr40 = ((($t129$0)) + 1|0);
     $t129$0 = $incdec$ptr40;
    }
   }
   $cmp3 = ($add$ptr|0)==($last|0);
   if ($cmp3) {
    $first$addr$1 = $first;
   } else {
    $1 = HEAP8[$add$ptr>>0]|0;
    $conv5 = $1 << 24 >> 24;
    $isdigittmp26 = (($conv5) + -48)|0;
    $isdigit27 = ($isdigittmp26>>>0)<(10);
    $add$ptr7 = ((($first)) + 2|0);
    if ($isdigit27) {
     $first$addr$1 = $add$ptr7;
    } else {
     $cmp9 = ($1<<24>>24)==(95);
     if ($cmp9) {
      $t1$0 = $add$ptr7;
      while(1) {
       $cmp11 = ($t1$0|0)==($last|0);
       $incdec$ptr15 = ((($t1$0)) + 1|0);
       if ($cmp11) {
        $first$addr$1 = $first;
        break L1;
       }
       $2 = HEAP8[$t1$0>>0]|0;
       $conv12 = $2 << 24 >> 24;
       $isdigittmp28 = (($conv12) + -48)|0;
       $isdigit29 = ($isdigittmp28>>>0)<(10);
       if ($isdigit29) {
        $t1$0 = $incdec$ptr15;
       } else {
        break;
       }
      }
      $cmp18 = ($2<<24>>24)==(95);
      $incdec$ptr15$first = $cmp18 ? $incdec$ptr15 : $first;
      return ($incdec$ptr15$first|0);
     } else {
      $first$addr$1 = $first;
     }
    }
   }
  }
 } while(0);
 return ($first$addr$1|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $__size_$i$i$i = 0, $__size_$i3$i = 0, $cmp = 0, $cond$i = 0, $cond$i$i = 0, $conv$i$i = 0, $tobool$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($this|0)==($__str|0);
 if (!($cmp)) {
  $__size_$i$i$i = ((($__str)) + 11|0);
  $0 = HEAP8[$__size_$i$i$i>>0]|0;
  $tobool$i$i$i = ($0<<24>>24)<(0);
  $1 = HEAP32[$__str>>2]|0;
  $cond$i$i = $tobool$i$i$i ? $1 : $__str;
  $__size_$i3$i = ((($__str)) + 4|0);
  $2 = HEAP32[$__size_$i3$i>>2]|0;
  $conv$i$i = $0&255;
  $cond$i = $tobool$i$i$i ? $2 : $conv$i$i;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this,$cond$i$i,$cond$i);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj22EEERAT__Kc($this) {
 $this = $this|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,7358,21);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2IS4_EERKNS1_IT_Lj4096EEE($this,$a) {
 $this = $this|0;
 $a = $a|0;
 var $ref1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ref1 = HEAP32[$a>>2]|0;
 HEAP32[$this>>2] = $ref1;
 return;
}
function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($this,$__args) {
 $this = $this|0;
 $__args = $__args|0;
 var $$sroa$speculated$call$i = 0, $$sroa$speculated$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__end_ = 0, $__end_$i = 0, $__end_$i$i$i$i = 0, $__end_cap_$i$i$i$i = 0, $__first_$i$i$i$i$i$i = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i$i$i = 0, $__v = 0, $add = 0, $call$i = 0, $cmp$i = 0;
 var $cmp$i$i$i$i = 0, $cmp3$i = 0, $div$i = 0, $incdec$ptr = 0, $mul$i = 0, $ref$tmp$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i6 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp$i$i = sp + 20|0;
 $__v = sp;
 $__second_$i$i$i = ((($this)) + 12|0);
 $__end_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__end_$i>>2]|0;
 $1 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i = (($0) - ($1))|0;
 $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
 $add = (($sub$ptr$div$i) + 1)|0;
 $call$i = (__ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp$i = ($call$i>>>0)<($add>>>0);
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__first_$i$i$i$i$i$i = ((($this)) + 8|0);
 $2 = HEAP32[$__first_$i$i$i$i$i$i>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $sub$ptr$sub$i$i$i = (($2) - ($3))|0;
 $sub$ptr$div$i$i$i = $sub$ptr$sub$i$i$i >> 4;
 $div$i = $call$i >>> 1;
 $cmp3$i = ($sub$ptr$div$i$i$i>>>0)<($div$i>>>0);
 $mul$i = $sub$ptr$sub$i$i$i >> 3;
 $cmp$i$i$i$i = ($mul$i>>>0)<($add>>>0);
 $$sroa$speculated$i = $cmp$i$i$i$i ? $add : $mul$i;
 $$sroa$speculated$call$i = $cmp3$i ? $$sroa$speculated$i : $call$i;
 $4 = HEAP32[$__end_$i>>2]|0;
 $sub$ptr$sub$i5 = (($4) - ($3))|0;
 $sub$ptr$div$i6 = $sub$ptr$sub$i5 >> 4;
 __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($__v,$$sroa$speculated$call$i,$sub$ptr$div$i6,$__second_$i$i$i);
 $__end_ = ((($__v)) + 8|0);
 $5 = HEAP32[$__end_>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2IS4_EERKNS1_IT_Lj4096EEE($ref$tmp$i$i,$__args);
 HEAP32[$5>>2] = 0;
 $__end_$i$i$i$i = ((($5)) + 4|0);
 HEAP32[$__end_$i$i$i$i>>2] = 0;
 $__end_cap_$i$i$i$i = ((($5)) + 8|0);
 $6 = HEAP32[$ref$tmp$i$i>>2]|0;
 HEAP32[$__end_cap_$i$i$i$i>>2] = 0;
 $__second_$i$i$i$i$i$i = ((($5)) + 12|0);
 HEAP32[$__second_$i$i$i$i$i$i>>2] = $6;
 $incdec$ptr = ((($5)) + 16|0);
 HEAP32[$__end_>>2] = $incdec$ptr;
 __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($this,$__v);
 __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $add$ptr = 0, $add$ptr21 = 0, $add$ptr29 = 0, $add$ptr39 = 0, $add$ptr39$first = 0, $add$ptr8 = 0, $add$ptr8$first = 0, $call = 0, $call17 = 0, $call30 = 0, $call41 = 0, $call43 = 0, $cmp = 0, $cmp12 = 0, $cmp16 = 0;
 var $cmp18 = 0, $cmp2 = 0, $cmp24 = 0, $cmp27 = 0, $cmp32 = 0, $cmp34 = 0, $cmp37 = 0, $cmp4 = 0, $cmp6 = 0, $conv = 0, $or$cond = 0, $or$cond43 = 0, $retval$4 = 0, $t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $retval$4 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $add$ptr = ((($first)) + 1|0);
   switch ($conv|0) {
   case 88:  {
    $call = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($add$ptr,$last,$db)|0);
    $cmp2 = ($call|0)==($add$ptr|0);
    $cmp4 = ($call|0)==($last|0);
    $or$cond = $cmp2 | $cmp4;
    if ($or$cond) {
     $retval$4 = $first;
     break L1;
    }
    $1 = HEAP8[$call>>0]|0;
    $cmp6 = ($1<<24>>24)==(69);
    $add$ptr8 = ((($call)) + 1|0);
    $add$ptr8$first = $cmp6 ? $add$ptr8 : $first;
    $retval$4 = $add$ptr8$first;
    break L1;
    break;
   }
   case 74:  {
    $cmp12 = ($add$ptr|0)==($last|0);
    if ($cmp12) {
     $retval$4 = $first;
     break L1;
    } else {
     $t$0 = $add$ptr;
    }
    while(1) {
     $2 = HEAP8[$t$0>>0]|0;
     $cmp16 = ($2<<24>>24)==(69);
     if ($cmp16) {
      break;
     }
     $call17 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
     $cmp18 = ($call17|0)==($t$0|0);
     if ($cmp18) {
      $retval$4 = $first;
      break L1;
     } else {
      $t$0 = $call17;
     }
    }
    $add$ptr21 = ((($t$0)) + 1|0);
    $retval$4 = $add$ptr21;
    break L1;
    break;
   }
   case 76:  {
    $cmp24 = ($add$ptr|0)==($last|0);
    if (!($cmp24)) {
     $3 = HEAP8[$add$ptr>>0]|0;
     $cmp27 = ($3<<24>>24)==(90);
     if ($cmp27) {
      $add$ptr29 = ((($first)) + 2|0);
      $call30 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($add$ptr29,$last,$db)|0);
      $cmp32 = ($call30|0)==($add$ptr29|0);
      $cmp34 = ($call30|0)==($last|0);
      $or$cond43 = $cmp32 | $cmp34;
      if ($or$cond43) {
       $retval$4 = $first;
       break L1;
      }
      $4 = HEAP8[$call30>>0]|0;
      $cmp37 = ($4<<24>>24)==(69);
      $add$ptr39 = ((($call30)) + 1|0);
      $add$ptr39$first = $cmp37 ? $add$ptr39 : $first;
      $retval$4 = $add$ptr39$first;
      break L1;
     }
    }
    $call41 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $retval$4 = $call41;
    break L1;
    break;
   }
   default: {
    $call43 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $retval$4 = $call43;
    break L1;
   }
   }
  }
 } while(0);
 return ($retval$4|0);
}
function __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 268435455;
}
function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $__begin_ = 0, $__end_ = 0, $__end_cap_ = 0, $__first_$i$i$i = 0, $__second_$i$i = 0, $add$ptr = 0, $add$ptr5 = 0, $call$i = 0, $cmp = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__end_cap_ = ((($this)) + 12|0);
 HEAP32[$__end_cap_>>2] = 0;
 $__second_$i$i = ((($this)) + 16|0);
 HEAP32[$__second_$i$i>>2] = $__a;
 $cmp = ($__cap|0)==(0);
 if ($cmp) {
  $cond = 0;
 } else {
  $call$i = (__ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE8allocateEj($__a,$__cap)|0);
  $cond = $call$i;
 }
 HEAP32[$this>>2] = $cond;
 $add$ptr = (($cond) + ($__start<<4)|0);
 $__end_ = ((($this)) + 8|0);
 HEAP32[$__end_>>2] = $add$ptr;
 $__begin_ = ((($this)) + 4|0);
 HEAP32[$__begin_>>2] = $add$ptr;
 $add$ptr5 = (($cond) + ($__cap<<4)|0);
 $__first_$i$i$i = ((($this)) + 12|0);
 HEAP32[$__first_$i$i$i>>2] = $add$ptr5;
 return;
}
function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_2 = 0, $__end1$addr$0$i = 0, $__end_ = 0, $__end_$i$i$i$i = 0, $__end_$i$i$i$i$i = 0;
 var $__end_6 = 0, $__end_cap_$i$i$i$i$i = 0, $__first_$i$i$i = 0, $__first_$i$i$i6 = 0, $__first_$i$i$i7$i$i$i$i = 0, $__first_$i$i$i8$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i = 0, $__second_$i$i$i9$i$i$i$i = 0, $add$ptr$i = 0, $cmp$i = 0, $incdec$ptr$i = 0, $incdec$ptr2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $__end_ = ((($this)) + 4|0);
 $1 = HEAP32[$__end_>>2]|0;
 $__begin_2 = ((($__v)) + 4|0);
 $__end1$addr$0$i = $1;
 while(1) {
  $cmp$i = ($__end1$addr$0$i|0)==($0|0);
  if ($cmp$i) {
   break;
  }
  $2 = HEAP32[$__begin_2>>2]|0;
  $add$ptr$i = ((($2)) + -16|0);
  $incdec$ptr$i = ((($__end1$addr$0$i)) + -16|0);
  $__second_$i$i$i$i$i$i$i = ((($__end1$addr$0$i)) + -4|0);
  HEAP32[$add$ptr$i>>2] = 0;
  $__end_$i$i$i$i$i = ((($2)) + -12|0);
  HEAP32[$__end_$i$i$i$i$i>>2] = 0;
  $__end_cap_$i$i$i$i$i = ((($2)) + -8|0);
  $3 = HEAP32[$__second_$i$i$i$i$i$i$i>>2]|0;
  HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
  $__second_$i$i$i9$i$i$i$i = ((($2)) + -4|0);
  HEAP32[$__second_$i$i$i9$i$i$i$i>>2] = $3;
  $4 = HEAP32[$incdec$ptr$i>>2]|0;
  HEAP32[$add$ptr$i>>2] = $4;
  $__end_$i$i$i$i = ((($__end1$addr$0$i)) + -12|0);
  $5 = HEAP32[$__end_$i$i$i$i>>2]|0;
  HEAP32[$__end_$i$i$i$i$i>>2] = $5;
  $__first_$i$i$i8$i$i$i$i = ((($__end1$addr$0$i)) + -8|0);
  $6 = HEAP32[$__first_$i$i$i8$i$i$i$i>>2]|0;
  $__first_$i$i$i7$i$i$i$i = ((($2)) + -8|0);
  HEAP32[$__first_$i$i$i7$i$i$i$i>>2] = $6;
  HEAP32[$__first_$i$i$i8$i$i$i$i>>2] = 0;
  HEAP32[$__end_$i$i$i$i>>2] = 0;
  HEAP32[$incdec$ptr$i>>2] = 0;
  $7 = HEAP32[$__begin_2>>2]|0;
  $incdec$ptr2$i = ((($7)) + -16|0);
  HEAP32[$__begin_2>>2] = $incdec$ptr2$i;
  $__end1$addr$0$i = $incdec$ptr$i;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$__begin_2>>2]|0;
 HEAP32[$this>>2] = $9;
 HEAP32[$__begin_2>>2] = $8;
 $__end_6 = ((($__v)) + 8|0);
 $10 = HEAP32[$__end_>>2]|0;
 $11 = HEAP32[$__end_6>>2]|0;
 HEAP32[$__end_>>2] = $11;
 HEAP32[$__end_6>>2] = $10;
 $__first_$i$i$i6 = ((($this)) + 8|0);
 $__first_$i$i$i = ((($__v)) + 12|0);
 $12 = HEAP32[$__first_$i$i$i6>>2]|0;
 $13 = HEAP32[$__first_$i$i$i>>2]|0;
 HEAP32[$__first_$i$i$i6>>2] = $13;
 HEAP32[$__first_$i$i$i>>2] = $12;
 $14 = HEAP32[$__begin_2>>2]|0;
 HEAP32[$__v>>2] = $14;
 return;
}
function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__first_$i$i$i$i = 0, $__second_$i$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $ref$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__begin_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__begin_$i>>2]|0;
 $__end_$i$i$i = ((($this)) + 8|0);
 while(1) {
  $1 = HEAP32[$__end_$i$i$i>>2]|0;
  $cmp$i$i$i = ($1|0)==($0|0);
  if ($cmp$i$i$i) {
   break;
  }
  $incdec$ptr$i$i$i = ((($1)) + -16|0);
  HEAP32[$__end_$i$i$i>>2] = $incdec$ptr$i$i$i;
  __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($incdec$ptr$i$i$i);
 }
 $2 = HEAP32[$this>>2]|0;
 $tobool = ($2|0)==(0|0);
 if (!($tobool)) {
  $3 = $2;
  $__second_$i$i$i = ((($this)) + 16|0);
  $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0;
  $__first_$i$i$i$i = ((($this)) + 12|0);
  $4 = HEAP32[$__first_$i$i$i$i>>2]|0;
  $sub$ptr$sub$i = (($4) - ($3))|0;
  $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE10deallocateEPS8_j($ref$i$i$i,$2,$sub$ptr$div$i);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE8allocateEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $call = 0, $mul = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ref = HEAP32[$this>>2]|0;
 $mul = $n << 4;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($ref,$mul)|0);
 return ($call|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj3EEERAT__Kc($this) {
 $this = $this|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,7383,2);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKcj($this,$__n2) {
 $this = $this|0;
 $__n2 = $__n2|0;
 var $$sroa$speculated = 0, $$sroa$speculated27 = 0, $$sroa$speculated30 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__cap_$i$i = 0, $__n1$addr$0 = 0, $__n1$addr$2 = 0, $__n1$addr$3 = 0, $__n2$addr$0 = 0, $__n2$addr$3 = 0, $__n2$addr$4 = 0, $__pos$addr$0 = 0, $__pos$addr$3 = 0, $__s$addr$0 = 0, $__s$addr$3 = 0, $__size_$i$i = 0;
 var $__size_$i2$i = 0, $__size_$i3$i = 0, $add = 0, $add$ptr19 = 0, $add$ptr21 = 0, $add$ptr26 = 0, $add$ptr30 = 0, $add$ptr34 = 0, $add$ptr38 = 0, $add$ptr42 = 0, $add$ptr43 = 0, $add$ptr45 = 0, $add$ptr49 = 0, $add52 = 0, $add56 = 0, $and$i$i = 0, $arrayidx = 0, $cmp$i$i$i = 0, $cmp$i$i$i26 = 0, $cmp13 = 0;
 var $cmp15 = 0, $cmp25 = 0, $cmp27 = 0, $cmp31 = 0, $cmp5 = 0, $cmp9 = 0, $cond$i15 = 0, $cond$i28 = 0, $cond$i5 = 0, $conv$i$i = 0, $conv$i$i9 = 0, $or$cond = 0, $phitmp$i = 0, $ref$tmp53 = 0, $sub12 = 0, $sub33 = 0, $sub39 = 0, $sub4 = 0, $sub51 = 0, $sub55 = 0;
 var $sub57 = 0, $tobool$i$i = 0, $tobool$i$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp53 = sp;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__size_$i3$i = ((($this)) + 4|0);
  $1 = HEAP32[$__size_$i3$i>>2]|0;
  $cmp$i$i$i26 = ($1>>>0)<(11);
  $$sroa$speculated27 = $cmp$i$i$i26 ? $1 : 11;
  $__cap_$i$i = ((($this)) + 8|0);
  $2 = HEAP32[$__cap_$i$i>>2]|0;
  $and$i$i = $2 & 2147483647;
  $phitmp$i = (($and$i$i) + -1)|0;
  $$sroa$speculated30 = $$sroa$speculated27;$cond$i28 = $1;$cond$i5 = $phitmp$i;
 } else {
  $conv$i$i = $0&255;
  $cmp$i$i$i = ($conv$i$i>>>0)<(11);
  $$sroa$speculated = $cmp$i$i$i ? $conv$i$i : 11;
  $$sroa$speculated30 = $$sroa$speculated;$cond$i28 = $conv$i$i;$cond$i5 = 10;
 }
 $sub4 = (($$sroa$speculated30) - ($cond$i28))|0;
 $add = (($sub4) + ($cond$i5))|0;
 $cmp5 = ($add>>>0)<($__n2>>>0);
 if ($cmp5) {
  $sub55 = (($cond$i28) + ($__n2))|0;
  $add56 = (($sub55) - ($$sroa$speculated30))|0;
  $sub57 = (($add56) - ($cond$i5))|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$cond$i5,$sub57,$cond$i28,0,$$sroa$speculated30,$__n2,7386);
 } else {
  if ($tobool$i$i) {
   $3 = HEAP32[$this>>2]|0;
   $cond$i15 = $3;
  } else {
   $cond$i15 = $this;
  }
  $cmp9 = ($$sroa$speculated30|0)==($__n2|0);
  do {
   if ($cmp9) {
    $__n1$addr$2 = $__n2;$__n2$addr$3 = $__n2;$__pos$addr$3 = 0;$__s$addr$3 = 7386;
    label = 17;
   } else {
    $sub12 = (($cond$i28) - ($$sroa$speculated30))|0;
    $cmp13 = ($sub12|0)==(0);
    if ($cmp13) {
     $__n1$addr$2 = $$sroa$speculated30;$__n2$addr$3 = $__n2;$__pos$addr$3 = 0;$__s$addr$3 = 7386;
     label = 17;
    } else {
     $cmp15 = ($$sroa$speculated30>>>0)>($__n2>>>0);
     if ($cmp15) {
      (__ZNSt3__211char_traitsIcE4moveEPcPKcj($cond$i15,7386,$__n2)|0);
      $add$ptr19 = (($cond$i15) + ($__n2)|0);
      $add$ptr21 = (($cond$i15) + ($$sroa$speculated30)|0);
      (__ZNSt3__211char_traitsIcE4moveEPcPKcj($add$ptr19,$add$ptr21,$sub12)|0);
      $__n1$addr$3 = $$sroa$speculated30;$__n2$addr$4 = $__n2;
      break;
     }
     $cmp25 = ($cond$i15>>>0)<(7386>>>0);
     $add$ptr26 = (($cond$i15) + ($cond$i28)|0);
     $cmp27 = ($add$ptr26>>>0)>(7386>>>0);
     $or$cond = $cmp25 & $cmp27;
     do {
      if ($or$cond) {
       $add$ptr30 = (($cond$i15) + ($$sroa$speculated30)|0);
       $cmp31 = ($add$ptr30>>>0)>(7386>>>0);
       if ($cmp31) {
        (__ZNSt3__211char_traitsIcE4moveEPcPKcj($cond$i15,7386,$$sroa$speculated30)|0);
        $add$ptr38 = (7386 + ($__n2)|0);
        $sub39 = (($__n2) - ($$sroa$speculated30))|0;
        $__n1$addr$0 = 0;$__n2$addr$0 = $sub39;$__pos$addr$0 = $$sroa$speculated30;$__s$addr$0 = $add$ptr38;
        break;
       } else {
        $sub33 = (($__n2) - ($$sroa$speculated30))|0;
        $add$ptr34 = (7386 + ($sub33)|0);
        $__n1$addr$0 = $$sroa$speculated30;$__n2$addr$0 = $__n2;$__pos$addr$0 = 0;$__s$addr$0 = $add$ptr34;
        break;
       }
      } else {
       $__n1$addr$0 = $$sroa$speculated30;$__n2$addr$0 = $__n2;$__pos$addr$0 = 0;$__s$addr$0 = 7386;
      }
     } while(0);
     $add$ptr42 = (($cond$i15) + ($__pos$addr$0)|0);
     $add$ptr43 = (($add$ptr42) + ($__n2$addr$0)|0);
     $add$ptr45 = (($add$ptr42) + ($__n1$addr$0)|0);
     (__ZNSt3__211char_traitsIcE4moveEPcPKcj($add$ptr43,$add$ptr45,$sub12)|0);
     $__n1$addr$2 = $__n1$addr$0;$__n2$addr$3 = $__n2$addr$0;$__pos$addr$3 = $__pos$addr$0;$__s$addr$3 = $__s$addr$0;
     label = 17;
    }
   }
  } while(0);
  if ((label|0) == 17) {
   $add$ptr49 = (($cond$i15) + ($__pos$addr$3)|0);
   (__ZNSt3__211char_traitsIcE4moveEPcPKcj($add$ptr49,$__s$addr$3,$__n2$addr$3)|0);
   $__n1$addr$3 = $__n1$addr$2;$__n2$addr$4 = $__n2$addr$3;
  }
  $sub51 = (($__n2$addr$4) - ($__n1$addr$3))|0;
  $add52 = (($sub51) + ($cond$i28))|0;
  $4 = HEAP8[$__size_$i$i>>0]|0;
  $tobool$i$i8 = ($4<<24>>24)<(0);
  if ($tobool$i$i8) {
   $__size_$i2$i = ((($this)) + 4|0);
   HEAP32[$__size_$i2$i>>2] = $add52;
  } else {
   $conv$i$i9 = $add52&255;
   HEAP8[$__size_$i$i>>0] = $conv$i$i9;
  }
  $arrayidx = (($cond$i15) + ($add52)|0);
  HEAP8[$ref$tmp53>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp53);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($this,$__pos,$__s,$__n) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__cap_$i$i = 0, $__s$addr$0 = 0, $__s$addr$1 = 0, $__size_$i$i = 0, $__size_$i2$i = 0, $__size_$i3$i = 0, $add = 0, $add$ptr = 0, $add$ptr12 = 0, $add$ptr15 = 0, $add$ptr18 = 0, $and$i$i = 0, $arrayidx = 0;
 var $cmp = 0, $cmp11 = 0, $cmp13 = 0, $cmp3 = 0, $cmp9 = 0, $cond$i = 0, $cond$i42 = 0, $cond$i48 = 0, $conv$i$i = 0, $conv$i$i52 = 0, $or$cond = 0, $phitmp$i = 0, $ref$tmp = 0, $sub = 0, $sub26 = 0, $sub8 = 0, $tobool = 0, $tobool$i$i = 0, $tobool$i$i40 = 0, $tobool$i$i51 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__size_$i3$i = ((($this)) + 4|0);
  $1 = HEAP32[$__size_$i3$i>>2]|0;
  $cond$i = $1;
 } else {
  $conv$i$i = $0&255;
  $cond$i = $conv$i$i;
 }
 $cmp = ($cond$i>>>0)<($__pos>>>0);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
  $$pre = HEAP8[$__size_$i$i>>0]|0;
  $2 = $$pre;
 } else {
  $2 = $0;
 }
 $tobool$i$i40 = ($2<<24>>24)<(0);
 if ($tobool$i$i40) {
  $__cap_$i$i = ((($this)) + 8|0);
  $3 = HEAP32[$__cap_$i$i>>2]|0;
  $and$i$i = $3 & 2147483647;
  $phitmp$i = (($and$i$i) + -1)|0;
  $cond$i42 = $phitmp$i;
 } else {
  $cond$i42 = 10;
 }
 $sub = (($cond$i42) - ($cond$i))|0;
 $cmp3 = ($sub>>>0)<($__n>>>0);
 $add = (($cond$i) + ($__n))|0;
 if ($cmp3) {
  $sub26 = (($add) - ($cond$i42))|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$cond$i42,$sub26,$cond$i,$__pos,0,$__n,$__s);
 } else {
  $tobool = ($__n|0)==(0);
  if (!($tobool)) {
   if ($tobool$i$i40) {
    $4 = HEAP32[$this>>2]|0;
    $cond$i48 = $4;
   } else {
    $cond$i48 = $this;
   }
   $sub8 = (($cond$i) - ($__pos))|0;
   $cmp9 = ($sub8|0)==(0);
   $add$ptr = (($cond$i48) + ($__pos)|0);
   if ($cmp9) {
    $__s$addr$1 = $__s;
   } else {
    $add$ptr18 = (($add$ptr) + ($__n)|0);
    $cmp11 = ($add$ptr>>>0)<=($__s>>>0);
    $add$ptr12 = (($cond$i48) + ($cond$i)|0);
    $cmp13 = ($add$ptr12>>>0)>($__s>>>0);
    $or$cond = $cmp11 & $cmp13;
    $add$ptr15 = (($__s) + ($__n)|0);
    $__s$addr$0 = $or$cond ? $add$ptr15 : $__s;
    (__ZNSt3__211char_traitsIcE4moveEPcPKcj($add$ptr18,$add$ptr,$sub8)|0);
    $__s$addr$1 = $__s$addr$0;
   }
   (__ZNSt3__211char_traitsIcE4moveEPcPKcj($add$ptr,$__s$addr$1,$__n)|0);
   $5 = HEAP8[$__size_$i$i>>0]|0;
   $tobool$i$i51 = ($5<<24>>24)<(0);
   if ($tobool$i$i51) {
    $__size_$i2$i = ((($this)) + 4|0);
    HEAP32[$__size_$i2$i>>2] = $add;
   } else {
    $conv$i$i52 = $add&255;
    HEAP8[$__size_$i$i>>0] = $conv$i$i52;
   }
   $arrayidx = (($cond$i48) + ($add)|0);
   HEAP8[$ref$tmp>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp);
  }
 }
 STACKTOP = sp;return ($this|0);
}
function __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 268435455;
}
function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $__begin_ = 0, $__end_ = 0, $__end_cap_ = 0, $__first_$i$i$i = 0, $__second_$i$i = 0, $add$ptr = 0, $add$ptr5 = 0, $call$i = 0, $cmp = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__end_cap_ = ((($this)) + 12|0);
 HEAP32[$__end_cap_>>2] = 0;
 $__second_$i$i = ((($this)) + 16|0);
 HEAP32[$__second_$i$i>>2] = $__a;
 $cmp = ($__cap|0)==(0);
 if ($cmp) {
  $cond = 0;
 } else {
  $call$i = (__ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE8allocateEj($__a,$__cap)|0);
  $cond = $call$i;
 }
 HEAP32[$this>>2] = $cond;
 $add$ptr = (($cond) + ($__start<<4)|0);
 $__end_ = ((($this)) + 8|0);
 HEAP32[$__end_>>2] = $add$ptr;
 $__begin_ = ((($this)) + 4|0);
 HEAP32[$__begin_>>2] = $add$ptr;
 $add$ptr5 = (($cond) + ($__cap<<4)|0);
 $__first_$i$i$i = ((($this)) + 12|0);
 HEAP32[$__first_$i$i$i>>2] = $add$ptr5;
 return;
}
function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_2 = 0, $__end1$addr$0$i = 0, $__end_ = 0, $__end_$i$i$i$i = 0, $__end_$i$i$i$i$i = 0;
 var $__end_6 = 0, $__end_cap_$i$i$i$i$i = 0, $__first_$i$i$i = 0, $__first_$i$i$i6 = 0, $__first_$i$i$i7$i$i$i$i = 0, $__first_$i$i$i8$i$i$i$i = 0, $__second_$i$i$i$i$i$i$i = 0, $__second_$i$i$i9$i$i$i$i = 0, $add$ptr$i = 0, $cmp$i = 0, $incdec$ptr$i = 0, $incdec$ptr2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $__end_ = ((($this)) + 4|0);
 $1 = HEAP32[$__end_>>2]|0;
 $__begin_2 = ((($__v)) + 4|0);
 $__end1$addr$0$i = $1;
 while(1) {
  $cmp$i = ($__end1$addr$0$i|0)==($0|0);
  if ($cmp$i) {
   break;
  }
  $2 = HEAP32[$__begin_2>>2]|0;
  $add$ptr$i = ((($2)) + -16|0);
  $incdec$ptr$i = ((($__end1$addr$0$i)) + -16|0);
  $__second_$i$i$i$i$i$i$i = ((($__end1$addr$0$i)) + -4|0);
  HEAP32[$add$ptr$i>>2] = 0;
  $__end_$i$i$i$i$i = ((($2)) + -12|0);
  HEAP32[$__end_$i$i$i$i$i>>2] = 0;
  $__end_cap_$i$i$i$i$i = ((($2)) + -8|0);
  $3 = HEAP32[$__second_$i$i$i$i$i$i$i>>2]|0;
  HEAP32[$__end_cap_$i$i$i$i$i>>2] = 0;
  $__second_$i$i$i9$i$i$i$i = ((($2)) + -4|0);
  HEAP32[$__second_$i$i$i9$i$i$i$i>>2] = $3;
  $4 = HEAP32[$incdec$ptr$i>>2]|0;
  HEAP32[$add$ptr$i>>2] = $4;
  $__end_$i$i$i$i = ((($__end1$addr$0$i)) + -12|0);
  $5 = HEAP32[$__end_$i$i$i$i>>2]|0;
  HEAP32[$__end_$i$i$i$i$i>>2] = $5;
  $__first_$i$i$i8$i$i$i$i = ((($__end1$addr$0$i)) + -8|0);
  $6 = HEAP32[$__first_$i$i$i8$i$i$i$i>>2]|0;
  $__first_$i$i$i7$i$i$i$i = ((($2)) + -8|0);
  HEAP32[$__first_$i$i$i7$i$i$i$i>>2] = $6;
  HEAP32[$__first_$i$i$i8$i$i$i$i>>2] = 0;
  HEAP32[$__end_$i$i$i$i>>2] = 0;
  HEAP32[$incdec$ptr$i>>2] = 0;
  $7 = HEAP32[$__begin_2>>2]|0;
  $incdec$ptr2$i = ((($7)) + -16|0);
  HEAP32[$__begin_2>>2] = $incdec$ptr2$i;
  $__end1$addr$0$i = $incdec$ptr$i;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$__begin_2>>2]|0;
 HEAP32[$this>>2] = $9;
 HEAP32[$__begin_2>>2] = $8;
 $__end_6 = ((($__v)) + 8|0);
 $10 = HEAP32[$__end_>>2]|0;
 $11 = HEAP32[$__end_6>>2]|0;
 HEAP32[$__end_>>2] = $11;
 HEAP32[$__end_6>>2] = $10;
 $__first_$i$i$i6 = ((($this)) + 8|0);
 $__first_$i$i$i = ((($__v)) + 12|0);
 $12 = HEAP32[$__first_$i$i$i6>>2]|0;
 $13 = HEAP32[$__first_$i$i$i>>2]|0;
 HEAP32[$__first_$i$i$i6>>2] = $13;
 HEAP32[$__first_$i$i$i>>2] = $12;
 $14 = HEAP32[$__begin_2>>2]|0;
 HEAP32[$__v>>2] = $14;
 return;
}
function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__first_$i$i$i$i = 0, $__second_$i$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $ref$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$sub$i = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__begin_$i = ((($this)) + 4|0);
 $0 = HEAP32[$__begin_$i>>2]|0;
 $__end_$i$i$i = ((($this)) + 8|0);
 while(1) {
  $1 = HEAP32[$__end_$i$i$i>>2]|0;
  $cmp$i$i$i = ($1|0)==($0|0);
  if ($cmp$i$i$i) {
   break;
  }
  $incdec$ptr$i$i$i = ((($1)) + -16|0);
  HEAP32[$__end_$i$i$i>>2] = $incdec$ptr$i$i$i;
  __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($incdec$ptr$i$i$i);
 }
 $2 = HEAP32[$this>>2]|0;
 $tobool = ($2|0)==(0|0);
 if (!($tobool)) {
  $3 = $2;
  $__second_$i$i$i = ((($this)) + 16|0);
  $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0;
  $__first_$i$i$i$i = ((($this)) + 12|0);
  $4 = HEAP32[$__first_$i$i$i$i>>2]|0;
  $sub$ptr$sub$i = (($4) - ($3))|0;
  $sub$ptr$div$i = $sub$ptr$sub$i >> 4;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE10deallocateEPS6_j($ref$i$i$i,$2,$sub$ptr$div$i);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE8allocateEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $call = 0, $mul = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $ref = HEAP32[$this>>2]|0;
 $mul = $n << 4;
 $call = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($ref,$mul)|0);
 return ($call|0);
}
function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8allocateEj($this) {
 $this = $this|0;
 var $__end_ = 0, $__first_$i$i$i = 0, $__second_$i$i$i = 0, $add$ptr = 0, $call = 0, $call$i = 0, $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($this)|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this);
 }
 $__second_$i$i$i = ((($this)) + 12|0);
 $call$i = (__ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE8allocateEj($__second_$i$i$i,1)|0);
 $__end_ = ((($this)) + 4|0);
 HEAP32[$__end_>>2] = $call$i;
 HEAP32[$this>>2] = $call$i;
 $add$ptr = ((($call$i)) + 24|0);
 $__first_$i$i$i = ((($this)) + 8|0);
 HEAP32[$__first_$i$i$i>>2] = $add$ptr;
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($this) {
 $this = $this|0;
 var $$pre = 0, $$sroa$speculated = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__size_$i$i = 0, $__size_$i2$i = 0, $__size_$i3$i = 0, $add$ptr11 = 0, $arrayidx = 0, $cmp8 = 0, $cond$i17 = 0, $cond$i6 = 0, $conv$i$i = 0, $conv$i$i10 = 0, $not$cmp$i$i$i = 0, $ref$tmp15 = 0, $sub7 = 0, $tobool$i$i = 0;
 var $tobool$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp15 = sp;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__size_$i3$i = ((($this)) + 4|0);
  $1 = HEAP32[$__size_$i3$i>>2]|0;
  $2 = HEAP32[$this>>2]|0;
  $cond$i17 = $1;$cond$i6 = $2;
 } else {
  $conv$i$i = $0&255;
  $cond$i17 = $conv$i$i;$cond$i6 = $this;
 }
 $not$cmp$i$i$i = ($cond$i17|0)!=(0);
 $$sroa$speculated = $not$cmp$i$i$i&1;
 $sub7 = (($cond$i17) - ($$sroa$speculated))|0;
 $cmp8 = ($sub7|0)==(0);
 if ($cmp8) {
  $3 = $0;
 } else {
  $add$ptr11 = (($cond$i6) + ($$sroa$speculated)|0);
  (__ZNSt3__211char_traitsIcE4moveEPcPKcj($cond$i6,$add$ptr11,$sub7)|0);
  $$pre = HEAP8[$__size_$i$i>>0]|0;
  $3 = $$pre;
 }
 $tobool$i$i9 = ($3<<24>>24)<(0);
 if ($tobool$i$i9) {
  $__size_$i2$i = ((($this)) + 4|0);
  HEAP32[$__size_$i2$i>>2] = $sub7;
 } else {
  $conv$i$i10 = $sub7&255;
  HEAP8[$__size_$i$i>>0] = $conv$i$i10;
 }
 $arrayidx = (($cond$i6) + ($sub7)|0);
 HEAP8[$ref$tmp15>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp15);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj8EEERAT__Kc($this) {
 $this = $this|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,7159,7);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,3);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj19EEERAT__Kc($this) {
 $this = $this|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,7579,18);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,8);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj7EEERAT__Kc($this) {
 $this = $this|0;
 var $__i$0$i$i = 0, $arrayidx$i$i = 0, $exitcond$i$i = 0, $inc$i$i = 0, $second = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,7572,6);
 $second = ((($this)) + 12|0);
 ;HEAP32[$second>>2]=0|0;HEAP32[$second+4>>2]=0|0;HEAP32[$second+8>>2]=0|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $arrayidx$i$i = (($second) + ($__i$0$i$i<<2)|0);
  HEAP32[$arrayidx$i$i>>2] = 0;
  $inc$i$i = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $inc$i$i;
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj($this,$restore) {
 $this = $this|0;
 $restore = $restore|0;
 var $0 = 0, $original_value_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = $restore;
 $original_value_ = ((($this)) + 4|0);
 $0 = HEAP32[$restore>>2]|0;
 HEAP32[$original_value_>>2] = $0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($this,$restore) {
 $this = $this|0;
 $restore = $restore|0;
 var $0 = 0, $original_value_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = $restore;
 $original_value_ = ((($this)) + 4|0);
 $0 = HEAP8[$restore>>0]|0;
 HEAP8[$original_value_>>0] = $0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i121 = 0, $__end_$i125 = 0, $__end_$i130 = 0, $__end_$i162 = 0, $__end_$i166 = 0, $__end_$i171 = 0;
 var $__end_$i176 = 0, $__end_$i181 = 0, $__end_$i186 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i$i = 0, $__i$0$i$i$i142 = 0, $__i$0$i$i$i150 = 0, $__size_$i$i$i$i$i = 0, $__size_$i1$i$i$i$i = 0, $__size_$i2$i$i$i$i = 0, $__size_$i3$i$i$i = 0, $add$ptr$i140 = 0, $add$ptr$i159 = 0, $add$ptr$i161 = 0, $arrayidx = 0, $arrayidx$i$i$i = 0, $arrayidx$i$i$i$i = 0, $arrayidx$i$i$i145 = 0, $arrayidx$i$i$i153 = 0, $arrayidx163 = 0;
 var $call = 0, $call$i148 = 0, $call$i157 = 0, $call15 = 0, $call151 = 0, $call156 = 0, $call185 = 0, $call200 = 0, $call3$i$i138 = 0, $call30 = 0, $call45 = 0, $call60 = 0, $call65 = 0, $call69 = 0, $call84 = 0, $call89 = 0, $call97 = 0, $cleanup$dest$slot$4 = 0, $cmp = 0, $cmp$i = 0;
 var $cmp$i$i$i = 0, $cmp$i126 = 0, $cmp$i131 = 0, $cmp$i167 = 0, $cmp$i172 = 0, $cmp$i177 = 0, $cmp$i182 = 0, $cmp$i187 = 0, $cmp102 = 0, $cmp153 = 0, $cmp157 = 0, $cmp165 = 0, $cmp17 = 0, $cmp187 = 0, $cmp202 = 0, $cmp32 = 0, $cmp4 = 0, $cmp47 = 0, $cmp62 = 0, $cmp66 = 0;
 var $cmp70 = 0, $cmp86 = 0, $cmp90 = 0, $cmp91 = 0, $cmp94 = 0, $cmp98 = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $conv = 0, $conv$i$i$i$i = 0, $conv1 = 0, $conv182 = 0, $ehselector$slot$0 = 0, $ehselector$slot$1 = 0, $ehselector$slot$2 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i = 0, $exitcond$i$i$i143 = 0, $exitcond$i$i$i151 = 0, $exn$slot$0 = 0;
 var $exn$slot$1 = 0, $exn$slot$2 = 0, $first$addr$11 = 0, $first$addr$8 = 0, $first10 = 0, $first127 = 0, $first169 = 0, $first195 = 0, $first210 = 0, $first25 = 0, $first40 = 0, $first55 = 0, $first78 = 0, $inc$i$i$i = 0, $inc$i$i$i$i = 0, $inc$i$i$i146 = 0, $inc$i$i$i154 = 0, $incdec$ptr = 0, $incdec$ptr$i$i$i = 0, $left = 0;
 var $or$cond = 0, $ref$tmp = 0, $ref$tmp$i$i$i$i = 0, $ref$tmp108 = 0, $ref$tmp109 = 0, $ref$tmp115 = 0, $ref$tmp4$i$i$i$i = 0, $retval$8 = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $switch = 0, $tobool$i$i$i$i$i = 0, $tobool$i$i$i$i$i135 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $ref$tmp$i$i$i$i = sp + 61|0;
 $ref$tmp4$i$i$i$i = sp + 60|0;
 $left = sp + 48|0;
 $ref$tmp = sp + 36|0;
 $ref$tmp108 = sp + 24|0;
 $ref$tmp109 = sp + 12|0;
 $ref$tmp115 = sp;
 $sub$ptr$lhs$cast = $last;
 $sub$ptr$rhs$cast = $first;
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub|0)>(2);
 L1: do {
  if ($cmp) {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $arrayidx163 = ((($first)) + 2|0);
   $arrayidx = ((($first)) + 1|0);
   switch ($conv|0) {
   case 84:  {
    break;
   }
   case 71:  {
    $48 = HEAP8[$arrayidx>>0]|0;
    $conv182 = $48 << 24 >> 24;
    switch ($conv182|0) {
    case 86:  {
     $call185 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($arrayidx163,$last,$db)|0);
     $cmp187 = ($call185|0)==($arrayidx163|0);
     if ($cmp187) {
      $first$addr$11 = $first;
      label = 73;
      break L1;
     }
     $49 = HEAP32[$db>>2]|0;
     $__end_$i125 = ((($db)) + 4|0);
     $50 = HEAP32[$__end_$i125>>2]|0;
     $cmp$i126 = ($49|0)==($50|0);
     if ($cmp$i126) {
      $retval$8 = $first;
      break L1;
     }
     $first195 = ((($50)) + -24|0);
     (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first195,0,7797)|0);
     $first$addr$11 = $call185;
     label = 73;
     break L1;
     break;
    }
    case 82:  {
     $call200 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($arrayidx163,$last,$db)|0);
     $cmp202 = ($call200|0)==($arrayidx163|0);
     if ($cmp202) {
      $first$addr$11 = $first;
      label = 73;
      break L1;
     }
     $51 = HEAP32[$db>>2]|0;
     $__end_$i121 = ((($db)) + 4|0);
     $52 = HEAP32[$__end_$i121>>2]|0;
     $cmp$i = ($51|0)==($52|0);
     if ($cmp$i) {
      $retval$8 = $first;
      break L1;
     }
     $first210 = ((($52)) + -24|0);
     (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first210,0,7817)|0);
     $first$addr$11 = $call200;
     label = 73;
     break L1;
     break;
    }
    default: {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    }
    break;
   }
   default: {
    $first$addr$11 = $first;
    label = 73;
    break L1;
   }
   }
   $1 = HEAP8[$arrayidx>>0]|0;
   $conv1 = $1 << 24 >> 24;
   switch ($conv1|0) {
   case 86:  {
    $call = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($arrayidx163,$last,$db)|0);
    $cmp4 = ($call|0)==($arrayidx163|0);
    if ($cmp4) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $2 = HEAP32[$db>>2]|0;
    $__end_$i186 = ((($db)) + 4|0);
    $3 = HEAP32[$__end_$i186>>2]|0;
    $cmp$i187 = ($2|0)==($3|0);
    if ($cmp$i187) {
     $retval$8 = $first;
     break L1;
    }
    $first10 = ((($3)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first10,0,7646)|0);
    $first$addr$11 = $call;
    label = 73;
    break L1;
    break;
   }
   case 84:  {
    $call15 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($arrayidx163,$last,$db)|0);
    $cmp17 = ($call15|0)==($arrayidx163|0);
    if ($cmp17) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $4 = HEAP32[$db>>2]|0;
    $__end_$i181 = ((($db)) + 4|0);
    $5 = HEAP32[$__end_$i181>>2]|0;
    $cmp$i182 = ($4|0)==($5|0);
    if ($cmp$i182) {
     $retval$8 = $first;
     break L1;
    }
    $first25 = ((($5)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first25,0,7658)|0);
    $first$addr$11 = $call15;
    label = 73;
    break L1;
    break;
   }
   case 73:  {
    $call30 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($arrayidx163,$last,$db)|0);
    $cmp32 = ($call30|0)==($arrayidx163|0);
    if ($cmp32) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $6 = HEAP32[$db>>2]|0;
    $__end_$i176 = ((($db)) + 4|0);
    $7 = HEAP32[$__end_$i176>>2]|0;
    $cmp$i177 = ($6|0)==($7|0);
    if ($cmp$i177) {
     $retval$8 = $first;
     break L1;
    }
    $first40 = ((($7)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first40,0,7667)|0);
    $first$addr$11 = $call30;
    label = 73;
    break L1;
    break;
   }
   case 83:  {
    $call45 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($arrayidx163,$last,$db)|0);
    $cmp47 = ($call45|0)==($arrayidx163|0);
    if ($cmp47) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $8 = HEAP32[$db>>2]|0;
    $__end_$i171 = ((($db)) + 4|0);
    $9 = HEAP32[$__end_$i171>>2]|0;
    $cmp$i172 = ($8|0)==($9|0);
    if ($cmp$i172) {
     $retval$8 = $first;
     break L1;
    }
    $first55 = ((($9)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first55,0,7681)|0);
    $first$addr$11 = $call45;
    label = 73;
    break L1;
    break;
   }
   case 99:  {
    $call60 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($arrayidx163,$last)|0);
    $cmp62 = ($call60|0)==($arrayidx163|0);
    if ($cmp62) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $call65 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($call60,$last)|0);
    $cmp66 = ($call65|0)==($call60|0);
    if ($cmp66) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $call69 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($call65,$last,$db)|0);
    $cmp70 = ($call69|0)==($call65|0);
    if ($cmp70) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $10 = HEAP32[$db>>2]|0;
    $__end_$i166 = ((($db)) + 4|0);
    $11 = HEAP32[$__end_$i166>>2]|0;
    $cmp$i167 = ($10|0)==($11|0);
    if ($cmp$i167) {
     $retval$8 = $first;
     break L1;
    }
    $first78 = ((($11)) + -24|0);
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first78,0,7700)|0);
    $first$addr$11 = $call69;
    label = 73;
    break L1;
    break;
   }
   case 67:  {
    $call84 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($arrayidx163,$last,$db)|0);
    $cmp86 = ($call84|0)==($arrayidx163|0);
    if ($cmp86) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $call89 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($call84,$last)|0);
    $cmp90 = ($call89|0)==($call84|0);
    $cmp91 = ($call89|0)==($last|0);
    $or$cond = $cmp90 | $cmp91;
    if ($or$cond) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $12 = HEAP8[$call89>>0]|0;
    $cmp94 = ($12<<24>>24)==(95);
    if (!($cmp94)) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $incdec$ptr = ((($call89)) + 1|0);
    $call97 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($incdec$ptr,$last,$db)|0);
    $cmp98 = ($call97|0)==($incdec$ptr|0);
    if ($cmp98) {
     $first$addr$11 = $first;
     label = 73;
     break L1;
    }
    $__end_$i162 = ((($db)) + 4|0);
    $13 = HEAP32[$__end_$i162>>2]|0;
    $14 = HEAP32[$db>>2]|0;
    $sub$ptr$sub$i = (($13) - ($14))|0;
    $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 24)&-1;
    $cmp102 = ($sub$ptr$div$i>>>0)<(2);
    if ($cmp102) {
     $retval$8 = $first;
     break L1;
    }
    $15 = $13;
    $add$ptr$i161 = ((($15)) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($left,$add$ptr$i161);
    $16 = HEAP32[$__end_$i162>>2]|0;
    $add$ptr$i159 = ((($16)) + -24|0);
    $17 = $16;
    while(1) {
     $cmp$i$i$i = ($17|0)==($add$ptr$i159|0);
     if ($cmp$i$i$i) {
      break;
     }
     $incdec$ptr$i$i$i = ((($17)) + -24|0);
     HEAP32[$__end_$i162>>2] = $incdec$ptr$i$i$i;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($incdec$ptr$i$i$i);
     $$pre$i = HEAP32[$__end_$i162>>2]|0;
     $17 = $$pre$i;
    }
    __THREW__ = 0;
    $call$i157 = (invoke_iiii(56,($left|0),0,(7727|0))|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     $37 = ___cxa_find_matching_catch_2()|0;
     $38 = tempRet0;
     $ehselector$slot$2 = $38;$exn$slot$2 = $37;
    } else {
     ;HEAP32[$ref$tmp109>>2]=HEAP32[$left>>2]|0;HEAP32[$ref$tmp109+4>>2]=HEAP32[$left+4>>2]|0;HEAP32[$ref$tmp109+8>>2]=HEAP32[$left+8>>2]|0;
     $__i$0$i$i$i150 = 0;
     while(1) {
      $exitcond$i$i$i151 = ($__i$0$i$i$i150|0)==(3);
      if ($exitcond$i$i$i151) {
       break;
      }
      $arrayidx$i$i$i153 = (($left) + ($__i$0$i$i$i150<<2)|0);
      HEAP32[$arrayidx$i$i$i153>>2] = 0;
      $inc$i$i$i154 = (($__i$0$i$i$i150) + 1)|0;
      $__i$0$i$i$i150 = $inc$i$i$i154;
     }
     __THREW__ = 0;
     $call$i148 = (invoke_iii(54,($ref$tmp109|0),(7752|0))|0);
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if ($21) {
      $39 = ___cxa_find_matching_catch_2()|0;
      $40 = tempRet0;
      $ehselector$slot$1 = $40;$exn$slot$1 = $39;
     } else {
      ;HEAP32[$ref$tmp108>>2]=HEAP32[$ref$tmp109>>2]|0;HEAP32[$ref$tmp108+4>>2]=HEAP32[$ref$tmp109+4>>2]|0;HEAP32[$ref$tmp108+8>>2]=HEAP32[$ref$tmp109+8>>2]|0;
      $__i$0$i$i$i142 = 0;
      while(1) {
       $exitcond$i$i$i143 = ($__i$0$i$i$i142|0)==(3);
       if ($exitcond$i$i$i143) {
        break;
       }
       $arrayidx$i$i$i145 = (($ref$tmp109) + ($__i$0$i$i$i142<<2)|0);
       HEAP32[$arrayidx$i$i$i145>>2] = 0;
       $inc$i$i$i146 = (($__i$0$i$i$i142) + 1)|0;
       $__i$0$i$i$i142 = $inc$i$i$i146;
      }
      $22 = HEAP32[$__end_$i162>>2]|0;
      $add$ptr$i140 = ((($22)) + -24|0);
      __THREW__ = 0;
      invoke_vii(55,($ref$tmp115|0),($add$ptr$i140|0));
      $23 = __THREW__; __THREW__ = 0;
      $24 = $23&1;
      do {
       if ($24) {
        $41 = ___cxa_find_matching_catch_2()|0;
        $42 = tempRet0;
        $ehselector$slot$0 = $42;$exn$slot$0 = $41;
       } else {
        $__size_$i$i$i$i$i = ((($ref$tmp115)) + 11|0);
        $25 = HEAP8[$__size_$i$i$i$i$i>>0]|0;
        $tobool$i$i$i$i$i135 = ($25<<24>>24)<(0);
        $26 = HEAP32[$ref$tmp115>>2]|0;
        $cond$i$i$i$i = $tobool$i$i$i$i$i135 ? $26 : $ref$tmp115;
        $__size_$i3$i$i$i = ((($ref$tmp115)) + 4|0);
        $27 = HEAP32[$__size_$i3$i$i$i>>2]|0;
        $conv$i$i$i$i = $25&255;
        $cond$i$i$i = $tobool$i$i$i$i$i135 ? $27 : $conv$i$i$i$i;
        __THREW__ = 0;
        $call3$i$i138 = (invoke_iiii(47,($ref$tmp108|0),($cond$i$i$i$i|0),($cond$i$i$i|0))|0);
        $28 = __THREW__; __THREW__ = 0;
        $29 = $28&1;
        if ($29) {
         $43 = ___cxa_find_matching_catch_2()|0;
         $44 = tempRet0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp115);
         $ehselector$slot$0 = $44;$exn$slot$0 = $43;
         break;
        }
        ;HEAP32[$ref$tmp>>2]=HEAP32[$ref$tmp108>>2]|0;HEAP32[$ref$tmp+4>>2]=HEAP32[$ref$tmp108+4>>2]|0;HEAP32[$ref$tmp+8>>2]=HEAP32[$ref$tmp108+8>>2]|0;
        $__i$0$i$i$i = 0;
        while(1) {
         $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
         if ($exitcond$i$i$i) {
          break;
         }
         $arrayidx$i$i$i = (($ref$tmp108) + ($__i$0$i$i$i<<2)|0);
         HEAP32[$arrayidx$i$i$i>>2] = 0;
         $inc$i$i$i = (($__i$0$i$i$i) + 1)|0;
         $__i$0$i$i$i = $inc$i$i$i;
        }
        $30 = HEAP32[$__end_$i162>>2]|0;
        $first127 = ((($30)) + -24|0);
        $__size_$i1$i$i$i$i = ((($first127)) + 11|0);
        $31 = HEAP8[$__size_$i1$i$i$i$i>>0]|0;
        $tobool$i$i$i$i$i = ($31<<24>>24)<(0);
        if ($tobool$i$i$i$i$i) {
         $32 = HEAP32[$first127>>2]|0;
         HEAP8[$ref$tmp$i$i$i$i>>0] = 0;
         __ZNSt3__211char_traitsIcE6assignERcRKc($32,$ref$tmp$i$i$i$i);
         $__size_$i2$i$i$i$i = ((($30)) + -20|0);
         HEAP32[$__size_$i2$i$i$i$i>>2] = 0;
        } else {
         HEAP8[$ref$tmp4$i$i$i$i>>0] = 0;
         __ZNSt3__211char_traitsIcE6assignERcRKc($first127,$ref$tmp4$i$i$i$i);
         HEAP8[$__size_$i1$i$i$i$i>>0] = 0;
        }
        __THREW__ = 0;
        invoke_vi(51,($first127|0));
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         $35 = ___cxa_find_matching_catch_3(0|0)|0;
         $36 = tempRet0;
         ___clang_call_terminate($35);
         // unreachable;
        }
        ;HEAP32[$first127>>2]=HEAP32[$ref$tmp>>2]|0;HEAP32[$first127+4>>2]=HEAP32[$ref$tmp+4>>2]|0;HEAP32[$first127+8>>2]=HEAP32[$ref$tmp+8>>2]|0;
        $__i$0$i$i$i$i = 0;
        while(1) {
         $exitcond$i$i$i$i = ($__i$0$i$i$i$i|0)==(3);
         if ($exitcond$i$i$i$i) {
          break;
         }
         $arrayidx$i$i$i$i = (($ref$tmp) + ($__i$0$i$i$i$i<<2)|0);
         HEAP32[$arrayidx$i$i$i$i>>2] = 0;
         $inc$i$i$i$i = (($__i$0$i$i$i$i) + 1)|0;
         $__i$0$i$i$i$i = $inc$i$i$i$i;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp115);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp108);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp109);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($left);
        $first$addr$11 = $call97;
        label = 73;
        break L1;
       }
      } while(0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp108);
      $ehselector$slot$1 = $ehselector$slot$0;$exn$slot$1 = $exn$slot$0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ref$tmp109);
     $ehselector$slot$2 = $ehselector$slot$1;$exn$slot$2 = $exn$slot$1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($left);
    ___resumeException($exn$slot$2|0);
    // unreachable;
    break;
   }
   default: {
    $call151 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($arrayidx,$last)|0);
    $cmp153 = ($call151|0)==($arrayidx|0);
    do {
     if ($cmp153) {
      $cleanup$dest$slot$4 = 3;$first$addr$8 = $first;
     } else {
      $call156 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($call151,$last,$db)|0);
      $cmp157 = ($call156|0)==($call151|0);
      if ($cmp157) {
       $cleanup$dest$slot$4 = 0;$first$addr$8 = $first;
      } else {
       $45 = HEAP32[$db>>2]|0;
       $__end_$i130 = ((($db)) + 4|0);
       $46 = HEAP32[$__end_$i130>>2]|0;
       $cmp$i131 = ($45|0)==($46|0);
       if ($cmp$i131) {
        $cleanup$dest$slot$4 = 1;$first$addr$8 = $first;
       } else {
        $47 = HEAP8[$arrayidx163>>0]|0;
        $cmp165 = ($47<<24>>24)==(118);
        $first169 = ((($46)) + -24|0);
        if ($cmp165) {
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first169,0,7757)|0);
         $cleanup$dest$slot$4 = 0;$first$addr$8 = $call156;
         break;
        } else {
         (__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($first169,0,7775)|0);
         $cleanup$dest$slot$4 = 0;$first$addr$8 = $call156;
         break;
        }
       }
      }
     }
    } while(0);
    $trunc = $cleanup$dest$slot$4&255;
    $trunc$clear = $trunc & 3;
    switch ($trunc$clear<<24>>24) {
    case 3: case 0:  {
     $first$addr$11 = $first$addr$8;
     label = 73;
     break L1;
     break;
    }
    default: {
    }
    }
    $switch = ($cleanup$dest$slot$4|0)==(0);
    if ($switch) {
     $first$addr$11 = $first$addr$8;
     label = 73;
     break L1;
    } else {
     $retval$8 = $first;
     break L1;
    }
   }
   }
  } else {
   $first$addr$11 = $first;
   label = 73;
  }
 } while(0);
 if ((label|0) == 73) {
  $retval$8 = $first$addr$11;
 }
 STACKTOP = sp;return ($retval$8|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $original_value_ = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $original_value_ = ((($this)) + 4|0);
 $0 = HEAP8[$original_value_>>0]|0;
 $ref = HEAP32[$this>>2]|0;
 HEAP8[$ref>>0] = $0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $original_value_ = 0, $ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $original_value_ = ((($this)) + 4|0);
 $0 = HEAP32[$original_value_>>2]|0;
 $ref = HEAP32[$this>>2]|0;
 HEAP32[$ref>>2] = $0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add$ptr = 0, $add$ptr29 = 0, $add$ptr29$first = 0, $add$ptr8 = 0, $add$ptr8$first = 0, $call = 0, $call12 = 0, $call21 = 0, $cmp = 0, $cmp14 = 0, $cmp16 = 0, $cmp19 = 0, $cmp2 = 0, $cmp22 = 0, $cmp24 = 0, $cmp27 = 0;
 var $cmp3 = 0, $cmp6 = 0, $conv = 0, $first$addr$3 = 0, $incdec$ptr = 0, $or$cond = 0, $or$cond26 = 0, $or$cond27 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($first|0)==($last|0);
 L1: do {
  if ($cmp) {
   $first$addr$3 = $first;
  } else {
   $0 = HEAP8[$first>>0]|0;
   $conv = $0 << 24 >> 24;
   $add$ptr = ((($first)) + 1|0);
   switch ($conv|0) {
   case 104:  {
    $call = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($add$ptr,$last)|0);
    $cmp2 = ($call|0)==($add$ptr|0);
    $cmp3 = ($call|0)==($last|0);
    $or$cond = $cmp2 | $cmp3;
    if ($or$cond) {
     $first$addr$3 = $first;
     break L1;
    }
    $1 = HEAP8[$call>>0]|0;
    $cmp6 = ($1<<24>>24)==(95);
    $add$ptr8 = ((($call)) + 1|0);
    $add$ptr8$first = $cmp6 ? $add$ptr8 : $first;
    return ($add$ptr8$first|0);
    break;
   }
   case 118:  {
    break;
   }
   default: {
    $first$addr$3 = $first;
    break L1;
   }
   }
   $call12 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($add$ptr,$last)|0);
   $cmp14 = ($call12|0)==($add$ptr|0);
   $cmp16 = ($call12|0)==($last|0);
   $or$cond26 = $cmp14 | $cmp16;
   if ($or$cond26) {
    $first$addr$3 = $first;
   } else {
    $2 = HEAP8[$call12>>0]|0;
    $cmp19 = ($2<<24>>24)==(95);
    if ($cmp19) {
     $incdec$ptr = ((($call12)) + 1|0);
     $call21 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($incdec$ptr,$last)|0);
     $cmp22 = ($call21|0)==($incdec$ptr|0);
     $cmp24 = ($call21|0)==($last|0);
     $or$cond27 = $cmp22 | $cmp24;
     if ($or$cond27) {
      $first$addr$3 = $first;
     } else {
      $3 = HEAP8[$call21>>0]|0;
      $cmp27 = ($3<<24>>24)==(95);
      $add$ptr29 = ((($call21)) + 1|0);
      $add$ptr29$first = $cmp27 ? $add$ptr29 : $first;
      $first$addr$3 = $add$ptr29$first;
     }
    } else {
     $first$addr$3 = $first;
    }
   }
  }
 } while(0);
 return ($first$addr$3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EEC2ERNS0_5arenaILj4096EEE($this,$a) {
 $this = $this|0;
 $a = $a|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = $a;
 return;
}
function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEC2EjRKS6_RKS7_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $0 = 0, $__end_$i = 0, $__end_cap_$i = 0, $__second_$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $__end_$i = ((($this)) + 4|0);
 HEAP32[$__end_$i>>2] = 0;
 $__end_cap_$i = ((($this)) + 8|0);
 $0 = HEAP32[$__a>>2]|0;
 HEAP32[$__end_cap_$i>>2] = 0;
 $__second_$i$i$i = ((($this)) + 12|0);
 HEAP32[$__second_$i$i$i>>2] = $0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($this,$a) {
 $this = $this|0;
 $a = $a|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = $a;
 return;
}
function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEEC2EjRKS8_RKS9_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $0 = 0, $__end_$i = 0, $__end_cap_$i = 0, $__second_$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $__end_$i = ((($this)) + 4|0);
 HEAP32[$__end_$i>>2] = 0;
 $__end_cap_$i = ((($this)) + 8|0);
 $0 = HEAP32[$__a>>2]|0;
 HEAP32[$__end_cap_$i>>2] = 0;
 $__second_$i$i$i = ((($this)) + 12|0);
 HEAP32[$__second_$i$i$i>>2] = $0;
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1180);
 return;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2107]|0;HEAP32[2107] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        ___setErrNo(12);
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}

  
function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&127](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&63]()|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&127](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&127](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&63](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&127](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&63]();
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&127](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&63](a1|0,a2|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&127](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0;
}
function b1(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1);
}
function b2() {
 ; nullFunc_i(2);return 0;
}
function b3(p0) {
 p0 = p0|0; nullFunc_vi(3);
}
function b4(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(4);
}
function b5(p0) {
 p0 = p0|0; nullFunc_ii(5);return 0;
}
function b6(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(6);
}
function b7() {
 ; nullFunc_v(7);
}
function ___cxa_end_catch__wrapper() {
 ; ___cxa_end_catch();
}
function b8(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(8);return 0;
}
function b9(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(9);
}
function b10(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(10);return 0;
}
function b11(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(11);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,b0,___stdio_write,___stdio_seek,___stdout_write,_sn_write,b0,b0,b0,b0,b0,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj,__ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_,__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_,__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_,b0,b0,b0,b0,b0,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc,b0,b0
,__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj,b0,b0,b0,__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_,b0,b0,b0,b0,b0,b0,__ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_,b0,b0,b0,b0,__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_i = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,___cxa_get_globals_fast,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_vi = [b3,b3,b3,b3,b3,b3,b3,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b3,b3,b3,b3,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b3,b3,b3,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b3,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b3,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,b3
,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b3,b3,b3,__Z7httpGetv,__Z4testv,b3,b3,b3,b3,b3,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj,__ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8allocateEj,b3,b3,b3,b3,__ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj22EEERAT__Kc,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_vii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt11logic_errorC2EPKc,__ZNSt3__218__libcpp_refstringC2EPKc,b4,b4,b4,_abort_message,b4,__ZN10__cxxabiv112_GLOBAL__N_12DbC2ILj4096EEERNS0_5arenaIXT_EEE,__ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILj4096EEEEEEvDpOT_,b4,b4,b4,b4,b4,b4,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc,b4,b4,__ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv,b4,__ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_,b4
,b4,b4,b4,b4,b4,__ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_,__ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_,b4,b4,__ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_,b4,__ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_,__ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_ii = [b5,___stdio_close,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt9bad_alloc4whatEv,b5,b5,__ZNKSt11logic_error4whatEv,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,__ZN10emscripten8internal7InvokerINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEJEE6invokeEPFS8_vE,__ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE10toWireTypeERKS8_,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__211char_traitsIcE6lengthEPKc
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_viii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,__ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_,__ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_,b6,b6,b6,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_v = [b7,b7,b7,b7,b7,b7,__ZL25default_terminate_handlerv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b7,b7,b7,___cxa_end_catch__wrapper,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_,__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_,__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viiiiii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b9,b9,b9,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b9];
var FUNCTION_TABLE_iii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc,b10,b10,b10,b10
,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_viiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b11,b11,b11,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11];

  return { stackSave: stackSave, getTempRet0: getTempRet0, _llvm_cttz_i32: _llvm_cttz_i32, setThrew: setThrew, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _sbrk: _sbrk, _fflush: _fflush, _memset: _memset, ___cxa_demangle: ___cxa_demangle, _memcpy: _memcpy, _llvm_bswap_i32: _llvm_bswap_i32, ___uremdi3: ___uremdi3, stackAlloc: stackAlloc, _i64Subtract: _i64Subtract, __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, ___udivmoddi4: ___udivmoddi4, setTempRet0: setTempRet0, _i64Add: _i64Add, _emscripten_get_global_libc: _emscripten_get_global_libc, ___getTypeName: ___getTypeName, __GLOBAL__sub_I_fetch_cpp: __GLOBAL__sub_I_fetch_cpp, ___udivdi3: ___udivdi3, ___errno_location: ___errno_location, _free: _free, runPostSets: runPostSets, establishStackSpace: establishStackSpace, _memmove: _memmove, stackRestore: stackRestore, _malloc: _malloc, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackSave.apply(null, arguments);
};

var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_getTempRet0.apply(null, arguments);
};

var real__llvm_cttz_i32 = asm["_llvm_cttz_i32"]; asm["_llvm_cttz_i32"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__llvm_cttz_i32.apply(null, arguments);
};

var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_setThrew.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__sbrk.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real____cxa_demangle = asm["___cxa_demangle"]; asm["___cxa_demangle"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_demangle.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__llvm_bswap_i32.apply(null, arguments);
};

var real____uremdi3 = asm["___uremdi3"]; asm["___uremdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____uremdi3.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackAlloc.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"]; asm["__GLOBAL__sub_I_bind_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
};

var real____udivmoddi4 = asm["___udivmoddi4"]; asm["___udivmoddi4"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivmoddi4.apply(null, arguments);
};

var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_setTempRet0.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__emscripten_get_global_libc = asm["_emscripten_get_global_libc"]; asm["_emscripten_get_global_libc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__emscripten_get_global_libc.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"]; asm["___getTypeName"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____getTypeName.apply(null, arguments);
};

var real___GLOBAL__sub_I_fetch_cpp = asm["__GLOBAL__sub_I_fetch_cpp"]; asm["__GLOBAL__sub_I_fetch_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_fetch_cpp.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivdi3.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_establishStackSpace.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackRestore.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};
var stackSave = Module["stackSave"] = asm["stackSave"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _memset = Module["_memset"] = asm["_memset"];
var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var __GLOBAL__sub_I_fetch_cpp = Module["__GLOBAL__sub_I_fetch_cpp"] = asm["__GLOBAL__sub_I_fetch_cpp"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;
Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];
Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];


// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;






/**
 * @constructor
 * @extends {Error}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



